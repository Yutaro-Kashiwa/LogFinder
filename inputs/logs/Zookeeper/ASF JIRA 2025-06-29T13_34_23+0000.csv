Summary,Issue key,Issue id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Component/s,Due Date,Votes,Labels,Labels,Description,Environment,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Inward issue link (Blocked),Inward issue link (Blocker),Inward issue link (Cloners),Outward issue link (Cloners),Inward issue link (Completes),Inward issue link (Container),Inward issue link (Duplicate),Inward issue link (Duplicate),Outward issue link (Duplicate),Inward issue link (Incorporates),Inward issue link (Problem/Incident),Inward issue link (Reference),Inward issue link (Reference),Outward issue link (Reference),Outward issue link (Reference),Outward issue link (Regression),Inward issue link (Supercedes),Outward issue link (Supercedes),Inward issue link (dependent),Outward issue link (dependent),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Affects version (Component)),Custom field (Attachment count),Custom field (Blog - New Blog Administrators),Custom field (Blog - New Blog PMC),Custom field (Blog - Write access),Custom field (Blog Administrator?),Custom field (Blogs - Admin for blog),Custom field (Blogs - Email Address),Custom field (Blogs - Existing Blog Access Level),Custom field (Blogs - Existing Blog Name),Custom field (Blogs - New Blog Write Access),Custom field (Blogs - Username),Custom field (Bug Category),Custom field (Bugzilla - Email Notification Address),Custom field (Bugzilla - List of usernames),Custom field (Bugzilla - PMC Name),Custom field (Bugzilla - Project Name),Custom field (Bugzilla Id),Custom field (Bugzilla Id),Custom field (Change Category),Custom field (Complexity),Custom field (Discovered By),Custom field (Docs Text),Custom field (Enable Automatic Patch Review),Custom field (Epic Link),Custom field (Estimated Complexity),Custom field (Evidence Of Open Source Adoption),Custom field (Evidence Of Registration),Custom field (Evidence Of Use On World Wide Web),Custom field (Existing GitBox Approval),Custom field (External issue ID),Custom field (External issue URL),Custom field (Fix version (Component)),Custom field (Flags),Custom field (Git Notification Mailing List),Custom field (Git Repository Import Path),Custom field (Git Repository Name),Custom field (Git Repository Type),Custom field (GitHub Options),Custom field (Github Integration),Custom field (Github Integrations - Other),Custom field (Global Rank),Custom field (Hadoop Flags),Custom field (INFRA - Subversion Repository Path),Custom field (Initial Confluence Contributors),Custom field (Language),Custom field (Last public comment date),Custom field (Level of effort),Custom field (Machine Readable Info),Custom field (Mentor),Custom field (New-TLP-TLPName),Custom field (Original story points),Custom field (Parent Link),Custom field (Priority),Custom field (Project),Custom field (Protected Branch),Custom field (Rank),Custom field (Rank (Obsolete)),Custom field (Release Note),Custom field (Review Date),Custom field (Reviewer),Custom field (Severity),Custom field (Severity),Custom field (Skill Level),Custom field (Source Control Link),Custom field (Space Description),Custom field (Space Key),Custom field (Space Name),Custom field (Start Date),Custom field (Tags),Custom field (Tags),Custom field (Target end),Custom field (Target start),Custom field (Team),Custom field (Test and Documentation Plan),Custom field (Testcase included),Custom field (Tester),Custom field (Workaround),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
java.lang.NoClassDefFoundError: com/codahale/metrics/Reservoir,ZOOKEEPER-4910,13612902,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,songxiaosheng,songxiaosheng,24/Mar/25 14:36,25/Mar/25 04:00,29/Jun/25 13:34,,3.6.0,3.7.0,3.8.0,3.9.0,,,,,,,,,,,,,,,,,,,,,3.10.0,,,,,,,,,,0,pull-request-available,,"when no dep dropwizard will appear java.lang.NoClassDefFoundError: com/codahale/metrics/Reservoir
{code:java}
Exception in thread ""ZooKeeper Server Starter"" java.lang.NoClassDefFoundError: com/codahale/metrics/Reservoir
	at org.apache.zookeeper.metrics.impl.DefaultMetricsProvider$DefaultMetricsContext.lambda$getSummary$2(DefaultMetricsProvider.java:126)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1713)
	at org.apache.zookeeper.metrics.impl.DefaultMetricsProvider$DefaultMetricsContext.getSummary(DefaultMetricsProvider.java:122)
	at org.apache.zookeeper.server.ServerMetrics.<init>(ServerMetrics.java:74)
	at org.apache.zookeeper.server.ServerMetrics.<clinit>(ServerMetrics.java:44)
	at org.apache.zookeeper.server.ZooKeeperServerMain.runFromConfig(ZooKeeperServerMain.java:133)
	at org.apache.dubbo.springboot.demo.provider.EmbeddedZooKeeper$ServerRunnable.run(EmbeddedZooKeeper.java:249)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: java.lang.ClassNotFoundException: com.codahale.metrics.Reservoir
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:528)
	... 8  {code}",,"songxiaosheng opened a new pull request, #2238:
URL: https://github.com/apache/zookeeper/pull/2238

   fix follow error
   ```
   Exception in thread ""ZooKeeper Server Starter"" java.lang.NoClassDefFoundError: com/codahale/metrics/Reservoir
   	at org.apache.zookeeper.metrics.impl.DefaultMetricsProvider$DefaultMetricsContext.lambda$getSummary$2(DefaultMetricsProvider.java:126)
   	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1713)
   	at org.apache.zookeeper.metrics.impl.DefaultMetricsProvider$DefaultMetricsContext.getSummary(DefaultMetricsProvider.java:122)
   	at org.apache.zookeeper.server.ServerMetrics.<init>(ServerMetrics.java:74)
   	at org.apache.zookeeper.server.ServerMetrics.<clinit>(ServerMetrics.java:44)
   	at org.apache.zookeeper.server.ZooKeeperServerMain.runFromConfig(ZooKeeperServerMain.java:133)
   	at org.apache.dubbo.springboot.demo.provider.EmbeddedZooKeeper$ServerRunnable.run(EmbeddedZooKeeper.java:249)
   	at java.base/java.lang.Thread.run(Thread.java:1575)
   Caused by: java.lang.ClassNotFoundException: com.codahale.metrics.Reservoir
   	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
   	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
   	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:528)
   	... 8 
   ```


;24/Mar/25 14:38;githubbot;600","songxiaosheng commented on PR #2238:
URL: https://github.com/apache/zookeeper/pull/2238#issuecomment-2748366532

   @tisonkun PATL


;24/Mar/25 14:40;githubbot;600","songxiaosheng commented on PR #2238:
URL: https://github.com/apache/zookeeper/pull/2238#issuecomment-2750008872

   > Hello @songxiaosheng . Thank you for the patch, but I'm not sure we'll be able to commit this.
   > 
   > In #925 , we intentionally slimmed down pom.xml so that clients do not import dependencies that are only needed on the server side. Part of this included marking io.dropwizard.metrics:metrics-core as provided. This is only used on the ZooKeeper server side. If we commit this change, it's possible that actual failures in metrics initialization could leave a server running in production but not producing metrics.
   > 
   > From the sample stack trace, it looks like this is a use case for running ZooKeeper ""embedded"" as part of a demo application. In Apache Curator's tests, they handle this by explicitly adding their own dependency on io.dropwizard.metrics:metrics-core. Perhaps your demo application could do the same thing.
   > 
   > https://github.com/apache/curator/blob/apache-curator-5.8.0/curator-test/pom.xml#L45-L48
   > 
   > On a side note, you might also be interested in [`ZooKeeperServerEmbedded`](https://zookeeper.apache.org/doc/r3.9.3/apidocs/zookeeper-server/org/apache/zookeeper/server/embedded/ZooKeeperServerEmbedded.html).
   
   thanks, i found it in  ZooKeeper ""embedded"" 


;25/Mar/25 04:00;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2025-03-24 14:36:18.0,,,,,,,,,,"0|z1uyjc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix typos,ZOOKEEPER-4877,13595900,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,luozongle,luozongle01,luozongle01,18/Oct/24 01:55,18/Oct/24 16:40,29/Jun/25 13:34,18/Oct/24 15:36,3.9.2,,,,,,,,,,,,,,,,,,,,,,,,3.10.0,,,,,server,,,,,0,pull-request-available,,"Fix typos.

1. !image-2024-10-18-09-53-46-914.png!

 

 

2. !image-2024-10-18-09-54-06-318.png!

 

3. !image-2024-10-18-09-54-26-149.png!

 

4. !image-2024-10-18-09-54-49-783.png!

 

 

5. !image-2024-10-18-09-55-17-835.png!",,"luozongle01 opened a new pull request, #2203:
URL: https://github.com/apache/zookeeper/pull/2203

   Fix typos: https://issues.apache.org/jira/projects/ZOOKEEPER/issues/ZOOKEEPER-4877?filter=reportedbyme


;18/Oct/24 02:05;githubbot;600","kezhuw commented on code in PR #2203:
URL: https://github.com/apache/zookeeper/pull/2203#discussion_r1806042121


##########
zookeeper-server/src/main/java/org/apache/zookeeper/metrics/MetricsProviderLifeCycleException.java:
##########
@@ -19,7 +19,7 @@
 package org.apache.zookeeper.metrics;
 
 /**
- * A generic exception thrown during the licecycle of a MetricsProvider.
+ * A generic exception thrown during the life cycle of a MetricsProvider.

Review Comment:
   ```suggestion
    * A generic exception thrown during the lifecycle of a MetricsProvider.
   ```
   
   I think both are correct, but I saw multiple usages of ""lifecycle"" but no ""life cycle"".



;18/Oct/24 07:50;githubbot;600","luozongle01 commented on code in PR #2203:
URL: https://github.com/apache/zookeeper/pull/2203#discussion_r1806059166


##########
zookeeper-server/src/main/java/org/apache/zookeeper/metrics/MetricsProviderLifeCycleException.java:
##########
@@ -19,7 +19,7 @@
 package org.apache.zookeeper.metrics;
 
 /**
- * A generic exception thrown during the licecycle of a MetricsProvider.
+ * A generic exception thrown during the life cycle of a MetricsProvider.

Review Comment:
   Thank you, maybe I haven't seen much, you're right



;18/Oct/24 08:00;githubbot;600","kezhuw merged PR #2203:
URL: https://github.com/apache/zookeeper/pull/2203


;18/Oct/24 15:35;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,"18/Oct/24 01:53;luozongle01;image-2024-10-18-09-53-46-914.png;https://issues.apache.org/jira/secure/attachment/13072278/image-2024-10-18-09-53-46-914.png","18/Oct/24 01:54;luozongle01;image-2024-10-18-09-54-06-318.png;https://issues.apache.org/jira/secure/attachment/13072277/image-2024-10-18-09-54-06-318.png","18/Oct/24 01:54;luozongle01;image-2024-10-18-09-54-26-149.png;https://issues.apache.org/jira/secure/attachment/13072276/image-2024-10-18-09-54-26-149.png","18/Oct/24 01:54;luozongle01;image-2024-10-18-09-54-49-783.png;https://issues.apache.org/jira/secure/attachment/13072275/image-2024-10-18-09-54-49-783.png","18/Oct/24 01:55;luozongle01;image-2024-10-18-09-55-17-835.png;https://issues.apache.org/jira/secure/attachment/13072274/image-2024-10-18-09-55-17-835.png",,,,,,5.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Oct 18 15:36:04 UTC 2024,,,,,,,,,,"0|z1s2gg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Oct/24 15:36;kezhuw;Issue resolved by pull request 2203
[https://github.com/apache/zookeeper/pull/2203];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
erroneous assertion in ZooKeeperQuotaTest#testQuota,ZOOKEEPER-4853,13590003,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,,kezhuw,kezhuw,26/Aug/24 04:10,27/Aug/24 13:12,29/Jun/25 13:34,26/Aug/24 04:13,3.9.2,,,,,,,,,,,,,,,,,,,,,,,,3.10.0,,,,,tests,,,,,0,pull-request-available,,"Created for https://github.com/apache/zookeeper/pull/2169.

{code:java}
assertNotNull(server.getZKDatabase().getDataTree().getMaxPrefixWithQuota(path) != null, ""Quota is still set"");
{code}

The above equation test evaluates to a non null boolean value, so always pass.",,"kezhuw merged PR #2169:
URL: https://github.com/apache/zookeeper/pull/2169


;26/Aug/24 04:13;githubbot;600","kezhuw commented on PR #2169:
URL: https://github.com/apache/zookeeper/pull/2169#issuecomment-2309272899

   @1neverknow Thank you for your contribution! Merged.


;26/Aug/24 04:14;githubbot;600","1neverknow commented on PR #2169:
URL: https://github.com/apache/zookeeper/pull/2169#issuecomment-2311009261

   Thanks for the update!
   However, I just noticed that there's still a typo in the fixed statement. It should be written as:
   ```java
   assertNotNull(""Quota is still set"", server.getZKDatabase().getDataTree().getMaxPrefixWithQuota(path));
   ```
   The first argument of `assertNotNull` is the error message, while the second one is the actual ""notnull"" object""


;26/Aug/24 20:17;githubbot;600","1neverknow opened a new pull request, #2182:
URL: https://github.com/apache/zookeeper/pull/2182

   The first argument of `assertNotNull` is the error message, while the second one is the actual ""notnull"" object"".


;26/Aug/24 20:30;githubbot;600","kezhuw commented on PR #2169:
URL: https://github.com/apache/zookeeper/pull/2169#issuecomment-2311393877

   https://junit.org/junit5/docs/5.0.1/api/org/junit/jupiter/api/Assertions.html#assertNotNull-java.lang.Object-java.lang.String-
   
   ```java
   public static void assertNotNull(Object actual, String message)
   ```
   
   I think it is not. @1neverknow 


;27/Aug/24 01:27;githubbot;600","1neverknow commented on PR #2169:
URL: https://github.com/apache/zookeeper/pull/2169#issuecomment-2312526998

   > https://junit.org/junit5/docs/5.0.1/api/org/junit/jupiter/api/Assertions.html#assertNotNull-java.lang.Object-java.lang.String-
   > 
   > ```java
   > public static void assertNotNull(Object actual, String message)
   > ```
   > 
   > I think it is not. @1neverknow
   
   You're right; placing the message at first is a convention from JUnit 4. Thanks for pointing that out.


;27/Aug/24 13:12;githubbot;600","1neverknow closed pull request #2182: Amendment to pull request #2169 (ZOOKEEPER-4853)
URL: https://github.com/apache/zookeeper/pull/2182


;27/Aug/24 13:12;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4200,,,0,4200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Aug 26 04:13:51 UTC 2024,,,,,,,,,,"0|z1r24w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Aug/24 04:13;kezhuw;Issue resolved by pull request 2169
[https://github.com/apache/zookeeper/pull/2169];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When DigestMD5 is used to enable mandatory client authentication,Users that do not exist can log in",ZOOKEEPER-4839,13582975,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,luoxin,wstcjmg,wstcjmg,18/Jun/24 03:27,24/Oct/24 20:09,29/Jun/25 13:34,25/Sep/24 00:47,3.5.10,3.9.2,,,,,,,,,,,,,,,,,,,,,,,3.10.0,3.9.3,,,,security,server,,,,0,pull-request-available,,"When DigestMD5 is used to enable mandatory client authentication. Consider the following scenario: After successfully logging in with the correct user and password for the first time, change the user to keep the correct password for the last time, and you can still log in normally. I looked at both versions 3.5.10 and 3.9.2. See the class SaslServerCallbackHandler server-side code. A global private variable called userName is defined, but in the handleNameCallback method, if the given user name is not configured, it simply returns without updating userName. This results in the handlePasswordCallback method still using the userName of the last successful login to retrieve, and naturally can find the last password, and the comparison is correct.",,"luoxiner commented on PR #2176:
URL: https://github.com/apache/zookeeper/pull/2176#issuecomment-2227632688

   @maoling Can you take a look on this fix


;15/Jul/24 03:10;githubbot;600","kezhuw commented on code in PR #2176:
URL: https://github.com/apache/zookeeper/pull/2176#discussion_r1704913717


##########
zookeeper-server/src/main/java/org/apache/zookeeper/server/auth/SaslServerCallbackHandler.java:
##########
@@ -90,6 +90,11 @@ private void handleNameCallback(NameCallback nc) {
         // check to see if this user is in the user password database.
         if (credentials.get(nc.getDefaultName()) == null) {
             LOG.warn(""User '{}' not found in list of DIGEST-MD5 authenticateable users."", nc.getDefaultName());
+            // ZOOKEEPER-4839
+            // Incorrect usernames also need to be stored
+            // in order to clear the usernames of previously
+            // successfully logged-in users.
+            userName = nc.getDefaultName();

Review Comment:
   I saw one `SaslServerCallbackHandler` was shared among multiple concurrent `ServerCnxn`s. I think we probably should resort to some form of copy/clone to not share mutable state among multiple `ServerCnxn`s.
   
   This applies to `SaslQuorumServerCallbackHandler` too.



##########
zookeeper-server/src/test/java/org/apache/zookeeper/server/auth/SaslServerCallbackHandlerTest.java:
##########
@@ -0,0 +1,43 @@
+package org.apache.zookeeper.server.auth;
+
+import static org.mockito.ArgumentMatchers.eq;
+import static org.mockito.Mockito.mock;
+import static org.mockito.Mockito.times;
+import static org.mockito.Mockito.verify;
+import static org.mockito.Mockito.when;
+import java.io.IOException;
+import java.util.HashMap;
+import java.util.Map;
+import javax.security.auth.callback.Callback;
+import javax.security.auth.callback.NameCallback;
+import javax.security.auth.callback.PasswordCallback;
+import javax.security.auth.callback.UnsupportedCallbackException;
+import javax.security.auth.login.AppConfigurationEntry;
+import javax.security.auth.login.AppConfigurationEntry.LoginModuleControlFlag;
+import javax.security.auth.login.Configuration;
+import org.junit.Test;
+
+public class SaslServerCallbackHandlerTest {
+
+    @Test
+    public void wrongUserNameShouldClearUserCredential() throws IOException, UnsupportedCallbackException {
+        Configuration configuration = mock(Configuration.class);
+        Map<String, String> userCredentials = new HashMap<>();
+        userCredentials.put(""user_exist_user"", ""password"");
+        AppConfigurationEntry appConfigurationEntry = new AppConfigurationEntry(""test-module"", LoginModuleControlFlag.REQUIRED, userCredentials);
+        when(configuration.getAppConfigurationEntry(""Server"")).thenReturn(new AppConfigurationEntry[]{appConfigurationEntry});

Review Comment:
   It would be nice to avoid mock. I saw multiple ""Sasl*Test"". I think they might be helpful.



;06/Aug/24 05:18;githubbot;600","luoxiner commented on code in PR #2176:
URL: https://github.com/apache/zookeeper/pull/2176#discussion_r1706551114


##########
zookeeper-server/src/main/java/org/apache/zookeeper/server/auth/SaslServerCallbackHandler.java:
##########
@@ -90,6 +90,11 @@ private void handleNameCallback(NameCallback nc) {
         // check to see if this user is in the user password database.
         if (credentials.get(nc.getDefaultName()) == null) {
             LOG.warn(""User '{}' not found in list of DIGEST-MD5 authenticateable users."", nc.getDefaultName());
+            // ZOOKEEPER-4839
+            // Incorrect usernames also need to be stored
+            // in order to clear the usernames of previously
+            // successfully logged-in users.
+            userName = nc.getDefaultName();

Review Comment:
   Thank you for your review. I have some ideas about your comments.
   
   1. It would be better for the `Login` to store a factory object that can supply `SaslServerCallbackHandler`, in order to avoid the `SaslServerCallbackHandler` being shared among multiple concurrent `ServerCnxn`s.
   2. We should apply the change to the `SaslQuorumServerCallbackHandler`.
   
   Is it correct?



;07/Aug/24 07:52;githubbot;600","luoxiner commented on code in PR #2176:
URL: https://github.com/apache/zookeeper/pull/2176#discussion_r1706552769


##########
zookeeper-server/src/test/java/org/apache/zookeeper/server/auth/SaslServerCallbackHandlerTest.java:
##########
@@ -0,0 +1,43 @@
+package org.apache.zookeeper.server.auth;
+
+import static org.mockito.ArgumentMatchers.eq;
+import static org.mockito.Mockito.mock;
+import static org.mockito.Mockito.times;
+import static org.mockito.Mockito.verify;
+import static org.mockito.Mockito.when;
+import java.io.IOException;
+import java.util.HashMap;
+import java.util.Map;
+import javax.security.auth.callback.Callback;
+import javax.security.auth.callback.NameCallback;
+import javax.security.auth.callback.PasswordCallback;
+import javax.security.auth.callback.UnsupportedCallbackException;
+import javax.security.auth.login.AppConfigurationEntry;
+import javax.security.auth.login.AppConfigurationEntry.LoginModuleControlFlag;
+import javax.security.auth.login.Configuration;
+import org.junit.Test;
+
+public class SaslServerCallbackHandlerTest {
+
+    @Test
+    public void wrongUserNameShouldClearUserCredential() throws IOException, UnsupportedCallbackException {
+        Configuration configuration = mock(Configuration.class);
+        Map<String, String> userCredentials = new HashMap<>();
+        userCredentials.put(""user_exist_user"", ""password"");
+        AppConfigurationEntry appConfigurationEntry = new AppConfigurationEntry(""test-module"", LoginModuleControlFlag.REQUIRED, userCredentials);
+        when(configuration.getAppConfigurationEntry(""Server"")).thenReturn(new AppConfigurationEntry[]{appConfigurationEntry});

Review Comment:
   I'll give it a try.



;07/Aug/24 07:53;githubbot;600","kezhuw commented on code in PR #2176:
URL: https://github.com/apache/zookeeper/pull/2176#discussion_r1706693861


##########
zookeeper-server/src/main/java/org/apache/zookeeper/server/auth/SaslServerCallbackHandler.java:
##########
@@ -90,6 +90,11 @@ private void handleNameCallback(NameCallback nc) {
         // check to see if this user is in the user password database.
         if (credentials.get(nc.getDefaultName()) == null) {
             LOG.warn(""User '{}' not found in list of DIGEST-MD5 authenticateable users."", nc.getDefaultName());
+            // ZOOKEEPER-4839
+            // Incorrect usernames also need to be stored
+            // in order to clear the usernames of previously
+            // successfully logged-in users.
+            userName = nc.getDefaultName();

Review Comment:
   Sounds viable to me.



;07/Aug/24 09:31;githubbot;600","luoxiner commented on PR #2176:
URL: https://github.com/apache/zookeeper/pull/2176#issuecomment-2330529339

   Hi, @kezhuw 
   I push a new commit to resolve the CallbackHandler shared in multiple connections, can you give me some feed backs.


;05/Sep/24 03:35;githubbot;600","kezhuw commented on code in PR #2176:
URL: https://github.com/apache/zookeeper/pull/2176#discussion_r1746588998


##########
zookeeper-server/src/main/java/org/apache/zookeeper/util/SecurityUtils.java:
##########
@@ -36,10 +42,14 @@
 import org.ietf.jgss.GSSName;
 import org.ietf.jgss.Oid;
 import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
 
 public final class SecurityUtils {
 
+    private static final Logger LOG = LoggerFactory.getLogger(SecurityUtils.class);
+
     public static final String QUORUM_HOSTNAME_PATTERN = ""_HOST"";
+    private static final String USER_PREFIX = ""user_"";

Review Comment:
   How about `DIGEST_MD5_USER_PREFIX` ?



##########
zookeeper-server/src/main/java/org/apache/zookeeper/util/SecurityUtils.java:
##########
@@ -254,15 +264,67 @@ public SaslServer run() {
         return null;
     }
 
+    /**
+     * get specific section from configuration or thrown
+     * an IOException when no section exists in configuration
+     *
+     * @param configuration Configuration instance
+     * @param section section name
+     * @return AppConfigurationEntry list
+     */
+    public static AppConfigurationEntry[] getAppConfigurationEntryWithSection(Configuration configuration, String section) throws IOException {
+        AppConfigurationEntry[] configurationEntries = configuration.getAppConfigurationEntry(section);
+        if (configurationEntries == null) {
+            String errorMessage = ""Could not find a '"" + section + ""' entry in this configuration: Server cannot start."";
+            LOG.error(errorMessage);
+            throw new IOException(errorMessage);
+        }
+        return configurationEntries;
+    }
+
+
+     /**
+     * make server credentials map from configuration's server section.
+     * @param configuration Configuration instance
+     * @return Server credentials map
+     */
+    public static Map<String, String> getServerCredentials(Configuration configuration) throws IOException {

Review Comment:
   How about naming it ""getDigestMd5Credentials"" ?



##########
zookeeper-server/src/test/java/org/apache/zookeeper/test/SaslAuthRequiredMultiClientTest.java:
##########
@@ -0,0 +1,102 @@
+package org.apache.zookeeper.test;
+
+import static org.junit.jupiter.api.Assertions.assertTrue;
+import static org.junit.jupiter.api.Assertions.fail;
+import javax.security.auth.login.Configuration;
+import org.apache.zookeeper.CreateMode;
+import org.apache.zookeeper.KeeperException;
+import org.apache.zookeeper.ZooDefs.Ids;
+import org.apache.zookeeper.ZooKeeper;
+import org.junit.jupiter.api.AfterAll;
+import org.junit.jupiter.api.BeforeAll;
+import org.junit.jupiter.api.Test;
+
+public class SaslAuthRequiredMultiClientTest extends ClientBase {
+
+    @BeforeAll
+    public static void setUpBeforeClass() {
+        System.setProperty(SaslTestUtil.requireSASLAuthProperty, ""true"");
+        System.setProperty(SaslTestUtil.authProviderProperty, SaslTestUtil.authProvider);
+        System.setProperty(SaslTestUtil.jaasConfig, SaslTestUtil.createJAASConfigFile(""jaas.conf"", ""test""));
+    }
+
+    @AfterAll
+    public static void tearDownAfterClass() {
+        System.clearProperty(SaslTestUtil.requireSASLAuthProperty);
+        System.clearProperty(SaslTestUtil.authProviderProperty);
+        System.clearProperty(SaslTestUtil.jaasConfig);
+    }
+
+    @Test
+    public void testClientOpWithInvalidSASLUserAuthAfterSuccessLogin() throws Exception {
+        resetJaasConfiguration(""jaas.conf"", ""super"", ""test"");
+        ZooKeeper zk = null;
+        CountdownWatcher watcher = new CountdownWatcher();
+        try {
+            zk = createClient(watcher);
+            zk.create(""/foobar"", null, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);
+        } catch (KeeperException e) {
+            fail(""Client operation should succeed with valid SASL configuration."");
+        } finally {
+            if (zk != null) {
+                zk.close();
+            }
+        }

Review Comment:
   ```suggestion
           try  (ZooKeeper zk = createClient()) {
               zk.create(""/foobar"", null, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);
           } catch (KeeperException e) {
               fail(""Client operation should succeed with valid SASL configuration."");
           }
   ```
   
   Much of ZooKeeper codes are written in decade ago. I think we can avoid old style in new age.



##########
zookeeper-server/src/test/java/org/apache/zookeeper/test/SaslAuthRequiredMultiClientTest.java:
##########
@@ -0,0 +1,102 @@
+package org.apache.zookeeper.test;
+
+import static org.junit.jupiter.api.Assertions.assertTrue;
+import static org.junit.jupiter.api.Assertions.fail;
+import javax.security.auth.login.Configuration;
+import org.apache.zookeeper.CreateMode;
+import org.apache.zookeeper.KeeperException;
+import org.apache.zookeeper.ZooDefs.Ids;
+import org.apache.zookeeper.ZooKeeper;
+import org.junit.jupiter.api.AfterAll;
+import org.junit.jupiter.api.BeforeAll;
+import org.junit.jupiter.api.Test;
+
+public class SaslAuthRequiredMultiClientTest extends ClientBase {
+
+    @BeforeAll
+    public static void setUpBeforeClass() {
+        System.setProperty(SaslTestUtil.requireSASLAuthProperty, ""true"");
+        System.setProperty(SaslTestUtil.authProviderProperty, SaslTestUtil.authProvider);
+        System.setProperty(SaslTestUtil.jaasConfig, SaslTestUtil.createJAASConfigFile(""jaas.conf"", ""test""));
+    }
+
+    @AfterAll
+    public static void tearDownAfterClass() {
+        System.clearProperty(SaslTestUtil.requireSASLAuthProperty);
+        System.clearProperty(SaslTestUtil.authProviderProperty);
+        System.clearProperty(SaslTestUtil.jaasConfig);
+    }
+
+    @Test
+    public void testClientOpWithInvalidSASLUserAuthAfterSuccessLogin() throws Exception {
+        resetJaasConfiguration(""jaas.conf"", ""super"", ""test"");
+        ZooKeeper zk = null;
+        CountdownWatcher watcher = new CountdownWatcher();
+        try {
+            zk = createClient(watcher);
+            zk.create(""/foobar"", null, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);
+        } catch (KeeperException e) {
+            fail(""Client operation should succeed with valid SASL configuration."");
+        } finally {
+            if (zk != null) {
+                zk.close();
+            }
+        }
+
+        resetJaasConfiguration(""jaas.conf"", ""super_wrong"", ""test"");
+        ZooKeeper wrongUserZk = null;
+        CountdownWatcher wrongUserZkWatch = new CountdownWatcher();
+        try {
+            wrongUserZk = createClient(wrongUserZkWatch);
+            wrongUserZk.create(""/bar"", null, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);
+            fail(""Client with wrong SASL config should not pass SASL authentication."");
+        } catch (KeeperException e) {
+            assertTrue(e.code() == KeeperException.Code.AUTHFAILED);

Review Comment:
   ```suggestion
               assertEquals(KeeperException.Code.AUTHFAILED, e.code());
   ```



##########
zookeeper-server/src/test/java/org/apache/zookeeper/test/SaslAuthRequiredMultiClientTest.java:
##########
@@ -0,0 +1,102 @@
+package org.apache.zookeeper.test;
+
+import static org.junit.jupiter.api.Assertions.assertTrue;
+import static org.junit.jupiter.api.Assertions.fail;
+import javax.security.auth.login.Configuration;
+import org.apache.zookeeper.CreateMode;
+import org.apache.zookeeper.KeeperException;
+import org.apache.zookeeper.ZooDefs.Ids;
+import org.apache.zookeeper.ZooKeeper;
+import org.junit.jupiter.api.AfterAll;
+import org.junit.jupiter.api.BeforeAll;
+import org.junit.jupiter.api.Test;
+
+public class SaslAuthRequiredMultiClientTest extends ClientBase {
+
+    @BeforeAll
+    public static void setUpBeforeClass() {
+        System.setProperty(SaslTestUtil.requireSASLAuthProperty, ""true"");
+        System.setProperty(SaslTestUtil.authProviderProperty, SaslTestUtil.authProvider);
+        System.setProperty(SaslTestUtil.jaasConfig, SaslTestUtil.createJAASConfigFile(""jaas.conf"", ""test""));
+    }
+
+    @AfterAll
+    public static void tearDownAfterClass() {
+        System.clearProperty(SaslTestUtil.requireSASLAuthProperty);
+        System.clearProperty(SaslTestUtil.authProviderProperty);
+        System.clearProperty(SaslTestUtil.jaasConfig);
+    }
+
+    @Test
+    public void testClientOpWithInvalidSASLUserAuthAfterSuccessLogin() throws Exception {
+        resetJaasConfiguration(""jaas.conf"", ""super"", ""test"");
+        ZooKeeper zk = null;
+        CountdownWatcher watcher = new CountdownWatcher();
+        try {
+            zk = createClient(watcher);
+            zk.create(""/foobar"", null, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);
+        } catch (KeeperException e) {
+            fail(""Client operation should succeed with valid SASL configuration."");
+        } finally {
+            if (zk != null) {
+                zk.close();
+            }
+        }
+
+        resetJaasConfiguration(""jaas.conf"", ""super_wrong"", ""test"");
+        ZooKeeper wrongUserZk = null;
+        CountdownWatcher wrongUserZkWatch = new CountdownWatcher();
+        try {
+            wrongUserZk = createClient(wrongUserZkWatch);
+            wrongUserZk.create(""/bar"", null, Ids.CREATOR_ALL_ACL, CreateMode.PERSISTENT);
+            fail(""Client with wrong SASL config should not pass SASL authentication."");
+        } catch (KeeperException e) {
+            assertTrue(e.code() == KeeperException.Code.AUTHFAILED);
+            // Verify that ""eventually"" this client closes the connection between itself and the server.
+            watcher.waitForDisconnected(SaslTestUtil.CLIENT_DISCONNECT_TIMEOUT);

Review Comment:
   I think we can eliminate this as it is covered by other tests.



##########
zookeeper-server/src/main/java/org/apache/zookeeper/util/SecurityUtils.java:
##########
@@ -254,15 +264,67 @@ public SaslServer run() {
         return null;
     }
 
+    /**
+     * get specific section from configuration or thrown
+     * an IOException when no section exists in configuration
+     *
+     * @param configuration Configuration instance
+     * @param section section name
+     * @return AppConfigurationEntry list
+     */
+    public static AppConfigurationEntry[] getAppConfigurationEntryWithSection(Configuration configuration, String section) throws IOException {
+        AppConfigurationEntry[] configurationEntries = configuration.getAppConfigurationEntry(section);
+        if (configurationEntries == null) {
+            String errorMessage = ""Could not find a '"" + section + ""' entry in this configuration: Server cannot start."";
+            LOG.error(errorMessage);
+            throw new IOException(errorMessage);
+        }
+        return configurationEntries;
+    }
+
+
+     /**
+     * make server credentials map from configuration's server section.
+     * @param configuration Configuration instance
+     * @return Server credentials map
+     */
+    public static Map<String, String> getServerCredentials(Configuration configuration) throws IOException {
+        AppConfigurationEntry[] serverAppConfigurationEntry = getServerAppConfigurationEntry(configuration);
+        Map<String, String> credentials = new HashMap<>();
+        for (AppConfigurationEntry entry : serverAppConfigurationEntry) {
+            Map<String, ?> options = entry.getOptions();
+            // Populate DIGEST-MD5 user -> password map with JAAS configuration entries from the ""Server"" section.

Review Comment:
   backlog: I suspect we should do similar to ZOOKEEPER-4753(https://github.com/apache/zookeeper/commit/e2070bed85d8b0c98a5a0045bf92421f473c412e#diff-04a0c58edb7731a3998fcaa021b8e2190d8c3947dfc87606bfe8f5a0e9423434R71) here, but this should be a separate issue.



##########
zookeeper-server/src/main/java/org/apache/zookeeper/util/SecurityUtils.java:
##########
@@ -55,12 +65,12 @@ public final class SecurityUtils {
      * @throws SaslException
      */
     public static SaslClient createSaslClient(
-        final Subject subject,
-        final String servicePrincipal,
-        final String protocol,
-        final String serverName,
-        final Logger LOG,
-        final String entity) throws SaslException {
+            final Subject subject,
+            final String servicePrincipal,
+            final String protocol,
+            final String serverName,
+            final Logger LOG,
+            final String entity) throws SaslException {

Review Comment:
   It is better to not reformat unrelated code. Same as other places.



;10/Sep/24 00:45;githubbot;600","luoxiner commented on PR #2176:
URL: https://github.com/apache/zookeeper/pull/2176#issuecomment-2345427276

   Hi, @kezhuw


;12/Sep/24 07:01;githubbot;600","luoxiner commented on PR #2176:
URL: https://github.com/apache/zookeeper/pull/2176#issuecomment-2345430926

   @kezhuw, thanks for your review. I will take a look and push a new commit later.


;12/Sep/24 07:03;githubbot;600","luoxiner commented on PR #2176:
URL: https://github.com/apache/zookeeper/pull/2176#issuecomment-2348573923

   Hi, @kezhuw. I push a new commit to improve the codes with your suggestions. Can you take a look.


;13/Sep/24 10:12;githubbot;600","luoxiner commented on code in PR #2176:
URL: https://github.com/apache/zookeeper/pull/2176#discussion_r1758593177


##########
zookeeper-server/src/main/java/org/apache/zookeeper/util/SecurityUtils.java:
##########
@@ -254,15 +264,67 @@ public SaslServer run() {
         return null;
     }
 
+    /**
+     * get specific section from configuration or thrown
+     * an IOException when no section exists in configuration
+     *
+     * @param configuration Configuration instance
+     * @param section section name
+     * @return AppConfigurationEntry list
+     */
+    public static AppConfigurationEntry[] getAppConfigurationEntryWithSection(Configuration configuration, String section) throws IOException {
+        AppConfigurationEntry[] configurationEntries = configuration.getAppConfigurationEntry(section);
+        if (configurationEntries == null) {
+            String errorMessage = ""Could not find a '"" + section + ""' entry in this configuration: Server cannot start."";
+            LOG.error(errorMessage);
+            throw new IOException(errorMessage);
+        }
+        return configurationEntries;
+    }
+
+
+     /**
+     * make server credentials map from configuration's server section.
+     * @param configuration Configuration instance
+     * @return Server credentials map
+     */
+    public static Map<String, String> getServerCredentials(Configuration configuration) throws IOException {
+        AppConfigurationEntry[] serverAppConfigurationEntry = getServerAppConfigurationEntry(configuration);
+        Map<String, String> credentials = new HashMap<>();
+        for (AppConfigurationEntry entry : serverAppConfigurationEntry) {
+            Map<String, ?> options = entry.getOptions();
+            // Populate DIGEST-MD5 user -> password map with JAAS configuration entries from the ""Server"" section.

Review Comment:
   I will make a new pull request to resolve it.



;13/Sep/24 10:13;githubbot;600","kezhuw commented on code in PR #2176:
URL: https://github.com/apache/zookeeper/pull/2176#discussion_r1758876160


##########
zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthLearner.java:
##########
@@ -62,9 +64,13 @@ public SaslQuorumAuthLearner(
                     ""SASL-authentication failed because the specified JAAS configuration section '%s' could not be found."",
                     loginContext));
             }
+
+            Supplier<CallbackHandler> callBackSupplier = () -> {
+                return new SaslClientCallbackHandler(null, ""QuorumLearner"");
+            };
             this.learnerLogin = new Login(
                 loginContext,
-                new SaslClientCallbackHandler(null, ""QuorumLearner""),
+                callBackSupplier,

Review Comment:
   ```suggestion
                   callbackSupplier,
   ```



##########
zookeeper-server/src/main/java/org/apache/zookeeper/Login.java:
##########
@@ -48,7 +49,7 @@ public class Login {
     private static final String KINIT_COMMAND_DEFAULT = ""/usr/bin/kinit"";
     private static final Logger LOG = LoggerFactory.getLogger(Login.class);
     public static final String SYSTEM_USER = System.getProperty(""user.name"", ""<NA>"");
-    public CallbackHandler callbackHandler;
+    private Supplier<CallbackHandler> callbackHandlerSupplier;

Review Comment:
   ```suggestion
       private final Supplier<CallbackHandler> callbackHandlerSupplier;
   ```



##########
zookeeper-server/src/main/java/org/apache/zookeeper/util/SecurityUtils.java:
##########
@@ -36,10 +42,14 @@
 import org.ietf.jgss.GSSName;
 import org.ietf.jgss.Oid;
 import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
 
 public final class SecurityUtils {
 
+    private static final Logger LOG = LoggerFactory.getLogger(SecurityUtils.class);

Review Comment:
   How about follow the pattern of `createSaslClient`/`createSaslServer` to accept a log parameter ? This will allow callers to log in their contexts.



##########
zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthLearner.java:
##########
@@ -62,9 +64,13 @@ public SaslQuorumAuthLearner(
                     ""SASL-authentication failed because the specified JAAS configuration section '%s' could not be found."",
                     loginContext));
             }
+
+            Supplier<CallbackHandler> callBackSupplier = () -> {

Review Comment:
   ```suggestion
               Supplier<CallbackHandler> callbackSupplier = () -> {
   ```



;13/Sep/24 13:45;githubbot;600","luoxiner commented on PR #2176:
URL: https://github.com/apache/zookeeper/pull/2176#issuecomment-2351004638

   All commonts have been resolved, and fix some spelling and license check errors. Can you take a look? @kezhuw 


;14/Sep/24 14:07;githubbot;600","luoxiner commented on PR #2176:
URL: https://github.com/apache/zookeeper/pull/2176#issuecomment-2359836342

   The cpp-unit-test failed and I find an issue maybe associate with the failure [4746](https://issues.apache.org/jira/projects/ZOOKEEPER/issues/ZOOKEEPER-4746?filter=allopenissues&orderby=created+DESC%2C+priority+DESC%2C+updated+DESC). Let me take a look on it.


;19/Sep/24 02:10;githubbot;600","kezhuw commented on PR #2176:
URL: https://github.com/apache/zookeeper/pull/2176#issuecomment-2360001928

   > The cpp-unit-test failed and I find an issue maybe associate with the failure [ZOOKEEPER-4746](https://issues.apache.org/jira/projects/ZOOKEEPER/issues/ZOOKEEPER-4746?filter=allopenissues&orderby=created+DESC%2C+priority+DESC%2C+updated+DESC). Let me take a look on it.
   
   That does not matter, it will not block this pr. I forgot it entirely and created ZOOKEEPER-4859 with attached log.


;19/Sep/24 05:21;githubbot;600","kezhuw commented on PR #2176:
URL: https://github.com/apache/zookeeper/pull/2176#issuecomment-2360152099

   @anmolnar @tisonkun @eolivelli Would you mind take a look ?


;19/Sep/24 07:01;githubbot;600","luoxiner commented on PR #2176:
URL: https://github.com/apache/zookeeper/pull/2176#issuecomment-2362868693

   > Excellent candidate for 3.9.3 release. Thanks!
   > 
   > Question: why have you moved logic out of the class to static class `SecurityUtils` while you're not using it anywhere else. For instance `getAppConfigurationEntryWithSection()` is only used in `SaslQuorumAuthServer`, so it should be a private method of it.
   
   getAppConfigurationEntryWithSection alway used in SecurityUtils‘s other methods. SecurityUtils::getDigestMd5Credentials -> SecurityUtils::getServerAppConfigurationEntry -> SecurityUtils::getAppConfigurationEntryWithSection. 


;20/Sep/24 05:41;githubbot;600","anmolnar commented on PR #2176:
URL: https://github.com/apache/zookeeper/pull/2176#issuecomment-2364629073

   > > Excellent candidate for 3.9.3 release. Thanks!
   > > Question: why have you moved logic out of the class to static class `SecurityUtils` while you're not using it anywhere else. For instance `getAppConfigurationEntryWithSection()` is only used in `SaslQuorumAuthServer`, so it should be a private method of it.
   > 
   > getAppConfigurationEntryWithSection is also used in SecurityUtils‘s other methods. SecurityUtils::getDigestMd5Credentials -> SecurityUtils::getServerAppConfigurationEntry -> SecurityUtils::getAppConfigurationEntryWithSection.
   
   Following the call chain it still seems to me that every method is used only in `ServerCnxnFactory` abstract class, but correct me if I'm wrong. All of these methods should belong to there. You can still make them visible for testing.


;20/Sep/24 21:16;githubbot;600","luoxiner commented on PR #2176:
URL: https://github.com/apache/zookeeper/pull/2176#issuecomment-2364959646

   > > > Excellent candidate for 3.9.3 release. Thanks!
   > > > Question: why have you moved logic out of the class to static class `SecurityUtils` while you're not using it anywhere else. For instance `getAppConfigurationEntryWithSection()` is only used in `SaslQuorumAuthServer`, so it should be a private method of it.
   > > 
   > > 
   > > getAppConfigurationEntryWithSection is also used in SecurityUtils‘s other methods. SecurityUtils::getDigestMd5Credentials -> SecurityUtils::getServerAppConfigurationEntry -> SecurityUtils::getAppConfigurationEntryWithSection.
   > 
   > Following the call chain it still seems to me that every method is used only in `ServerCnxnFactory` abstract class, but correct me if I'm wrong. All of these methods should belong to there. You can still make them visible for testing.
   
   Thanks for your reply! I find some dup codes in my pr, let me fix it.


;21/Sep/24 02:53;githubbot;600","luoxiner commented on PR #2176:
URL: https://github.com/apache/zookeeper/pull/2176#issuecomment-2365007130

   Hi, @kezhuw @anmolnar  I find something confused me.
   
   [[SaslQuorumServerCallbackHandler](https://github.com/apache/zookeeper/blob/bc9afbf8ef1bc6156643d3d05c87fcf8411e9d8f/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.java#L82)](https://github.com/apache/zookeeper/blob/bc9afbf8ef1bc6156643d3d05c87fcf8411e9d8f/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.java#L82)
   
   The codes here are correct ?
   
   I think if a section contains a module that is DigestLoginModule, we can set isDigestAuthn to true.
   
   So i think the correct codes are
   
   ```java
   boolean isDigestAuthn = false;
   for (AppConfigurationEntry entry : configurationEntries) {
   		if (entry.getLoginModuleName().equals(DigestLoginModule.class.getName())) {
         Map<String, ?> options = entry.getOptions();
         // Populate DIGEST-MD5 user -> password map with JAAS configuration entries from the ""QuorumServer"" section.
         // Usernames are distinguished from other options by prefixing the username with a ""user_"" prefix.
         for (Map.Entry<String, ?> pair : options.entrySet()) {
             String key = pair.getKey();
             if (key.startsWith(USER_PREFIX)) {
                 String userName = key.substring(USER_PREFIX.length());
                 credentials.put(userName, (String) pair.getValue());
             }
         }
         isDigestAuthn = true;
      }
   }
   ```
   
    Am I right?


;21/Sep/24 05:18;githubbot;600","kezhuw commented on PR #2176:
URL: https://github.com/apache/zookeeper/pull/2176#issuecomment-2365065473

   I guess it might express a preference over non DIGEST-MD5 module. But I doubt ZooKeeper will work probably in case of multiple login modules especially client-server authentication. cc @ztzg 
   
   I do noticed the repetition in reviewing(https://github.com/apache/zookeeper/pull/2176#discussion_r1751088413), I am ok for it to be unified somehow. But be careful and don't break ZOOKEEPER-4753.
   
   Some code assumes there is only one login module and most mixes them.
   
   https://github.com/apache/zookeeper/blob/bc9afbf8ef1bc6156643d3d05c87fcf8411e9d8f/zookeeper-server/src/main/java/org/apache/zookeeper/Login.java#L108-L120


;21/Sep/24 08:48;githubbot;600","luoxiner commented on PR #2176:
URL: https://github.com/apache/zookeeper/pull/2176#issuecomment-2365437556

   Hi, @kezhuw  @anmolnar  I make some changes. 
   
   1. remove `getAppConfigurationEntryWithSection` and `getServerAppConfigurationEntry` in `SecurityUtils` because the caller alreay have an `AppConfigurationEntry[]` entries in the context, we can use it directly, we don’t need check and get again in the Utils methods.
   
      Codes here:
   
      [[ServerCnxnFactory](https://github.com/apache/zookeeper/blob/bc9afbf8ef1bc6156643d3d05c87fcf8411e9d8f/zookeeper-server/src/main/java/org/apache/zookeeper/server/ServerCnxnFactory.java#L243)](https://github.com/apache/zookeeper/blob/bc9afbf8ef1bc6156643d3d05c87fcf8411e9d8f/zookeeper-server/src/main/java/org/apache/zookeeper/server/ServerCnxnFactory.java#L243)
   
      [[SaslQuorumAuthServer](https://github.com/apache/zookeeper/blob/bc9afbf8ef1bc6156643d3d05c87fcf8411e9d8f/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthServer.java#L52)](https://github.com/apache/zookeeper/blob/bc9afbf8ef1bc6156643d3d05c87fcf8411e9d8f/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthServer.java#L52)
   
   2. move getServerCredentials to ServerCnxnFactory and make it private.
   
   Please take a look and give some feed back, thanks !


;22/Sep/24 03:10;githubbot;600","luoxiner commented on PR #2176:
URL: https://github.com/apache/zookeeper/pull/2176#issuecomment-2371532735

   > Please remove this, it's not needed anymore:
   > 
   > https://github.com/apache/zookeeper/pull/2176/files#diff-dc881dad2c11cb59d7c710313e05fff31c098fbfa4cc02d250515e8c883583e5R120
   
   @anmolnar  I have removed it, please take a look.


;24/Sep/24 14:49;githubbot;600","anmolnar merged PR #2176:
URL: https://github.com/apache/zookeeper/pull/2176


;25/Sep/24 00:46;githubbot;600","anmolnar commented on PR #2176:
URL: https://github.com/apache/zookeeper/pull/2176#issuecomment-2372641997

   Merged. Thanks @luoxiner !


;25/Sep/24 00:47;githubbot;600","anmolnar commented on PR #2176:
URL: https://github.com/apache/zookeeper/pull/2176#issuecomment-2372642583

   @luoxiner What is your Jira id?


;25/Sep/24 00:47;githubbot;600","luoxiner commented on PR #2176:
URL: https://github.com/apache/zookeeper/pull/2176#issuecomment-2372715070

   > @luoxiner What is your Jira id?
   
   luoxin


;25/Sep/24 01:46;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,16200,,,0,16200,,,,,,,,,,,,,,,,,,,,,,"19/Jun/24 03:04;wstcjmg;image-2024-06-19-11-04-14-140.png;https://issues.apache.org/jira/secure/attachment/13069597/image-2024-06-19-11-04-14-140.png",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Sep 25 00:47:01 UTC 2024,,,,,,,,,,"0|z1puts:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Jun/24 03:04;wstcjmg;!image-2024-06-19-11-04-14-140.png!;;;","11/Jul/24 02:16;luoxin;There is an uncovered condition when processing users that are not on the credential list. When a user is not contained in the credentials, we should invoke the appropriate method to handle this scenario. we should call the method
{code:java}
pc.clearPassword(); {code}
when user not in credentials. Let me try to fix it!;;;","14/Jul/24 08:17;luoxin;I have created a pr to resolve it.

[Clear user credentials when userName non-exist in sasl login module by luoxiner · Pull Request #2176 · apache/zookeeper (github.com)|https://github.com/apache/zookeeper/pull/2176];;;","25/Sep/24 00:47;andor;Issue resolved by pull request 2176
[https://github.com/apache/zookeeper/pull/2176];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zk_learners is incorrectly referenced as zk_followers,ZOOKEEPER-4830,13576991,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,tison,nfeinberg,nfeinberg,24/Apr/24 00:33,24/Apr/24 04:10,29/Jun/25 13:34,24/Apr/24 04:10,3.8.4,3.9.2,,,,,,,,,,,,,,,,,,,,,,,3.10.0,,,,,,,,,,0,pull-request-available,,"https://issues.apache.org/jira/browse/ZOOKEEPER-3117 renamed the `zk_followers` metric to `zk_learners`, but some references to `zk_followers` remained in the repo, including in the documentation. These should be corrected.
",,"tisonkun merged PR #2160:
URL: https://github.com/apache/zookeeper/pull/2160


;24/Apr/24 04:10;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,600,0,600,100%,600,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,https://github.com/apache/zookeeper/pull/2160,,,,,,,,,,9223372036854775807,,,,,Wed Apr 24 04:10:41 UTC 2024,,,,,,,,,,"0|z1ou08:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Apr/24 04:10;tison;master via https://github.com/apache/zookeeper/commit/ee994fbca51f826e4b26d6a105866975d0007f6e.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
do_completion() use-after-free when log level is debug,ZOOKEEPER-4809,13569150,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,fanyang,fanyang,fanyang,20/Feb/24 07:17,17/Feb/25 01:59,29/Jun/25 13:34,02/Aug/24 05:03,3.7.2,3.8.4,3.9.2,,,,,,,,,,,,,,,,,,,,,,3.10.0,,,,,c client,,,,,0,pull-request-available,,"{code:c}
void *do_completion(void *v)
{
    zhandle_t *zh = v;
    // ...
    api_epilog(zh, 0);  // L1
    LOG_DEBUG(LOGCALLBACK(zh), ""completion thread terminated"");  // L2
    return 0;
}
{code}

When the log level is debug, L2 gets the log calback after zookeeper_close(), causes uaf.",,"fanyang89 opened a new pull request, #2139:
URL: https://github.com/apache/zookeeper/pull/2139

   The log callback needs to be obtained from freed zh when the log level is debug, resulting in used-after-free.


;20/Feb/24 07:18;githubbot;600","kezhuw commented on code in PR #2139:
URL: https://github.com/apache/zookeeper/pull/2139#discussion_r1525726768


##########
zookeeper-client/zookeeper-client-c/src/mt_adaptor.c:
##########
@@ -479,8 +480,9 @@ void *do_completion(void *v)
         pthread_mutex_unlock(&zh->completions_to_process.lock);
         process_completions(zh);
     }
-    api_epilog(zh, 0);    
-    LOG_DEBUG(LOGCALLBACK(zh), ""completion thread terminated"");

Review Comment:
   Is it more conventional to swap the two statements ? I saw several `return api_epilog(zh, rc)` patterns. Also, line 460 has same problem.



;15/Mar/24 03:55;githubbot;600","fanyang89 commented on code in PR #2139:
URL: https://github.com/apache/zookeeper/pull/2139#discussion_r1525732277


##########
zookeeper-client/zookeeper-client-c/src/mt_adaptor.c:
##########
@@ -479,8 +480,9 @@ void *do_completion(void *v)
         pthread_mutex_unlock(&zh->completions_to_process.lock);
         process_completions(zh);
     }
-    api_epilog(zh, 0);    
-    LOG_DEBUG(LOGCALLBACK(zh), ""completion thread terminated"");

Review Comment:
   Indeed, it would be conventional to log first and then `api_epilog()`.
   
   But `api_epilog()` does `zookeeper_close()` when the rc is zero, i.e. the completion thread is still running after the ""terminated"" output, which could lead to confusion?



;15/Mar/24 04:02;githubbot;600","eolivelli commented on PR #2139:
URL: https://github.com/apache/zookeeper/pull/2139#issuecomment-2002097035

   @ztzg can you please take a look?


;16/Mar/24 19:21;githubbot;600","kezhuw merged PR #2139:
URL: https://github.com/apache/zookeeper/pull/2139


;02/Aug/24 04:58;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3000,,,0,3000,,,,,,,,ZOOKEEPER-4615,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Aug 02 05:03:13 UTC 2024,,,,,,,,,,"0|z1ni1k:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Aug/24 05:03;kezhuw;master: 4e999c8708656ab18ea466607ee9859b517b680a;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The installation guide in zookeeper-client/zookeeper-client-c/README is outdated,ZOOKEEPER-4782,13562967,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,yangzhenxing,yangzhenxing,yangzhenxing,27/Dec/23 02:28,18/Oct/24 16:54,29/Jun/25 13:34,09/Feb/24 11:22,3.9.1,,,,,,,,,,,,,,,,,,,,,,,,3.10.0,,,,,c client,,,,,0,pull-request-available,,"The installation guide in zookeeper-client/zookeeper-client-c is outdated, it should point out the current good way to build is contained in zookeeper-docs/src/main/resources/markdown/zookeeperProgrammers.md",,"yzx1983 opened a new pull request, #2101:
URL: https://github.com/apache/zookeeper/pull/2101

   …client-c/README is outdated.


;27/Dec/23 06:31;githubbot;600","anmolnar merged PR #2101:
URL: https://github.com/apache/zookeeper/pull/2101


;09/Feb/24 11:22;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Feb 09 11:22:32 UTC 2024,,,,,,,,,,"0|z1mge0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Feb/24 11:22;andor;Issue resolved by pull request 2101
[https://github.com/apache/zookeeper/pull/2101];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zkSnapshotRecursiveSummaryToolkit.sh Error: Could not find or load main class,ZOOKEEPER-4770,13558490,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,,nailcui,nailcui,18/Nov/23 02:44,06/Feb/24 07:49,29/Jun/25 13:34,06/Feb/24 07:49,3.9.1,,,,,,,,,,,,,,,,,,,,,,,,3.10,,,,,scripts,tools,,,,0,pull-request-available,,"When I execute the following code to analyze the snapshot file:
{code:java}
./bin/zkSnapshotRecursiveSummaryToolkit.sh /data/version-2/snapshot.c00000009 / 2 {code}
Getting this error:

 
{code:java}
Error: Could not find or load main class {code}
I checked the source code and found that $JVMFLAGS was surrounded by quotation marks. This problem occurs when the variable $JVMFLAGS is empty.
{code:java}
""$JAVA"" -cp ""$CLASSPATH"" ""$JVMFLAGS"" \
     org.apache.zookeeper.server.SnapshotRecursiveSummary ""$@"" {code}
The correct code should be like this

 
{code:java}
""$JAVA"" -cp ""$CLASSPATH"" $JVMFLAGS \
     org.apache.zookeeper.server.SnapshotRecursiveSummary ""$@""{code}
Thank you, I will solve it.

 

 ",CentOS Linux release 7.4.1708,"Nailcui opened a new pull request, #2091:
URL: https://github.com/apache/zookeeper/pull/2091

   When I execute the following code to analyze the snapshot file:
   ```
   ./bin/zkSnapshotRecursiveSummaryToolkit.sh /data/version-2/snapshot.c00000009 / 2 
   ```
   
   Getting this error:
   ```
   Error: Could not find or load main class 
   ```
   
   I checked the source code and found that $JVMFLAGS was surrounded by quotation marks. This problem occurs when the variable $JVMFLAGS is empty.
   ```
   ""$JAVA"" -cp ""$CLASSPATH"" ""$JVMFLAGS"" \
        org.apache.zookeeper.server.SnapshotRecursiveSummary ""$@"" 
   ```
   
   The correct code should be like this
   ```
   ""$JAVA"" -cp ""$CLASSPATH"" $JVMFLAGS \
        org.apache.zookeeper.server.SnapshotRecursiveSummary ""$@""
   ```
   


;18/Nov/23 03:00;githubbot;600","maoling merged PR #2091:
URL: https://github.com/apache/zookeeper/pull/2091


;06/Feb/24 07:47;githubbot;600","maoling commented on PR #2091:
URL: https://github.com/apache/zookeeper/pull/2091#issuecomment-1928950243

   @nailcui 
   Thanks for your contribution.


;06/Feb/24 07:48;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2023-11-18 02:44:19.0,,,,,,,,,,"0|z1lp3c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove version files  in zookeeper-server/src/main from .gitignore,ZOOKEEPER-4752,13552706,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,tison,stoty,stoty,03/Oct/23 08:01,24/Oct/24 20:09,29/Jun/25 13:34,03/Oct/23 21:50,3.8.2,,,,,,,,,,,,,,,,,,,,,,,,3.10.0,3.8.5,3.9.3,,,build,,,,,0,pull-request-available,,"The Info.java and VersionInfoMain.java files are currently generated into the target/generated-sources directory. 

However .gitignore still includes the following lines for the main src directory.
{noformat}
zookeeper-server/src/main/java/org/apache/zookeeper/version/Info.java
zookeeper-server/src/main/java/org/apache/zookeeper/version/VersionInfoMain.java
{noformat}
Let's remove them.

I've just spent two hours trying to debug  mysterious build failures, which were caused by an old Info.java file in src, which didn't show up in git status because of those out-of-date .gitignore entries.



 

 ",,"stoty opened a new pull request, #2073:
URL: https://github.com/apache/zookeeper/pull/2073

   … .gitignore


;03/Oct/23 08:03;githubbot;600","tisonkun merged PR #2073:
URL: https://github.com/apache/zookeeper/pull/2073


;03/Oct/23 21:49;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Oct 03 21:50:22 UTC 2023,,,,,,,,,,"0|z1kpg8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Oct/23 21:50;tison;master via ce5b0b88834a0afaabebeb332ee486cb4dddef04;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reproducible SessionTimeoutException for ZK3.5.7 and higher,ZOOKEEPER-4722,13543969,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Not A Problem,,olivierfl,olivierfl,18/Jul/23 14:47,29/Sep/24 04:45,29/Jun/25 13:34,29/Sep/24 04:39,3.5.7,3.5.8,3.6.2,3.7.1,3.8.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,"Hello Zookeeper team,

I am contributing to the Apache ManifoldCF project, which is heavily relying on Zookeeper, and I encountered a reproducible error for which we – the ManifoldCF team - need your help:

As part of its output connectors regular updates (ManifoldCF is a data crawler that can send analysed documents to designated destination applications), we are upgrading the Apache Solr output connector so that it is compatible with Solr 9.2. This version of Solr uses Apache Zookeeper 3.8.0, but when using the same Zookeeper version on the Apache ManifoldCF side, we experienced reproducible tests failures on the Solr Output Connector of ManifoldCF when building the project.

We were able to pass tests with ZK up to version 3.5.6 included, but all of the more recent versions fail [4].

To ease your evaluation of the problem, we have prepared a fork of Apache ManifoldCF where you can work and reproduce the issue [1]. The branch to be used is CONNECTORS-1740, and the build procedure is as follows (the issue occurs during the testings phase):

git checkout CONNECTORS-1740
 
Now, in order to build with ant (exclusively with Java 11 otherwise it will not work)
First, Fetch the dependencies : 
ant clean make-core-deps
 
Next, start the build itself: 
ant clean build
 
You will get a success message for both commands.
 
Then start the MCF tests (this is what will trigger the error [4]):
ant run-tests-framework

Thanks in advance for your help.

Best regards,

Olivier
 

[1] https://gitlab.datafari.com/sandboxespublic/manifoldcf
You can find here the email thread about this problem on the Apache ManifoldCF developer Mailing List [2], as well as the jira issue dedicated to it [3].

[2] https://lists.apache.org/thread/3zx7c5nm23j6wfb0okf5xb01t9jb6lph

[3] https://issues.apache.org/jira/browse/CONNECTORS-1740

[4] Error logs we get:

[junit] org.apache.zookeeper.ClientCnxn$SessionTimeoutException: Client session timed out, have not heard from server in 2007ms for session id 0x0
[junit]     at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1250)
[junit] [reader] INFO org.apache.zookeeper.ZooKeeper - Session: 0x0 closed
[junit] [reader-EventThread] INFO org.apache.zookeeper.ClientCnxn - EventThread shut down for session: 0x0
[junit] [reader] INFO org.apache.zookeeper.ZooKeeper - Initiating client connection, connectString=localhost:8348 sessionTimeout=2000 watcher=org.apache.manifoldcf.core.lockmanager.ZooKeeperConnection$ZooKeeperWatcher@45c66a27
[junit] [reader] INFO org.apache.zookeeper.ClientCnxnSocket - jute.maxbuffer value is 1048575 Bytes
[junit] [reader] INFO org.apache.zookeeper.ClientCnxn - zookeeper.request.timeout value is 0. feature enabled=false
[junit] [reader-SendThread(localhost:8348)] INFO org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:8348.
[junit] [reader-SendThread(localhost:8348)] INFO org.apache.zookeeper.ClientCnxn - SASL config status: Will not attempt to authenticate using SASL (unknown error)
[junit] [reader-SendThread(localhost:8348)] WARN org.apache.zookeeper.ClientCnxn - Client session timed out, have not heard from server in 2008ms for session id 0x0
[junit] [reader-SendThread(localhost:8348)] WARN org.apache.zookeeper.ClientCnxn - An exception was thrown while closing send thread for session 0x0.
[junit] org.apache.zookeeper.ClientCnxn$SessionTimeoutException: Client session timed out, have not heard from server in 2008ms for session id 0x0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sun Sep 29 04:39:30 UTC 2024,,,,,,,,,,"0|z1j7x4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Sep/24 04:37;kezhuw;I set up a brand new env in docker from {{maven/3.9-eclipse-temurin-11}} and cloned https://gitlab.datafari.com/sandboxespublic/manifoldcf/-/tree/CONNECTORS-1740 with following changes.

{noformat}
diff --git a/framework/core/src/test/java/org/apache/manifoldcf/core/lockmanager/ZooKeeperInstance.java b/framework/core/src/test/java/org/apache/manifoldcf/core/lockman
ager/ZooKeeperInstance.java
index 9dd7faf..1dc6ad2 100644
--- a/framework/core/src/test/java/org/apache/manifoldcf/core/lockmanager/ZooKeeperInstance.java
+++ b/framework/core/src/test/java/org/apache/manifoldcf/core/lockmanager/ZooKeeperInstance.java
@@ -98,7 +98,11 @@ public class ZooKeeperInstance {
       } catch (final IOException e) {
         // Ignore IOExceptions, since that seems to be normal when shutting
         // down zookeeper via thread.interrupt()
+       System.err.println(""XXXXXX"");
+       e.printStackTrace();
       } catch (final Throwable e) {
+       System.err.println(""XXXXXX"");
+       e.printStackTrace();
         exception = e;
       }
     }
{noformat}

I got logs.

{noformat}
    [junit] [Thread-0] INFO org.apache.zookeeper.server.ZooKeeperServerMain - Starting server
    [junit] XXXXXX
    [junit] java.lang.NoClassDefFoundError: com/codahale/metrics/Reservoir
    [junit]     at org.apache.zookeeper.metrics.impl.DefaultMetricsProvider$DefaultMetricsContext.lambda$getSummary$2(DefaultMetricsProvider.java:151)
    [junit]     at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1705)
    [junit]     at org.apache.zookeeper.metrics.impl.DefaultMetricsProvider$DefaultMetricsContext.getSummary(DefaultMetricsProvider.java:147)
    [junit]     at org.apache.zookeeper.server.ServerMetrics.<init>(ServerMetrics.java:76)
    [junit]     at org.apache.zookeeper.server.ServerMetrics.<clinit>(ServerMetrics.java:46)
    [junit]     at org.apache.zookeeper.server.ZooKeeperServerMain.runFromConfig(ZooKeeperServerMain.java:133)
    [junit]     at org.apache.manifoldcf.core.lockmanager.ZooKeeperInstance$ZooKeeperThread.run(ZooKeeperInstance.java:97)
    [junit] Caused by: java.lang.ClassNotFoundException: com.codahale.metrics.Reservoir
    [junit]     at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
    [junit]     at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
    [junit]     at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:527)
    [junit]     ... 7 more
{noformat}

{noformat}
    [junit] [Thread-17] INFO org.apache.zookeeper.server.ZooKeeperServerMain - Starting server
    [junit] XXXXXX
    [junit] java.lang.NoClassDefFoundError: Could not initialize class org.apache.zookeeper.server.ServerMetrics
    [junit]     at org.apache.zookeeper.server.ZooKeeperServerMain.runFromConfig(ZooKeeperServerMain.java:133)
    [junit]     at org.apache.manifoldcf.core.lockmanager.ZooKeeperInstance$ZooKeeperThread.run(ZooKeeperInstance.java:97)
{noformat}

I guess you could benefit from {{ZooKeeperServerMain::main}} or {{ZooKeeperServerEmbedded}} in starting ZooKeeper server for testing.

The log refects that it can't reach all servers in {{connectString}}.;;;","29/Sep/24 04:39;kezhuw;Just in case, ZOOKEEPER-4508 changed the behavior in case of client can't reach all servers in {{connectString}} from endless {{SessionTimeoutException}} to {{KeeperState.Expired}}.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Datadir and DatalogDir size are incorrect,ZOOKEEPER-4703,13538975,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,li4wang,li4wang,li4wang,07/Jun/23 00:10,26/Aug/24 06:49,29/Jun/25 13:34,07/Feb/24 03:12,3.6.1,3.7.1,3.8.1,,,,,,,,,,,,,,,,,,,,,,3.10,,,,,server,,,,,0,pull-request-available,,"Zookeeper server reports incorrect size for DataDir and DataLogDir.  

For example, DirCommand returns the following

{

  ""datadir_size"" : 2214592528,

  ""logdir_size"" : 24556680368,

  ""command"" : ""dirs"",

  ""error"" : null

}



Excepted response: 

{

  ""datadir_size"" : 24556680368

  ""logdir_size"" : 2214592528,

  ""command"" : ""dirs"",

  ""error"" : null

}

 ",,"maoling commented on PR #2060:
URL: https://github.com/apache/zookeeper/pull/2060#issuecomment-1929048024

   Great catch. Incredible. this issue existed for almost 9 years.
   Since it only exposed some metrics(e.g. `/commands/dirs`) and don't affect the core function, so nobody realized it.


;06/Feb/24 08:54;githubbot;600","maoling closed pull request #2060: ZOOKEEPER-4703: Datadir and DatalogDir size are incorrect
URL: https://github.com/apache/zookeeper/pull/2060


;06/Feb/24 08:54;githubbot;600","SiyaoIsHiding opened a new pull request, #2060:
URL: https://github.com/apache/zookeeper/pull/2060

   As in the class `FileTxnSnapLog`
   ```java
       //the directory containing
       //the transaction logs
       final File dataDir;
       //the directory containing
       //the snapshot directory
       final File snapDir;
   ```
   The `DataDir` is the one for logs. Therefore, the file path for `DataDirSize` and `LogDirSize` should be swapped.


;06/Feb/24 08:54;githubbot;600","maoling merged PR #2060:
URL: https://github.com/apache/zookeeper/pull/2060


;07/Feb/24 03:10;githubbot;600","maoling commented on PR #2060:
URL: https://github.com/apache/zookeeper/pull/2060#issuecomment-1931196090

   @SiyaoIsHiding 
   Thanks for your contribution.


;07/Feb/24 03:11;githubbot;600","anmolnar commented on PR #2060:
URL: https://github.com/apache/zookeeper/pull/2060#issuecomment-1935975687

   @SiyaoIsHiding @maoling 
   
   Great fix, but where's the unit test that catches it?
   Please also make sure it's backported to active branches.


;09/Feb/24 13:54;githubbot;600","li4wang commented on PR #2060:
URL: https://github.com/apache/zookeeper/pull/2060#issuecomment-1938168206

   https://github.com/apache/zookeeper/pull/2043 has unit test for it.
   


;12/Feb/24 07:30;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4200,,,0,4200,,,,,,,,,,,,,,,,,,,ZOOKEEPER-4693,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Sep 05 00:21:33 UTC 2023,,,,,,,,,,"0|z1id80:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Jun/23 00:15;li4wang;The cause of the issue is that wrong APIs are used for getting the dir size.  

@Override

public long getDataDirSize() {

    if (zkDb == null) {

        return 0L;

    }

    File path = {*}zkDb.snapLog.getDataDir{*}();

    return getDirSize(path);

}

 

@Override

public long getLogDirSize() {

    if (zkDb == null) {

        return 0L;

    }

    File path = {*}zkDb.snapLog.getSnapDir{*}();

    return getDirSize(path);

}

 

Fix:

1. changing getDataDataDirSize() to call *zkDb.snapLog.getSnapDir()*
2. changing  ** getLogDirSize() to call *zkDb.snapLog.getDataDir()*

 ;;;","05/Sep/23 00:21;janehe;I think you are right and since three months have passed, I can fix it for you. Thank you for the issue and the suggested code changes.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Handle SessionTimeoutException in Java client,ZOOKEEPER-4692,13534321,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Duplicate,,giorgos.georgiou,giorgos.georgiou,27/Apr/23 12:48,28/Apr/23 09:42,29/Jun/25 13:34,28/Apr/23 09:42,3.8.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,java client,,,,,0,,,"The Java client sets a read timeout equal to 2/3 of the session timeout and throws a SessionTimeoutException when this is hit.

[https://github.com/apache/zookeeper/blob/89c1831f84891f425f1fa9224210587124f1c1ec/zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java#L1236-L1243]

However, the effect of that exception is not treated the same was as a SessionExpiredException which is propagated to the user and is treated as a disconnect event instead.

This doesn't play very well with Curator which manages its own exception expiry client side and starts its countdown on disconnect events, meaning that it will consider the session lost a whole 2/3 of the session timeout after it actually expired.

Should the SessionTimeoutException also be propagated to the users for handling and potentially considering the session lost from their end?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-4508,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Apr 28 08:26:20 UTC 2023,,,,,,,,,,"0|z1hkr4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Apr/23 07:58;kezhuw;Both {{ClientCnxn.SessionTimeoutException}} and {{ClientCnxn.SessionExpiredException}} are assistant classes. The exported one is {{KeeperException.SessionExpiredException}}. There is no concept {{timeout}} in ZooKeeper, but only session {{expired}}.

The {{ClientCnxn.SessionTimeoutException}} should resolves to {{KeeperException.SessionExpiredException}} finally. But there is bug in {{ClientCnxn.SendThread.run}}, see ZOOKEEPER-4508 for reference. I guess you are reporting the same bug ?;;;","28/Apr/23 08:26;giorgos.georgiou;Yes, it looks to be the same as ZOOKEEPER-4508 (the second bullet point);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ServerMetrics give out invalid values when two server run in one JVM,ZOOKEEPER-4686,13531534,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,s.nug,s.nug,05/Apr/23 06:56,05/Apr/23 06:56,29/Jun/25 13:34,,3.8.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,metric system,server,,,,0,,,"In our application we sometimes start two zookeeper servers in a single application process. First, we start one server but depending on what happens on other locations, it happens that we need to start a second server with different configuration and another set of servers in the quorum. The problem we face when we read metrics with our MetricsProvider is, that the startup of the second server causing some metrics to be unregistered (gauges for example) while other published values are just not correct anymore. I was following your discussion (e.g., here [https://github.com/apache/zookeeper/pull/840#pullrequestreview-214872675]) and know that it was a conscious decision.

For us the best thing would indeed be, if instead of static call, an instance for every server withing a JVM would be implemented (kind of similar as for clients). Nevertheless, the current situation is that the values that are published are wrong (and I could not find an indication for that). Not only the meters extracted via MetricsProvider but also the 4lw mntr report invalid values.

Could you offer a bug fix or a way how we could reliably avoid reading garbage values? And my there be other effects when running two server in one JVM?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2023-04-05 06:56:16.0,,,,,,,,,,"0|z1h3mo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
C сlient zookeeper_init_ssl certificate password cannot contain commas.,ZOOKEEPER-4619,13483928,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,llchry,llchry,30/Sep/22 03:33,20/Oct/22 10:35,29/Jun/25 13:34,,3.6.2,3.7.1,3.8.0,,,,,,,,,,,,,,,,,,,,,,,,,,,c client,,,,,0,pull-request-available,,"An exception occurs when cli_mt is used to connect to a server with SSL authentication enabled and the private key contains commas (,).

 

./cli_mt -h x.x.x.x:21281 -s ""/root/zookeeper/zookeeper-client/zookeeper-client-c/ca.crt,/root/zookeeper/zookeeper-client/zookeeper-client-c/Certificate.pem,/root/zookeeper/zookeeper-client/zookeeper-client-c/PrivateKey,ecQrng,dtCtuCv,s7Qpj+Un""

 

2022-09-30 11:12:24,169:971(0x7f5932b5e700):ZOO_ERROR@init_ssl_for_socket@2788: Failed to load client private key from /root/zookeeper/zookeeper-client/zookeeper-client-c/PrivateKey.pem",,"sonatype-lift[bot] commented on PR #1929:
URL: https://github.com/apache/zookeeper/pull/1929#issuecomment-1263094297

   :warning: **52 God Classes** were detected by Lift in this project. [Visit the Lift web console](https://lift.sonatype.com/results/github.com/apache/zookeeper/01GE6AEWABP2H6DC7FEQX75FJ2?tab=technical-debt&utm_source=github.com&utm_campaign=lift-comment&utm_content=apache\%20zookeeper) for more details.


;30/Sep/22 04:39;githubbot;600","kezhuw commented on code in PR #1929:
URL: https://github.com/apache/zookeeper/pull/1929#discussion_r1000452136


##########
zookeeper-client/zookeeper-client-c/src/zookeeper.c:
##########
@@ -1457,7 +1457,7 @@ zhandle_t *zookeeper_init_ssl(const char *host, const char *cert, watcher_fn wat
     zcert.ca = strtok(strdup(cert), "","");

Review Comment:
   This sounds like a memory leak. I find only `free` of field `certstr` but not `ca` in [`destroy`](https://github.com/apache/zookeeper/blob/90f813ea38a85ff2715662bad75f9bb6387fe4a6/zookeeper-client/zookeeper-client-c/src/zookeeper.c#L692). @symat @ztzg @anmolnar 



##########
zookeeper-client/zookeeper-client-c/src/zookeeper.c:
##########
@@ -1457,7 +1457,7 @@ zhandle_t *zookeeper_init_ssl(const char *host, const char *cert, watcher_fn wat
     zcert.ca = strtok(strdup(cert), "","");
     zcert.cert = strtok(NULL, "","");
     zcert.key = strtok(NULL, "","");
-    zcert.passwd = strtok(NULL, "","");       
+    zcert.passwd = strtok(NULL, """");

Review Comment:
   I think this need a test. I find no specified behavior for [`strtok(str, """")`](https://cplusplus.com/reference/cstring/strtok/). 
   
   Besides this, I think this change require us to decide whether and how possible more fields are allowed in future.



;20/Oct/22 10:35;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2022-09-30 03:33:55.0,,,,,,,,,,"0|z18yqo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NIOServerCnxnFactory can leak connection expirer thread,ZOOKEEPER-4608,13477452,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,mdrob,mdrob,18/Aug/22 14:57,18/Aug/22 14:57,29/Jun/25 13:34,,3.7.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,server,,,,,0,,,NIOServerCnxnFactory.stop will interrupt the expirerThread but NIOServerCnxnFactory.join won't wait for it like it waits for the other threads.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2022-08-18 14:57:15.0,,,,,,,,,,"0|z17v68:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TxnLogToolkit decode multi tnx problem,ZOOKEEPER-4607,13477418,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,horizonzy,horizonzy,horizonzy,18/Aug/22 11:35,26/Sep/24 12:07,29/Jun/25 13:34,26/Sep/24 12:07,3.6.0,3.6.1,3.6.2,3.6.3,3.6.4,3.7.0,3.7.1,3.7.2,3.8.0,,,,,,,,,,,,,,,,3.10.0,,,,,server,,,,,0,pull-request-available,,"If there is a -101 error in the multi txn, the error status is \{-1, -1, -1, -101}.

Now it use toString to decode, it will decode it to unknown character.
{code:java}
return new String(data, StandardCharsets.UTF_8);{code}
 

The output:
{code:java}
session 0x1000017f0b701dc cxid 0x1 zxid 0x3208 multi error:����;error:����;error:����{code}
 ",,"horizonzy commented on PR #1915:
URL: https://github.com/apache/zookeeper/pull/1915#issuecomment-1277495068

   @maoling PTAL.


;13/Oct/22 11:57;githubbot;600","horizonzy commented on PR #1915:
URL: https://github.com/apache/zookeeper/pull/1915#issuecomment-1434668362

   @eolivelli PTAL.


;17/Feb/23 13:43;githubbot;600","maoling commented on code in PR #1915:
URL: https://github.com/apache/zookeeper/pull/1915#discussion_r1118794742


##########
zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/TxnLogToolkit.java:
##########
@@ -340,13 +341,15 @@ private static String getFormattedTxnStr(Record txn) throws IOException {
             for (int i = 0; i < txnList.size(); i++) {
                 Txn t = txnList.get(i);
                 if (i == 0) {
-                    txnData.append(Request.op2String(t.getType()) + "":"" + checkNullToEmpty(t.getData()));
+                    txnData.append(Request.op2String(t.getType()) + "":"" + (t.getType() == -1 ?
+                            ByteBuffer.wrap(t.getData()).getInt() : checkNullToEmpty(t.getData())));
                 } else {
-                    txnData.append("";"" + Request.op2String(t.getType()) + "":"" + checkNullToEmpty(t.getData()));
+                    txnData.append("";"" + Request.op2String(t.getType()) + "":"" + (t.getType() == -1 ?
+                            ByteBuffer.wrap(t.getData()).getInt() : checkNullToEmpty(t.getData())));

Review Comment:
   Good catch
   
   - Give this long expression a field, don't duplicate twice?   
   - The Transaction is special/strange, When executed successfully, it still have something marshalling like this(`setData:���/Txn/1677482572006���v2-1677482572006���`). Maybe removing non-printable non-ascii characters is a way to work(https://howtodoinjava.com/java/regex/java-clean-ascii-text-non-printable-chars/) (I'm not sure, You can ignore this)
   -  I did a comprehensive test for this tool for the following cases: 
       - Language (English, Chinese, Japanese, Arabic)
       - Small/large Transaction(suceessful or failed)
       - CRUD for all kind node type (Normal, TTL, container)
   



;27/Feb/23 14:13;githubbot;600","horizonzy closed pull request #1915: ZOOKEEPER-4607 : Fix decode problem when sub tnx type is error.
URL: https://github.com/apache/zookeeper/pull/1915


;18/Jul/23 04:25;githubbot;600","horizonzy opened a new pull request, #1915:
URL: https://github.com/apache/zookeeper/pull/1915

   If there is a -101 error in the multi txn, the error byte array is {-1, -1, -1, -101}.
   
   In the TxnLogToolkit, it uses toString to decode, it will decode it to the unknown character.
   
   Before:
   ```
   session 0x1000017f0b701dc cxid 0x1 zxid 0x3208 multi error:����;error:����;error:����
   ```
   
   
   After:
   ```
   session 0x1000017f0b701dc cxid 0x1 zxid 0x3208 multi error:-101;error:-2;error:-2
   ```


;18/Jul/23 04:25;githubbot;600","tisonkun merged PR #1915:
URL: https://github.com/apache/zookeeper/pull/1915


;18/Jul/23 12:04;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Sep 26 12:07:02 UTC 2024,,,,,,,,,,"0|z17uyo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Sep/24 12:07;kezhuw;master: 6e746f8e881bfeb99cf0f74fa50a3d9c9d679229;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CVE-2022-24823 in netty 4.1.76.Final,ZOOKEEPER-4554,13448958,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,ananysin,dominique,dominique,08/Jun/22 08:48,16/Jun/23 19:55,29/Jun/25 13:34,,3.7.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,cve,pull-request-available,"Netty reported a new MEDIUM CVE: [https://github.com/netty/netty/security/advisories/GHSA-269q-hmxg-m83q]

NVD: [https://nvd.nist.gov/vuln/detail/CVE-2022-24823]

It is fixed in netty 4.1.77.Final.

It should be noted that this CVE impacts applications running on Java 6 or lower.

 

 

 ",,"AnanyaSingh2121 commented on PR #1953:
URL: https://github.com/apache/zookeeper/pull/1953#issuecomment-1345301906

   @brahmareddybattula could you please review this PR.


;10/Dec/22 16:36;githubbot;600","AnanyaSingh2121 commented on PR #1953:
URL: https://github.com/apache/zookeeper/pull/1953#issuecomment-1345487134

   > Please also update the license files. Usually it is enough to rename them
   
   updated.


;11/Dec/22 08:14;githubbot;600","brahmareddybattula commented on PR #1953:
URL: https://github.com/apache/zookeeper/pull/1953#issuecomment-1365322235

   lgtm. (non-binding)


;26/Dec/22 18:10;githubbot;600","anmolnar commented on PR #1953:
URL: https://github.com/apache/zookeeper/pull/1953#issuecomment-1595216543

   ZooKeeper 3.6 is already EoL since 30th December, 2022.
   Please upgrade to a more recent version.


;16/Jun/23 19:55;githubbot;600","anmolnar closed pull request #1953: ZOOKEEPER-4554 : upgrade netty 4.1.76.Final to  4.1.77.Final
URL: https://github.com/apache/zookeeper/pull/1953


;16/Jun/23 19:55;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3000,,,0,3000,,,,,,,,ZOOKEEPER-4555,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2022-06-08 08:48:12.0,,,,,,,,,,"0|z131oo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Zookeeper 3.7.0: /metrics java.lang.IllegalArgumentException: Invalid thread ID parameter: 0,ZOOKEEPER-4540,13444213,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Duplicate,,guido.iaquinti-posthog,guido.iaquinti-posthog,10/May/22 16:43,02/Jan/25 08:03,29/Jun/25 13:34,02/Jan/25 08:00,3.7.1,3.8.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,"Zookeeper node running version 3.7.0 part of a cluster with 2 other nodes. I'm getting the following log while accessing the /metrics (Prometheus) endpoint:
{code:java}
2022-05-10 16:11:01,122 [myid:0] - WARN  [qtp850551034-16:HttpChannel@677] - /metrics
java.lang.IllegalArgumentException: Invalid thread ID parameter: 0
        at java.management/sun.management.ThreadImpl.verifyThreadId(ThreadImpl.java:165)
        at java.management/sun.management.ThreadImpl.verifyThreadIds(ThreadImpl.java:174)
        at java.management/sun.management.ThreadImpl.getThreadInfo(ThreadImpl.java:180)
        at io.prometheus.client.hotspot.ThreadExports.getThreadStateCountMap(ThreadExports.java:98)
        at io.prometheus.client.hotspot.ThreadExports.addThreadMetrics(ThreadExports.java:86)
        at io.prometheus.client.hotspot.ThreadExports.collect(ThreadExports.java:123)
        at io.prometheus.client.CollectorRegistry$MetricFamilySamplesEnumeration.findNextElement(CollectorRegistry.java:190)
        at io.prometheus.client.CollectorRegistry$MetricFamilySamplesEnumeration.nextElement(CollectorRegistry.java:223)
        at io.prometheus.client.CollectorRegistry$MetricFamilySamplesEnumeration.nextElement(CollectorRegistry.java:144)
        at io.prometheus.client.exporter.common.TextFormat.write004(TextFormat.java:22)
        at io.prometheus.client.exporter.MetricsServlet.doGet(MetricsServlet.java:49)
        at org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider$MetricsServletImpl.doGet(PrometheusMetricsProvider.java:406)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:791)
        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:550)
        at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1435)
        at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:188)
        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:501)
        at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:186)
        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1350)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
        at org.eclipse.jetty.server.Server.handle(Server.java:516)
        at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:388)
        at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:633)
        at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:380)
        at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:279)
        at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
        at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
        at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
        at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)
        at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)
        at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)
        at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)
        at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:383)
        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:882)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1036)
        at java.base/java.lang.Thread.run(Thread.java:829) {code}
the response of the endpoint is also partial:
{code:java}
ssm-user@dev-iad-zk-0:/var/snap/amazon-ssm-agent/5165$ curl http://localhost:7000/metrics
# HELP learner_proposal_received_count learner_proposal_received_count
# TYPE learner_proposal_received_count counter
learner_proposal_received_count 0.0{code}

Few additional things:
 # the other 2 nodes don't experience the same issue (same config)
 # the node is otherwise fine (the service is working)
 # the overall cluster health is good 

Not a critical issue but it's creating us issues from a service visibility perspective. Thank you!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-4460,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Jan 02 08:03:45 UTC 2025,,,,,,,,,,"0|z128j4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Nov/24 01:54;zhouyifan279;I encountered the same issue.

The problem is caused by class {*}org.apache.zookeeper.server.quorum.QuorumPeer{*}, which is subclass of {*}java.lang.Thread{*}.

It overrides *java.lang.Thread#getId* with myid as the return value.

*sun.management.ThreadImpl.verifyThreadId* requires thread id > 0.

If we set myid=0, exception is thrown. 

 

To work around this issue, I removed the node whose myid was 0 and added it back after setting myid to 3.;;;","02/Jan/25 08:03;kezhuw;[~zhouyifan279] Thank you for letting us know! It should have been fixed by ZOOKEEPER-4460 which shipped in 3.7.2 and 3.8.1.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
package org.apache.zookeeper.data does not exist,ZOOKEEPER-4517,13438640,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,mores,mores,08/Apr/22 16:31,08/Apr/22 16:31,29/Jun/25 13:34,,3.8.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,java client,,,,,0,,,"3.7.0 works fine.

using maven package 3.8.0 - unable to find org.apache.zookeeper.data.Stat

latest docs has ref to Stat [https://javadoc.io/doc/org.apache.zookeeper/zookeeper/latest/org/apache/zookeeper/ZooKeeper.html]

But get 404 for [https://zookeeper.apache.org/zookeeper-jute/apidocs/org/apache/zookeeper/data/Stat.html?is-external=true] ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2022-04-08 16:31:15.0,,,,,,,,,,"0|z11aq0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ZOOCFG, ZOOCFGDIR, and ZOO_LOG_DIR are not overridable on Windows",ZOOKEEPER-4496,13434111,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,sakurai-youhei,sakurai-youhei,16/Mar/22 13:10,16/Mar/22 13:10,29/Jun/25 13:34,,3.8.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,scripts,,,,,0,,,"ZooKeeper scripts for Windows don't allow to override ZOOCFG, ZOOCFGDIR, and ZOO_LOG_DIR differently from the ones for Unix/Linux.

Here is my proposal: [https://github.com/sakurai-youhei/zookeeper/commit/2ae3499fcbef3122b040ec7aa309e9f65dbb4ce5] If this looks good to go, I will open a PR after adding Jira ID to the commit message.

Any comments will be greatly appreciated. Thanks.",Command prompt on Windows,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2022-03-16 13:10:52.0,,,,,,,,,,"0|z10jc8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Single Kerberos ticket renewal failure can prevent all future renewals since Java 9,ZOOKEEPER-4477,13430119,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,symat,vgrivel,vgrivel,23/Feb/22 07:25,26/Aug/24 14:46,29/Jun/25 13:34,01/Mar/22 15:41,3.5.9,3.6.3,3.7.0,,,,,,,,,,,,,,,,,,,,,,3.5.10,3.6.4,3.7.1,3.8.1,3.9.0,kerberos,,,,,0,pull-request-available,,"Zookeeper refresh thread for Kerberos have the same problem in the reLogin() [https://github.com/apache/zookeeper/blob/release-3.5.5/zookeeper-server/src/main/java/org/apache/zookeeper/Login.java#L413]  function as describe in https://issues.apache.org/jira/browse/KAFKA-12730
{quote}The refresh thread for Kerberos performs re-login by logging out and then logging in again. If login fails, we retry after a backoff. Every iteration of the loop performs loginContext.logout() and loginContext.login(). If login fails, we end up with two consecutive logouts. This used to work, but from Java 9 onwards, this results in a NullPointerException due to [https://bugs.openjdk.java.net/browse/JDK-8173069]. We should check if logout is required before attempting logout.
{quote}
 

A NPE is throw if multiple logout() is invoke multiple times: 
{code:java}
2022-02-14 18:38:11,899 ERROR org.apache.zookeeper.Login: Failed to refresh TGT: refresh thread exiting now.
javax.security.auth.login.LoginException: java.lang.NullPointerException: invalid null input(s)
    at java.base/java.util.Objects.requireNonNull(Objects.java:246)
    at java.base/javax.security.auth.Subject$SecureSet.remove(Subject.java:1172)
    at java.base/java.util.Collections$SynchronizedCollection.remove(Collections.java:2043)
    at jdk.security.auth/com.sun.security.auth.module.Krb5LoginModule.logout(Krb5LoginModule.java:1202)
    at java.base/javax.security.auth.login.LoginContext.invoke(LoginContext.java:732)
    at java.base/javax.security.auth.login.LoginContext$4.run(LoginContext.java:665)
    at java.base/javax.security.auth.login.LoginContext$4.run(LoginContext.java:663)
    at java.base/java.security.AccessController.doPrivileged(Native Method)
    at java.base/javax.security.auth.login.LoginContext.invokePriv(LoginContext.java:663)
    at java.base/javax.security.auth.login.LoginContext.logout(LoginContext.java:613)
    at org.apache.zookeeper.Login.reLogin(Login.java:413)
    at org.apache.zookeeper.Login.access$500(Login.java:49)
    at org.apache.zookeeper.Login$1.run(Login.java:240)
    at java.base/java.lang.Thread.run(Thread.java:834)
    at java.base/javax.security.auth.login.LoginContext.invoke(LoginContext.java:821)
    at java.base/javax.security.auth.login.LoginContext$4.run(LoginContext.java:665)
    at java.base/javax.security.auth.login.LoginContext$4.run(LoginContext.java:663)
    at java.base/java.security.AccessController.doPrivileged(Native Method)
    at java.base/javax.security.auth.login.LoginContext.invokePriv(LoginContext.java:663)
    at java.base/javax.security.auth.login.LoginContext.logout(LoginContext.java:613)
    at org.apache.zookeeper.Login.reLogin(Login.java:413)
    at org.apache.zookeeper.Login.access$500(Login.java:49)
    at org.apache.zookeeper.Login$1.run(Login.java:240)
    at java.base/java.lang.Thread.run(Thread.java:834) {code}",,"symat opened a new pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828


   This bug is similar to the one fixed in https://issues.apache.org/jira/browse/KAFKA-12730.
   
   Our Kerberos ticket refresh thread performs re-login by logging out and then logging in again. If
   login fails, we retry after some sleep. Every reLogin() operation performs loginContext.logout()
   and loginContext.login(). If login fails, we end up with two consecutive logouts. This used to
   work in older Java versions, but from Java 9 onwards, this results in a NullPointerException due
   to https://bugs.openjdk.java.net/browse/JDK-8173069. We should check if logout is required before
   attempting logout.
   
   I fixed the issue and added a new unit test to test some ticket renewal scenarios. I managed to
   reproduce the problem in KerberosTicketRenewalTest.shouldRecoverIfKerberosNotAvailableForSomeTime()
   which (before the fix) failed with Java13 but succeeded with Java8.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/22 17:17;githubbot;600","symat commented on pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#issuecomment-1051042297


   I plan to cherry-pick this to all active branches. (expecting that we will need some minor change on branch-3.5, due to the different JUnit version)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/22 17:19;githubbot;600","eolivelli commented on a change in pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#discussion_r814962149



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/KerberosTicketRenewalTest.java
##########
@@ -0,0 +1,271 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper;
+
+import static org.apache.zookeeper.server.quorum.auth.MiniKdc.MAX_TICKET_LIFETIME;
+import static org.apache.zookeeper.server.quorum.auth.MiniKdc.MIN_TICKET_LIFETIME;
+import static org.junit.jupiter.api.Assertions.assertEquals;
+import static org.junit.jupiter.api.Assertions.assertFalse;
+import static org.junit.jupiter.api.Assertions.assertNotNull;
+import static org.junit.jupiter.api.Assertions.assertTimeout;
+import static org.junit.jupiter.api.Assertions.assertTrue;
+import java.io.File;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.security.Principal;
+import java.time.Duration;
+import java.util.Properties;
+import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.TimeUnit;
+import java.util.concurrent.atomic.AtomicBoolean;
+import java.util.function.Supplier;
+import javax.security.auth.login.Configuration;
+import javax.security.auth.login.LoginException;
+import org.apache.commons.io.FileUtils;
+import org.apache.commons.io.FilenameUtils;
+import org.apache.zookeeper.common.ZKConfig;
+import org.apache.zookeeper.server.quorum.auth.KerberosTestUtils;
+import org.apache.zookeeper.server.quorum.auth.MiniKdc;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.jupiter.api.AfterAll;
+import org.junit.jupiter.api.AfterEach;
+import org.junit.jupiter.api.BeforeAll;
+import org.junit.jupiter.api.Test;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+/**
+ * This test class is mainly testing the TGT renewal logic implemented in the org.apache.zookeeper.Login class.
+ */
+public class KerberosTicketRenewalTest {
+
+
+  private static final Logger LOG = LoggerFactory.getLogger(KerberosTicketRenewalTest.class);
+  private static final String JAAS_CONFIG_SECTION = ""ClientUsingKerberos"";
+  public static final String TICKET_LIFETIME = ""2000"";
+  private static File testTempDir;
+  private static MiniKdc kdc;
+  private static File kdcWorkDir;
+  private static String PRINCIPAL = KerberosTestUtils.getClientPrincipal();
+
+  TestableKerberosLogin login;
+
+  @BeforeAll
+  public static void setupClass() throws Exception {
+    // by default, we should wait at least 1 minute between subsequent TGT renewals.
+    // changing it to 500ms.
+    System.setProperty(Login.MIN_TIME_BEFORE_RELOGIN_CONFIG_KEY, ""500"");
+
+    testTempDir = ClientBase.createTmpDir();
+    startMiniKdcAndAddPrincipal();
+
+    String keytabFilePath = FilenameUtils.normalize(KerberosTestUtils.getKeytabFile(), true);
+
+    // note: we use ""refreshKrb5Config=true"" to refresh the kerberos config in the JVM,
+    // making sure that we use the latest config even if other tests already have been executed
+    // and initialized the kerberos client configs before)
+    String jaasEntries = """"
+      + ""ClientUsingKerberos {\n""
+      + ""  com.sun.security.auth.module.Krb5LoginModule required\n""
+      + ""  storeKey=\""false\""\n""
+      + ""  useTicketCache=\""false\""\n""
+      + ""  useKeyTab=\""true\""\n""
+      + ""  doNotPrompt=\""true\""\n""
+      + ""  debug=\""true\""\n""
+      + ""  refreshKrb5Config=\""true\""\n""
+      + ""  keyTab=\"""" + keytabFilePath + ""\""\n""
+      + ""  principal=\"""" + PRINCIPAL + ""\"";\n""
+      + ""};\n"";
+    setupJaasConfig(jaasEntries);
+  }
+
+  @AfterAll
+  public static void tearDownClass() {

Review comment:
       We are missing to clear the Jaas system properties 




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/22 17:34;githubbot;600","symat commented on a change in pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#discussion_r814965484



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/KerberosTicketRenewalTest.java
##########
@@ -0,0 +1,271 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper;
+
+import static org.apache.zookeeper.server.quorum.auth.MiniKdc.MAX_TICKET_LIFETIME;
+import static org.apache.zookeeper.server.quorum.auth.MiniKdc.MIN_TICKET_LIFETIME;
+import static org.junit.jupiter.api.Assertions.assertEquals;
+import static org.junit.jupiter.api.Assertions.assertFalse;
+import static org.junit.jupiter.api.Assertions.assertNotNull;
+import static org.junit.jupiter.api.Assertions.assertTimeout;
+import static org.junit.jupiter.api.Assertions.assertTrue;
+import java.io.File;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.security.Principal;
+import java.time.Duration;
+import java.util.Properties;
+import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.TimeUnit;
+import java.util.concurrent.atomic.AtomicBoolean;
+import java.util.function.Supplier;
+import javax.security.auth.login.Configuration;
+import javax.security.auth.login.LoginException;
+import org.apache.commons.io.FileUtils;
+import org.apache.commons.io.FilenameUtils;
+import org.apache.zookeeper.common.ZKConfig;
+import org.apache.zookeeper.server.quorum.auth.KerberosTestUtils;
+import org.apache.zookeeper.server.quorum.auth.MiniKdc;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.jupiter.api.AfterAll;
+import org.junit.jupiter.api.AfterEach;
+import org.junit.jupiter.api.BeforeAll;
+import org.junit.jupiter.api.Test;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+/**
+ * This test class is mainly testing the TGT renewal logic implemented in the org.apache.zookeeper.Login class.
+ */
+public class KerberosTicketRenewalTest {
+
+
+  private static final Logger LOG = LoggerFactory.getLogger(KerberosTicketRenewalTest.class);
+  private static final String JAAS_CONFIG_SECTION = ""ClientUsingKerberos"";
+  public static final String TICKET_LIFETIME = ""2000"";
+  private static File testTempDir;
+  private static MiniKdc kdc;
+  private static File kdcWorkDir;
+  private static String PRINCIPAL = KerberosTestUtils.getClientPrincipal();
+
+  TestableKerberosLogin login;
+
+  @BeforeAll
+  public static void setupClass() throws Exception {
+    // by default, we should wait at least 1 minute between subsequent TGT renewals.
+    // changing it to 500ms.
+    System.setProperty(Login.MIN_TIME_BEFORE_RELOGIN_CONFIG_KEY, ""500"");
+
+    testTempDir = ClientBase.createTmpDir();
+    startMiniKdcAndAddPrincipal();
+
+    String keytabFilePath = FilenameUtils.normalize(KerberosTestUtils.getKeytabFile(), true);
+
+    // note: we use ""refreshKrb5Config=true"" to refresh the kerberos config in the JVM,
+    // making sure that we use the latest config even if other tests already have been executed
+    // and initialized the kerberos client configs before)
+    String jaasEntries = """"
+      + ""ClientUsingKerberos {\n""
+      + ""  com.sun.security.auth.module.Krb5LoginModule required\n""
+      + ""  storeKey=\""false\""\n""
+      + ""  useTicketCache=\""false\""\n""
+      + ""  useKeyTab=\""true\""\n""
+      + ""  doNotPrompt=\""true\""\n""
+      + ""  debug=\""true\""\n""
+      + ""  refreshKrb5Config=\""true\""\n""
+      + ""  keyTab=\"""" + keytabFilePath + ""\""\n""
+      + ""  principal=\"""" + PRINCIPAL + ""\"";\n""
+      + ""};\n"";
+    setupJaasConfig(jaasEntries);
+  }
+
+  @AfterAll
+  public static void tearDownClass() {

Review comment:
       yes, we clear the whole ""testTempDir"", which contains the jaas config file and also a subfolder for the current KDC cluster. I'll add a comment to clarify.
   (and the testTempDir is created with the standard ""ClientBase.createTmpDir();"" method)




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/22 17:38;githubbot;600","eolivelli commented on a change in pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#discussion_r814974800



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/KerberosTicketRenewalTest.java
##########
@@ -0,0 +1,273 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper;
+
+import static org.apache.zookeeper.server.quorum.auth.MiniKdc.MAX_TICKET_LIFETIME;
+import static org.apache.zookeeper.server.quorum.auth.MiniKdc.MIN_TICKET_LIFETIME;
+import static org.junit.jupiter.api.Assertions.assertEquals;
+import static org.junit.jupiter.api.Assertions.assertFalse;
+import static org.junit.jupiter.api.Assertions.assertNotNull;
+import static org.junit.jupiter.api.Assertions.assertTimeout;
+import static org.junit.jupiter.api.Assertions.assertTrue;
+import java.io.File;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.security.Principal;
+import java.time.Duration;
+import java.util.Properties;
+import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.TimeUnit;
+import java.util.concurrent.atomic.AtomicBoolean;
+import java.util.function.Supplier;
+import javax.security.auth.login.Configuration;
+import javax.security.auth.login.LoginException;
+import org.apache.commons.io.FileUtils;
+import org.apache.commons.io.FilenameUtils;
+import org.apache.zookeeper.common.ZKConfig;
+import org.apache.zookeeper.server.quorum.auth.KerberosTestUtils;
+import org.apache.zookeeper.server.quorum.auth.MiniKdc;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.jupiter.api.AfterAll;
+import org.junit.jupiter.api.AfterEach;
+import org.junit.jupiter.api.BeforeAll;
+import org.junit.jupiter.api.Test;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+/**
+ * This test class is mainly testing the TGT renewal logic implemented
+ * in the org.apache.zookeeper.Login class.
+ */
+public class KerberosTicketRenewalTest {
+
+
+  private static final Logger LOG = LoggerFactory.getLogger(KerberosTicketRenewalTest.class);
+  private static final String JAAS_CONFIG_SECTION = ""ClientUsingKerberos"";
+  private static final String TICKET_LIFETIME = ""2000"";
+  private static File testTempDir;
+  private static MiniKdc kdc;
+  private static File kdcWorkDir;
+  private static String PRINCIPAL = KerberosTestUtils.getClientPrincipal();
+
+  TestableKerberosLogin login;
+
+  @BeforeAll
+  public static void setupClass() throws Exception {
+    // by default, we should wait at least 1 minute between subsequent TGT renewals.
+    // changing it to 500ms.
+    System.setProperty(Login.MIN_TIME_BEFORE_RELOGIN_CONFIG_KEY, ""500"");
+
+    testTempDir = ClientBase.createTmpDir();
+    startMiniKdcAndAddPrincipal();
+
+    String keytabFilePath = FilenameUtils.normalize(KerberosTestUtils.getKeytabFile(), true);
+
+    // note: we use ""refreshKrb5Config=true"" to refresh the kerberos config in the JVM,
+    // making sure that we use the latest config even if other tests already have been executed
+    // and initialized the kerberos client configs before)
+    String jaasEntries = """"
+      + ""ClientUsingKerberos {\n""
+      + ""  com.sun.security.auth.module.Krb5LoginModule required\n""
+      + ""  storeKey=\""false\""\n""
+      + ""  useTicketCache=\""false\""\n""
+      + ""  useKeyTab=\""true\""\n""
+      + ""  doNotPrompt=\""true\""\n""
+      + ""  debug=\""true\""\n""
+      + ""  refreshKrb5Config=\""true\""\n""
+      + ""  keyTab=\"""" + keytabFilePath + ""\""\n""
+      + ""  principal=\"""" + PRINCIPAL + ""\"";\n""
+      + ""};\n"";
+    setupJaasConfig(jaasEntries);
+  }
+
+  @AfterAll
+  public static void tearDownClass() {
+    System.clearProperty(Login.MIN_TIME_BEFORE_RELOGIN_CONFIG_KEY);
+    stopMiniKdc();
+    if (testTempDir != null) {
+      // the testTempDir contains the jaas config file and also the
+      // working folder of the currently running KDC server
+      FileUtils.deleteQuietly(testTempDir);
+    }
+  }
+
+  @AfterEach
+  public void tearDownTest() throws Exception {
+    if (login != null) {
+      login.shutdown();
+      login.logout();
+    }
+  }
+
+
+  /**
+   * We extend the regular Login class to be able to properly control the
+   * ""sleeping"" between the retry attempts of ticket refresh actions.
+   */
+  private static class TestableKerberosLogin extends Login {
+
+    private AtomicBoolean refreshFailed = new AtomicBoolean(false);
+    private CountDownLatch continueRefreshThread = new CountDownLatch(1);
+
+    public TestableKerberosLogin() throws LoginException {
+      super(JAAS_CONFIG_SECTION, (callbacks) -> {}, new ZKConfig());
+    }
+
+    @Override
+    protected void sleepBeforeRetryFailedRefresh() throws InterruptedException {
+      refreshFailed.set(true);
+      continueRefreshThread.await(10, TimeUnit.SECONDS);
+    }
+
+    public void assertRefreshFailsEventually(Duration timeout) {
+      assertEventually(timeout, () -> refreshFailed.get());
+    }
+
+    public void continueWithRetryAfterFailedRefresh() {
+      continueRefreshThread.countDown();
+    }
+  }
+
+
+  @Test
+  public void shouldLoginUsingKerberos() throws Exception {
+    login = new TestableKerberosLogin();
+    login.startThreadIfNeeded();
+
+    assertPrincipalLoggedIn();
+  }
+
+
+  @Test
+  public void shouldRenewTicketUsingKerberos() throws Exception {
+    login = new TestableKerberosLogin();
+    login.startThreadIfNeeded();
+
+    long initialLoginTime = login.getLastLogin();
+
+    // ticket lifetime is 2sec, so we will trigger ticket renewal in each ~1.5 sec
+    assertTicketRefreshHappenedUntil(Duration.ofSeconds(5));
+
+    assertPrincipalLoggedIn();
+    assertTrue(initialLoginTime < login.getLastLogin());
+  }
+
+
+  @Test
+  public void shouldRecoverIfKerberosNotAvailableForSomeTime() throws Exception {
+    login = new TestableKerberosLogin();
+    login.startThreadIfNeeded();
+
+    assertTicketRefreshHappenedUntil(Duration.ofSeconds(5));
+
+    stopMiniKdc();
+
+    // ticket lifetime is 2sec, so we will trigger ticket renewal in each ~1.5 sec
+    // the very next ticket renewal should fail (as KDC is offline)
+    login.assertRefreshFailsEventually(Duration.ofSeconds(5));
+
+    // now the ticket thread is ""sleeping"", it will retry the refresh later
+
+    // we restart KDC, then terminate the ""sleeping"" and expecting
+    // that the next retry should succeed
+    startMiniKdcAndAddPrincipal();
+    login.continueWithRetryAfterFailedRefresh();
+    assertTicketRefreshHappenedUntil(Duration.ofSeconds(5));
+
+    assertPrincipalLoggedIn();
+  }
+
+
+  private void assertPrincipalLoggedIn() {
+    assertEquals(PRINCIPAL, login.getUserName());
+    assertNotNull(login.getSubject());
+    assertEquals(1, login.getSubject().getPrincipals().size());
+    Principal actualPrincipal = login.getSubject().getPrincipals().iterator().next();
+    assertEquals(PRINCIPAL, actualPrincipal.getName());
+  }
+
+  private void assertTicketRefreshHappenedUntil(Duration timeout) {
+    long lastLoginTime = login.getLastLogin();
+    assertEventually(timeout, () -> login.getLastLogin() != lastLoginTime);
+  }
+
+  private static void assertEventually(Duration timeout, Supplier<Boolean> test) {
+    assertTimeout(timeout, () -> {
+      while (true) {
+        if (test.get()) {
+          return;
+        }
+        Thread.sleep(100);
+      }
+    });
+  }
+
+  public static void startMiniKdcAndAddPrincipal() throws Exception {
+    kdcWorkDir = createTmpDirInside(testTempDir);
+
+    Properties conf = MiniKdc.createConf();
+    conf.setProperty(MAX_TICKET_LIFETIME, TICKET_LIFETIME);
+    conf.setProperty(MIN_TICKET_LIFETIME, TICKET_LIFETIME);
+
+    kdc = new MiniKdc(conf, kdcWorkDir);
+    kdc.start();
+
+    String principalName = PRINCIPAL.substring(0, PRINCIPAL.lastIndexOf(""@""));
+    kdc.createPrincipal(new File(KerberosTestUtils.getKeytabFile()), principalName);
+  }
+
+  private static void stopMiniKdc() {
+    if (kdc != null) {
+      kdc.stop();
+      kdc = null;
+    }
+    if (kdcWorkDir != null) {
+      FileUtils.deleteQuietly(kdcWorkDir);
+      kdcWorkDir = null;
+    }
+  }
+
+  private static File createTmpDirInside(File parentDir) throws IOException {
+    File tmpFile = File.createTempFile(""test"", "".junit"", parentDir);
+    // don't delete tmpFile - this ensures we don't attempt to create
+    // a tmpDir with a duplicate name
+    File tmpDir = new File(tmpFile + "".dir"");
+    // never true if tmpfile does it's job
+    assertFalse(tmpDir.exists());
+    assertTrue(tmpDir.mkdirs());
+    return tmpDir;
+  }
+
+  private static void setupJaasConfig(String jaasEntries) {
+    try {
+      File saslConfFile = new File(testTempDir, ""jaas.conf"");
+      FileWriter fwriter = new FileWriter(saslConfFile);
+      fwriter.write(jaasEntries);
+      fwriter.close();
+      System.setProperty(""java.security.auth.login.config"", saslConfFile.getAbsolutePath());

Review comment:
       Sorry I wasn't clear.
   It looks to me we are not clearing this system property 




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/22 17:51;githubbot;600","symat commented on a change in pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#discussion_r814979402



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/KerberosTicketRenewalTest.java
##########
@@ -0,0 +1,273 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper;
+
+import static org.apache.zookeeper.server.quorum.auth.MiniKdc.MAX_TICKET_LIFETIME;
+import static org.apache.zookeeper.server.quorum.auth.MiniKdc.MIN_TICKET_LIFETIME;
+import static org.junit.jupiter.api.Assertions.assertEquals;
+import static org.junit.jupiter.api.Assertions.assertFalse;
+import static org.junit.jupiter.api.Assertions.assertNotNull;
+import static org.junit.jupiter.api.Assertions.assertTimeout;
+import static org.junit.jupiter.api.Assertions.assertTrue;
+import java.io.File;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.security.Principal;
+import java.time.Duration;
+import java.util.Properties;
+import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.TimeUnit;
+import java.util.concurrent.atomic.AtomicBoolean;
+import java.util.function.Supplier;
+import javax.security.auth.login.Configuration;
+import javax.security.auth.login.LoginException;
+import org.apache.commons.io.FileUtils;
+import org.apache.commons.io.FilenameUtils;
+import org.apache.zookeeper.common.ZKConfig;
+import org.apache.zookeeper.server.quorum.auth.KerberosTestUtils;
+import org.apache.zookeeper.server.quorum.auth.MiniKdc;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.jupiter.api.AfterAll;
+import org.junit.jupiter.api.AfterEach;
+import org.junit.jupiter.api.BeforeAll;
+import org.junit.jupiter.api.Test;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+/**
+ * This test class is mainly testing the TGT renewal logic implemented
+ * in the org.apache.zookeeper.Login class.
+ */
+public class KerberosTicketRenewalTest {
+
+
+  private static final Logger LOG = LoggerFactory.getLogger(KerberosTicketRenewalTest.class);
+  private static final String JAAS_CONFIG_SECTION = ""ClientUsingKerberos"";
+  private static final String TICKET_LIFETIME = ""2000"";
+  private static File testTempDir;
+  private static MiniKdc kdc;
+  private static File kdcWorkDir;
+  private static String PRINCIPAL = KerberosTestUtils.getClientPrincipal();
+
+  TestableKerberosLogin login;
+
+  @BeforeAll
+  public static void setupClass() throws Exception {
+    // by default, we should wait at least 1 minute between subsequent TGT renewals.
+    // changing it to 500ms.
+    System.setProperty(Login.MIN_TIME_BEFORE_RELOGIN_CONFIG_KEY, ""500"");
+
+    testTempDir = ClientBase.createTmpDir();
+    startMiniKdcAndAddPrincipal();
+
+    String keytabFilePath = FilenameUtils.normalize(KerberosTestUtils.getKeytabFile(), true);
+
+    // note: we use ""refreshKrb5Config=true"" to refresh the kerberos config in the JVM,
+    // making sure that we use the latest config even if other tests already have been executed
+    // and initialized the kerberos client configs before)
+    String jaasEntries = """"
+      + ""ClientUsingKerberos {\n""
+      + ""  com.sun.security.auth.module.Krb5LoginModule required\n""
+      + ""  storeKey=\""false\""\n""
+      + ""  useTicketCache=\""false\""\n""
+      + ""  useKeyTab=\""true\""\n""
+      + ""  doNotPrompt=\""true\""\n""
+      + ""  debug=\""true\""\n""
+      + ""  refreshKrb5Config=\""true\""\n""
+      + ""  keyTab=\"""" + keytabFilePath + ""\""\n""
+      + ""  principal=\"""" + PRINCIPAL + ""\"";\n""
+      + ""};\n"";
+    setupJaasConfig(jaasEntries);
+  }
+
+  @AfterAll
+  public static void tearDownClass() {
+    System.clearProperty(Login.MIN_TIME_BEFORE_RELOGIN_CONFIG_KEY);
+    stopMiniKdc();
+    if (testTempDir != null) {
+      // the testTempDir contains the jaas config file and also the
+      // working folder of the currently running KDC server
+      FileUtils.deleteQuietly(testTempDir);
+    }
+  }
+
+  @AfterEach
+  public void tearDownTest() throws Exception {
+    if (login != null) {
+      login.shutdown();
+      login.logout();
+    }
+  }
+
+
+  /**
+   * We extend the regular Login class to be able to properly control the
+   * ""sleeping"" between the retry attempts of ticket refresh actions.
+   */
+  private static class TestableKerberosLogin extends Login {
+
+    private AtomicBoolean refreshFailed = new AtomicBoolean(false);
+    private CountDownLatch continueRefreshThread = new CountDownLatch(1);
+
+    public TestableKerberosLogin() throws LoginException {
+      super(JAAS_CONFIG_SECTION, (callbacks) -> {}, new ZKConfig());
+    }
+
+    @Override
+    protected void sleepBeforeRetryFailedRefresh() throws InterruptedException {
+      refreshFailed.set(true);
+      continueRefreshThread.await(10, TimeUnit.SECONDS);
+    }
+
+    public void assertRefreshFailsEventually(Duration timeout) {
+      assertEventually(timeout, () -> refreshFailed.get());
+    }
+
+    public void continueWithRetryAfterFailedRefresh() {
+      continueRefreshThread.countDown();
+    }
+  }
+
+
+  @Test
+  public void shouldLoginUsingKerberos() throws Exception {
+    login = new TestableKerberosLogin();
+    login.startThreadIfNeeded();
+
+    assertPrincipalLoggedIn();
+  }
+
+
+  @Test
+  public void shouldRenewTicketUsingKerberos() throws Exception {
+    login = new TestableKerberosLogin();
+    login.startThreadIfNeeded();
+
+    long initialLoginTime = login.getLastLogin();
+
+    // ticket lifetime is 2sec, so we will trigger ticket renewal in each ~1.5 sec
+    assertTicketRefreshHappenedUntil(Duration.ofSeconds(5));
+
+    assertPrincipalLoggedIn();
+    assertTrue(initialLoginTime < login.getLastLogin());
+  }
+
+
+  @Test
+  public void shouldRecoverIfKerberosNotAvailableForSomeTime() throws Exception {
+    login = new TestableKerberosLogin();
+    login.startThreadIfNeeded();
+
+    assertTicketRefreshHappenedUntil(Duration.ofSeconds(5));
+
+    stopMiniKdc();
+
+    // ticket lifetime is 2sec, so we will trigger ticket renewal in each ~1.5 sec
+    // the very next ticket renewal should fail (as KDC is offline)
+    login.assertRefreshFailsEventually(Duration.ofSeconds(5));
+
+    // now the ticket thread is ""sleeping"", it will retry the refresh later
+
+    // we restart KDC, then terminate the ""sleeping"" and expecting
+    // that the next retry should succeed
+    startMiniKdcAndAddPrincipal();
+    login.continueWithRetryAfterFailedRefresh();
+    assertTicketRefreshHappenedUntil(Duration.ofSeconds(5));
+
+    assertPrincipalLoggedIn();
+  }
+
+
+  private void assertPrincipalLoggedIn() {
+    assertEquals(PRINCIPAL, login.getUserName());
+    assertNotNull(login.getSubject());
+    assertEquals(1, login.getSubject().getPrincipals().size());
+    Principal actualPrincipal = login.getSubject().getPrincipals().iterator().next();
+    assertEquals(PRINCIPAL, actualPrincipal.getName());
+  }
+
+  private void assertTicketRefreshHappenedUntil(Duration timeout) {
+    long lastLoginTime = login.getLastLogin();
+    assertEventually(timeout, () -> login.getLastLogin() != lastLoginTime);
+  }
+
+  private static void assertEventually(Duration timeout, Supplier<Boolean> test) {
+    assertTimeout(timeout, () -> {
+      while (true) {
+        if (test.get()) {
+          return;
+        }
+        Thread.sleep(100);
+      }
+    });
+  }
+
+  public static void startMiniKdcAndAddPrincipal() throws Exception {
+    kdcWorkDir = createTmpDirInside(testTempDir);
+
+    Properties conf = MiniKdc.createConf();
+    conf.setProperty(MAX_TICKET_LIFETIME, TICKET_LIFETIME);
+    conf.setProperty(MIN_TICKET_LIFETIME, TICKET_LIFETIME);
+
+    kdc = new MiniKdc(conf, kdcWorkDir);
+    kdc.start();
+
+    String principalName = PRINCIPAL.substring(0, PRINCIPAL.lastIndexOf(""@""));
+    kdc.createPrincipal(new File(KerberosTestUtils.getKeytabFile()), principalName);
+  }
+
+  private static void stopMiniKdc() {
+    if (kdc != null) {
+      kdc.stop();
+      kdc = null;
+    }
+    if (kdcWorkDir != null) {
+      FileUtils.deleteQuietly(kdcWorkDir);
+      kdcWorkDir = null;
+    }
+  }
+
+  private static File createTmpDirInside(File parentDir) throws IOException {
+    File tmpFile = File.createTempFile(""test"", "".junit"", parentDir);
+    // don't delete tmpFile - this ensures we don't attempt to create
+    // a tmpDir with a duplicate name
+    File tmpDir = new File(tmpFile + "".dir"");
+    // never true if tmpfile does it's job
+    assertFalse(tmpDir.exists());
+    assertTrue(tmpDir.mkdirs());
+    return tmpDir;
+  }
+
+  private static void setupJaasConfig(String jaasEntries) {
+    try {
+      File saslConfFile = new File(testTempDir, ""jaas.conf"");
+      FileWriter fwriter = new FileWriter(saslConfFile);
+      fwriter.write(jaasEntries);
+      fwriter.close();
+      System.setProperty(""java.security.auth.login.config"", saslConfFile.getAbsolutePath());

Review comment:
       Oh, I see. Nice catch, thanks!
   (you were clear, I just didn't get it ;) )




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/22 17:58;githubbot;600","symat commented on pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#issuecomment-1052698713


   hmm... one of my KerberosTicketRenewalTest failed on java11. (I tested locally on java8 and java13) I'll have to dig into the problem.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/22 22:16;githubbot;600","symat commented on pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#issuecomment-1052722864


   interesting... it constantly passed for me with some older java 11 versions, but it is flaky on the java 11.0.14 we use in CI. The fix itself should be harmless, I think we have some timing issue. (in this particular test I stop and restart KDC to trigger failed ticket renewal, while using 2sec ticket lifetime - I think KDC can not start quick enough to make the second renewal pass) I'll try to make the test more robust. 


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/22 22:36;githubbot;600","symat commented on pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#issuecomment-1052744746


   I increased a timeout, now the 5 sec ticket lifetime should hopefully give plenty of time to restart the KDC. Also I made my renewal assertion more clever, I think this was the actual issue behind the failures (now I assert that the renewal not only started but actually succeeded). This way the test run for me now 115 times without any error. Previously it failed once about each 3-4 execution on my laptop. I hope this will be robust enough for the CI.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/22 22:54;githubbot;600","symat opened a new pull request #1830:
URL: https://github.com/apache/zookeeper/pull/1830


   This is the ZOOKEEPER-4477 patch for branch-3.5. Similar to the same fix on newer branches
   but using junit 4 in the tests (the junit upgrade happened in ZooKeeper 3.6).
   
   This bug is similar to the one fixed in https://issues.apache.org/jira/browse/KAFKA-12730.
   
   Our Kerberos ticket refresh thread performs re-login by logging out and then logging in again. If
   login fails, we retry after some sleep. Every reLogin() operation performs loginContext.logout()
   and loginContext.login(). If login fails, we end up with two consecutive logouts. This used to
   work in older Java versions, but from Java 9 onwards, this results in a NullPointerException due
   to https://bugs.openjdk.java.net/browse/JDK-8173069. We should check if logout is required before
   attempting logout.
   
   I fixed the issue and added a new unit test to test some ticket renewal scenarios. I managed to
   reproduce the problem in KerberosTicketRenewalTest.shouldRecoverIfKerberosNotAvailableForSomeTime()
   which (before the fix) failed with Java13 but succeeded with Java8.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Feb/22 10:50;githubbot;600","symat commented on pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#issuecomment-1054182166


   only unrelated C client test fail


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Feb/22 11:57;githubbot;600","eolivelli commented on pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#issuecomment-1054231577


   I have restarted the job


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Feb/22 12:59;githubbot;600","symat commented on pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#issuecomment-1054316417


   now c++ tests passing, but some Java tests failes (none of them SASL related):
   
   ```
   [ERROR] Failures: 
   [ERROR]   RequestThrottlerTest.testGlobalOutstandingRequestThrottlingWithRequestThrottlerDisabled:338 expected: <3> but was: <4>
   [ERROR]   RequestThrottlerTest.testLargeRequestThrottling:297 expected: <2> but was: <1>
   [ERROR]   Zab1_0Test.testNormalFollowerRunWithDiff:706->testFollowerConversation:445 expected: <4294967298> but was: <0>
   [INFO] 
   [ERROR] Tests run: 2979, Failures: 3, Errors: 0, Skipped: 4
   ```
   
   I don't know if we should wait for a CI run where both C++ and Java tests succeed.  Our CI is very flaky nowadays :(


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Feb/22 14:31;githubbot;600","symat commented on pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#issuecomment-1055290047


   yeee! (I restarted again a few hours before and now we just had a fully green run)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 10:44;githubbot;600","symat commented on pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#issuecomment-1055439439


   @eolivelli , can I merge this change? I don't think the flaky CI failures were related this case (after commit da8aebc which was actually fixing the flakiness in the new tests I added)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 13:24;githubbot;600","eolivelli commented on pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#issuecomment-1055440194


   CI passed.
   I am merging this patch.
   should we merge this to branch-3.7 as well ?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 13:24;githubbot;600","symat commented on pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#issuecomment-1055443605


   thanks! I think we should merge this to all active branches (this is not a new feature, but a bugfix which can potentially affect any ZooKeeper version running on Java9+). I already created a separate PR (https://github.com/apache/zookeeper/pull/1830) for branch-3.5 (same changes, but using junit4).


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 13:28;githubbot;600","eolivelli closed pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 13:30;githubbot;600","eolivelli commented on pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#issuecomment-1055446491


   committed to master, branch-3.8 and branch-3.7.
   
   branch-3.6 is still on junit4 and the patch does not apply


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 13:32;githubbot;600","symat commented on pull request #1830:
URL: https://github.com/apache/zookeeper/pull/1830#issuecomment-1055478734


   thanks!
   I'll merge this and also test the patch on branch-3.6. (looks I remembered wrong, junit4 was introduced in 3.7 and not in 3.6 as I remembered)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 14:06;githubbot;600","symat opened a new pull request #1833:
URL: https://github.com/apache/zookeeper/pull/1833


   This is the ZOOKEEPER-4477 patch for branch-3.5. Similar to the same fix on newer branches
   but using junit 4 in the tests (the junit upgrade happened in ZooKeeper 3.6).
   
   This bug is similar to the one fixed in https://issues.apache.org/jira/browse/KAFKA-12730.
   
   Our Kerberos ticket refresh thread performs re-login by logging out and then logging in again. If
   login fails, we retry after some sleep. Every reLogin() operation performs loginContext.logout()
   and loginContext.login(). If login fails, we end up with two consecutive logouts. This used to
   work in older Java versions, but from Java 9 onwards, this results in a NullPointerException due
   to https://bugs.openjdk.java.net/browse/JDK-8173069. We should check if logout is required before
   attempting logout.
   
   I fixed the issue and added a new unit test to test some ticket renewal scenarios. I managed to
   reproduce the problem in KerberosTicketRenewalTest.shouldRecoverIfKerberosNotAvailableForSomeTime()
   which (before the fix) failed with Java13 but succeeded with Java8.
   
   (cherry picked from commit 73ea6aaffc7a29a31df9007244f96d8d67fef953)
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 15:05;githubbot;600","symat commented on pull request #1833:
URL: https://github.com/apache/zookeeper/pull/1833#issuecomment-1055556674


   This is similar to https://github.com/apache/zookeeper/pull/1828 and https://github.com/apache/zookeeper/pull/1830 just on top of branch-3.6. I mainly submitted this as a separate PR to trigger a CI run.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 15:20;githubbot;600","eolivelli commented on pull request #1833:
URL: https://github.com/apache/zookeeper/pull/1833#issuecomment-1055575588


   merging


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 15:39;githubbot;600","eolivelli commented on pull request #1833:
URL: https://github.com/apache/zookeeper/pull/1833#issuecomment-1055576908


   committed


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 15:41;githubbot;600","eolivelli closed pull request #1833:
URL: https://github.com/apache/zookeeper/pull/1833


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 15:41;githubbot;600","symat commented on pull request #1833:
URL: https://github.com/apache/zookeeper/pull/1833#issuecomment-1055582132


   thank you!!


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 15:47;githubbot;600","kezhuw closed pull request #1830: ZOOKEEPER-4477: Single Kerberos ticket renewal failure can prevent all future renewals since Java 9
URL: https://github.com/apache/zookeeper/pull/1830


;26/Aug/24 14:45;githubbot;600","kezhuw commented on PR #1830:
URL: https://github.com/apache/zookeeper/pull/1830#issuecomment-2310395646

   Close as merged.


;26/Aug/24 14:46;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,16800,,,0,16800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Mar 02 09:32:51 UTC 2022,,,,,,,,,,"0|z0zutc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Feb/22 08:25;eolivelli;This is interesting I have been running zookeeper with kerberos as soon as java9 was released and I had never seen this problem.

 

Would you like to send a PR?;;;","25/Feb/22 07:21;symat;I have seen this exception already with ZK 3.5.5 on java 11.
The TGT renewal thread seems to retry the TGT renewal a few times (waiting 10 seconds between retries). I'm not exactly sure what will happen after the TGT renewal thread finally exit? (maybe the client will start a new Login? Or this had to be done by the application or e.g. curator?)

Anyway, the problem seems valid, and the patch applied by https://issues.apache.org/jira/browse/KAFKA-12730 seems reasonable and safe. I'll prepare a fix for this. I think the same problem appears even on master branch in ZooKeeper.;;;","25/Feb/22 07:27;symat;[~vgrivel] please let me know if you are already working on the patch, otherwise I'll create one soon.;;;","25/Feb/22 07:30;symat;bq. I had never seen this problem.

I heard someone reproduced this by decreasing TGT expiration time during tests. But I guess other kerberos problem (KDC overload, temporary network problems, etc) can trigger this also in normal production systems.;;;","25/Feb/22 09:21;vgrivel;[~symat] I'm not working on a patch so I will let you do it if it is good. 
We start seeing this issue by doing an extensive test of KDC failures and resiliency of Kafka. For that we simulate KDC failure while decreasing the TGT validity to few minutes. 

Linked to that issue, we also raised a JDK enhancement request: [https://bugs.java.com/bugdatabase/view_bug.do?bug_id=JDK-8282223] as currently only a SocketTimeoutException trigger the retry mechanism to connect to the KDC.;;;","25/Feb/22 17:21;symat;PR created against the master branch, any comments are welcomed :)
https://github.com/apache/zookeeper/pull/1828;;;","01/Mar/22 15:41;eolivelli;Issue resolved by pull request 1833
[https://github.com/apache/zookeeper/pull/1833];;;","02/Mar/22 09:32;vgrivel;Thanks for the work and the fix!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
branch-3.6 txnLogCountTest use wrong version of Junit Assert import,ZOOKEEPER-4446,13423510,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,,phang98,phang98,19/Jan/22 13:20,09/Oct/23 11:20,29/Jun/25 13:34,13/Dec/22 17:44,3.6.4,,,,,,,,,,,,,,,,,,,,,,,,3.6.4,,,,,server,,,,,0,pull-request-available,,"The issue is due to [https://github.com/apache/zookeeper/blob/branch-3.6/zookeeper-server/src/test/java/org/apache/zookeeper/server/TxnLogCountTest.java]
{code:java}
import static org.junit.jupiter.api.Assertions.assertEquals; {code}
Cause the compilation error, since Junit 4 still in used.
{code:java}
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.8.1:testCompile (default-testCompile) on project zookeeper: Compilation failure: Compilation failure: 

  

  
    
    [ERROR] /home/runner/work/zookeeper/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/TxnLogCountTest.java:[21,36] package org.junit.jupiter.api does not exist

  

  
    
    [ERROR] /home/runner/work/zookeeper/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/TxnLogCountTest.java:[21,1] static import only from classes and interfaces

  

  
    
    [ERROR] /home/runner/work/zookeeper/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/TxnLogCountTest.java:[49,9] cannot find symbol

  

  
    
    [ERROR]   symbol:   method assertEquals(int,int)

  

  
    
    [ERROR]   location: class org.apache.zookeeper.server.TxnLogCountTest

  

  
    
    [ERROR] /home/runner/work/zookeeper/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/TxnLogCountTest.java:[52,9] cannot find symbol

  

  
    
    [ERROR]   symbol:   method assertEquals(int,int)

  

  
    
    [ERROR]   location: class org.apache.zookeeper.server.TxnLogCountTest

  

  
    
    [ERROR] -> [Help 1] {code}
 

 ",,"phang98 opened a new pull request #1797:
URL: https://github.com/apache/zookeeper/pull/1797


   This PR mean to fix the invalid import static for junit Assert that only available in Junit 5.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Jan/22 13:26;githubbot;600","symat commented on pull request #1797:
URL: https://github.com/apache/zookeeper/pull/1797#issuecomment-1021278958


   sorry, I just merged ZooKeeper 3988 to branch 3.6, and fixed this issue together with the similar junit issue in that PR to make it work. I was not aware that this was already discovered and you already prepared a separate PR for txnLogCountTest.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/22 15:04;githubbot;600","symat commented on pull request #1797:
URL: https://github.com/apache/zookeeper/pull/1797#issuecomment-1021278958


   sorry, I just merged ZooKeeper 3988 to branch 3.6, and fixed this issue together with the similar junit issue in that PR to make it work. I was not aware that this was already discovered and you already prepared a separate PR for txnLogCountTest.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/22 16:45;githubbot;600","phang98 commented on pull request #1797:
URL: https://github.com/apache/zookeeper/pull/1797#issuecomment-1021778314


   no worry, anyone who trying to build branch-3.6 will notice anyway. I was just surprise this is broken for quite sometime when I try to build to validate this branch with latest jetty server. 


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jan/22 01:49;githubbot;600","phang98 edited a comment on pull request #1797:
URL: https://github.com/apache/zookeeper/pull/1797#issuecomment-1021778314


   no worry, anyone who trying to build branch-3.6 will notice anyway. I was just surprise this is broken for quite sometime when I try to build to validate this branch with latest jetty server. May be we can closed this PR now.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jan/22 01:50;githubbot;600","maoling closed pull request #1797:
URL: https://github.com/apache/zookeeper/pull/1797


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jan/22 08:32;githubbot;600","maoling commented on pull request #1797:
URL: https://github.com/apache/zookeeper/pull/1797#issuecomment-1021975222


   @phang98 Thanks for your contribution. Since this issue had been fixed by [this](https://github.com/apache/zookeeper/commit/357e88c1438780e28d36bf54784937e18547e136#diff-9d42ebb7cb61ecb8e3014f10e256fab1af0e93005a62a0ff97a8d5046dd5f2d1L21), let me close this PR


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jan/22 08:33;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4200,,,0,4200,,,,,,,,ZOOKEEPER-4445,,,,ZOOKEEPER-4362,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Java,Tue Dec 13 17:44:23 UTC 2022,,,,,,,,,,"0|z0yqag:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Dec/22 17:44;symat;resolved in this commit:

https://github.com/apache/zookeeper/commit/357e88c1438780e28d36bf54784937e18547e136#diff-9d42ebb7cb61ecb8e3014f10e256fab1af0e93005a62a0ff97a8d5046dd5f2d1L21;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
branch-3.6 txnLogCountTest use wrong version of Junit Assert import,ZOOKEEPER-4445,13423509,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Duplicate,,phang98,phang98,19/Jan/22 13:20,09/Oct/23 11:20,29/Jun/25 13:34,13/Dec/22 17:42,3.6.4,,,,,,,,,,,,,,,,,,,,,,,,3.6.4,,,,,server,,,,,0,,,"The issue is due to [https://github.com/apache/zookeeper/blob/branch-3.6/zookeeper-server/src/test/java/org/apache/zookeeper/server/TxnLogCountTest.java]
{code:java}
import static org.junit.jupiter.api.Assertions.assertEquals; {code}
Cause the compilation error, since Junit 4 still in used.
{code:java}
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.8.1:testCompile (default-testCompile) on project zookeeper: Compilation failure: Compilation failure: 

  

  
    
    [ERROR] /home/runner/work/zookeeper/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/TxnLogCountTest.java:[21,36] package org.junit.jupiter.api does not exist

  

  
    
    [ERROR] /home/runner/work/zookeeper/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/TxnLogCountTest.java:[21,1] static import only from classes and interfaces

  

  
    
    [ERROR] /home/runner/work/zookeeper/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/TxnLogCountTest.java:[49,9] cannot find symbol

  

  
    
    [ERROR]   symbol:   method assertEquals(int,int)

  

  
    
    [ERROR]   location: class org.apache.zookeeper.server.TxnLogCountTest

  

  
    
    [ERROR] /home/runner/work/zookeeper/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/TxnLogCountTest.java:[52,9] cannot find symbol

  

  
    
    [ERROR]   symbol:   method assertEquals(int,int)

  

  
    
    [ERROR]   location: class org.apache.zookeeper.server.TxnLogCountTest

  

  
    
    [ERROR] -> [Help 1] {code}
 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-4446,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2022-01-19 13:20:07.0,,,,,,,,,,"0|z0yqa8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade Netty to 4.1.68 for CVE fixes,ZOOKEEPER-4404,13408853,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,dominique,dominique,28/Oct/21 09:01,28/Mar/22 07:31,29/Jun/25 13:34,,3.7.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,security,,,,,0,,,"netty has reported a couple of CVEs regarding the usage of Bzip2Decoder and SnappyFrameDecoder. 

Reference :

[CVE-2021-37136 - https://github.com/netty/netty/security/advisories/GHSA-grg4-wf29-r9vv|https://github.com/netty/netty/security/advisories/GHSA-grg4-wf29-r9vv]

[CVE-2021-37137 - https://github.com/netty/netty/security/advisories/GHSA-9vjp-v76f-g363|https://github.com/netty/netty/security/advisories/GHSA-9vjp-v76f-g363]

 

Can we upgrade Netty to version 4.1.68.Final to fix this ?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Mar 28 07:31:11 UTC 2022,,,,,,,,,,"0|z0w8l4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Nov/21 14:58;dominique;Do you have any update on this ticket ?;;;","10/Feb/22 10:31;dominique;Hello, Any update please ?;;;","27/Mar/22 15:10;asutosh_pandya;[~dominique] - Can You please share zookeper version as master and branch-3.7 have upgraded netty version `4.1.73.Final`.;;;","28/Mar/22 07:31;dominique;[~asutosh_pandya] zookeeper version is 3.7.0. Ok if the CVE have been fixed in branch-3.7. I think this ticket can be closed. Do you have any target date for zookeeper 3.7.1 ? Thanks;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KeeperException.create has NullPointerException when low version client requests the high version server,ZOOKEEPER-4377,13401013,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,maoling,maoling,maoling,14/Sep/21 12:40,06/Nov/24 10:17,29/Jun/25 13:34,17/Oct/21 07:10,3.8.0,,,,,,,,,,,,,,,,,,,,,,,,3.5.10,3.7.1,3.8.0,,,server,,,,,0,pull-request-available,,"{code:java}
blishment complete on server localhost/127.0.0.1:2180, sessionid = 0x1000278adba0129, negotiated timeout = 30000blishment complete on server localhost/127.0.0.1:2180, sessionid = 0x1000278adba0129, negotiated timeout = 30000java.lang.NullPointerException at org.apache.zookeeper.KeeperException.create(KeeperException.java:94) at org.apache.zookeeper.KeeperException.create(KeeperException.java:54) at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:1538) at site.ycsb.db.zookeeper.ZKClient.insert(ZKClient.java:131) at site.ycsb.DBWrapper.insert(DBWrapper.java:227) at site.ycsb.workloads.CoreWorkload.doInsert(CoreWorkload.java:621) at site.ycsb.ClientThread.run(ClientThread.java:135) at java.lang.Thread.run(Thread.java:748)java.lang.NullPointerExceptionjava.lang.NullPointerException
 at org.apache.zookeeper.KeeperException.create(KeeperException.java:94) at org.apache.zookeeper.KeeperException.create(KeeperException.java:54) at org.apache.zookeeper.KeeperException.create(KeeperException.java:94) at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:1538)
{code}",,"maoling opened a new pull request #1764:
URL: https://github.com/apache/zookeeper/pull/1764


   - When low version client accessed the high version server which has some new added error code, the client will get a NPE:
   ```
    java.lang.NullPointerException 
   at org.apache.zookeeper.KeeperException.create(KeeperException.java:94) 
   at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
   at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:1538)
   ```
   - How to reproduce this issue？For example: 
   ```
   the client version we using is 3.6.0, and server version we using is 3.7.0 which has a new added error code QUOTAEXCEEDED(-125), 
   we set quota at server side and use the client to create znodes which exceeds the quota,
   the client will get a NPE
   ```
   - Apply this patch, we will get the following:
   ```
    java.lang.IllegalArgumentException: The current client version cannot lookup this code:-125
    at org.apache.zookeeper.KeeperException$Code.get(KeeperException.java:449)
    at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:1347)
   ```
   - we should backport this PR to all branches, making the client has upward compatibility
   - more details in the [ZOOKEEPER-4377](https://issues.apache.org/jira/browse/ZOOKEEPER-4377)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Sep/21 12:38;githubbot;600","asfgit closed pull request #1764:
URL: https://github.com/apache/zookeeper/pull/1764


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Oct/21 07:08;githubbot;600","maoling commented on pull request #1764:
URL: https://github.com/apache/zookeeper/pull/1764#issuecomment-945062703


   Commit to the following branches:
   [master ](https://github.com/apache/zookeeper/tree/master)
   [branch-3.7](https://github.com/apache/zookeeper/tree/branch-3.7)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Oct/21 07:10;githubbot;600","maoling opened a new pull request #1805:
URL: https://github.com/apache/zookeeper/pull/1805


   Backport [ZOOKEEPER-4377](https://github.com/apache/zookeeper/pull/1764) to Branch 3.5 to make the client has upward compatibility


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Jan/22 11:20;githubbot;600","maoling opened a new pull request #1806:
URL: https://github.com/apache/zookeeper/pull/1806


   Backport [ZOOKEEPER-4377](https://github.com/apache/zookeeper/pull/1764) to Branch 3.6 to make the client has upward compatibility
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Jan/22 11:23;githubbot;600","maoling commented on PR #1805:
URL: https://github.com/apache/zookeeper/pull/1805#issuecomment-1120585570

   Since `branch-3.5` will EOL, so let me close this PR


;09/May/22 03:00;githubbot;600","maoling closed pull request #1805: Backport ZOOKEEPER-4377 to Branch 3.5
URL: https://github.com/apache/zookeeper/pull/1805


;09/May/22 03:00;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4200,,,0,4200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2021-09-14 12:40:02.0,,,,,,,,,,"0|z0uw8w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Zookeeper should not warn about ""An exception was thrown while closing send thread""",ZOOKEEPER-4376,13400882,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,Petit,Petit,13/Sep/21 20:56,22/Jul/22 09:31,29/Jun/25 13:34,,3.6.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,java client,,,,,2,,,"In commit [https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca] the message printed when closing a connection to Zookeeper was changed from being logged as a debug message to a warning message.  The comment next to the message confirms that this is ""expected"" and therefore, it seems unjustified to use a warning level. 

Can we tune this down back to debug (or info) level? I would not mind submitting a pull request if there is consensus.

The full error we are seeing is the following:

 

{{An exception was thrown while closing send thread for session 0x1067b8748f00775.}}

 

with stack strace:

{{EndOfStreamException: Unable to read additional data from server sessionid 0x1067b8748f00775, likely server has closed socket at org.apache.zookeeper.ClientCnxnSocketNIO.doIO(ClientCnxnSocketNIO.java:77) at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:350) at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1280)}}

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-4515,,,,,,SOLR-15968,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Jul 22 09:31:31 UTC 2022,,,,,,,,,,"0|z0uvfs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Feb/22 21:53;janhoy;Will this make it to the upcoming 3.8.0 release?;;;","14/Jun/22 15:53;greyfairer;This is indeed very annoying. We found it out after upgrading from zookeeper client 3.5 to 3.6. Now we see this error once or twice whenever a client tool ends.

+1 to change it back to DEBUG. In the commit, there was no explanation why it was changed to WARN, and I don't see any valid reasons myself.

In [https://github.com/apache/zookeeper/pull/1889/files] , they changed a similar issue to INFO, but that was server-side, so less relevant.;;;","16/Jul/22 16:08;lvlte;This issue is also part of ZOOKEEPER-4515, which has been fixed in versions [3.6.4|https://issues.apache.org/jira/issues/?jql=project+%3D+ZOOKEEPER+AND+fixVersion+%3D+3.6.4], [3.7.1|https://issues.apache.org/jira/issues/?jql=project+%3D+ZOOKEEPER+AND+fixVersion+%3D+3.7.1], [3.8.1|https://issues.apache.org/jira/issues/?jql=project+%3D+ZOOKEEPER+AND+fixVersion+%3D+3.8.1], [3.9.0|https://issues.apache.org/jira/issues/?jql=project+%3D+ZOOKEEPER+AND+fixVersion+%3D+3.9.0].;;;","22/Jul/22 09:31;liguoxiong;Hava somebody started the work locally or somebody had an objection about this issue. I am a newbie in zookeeper and want to fix this issue at a start.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Latency metrics showing surprising results for a keberos-enabled cluster,ZOOKEEPER-4358,13397857,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Not A Problem,,mgaudin,mgaudin,27/Aug/21 15:43,08/Feb/23 09:20,29/Jun/25 13:34,08/Feb/23 09:20,3.6.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,metric system,,,,,0,,,"Hi,

I'm trying to understand why the values of min/avg/max latency are showing surprising results. The graph below shows the max latency value of a particular node for last 7 days. The value increases gradually over time and it only ever decreases when the node gets restarted as if the metric value gets reset.

[https://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/server/ServerStats.java#L226]

!image-2021-08-27-16-10-28-783.png|width=984,height=204!
 * 3 nodes
 * Keberos enabled
 * TGT ticket cashe enabled.

I believes the values of min/avg/max latency should show more realistic variations. It's very unlikely that the max latency value is expected to always increase while the node is running.

[https://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/server/ServerStats.java#L142]

 _public void updateLatency(Request request, long currentTime) {_
 _long latency = currentTime - request.createTime;_
 _if (latency < 0) {_
 _return;_
 _}_
 _*{color:#FF0000}requestLatency.addDataPoint(latency);{color}*_
 _if (request.getHdr() != null) {_
 _// Only quorum request should have header_
 _ServerMetrics.getMetrics().UPDATE_LATENCY.add(latency);_
 _} else {_
 _// All read request should goes here_
 _ServerMetrics.getMetrics().READ_LATENCY.add(latency);_
 _}_

The method called let me think that the max latency metric gets set if the current values happens to be lower. __ 

[https://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/server/metric/AvgMinMaxCounter.java#L51]

 _private void setMax(long value) {_
 *{color:#FF0000}_long current;_{color}*
 *{color:#FF0000}_while (value > (current = max.get()) && !max.compareAndSet(current, value)) {_{color}*
 _// no op_
 _}_
 _}_

I put below a graph of a particular from a totally different cluster for last 2 days. The node has not been restarted and all the data is from the same process. We can see a more realistic variations of the max latency metric as it would normally. 

!image-2021-08-27-16-37-50-112.png|width=1084,height=222!

Thanks for you time in advance,

Math",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Aug/21 15:10;mgaudin;image-2021-08-27-16-10-28-783.png;https://issues.apache.org/jira/secure/attachment/13032613/image-2021-08-27-16-10-28-783.png","27/Aug/21 15:37;mgaudin;image-2021-08-27-16-37-50-112.png;https://issues.apache.org/jira/secure/attachment/13032612/image-2021-08-27-16-37-50-112.png",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2021-08-27 15:43:26.0,,,,,,,,,,"0|z0ucrs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Digests are not matching,ZOOKEEPER-4357,13397827,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,sergrib,sergrib,27/Aug/21 12:57,27/Aug/21 14:51,29/Jun/25 13:34,,3.6.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,"Hi.
I have 3 nodes in ZK cluster. On one of the nodes, I notice the following:


{code:java}
2021-08-27 15:11:27,060 [myid:1] - WARN [CommitProcessor:1:RateLogger@56] - [69918 times] Message: Digests are not matching. Value is Zxid. Last value:94489403000{code}
 
Please tell me how to fix this without reconnecting the node in the cluster?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2021-08-27 12:57:33.0,,,,,,,,,,"0|z0ucl4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"IllegalArgumentException when use ZkUtil::listSubTreeBFS to list ""/""",ZOOKEEPER-4325,13385346,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,,justcoding,justcoding,23/Jun/21 07:48,18/Jul/21 07:19,29/Jun/25 13:34,18/Jul/21 07:19,3.6.2,,,,,,,,,,,,,,,,,,,,,,,,3.8.0,,,,,server,,,,,0,pull-request-available,,"[ZkUtil::listSubTreeBFS|https://github.com/apache/zookeeper/blob/branch-3.6/zookeeper-server/src/main/java/org/apache/zookeeper/ZKUtil.java]

Assume zk has these nodes: /a_test/a, /b_test/b.

When use this method to list ""/"", according to BFS logic, the BFS queue would be added node like: ""//a_test"", then getChildren by this path, the next exception occurs:
{code:java}
java.lang.IllegalArgumentException: Invalid path string ""//a_test"" caused by empty node name specified @1
{code}
 

 Solutions:
{code:java}
public static List<String> listSubTreeBFS(
        ZooKeeper zk,
        final String pathRoot) throws KeeperException, InterruptedException {
    Queue<String> queue = new ArrayDeque<>();
    List<String> tree = new ArrayList<>();
    queue.add(pathRoot);
    tree.add(pathRoot);
    while (!queue.isEmpty()) {
        String node = queue.poll();
        List<String> children = zk.getChildren(node, false);
        for (final String child : children) {
            // Fix ""//some_path"" bugs when list ""/""                
            final String childPath = (node.equals(""/"") ? """" : node) + ""/"" + child;
            queue.add(childPath);
            tree.add(childPath);
        }
    }
    return tree;
}
{code}",,"autumind opened a new pull request #1717:
URL: https://github.com/apache/zookeeper/pull/1717


   Fix bug [ZOOKEEPER-4325](https://issues.apache.org/jira/browse/ZOOKEEPER-4325)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jun/21 08:15;githubbot;600","maoling commented on pull request #1717:
URL: https://github.com/apache/zookeeper/pull/1717#issuecomment-867666286


   @autumind Great catch
   - please add unit tests to cover this change
   - push to `master `firstly, other than `branch-3.6`


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jun/21 14:07;githubbot;600","autumind closed pull request #1717:
URL: https://github.com/apache/zookeeper/pull/1717


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jun/21 00:25;githubbot;600","autumind opened a new pull request #1717:
URL: https://github.com/apache/zookeeper/pull/1717


   Fix bug [ZOOKEEPER-4325](https://issues.apache.org/jira/browse/ZOOKEEPER-4325)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jun/21 01:01;githubbot;600","autumind closed pull request #1717:
URL: https://github.com/apache/zookeeper/pull/1717


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jun/21 01:02;githubbot;600","autumind commented on pull request #1717:
URL: https://github.com/apache/zookeeper/pull/1717#issuecomment-868900481


   > @autumind Great catch
   > 
   > * please add unit tests to cover this change
   > * push to `master `firstly, other than `branch-3.6`
   
   Got it. I'll add unit tests and pr to master


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jun/21 01:04;githubbot;600","autumind opened a new pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jun/21 01:46;githubbot;600","maoling commented on a change in pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#discussion_r659692294



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ZKUtil.java
##########
@@ -290,4 +291,4 @@ public static String aclToString(List<ACL> acls) {
         }
         return sb.toString();
     }
-}
\ No newline at end of file
+}

Review comment:
       Here is a useless change?

##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/ZKUtilTest.java
##########
@@ -85,4 +90,13 @@ public void testUnreadableFileInput() throws Exception {
         assertEquals(expectedMessage, error);
     }
 
+    @Test
+    public void testListRootPathSuccess() throws IOException, InterruptedException, KeeperException {
+        TestableZooKeeper zk = createClient();
+        zk.setData(""/"", ""some"".getBytes(), -1);
+        zk.create(""/a"", ""some"".getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+        zk.create(""/a/b"", ""some"".getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+        List<String> list = ZKUtil.listSubTreeBFS(zk, ""/"");
+        assertIterableEquals(list, Arrays.asList(""/a"", ""/a/b""));
+    }

Review comment:
       the unit case is not sufficient. e.g.,:
   - we should assert the size/content of the list. 
   - we also need to test(`listSubTreeBFS`) the path: `/a,`  `/a/b`,  other than only` /`




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Jun/21 11:09;githubbot;600","autumind commented on a change in pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#discussion_r660210786



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ZKUtil.java
##########
@@ -290,4 +291,4 @@ public static String aclToString(List<ACL> acls) {
         }
         return sb.toString();
     }
-}
\ No newline at end of file
+}

Review comment:
       Seems it's my IDE's auto-format. I'will revert it.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jun/21 01:11;githubbot;600","autumind commented on a change in pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#discussion_r660210921



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/ZKUtilTest.java
##########
@@ -85,4 +90,13 @@ public void testUnreadableFileInput() throws Exception {
         assertEquals(expectedMessage, error);
     }
 
+    @Test
+    public void testListRootPathSuccess() throws IOException, InterruptedException, KeeperException {
+        TestableZooKeeper zk = createClient();
+        zk.setData(""/"", ""some"".getBytes(), -1);
+        zk.create(""/a"", ""some"".getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+        zk.create(""/a/b"", ""some"".getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+        List<String> list = ZKUtil.listSubTreeBFS(zk, ""/"");
+        assertIterableEquals(list, Arrays.asList(""/a"", ""/a/b""));
+    }

Review comment:
       OK, I'll fix it.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jun/21 01:12;githubbot;600","autumind commented on a change in pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#discussion_r660212428



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ZKUtil.java
##########
@@ -290,4 +291,4 @@ public static String aclToString(List<ACL> acls) {
         }
         return sb.toString();
     }
-}
\ No newline at end of file
+}

Review comment:
       Can't figure it out, I've compare this line and it's upper with master, no difference found.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jun/21 01:17;githubbot;600","autumind commented on a change in pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#discussion_r660212428



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ZKUtil.java
##########
@@ -290,4 +291,4 @@ public static String aclToString(List<ACL> acls) {
         }
         return sb.toString();
     }
-}
\ No newline at end of file
+}

Review comment:
       Can't figure it out, I've compared this line and it's upper with master, no difference found.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jun/21 01:18;githubbot;600","autumind commented on a change in pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#discussion_r660210786



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ZKUtil.java
##########
@@ -290,4 +291,4 @@ public static String aclToString(List<ACL> acls) {
         }
         return sb.toString();
     }
-}
\ No newline at end of file
+}

Review comment:
       Seems it's my IDE's auto-format. I'will revert it.

##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/ZKUtilTest.java
##########
@@ -85,4 +90,13 @@ public void testUnreadableFileInput() throws Exception {
         assertEquals(expectedMessage, error);
     }
 
+    @Test
+    public void testListRootPathSuccess() throws IOException, InterruptedException, KeeperException {
+        TestableZooKeeper zk = createClient();
+        zk.setData(""/"", ""some"".getBytes(), -1);
+        zk.create(""/a"", ""some"".getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+        zk.create(""/a/b"", ""some"".getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+        List<String> list = ZKUtil.listSubTreeBFS(zk, ""/"");
+        assertIterableEquals(list, Arrays.asList(""/a"", ""/a/b""));
+    }

Review comment:
       OK, I'll fix it.

##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ZKUtil.java
##########
@@ -290,4 +291,4 @@ public static String aclToString(List<ACL> acls) {
         }
         return sb.toString();
     }
-}
\ No newline at end of file
+}

Review comment:
       Can't figure it out, I've compare this line and it's upper with master, no difference found.

##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ZKUtil.java
##########
@@ -290,4 +291,4 @@ public static String aclToString(List<ACL> acls) {
         }
         return sb.toString();
     }
-}
\ No newline at end of file
+}

Review comment:
       Can't figure it out, I've compared this line and it's upper with master, no difference found.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jun/21 13:46;githubbot;600","maoling commented on pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#issuecomment-874456746


   @autumind 
   You really have an empty line at the end of the file: `ZKUtil.java`. After you revert it, I will merge it asap at this weekend(07-11).
   
   ```
   git  diff 70f70d821c2
   
   @@ -290,4 +291,4 @@ public static String aclToString(List<ACL> acls) {
            }
            return sb.toString();
        }
   -}
   \ No newline at end of file
   +}
   diff --git a/zookeeper-server/src/test/java/org/apache/zookeeper/ZKUtilTest.java b/zookeeper-server/src/test/java/org/apache/zookeeper/ZKUtilTest.java
   index 1111c2a23..3ad1ed94f 100644
   ```


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Jul/21 04:49;githubbot;600","maoling commented on pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#issuecomment-874456746


   @autumind 
   You really have an empty line at the end of the file: `ZKUtil.java`. After you revert it, I will merge it asap at this weekend(07-11).
   
   ```
   git  diff 70f70d821c2
   
   @@ -290,4 +291,4 @@ public static String aclToString(List<ACL> acls) {
            }
            return sb.toString();
        }
   -}
   \ No newline at end of file
   +}
   diff --git a/zookeeper-server/src/test/java/org/apache/zookeeper/ZKUtilTest.java b/zookeeper-server/src/test/java/org/apache/zookeeper/ZKUtilTest.java
   index 1111c2a23..3ad1ed94f 100644
   ```


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Jul/21 11:21;githubbot;600","autumind commented on pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#issuecomment-875409050


   > empty line at the end of the file
   
   
   > @autumind
   > You really have an empty line at the end of the file: `ZKUtil.java`. After you revert it, I will merge it asap at this weekend(07-11).
   > 
   > ```
   > git  diff 70f70d821c2
   > 
   > @@ -290,4 +291,4 @@ public static String aclToString(List<ACL> acls) {
   >          }
   >          return sb.toString();
   >      }
   > -}
   > \ No newline at end of file
   > +}
   > diff --git a/zookeeper-server/src/test/java/org/apache/zookeeper/ZKUtilTest.java b/zookeeper-server/src/test/java/org/apache/zookeeper/ZKUtilTest.java
   > index 1111c2a23..3ad1ed94f 100644
   > ```
   What a silly mistake, I've revert it.
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Jul/21 08:37;githubbot;600","autumind edited a comment on pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#issuecomment-875409050


   > empty line at the end of the file
   
   
   > @autumind
   > You really have an empty line at the end of the file: `ZKUtil.java`. After you revert it, I will merge it asap at this weekend(07-11).
   > 
   > ```
   > git  diff 70f70d821c2
   > 
   > @@ -290,4 +291,4 @@ public static String aclToString(List<ACL> acls) {
   >          }
   >          return sb.toString();
   >      }
   > -}
   > \ No newline at end of file
   > +}
   > diff --git a/zookeeper-server/src/test/java/org/apache/zookeeper/ZKUtilTest.java b/zookeeper-server/src/test/java/org/apache/zookeeper/ZKUtilTest.java
   > index 1111c2a23..3ad1ed94f 100644
   > ```
   What a silly mistake, I've reverted it.
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Jul/21 08:38;githubbot;600","autumind edited a comment on pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#issuecomment-875409050


   > @autumind
   > You really have an empty line at the end of the file: `ZKUtil.java`. After you revert it, I will merge it asap at this weekend(07-11).
   > 
   > ```
   > git  diff 70f70d821c2
   > 
   > @@ -290,4 +291,4 @@ public static String aclToString(List<ACL> acls) {
   >          }
   >          return sb.toString();
   >      }
   > -}
   > \ No newline at end of file
   > +}
   > diff --git a/zookeeper-server/src/test/java/org/apache/zookeeper/ZKUtilTest.java b/zookeeper-server/src/test/java/org/apache/zookeeper/ZKUtilTest.java
   > index 1111c2a23..3ad1ed94f 100644
   > ```
   What a silly mistake, I've reverted it.
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Jul/21 08:39;githubbot;600","maoling commented on pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#issuecomment-877777467


   @autumind  You had reverted the empty line at the end of the file: `ZKUtil.java` ???


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Jul/21 10:40;githubbot;600","autumind commented on pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#issuecomment-877900266


   > @autumind You had reverted the empty line at the end of the file: `ZKUtil.java` ???
   
   Actually, I removed the empty line, but I have no idea why this commit [
   Remove empty line at the end of the file](https://github.com/apache/zookeeper/pull/1719/commits/60e4ba79df83baec82a8158958a0168fa8cc0206) has no diffs in github view.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Jul/21 01:12;githubbot;600","autumind edited a comment on pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#issuecomment-877900266


   > @autumind You had reverted the empty line at the end of the file: `ZKUtil.java` ???
   
   Actually, I removed the empty line, but I have no idea why this commit [
   Remove empty line at the end of the file](https://github.com/apache/zookeeper/pull/1719/commits/60e4ba79df83baec82a8158958a0168fa8cc0206) has no diffs in github view.  Besides, `ZKUtil.java` comes one more line cause I add a line of comment in my patch.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Jul/21 01:15;githubbot;600","autumind edited a comment on pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#issuecomment-877900266


   > @autumind You had reverted the empty line at the end of the file: `ZKUtil.java` ???
   
   Actually, I removed the empty line, but I have no idea why this commit [
   Remove empty line at the end of the file](https://github.com/apache/zookeeper/pull/1719/commits/60e4ba79df83baec82a8158958a0168fa8cc0206) has no diffs in github view.  Besides, `ZKUtil.java` comes one more line cause I added a line of comment in my patch.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Jul/21 01:16;githubbot;600","maoling commented on pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#issuecomment-877968660


   @autumind 
   - What IDE do you use? It must be not the problem of Github.
   - `vim` doesn't work, please use other tool like `sublime`, `IDEA`, or `VS code`
   - Important things are to be repeated for 3 times:
        use `git diff `(git  diff 70f70d821c2) to observe the changes before you submit.
        use `git diff `(git  diff 70f70d821c2) to observe the changes before you submit.
        use `git diff `(git  diff 70f70d821c2) to observe the changes before you submit.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Jul/21 04:51;githubbot;600","autumind closed pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Jul/21 06:22;githubbot;600","autumind opened a new pull request #1729:
URL: https://github.com/apache/zookeeper/pull/1729


   Fix bug [ZOOKEEPER-4325](https://issues.apache.org/jira/browse/ZOOKEEPER-4325), reopen pr from [#1719](https://github.com/apache/zookeeper/pull/1719)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Jul/21 12:45;githubbot;600","asfgit closed pull request #1729:
URL: https://github.com/apache/zookeeper/pull/1729


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Jul/21 07:18;githubbot;600","maoling commented on pull request #1729:
URL: https://github.com/apache/zookeeper/pull/1729#issuecomment-882012227


   @autumind   Thanks for your contribution.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Jul/21 07:18;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,16200,,,0,16200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2021-06-23 07:48:40.0,,,,,,,,,,"0|z0s7ns:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException when ClientCnxnSocketNetty is closed without being opened,ZOOKEEPER-4296,13378904,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,eolivelli,colvinco,,17/May/21 23:11,08/Aug/23 11:52,29/Jun/25 13:34,27/Feb/23 14:41,3.5.3,3.5.9,3.6.2,3.6.3,,,,,,,,,,,,,,,,,,,,,3.9.0,,,,,,,,,,2,pull-request-available,,"I believe this bug was originally reported as ZOOKEEPER-2966 but that was closed as not reproducible in February 2019. I left a comment with these details on that issue in December. I can create a PR with a fix at some point this week.

 

In ZooKeeper 3.6.2, in the context of the SolrJ client, we hit the NPE reported on ZOOKEEPER-2966 when a DNS error causes an exception after the SolrZkClient trys to connect to ZooKeeper, but then immediately calls close on the {{ClientCnxn}} [https://github.com/apache/solr/blob/releases/lucene-solr%2F8.7.0/solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient.java#L158-L204].
{noformat}
java.lang.NullPointerException: null
        at org.apache.zookeeper.ClientCnxnSocketNetty.onClosing(ClientCnxnSocketNetty.java:247) ~[zookeeper-3.6.2.jar:3.6.2]
        at org.apache.zookeeper.ClientCnxn$SendThread.close(ClientCnxn.java:1445) ~[zookeeper-3.6.2.jar:3.6.2]
        at org.apache.zookeeper.ClientCnxn.disconnect(ClientCnxn.java:1488) ~[zookeeper-3.6.2.jar:3.6.2]
        at org.apache.zookeeper.ClientCnxn.close(ClientCnxn.java:1517) ~[zookeeper-3.6.2.jar:3.6.2]
        at org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:1614) ~[zookeeper-3.6.2.jar:3.6.2]
        at org.apache.solr.common.cloud.SolrZooKeeper.close(SolrZooKeeper.java:97) ~[solr-solrj-8.7.0.jar:8.7.0 2dc63e901c60cda27ef3b744bc554f1481b3b067 - atrisharma - 2020-10-29 19:39:18]
        at org.apache.solr.common.cloud.SolrZkClient.<init>(SolrZkClient.java:198) ~[solr-solrj-8.7.0.jar:8.7.0 2dc63e901c60cda27ef3b744bc554f1481b3b067 - atrisharma - 2020-10-29 19:39:18]
        at org.apache.solr.common.cloud.SolrZkClient.<init>(SolrZkClient.java:127) ~[solr-solrj-8.7.0.jar:8.7.0 2dc63e901c60cda27ef3b744bc554f1481b3b067 - atrisharma - 2020-10-29 19:39:18]
        at org.apache.solr.common.cloud.SolrZkClient.<init>(SolrZkClient.java:122) ~[solr-solrj-8.7.0.jar:8.7.0 2dc63e901c60cda27ef3b744bc554f1481b3b067 - atrisharma - 2020-10-29 19:39:18]
        at org.apache.solr.common.cloud.SolrZkClient.<init>(SolrZkClient.java:109) ~[solr-solrj-8.7.0.jar:8.7.0 2dc63e901c60cda27ef3b744bc554f1481b3b067 - atrisharma - 2020-10-29 19:39:18]
{noformat}
This happens if the {{ClientCnxnSocketNetty}}'s {{onClosing()}} is called before {{connect(...)}} (or if connect isn't called at all) because the {{firstConnect}} {{CountDownLatch}} is only initialized in {{connect(...)}}.
 [https://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNetty.java#L129]
 [https://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNetty.java#L247]
 A null check in {{onClosing()}} will fix it, but I don't know if there's any greater change required, e.g. some synchronization around connect and onClosing.

The code in [3.5.3|https://github.com/apache/zookeeper/blame/1507f67a06175155003722297daeb60bc912af1d/zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNetty.java#L206] looks very similar, it looks like it's been present since the initial commit of {{ClientCnxnSocketNetty}}.",,"colvinco opened a new pull request #1697:
URL: https://github.com/apache/zookeeper/pull/1697


   See [ZOOKEEPER-4296](https://issues.apache.org/jira/browse/ZOOKEEPER-4296) for more context.
   What I've done here fixes (the symptoms of?) a problem that I have hit in the real world when using Solr's SolrZkClient. But I don't have enough knowledge of ZooKeeper's code to say whether there's a bigger issue in terms of how `ClientCnxnSocketNetty` is being used. What I do know is that `ClientCnxnSocketNIO` handled the same scenario without any apparent issue.
   
   In any case getting NullPointerExceptions when closing something isn't helpful.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/May/21 00:08;githubbot;600","maoling commented on pull request #1697:
URL: https://github.com/apache/zookeeper/pull/1697#issuecomment-858660585


   @colvinco Thanks for your contribution.
   - As you said: `NPE` may be a symptom. Doing a null check is treating symptoms and not the root cause?
   - I don't take a close look at this issue. But I think we should spent time on thinking:
      what's the abnormal timing sequence between `onClosing()` and `connect()`, and how to reproduce this issue


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Jun/21 14:16;githubbot;600","kezhuw commented on PR #1697:
URL: https://github.com/apache/zookeeper/pull/1697#issuecomment-1120139356

   @maoling I guess [ZOOKEEPER-4525](https://issues.apache.org/jira/browse/ZOOKEEPER-4525)(#1864) answered your question. 
   
   @maoling @eolivelli All following three issues could have same cause: ""close before connect"".
   * [ZOOKEEPER-2966](https://issues.apache.org/jira/browse/ZOOKEEPER-2966): Flaky NullPointerException while closing client connection
   * [ZOOKEEPER-4296](https://issues.apache.org/jira/browse/ZOOKEEPER-4296): NullPointerException when ClientCnxnSocketNetty is closed without being opened
   * [ZOOKEEPER-4525](https://issues.apache.org/jira/browse/ZOOKEEPER-4525): Thread leaks occur when resolve address failed.
   
   #1864 gives reproducible tests from user facing interface `ZooKeeper`.


;07/May/22 05:37;githubbot;600","eolivelli commented on PR #1697:
URL: https://github.com/apache/zookeeper/pull/1697#issuecomment-1120215084

   closing and reopening to trigger CI (I can't see the button on the UI)


;07/May/22 14:00;githubbot;600","eolivelli closed pull request #1697: ZOOKEEPER-4296: Add null checks to ClientCnxnSocketNetty onClosing
URL: https://github.com/apache/zookeeper/pull/1697


;07/May/22 14:00;githubbot;600","colvinco opened a new pull request, #1697:
URL: https://github.com/apache/zookeeper/pull/1697

   See [ZOOKEEPER-4296](https://issues.apache.org/jira/browse/ZOOKEEPER-4296) for more context.
   What I've done here fixes (the symptoms of?) a problem that I have hit in the real world when using Solr's SolrZkClient. But I don't have enough knowledge of ZooKeeper's code to say whether there's a bigger issue in terms of how `ClientCnxnSocketNetty` is being used. What I do know is that `ClientCnxnSocketNIO` handled the same scenario without any apparent issue.
   
   In any case getting NullPointerExceptions when closing something isn't helpful.


;07/May/22 14:00;githubbot;600","kezhuw commented on PR #1697:
URL: https://github.com/apache/zookeeper/pull/1697#issuecomment-1446421934

   Shall we merge this ? It already gains two approvals from committers. @arshadmohammad  @eolivelli @maoling


;27/Feb/23 14:28;githubbot;600","eolivelli merged PR #1697:
URL: https://github.com/apache/zookeeper/pull/1697


;27/Feb/23 14:41;githubbot;600","eolivelli commented on PR #1697:
URL: https://github.com/apache/zookeeper/pull/1697#issuecomment-1446452834

   @kezhuw committed. thanks for the reminder


;27/Feb/23 14:41;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,5400,,,0,5400,,,,,,,,ZOOKEEPER-4525,,ZOOKEEPER-2966,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Feb 27 14:41:55 UTC 2023,,,,,,,,,,"0|z0r3zs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Feb/23 14:41;eolivelli;committed to master branch;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Slowness in sasl login or subject.doAs() causes zk client to falsely assume that the server did not respond, closes connection and goes to unnecessary retries",ZOOKEEPER-4275,13369780,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,rvaleti,rvaleti,rvaleti,06/Apr/21 11:54,09/Oct/23 11:20,29/Jun/25 13:34,19/Apr/21 06:55,3.5.9,,,,,,,,,,,,,,,,,,,,,,,,3.5.10,3.6.4,3.7.1,3.8.0,,java client,,,,,0,pull-request-available,,"Zookeeper client does sasl auth (login and subject.doAs())as a preset before attempting a connection to server.
 If there is a delay in sasl auth (possibly due to slow Kerberos communication), ZK client falsely assumes that the zk server did not respond and runs in to unnecessary multiple retries.

Client configuration:
 ""zookeeper.session.timeout"" = ""3000""
 ""zookeeper.recovery.retry"" = ""1""
 ""zookeeper.recovery.retry.intervalmill"" = ""500""

This configuration translates to  

connect timeout as 1000ms
 Read Timeout as 2000ms

Example: There was a 3 second delay in logging in the user as seen from the logs below. The connection attempt was made later. However, zk client did not wait for server response but logged a timeout (3 seconds > 1 sec connect timeout), closed the connection and went to retries. Since there was a consistent delay at Kerberos master, we had seen this retries go as long as 10 mins causing requests to timeout/fail.

Logs:

3/23/21 4:15:*32.389* AM jute.maxbuffer value is xxxxx Bytes

3/23/21 4:15:*35.395* AM Client successfully logged in.

3/23/21 4:15:35.396 AM TGT refresh sleeping until: Wed Mar 24 00:34:31 GMT 2021

3/23/21 4:15:35.396 AM TGT refresh thread started.

3/23/21 4:15:35.396 AM Client will use GSSAPI as SASL mechanism.

3/23/21 4:15:35.396 AM TGT expires:                  xxx Mar xx 04:15:35 GMT 2021

3/23/21 4:15:35.396 AM TGT valid starting at:        xxx Mar xx 04:15:35 GMT 2021

3/23/21 4:15:*35.397* AM *Opening socket connection* to server xxxxx:2181. Will attempt to SASL-authenticate using Login Context section 'Client'

3/23/21 4:15:*35.397* AM *Client session timed out, have not heard from server in* *3008ms* for sessionid 0x0

3/23/21 4:15:35.397 AM Client session timed out, have not heard from server in 3008ms for sessionid 0x0, closing socket connection and attempting reconnect

3/23/21 4:15:35.498 AM TGT renewal thread has been interrupted and will exit.

3/23/21 4:15:38.503 AM Client successfully logged in.

3/23/21 4:15:38.503 AM TGT expires:                  xxx Mar xx 04:15:38 GMT 2021

3/23/21 4:15:38.503 AM Client will use GSSAPI as SASL mechanism.

3/23/21 4:15:38.503 AM TGT valid starting at:        xxx Mar xx 04:15:38 GMT 2021

3/23/21 4:15:38.503 AM TGT refresh thread started.

3/23/21 4:15:38.503 AM TGT refresh sleeping until: Wed Mar 24 00:10:10 GMT 2021

3/23/21 4:15:38.506 AM Opening socket connection to server xxxxx:2181. Will attempt to SASL-authenticate using Login Context section 'Client'

3/23/21 4:15:38.506 AM Client session timed out, have not heard from server in 3009ms for sessionid 0x0, closing socket connection and attempting reconnect

3/23/21 4:15:38.506 AM Client session timed out, have not heard from server in 3009ms for sessionid 0x0

3/23/21 4:15:38.606 AM TGT renewal thread has been interrupted and will exit.

3/23/21 4:15:41.610 AM Client successfully logged in.

3/23/21 4:15:41.611 AM TGT refresh sleeping until: xxx Mar xx 23:42:03 GMT 2021

3/23/21 4:15:41.611 AM Client will use GSSAPI as SASL mechanism.

3/23/21 4:15:41.611 AM TGT valid starting at:        xxx Mar xx 04:15:41 GMT 2021

3/23/21 4:15:41.611 AM TGT expires:                  xxx Mar xx 04:15:41 GMT 2021

3/23/21 4:15:41.611 AM TGT refresh thread started.

3/23/21 4:15:41.612 AM Opening socket connection to server xxxxx:2181. Will attempt to SASL-authenticate using Login Context section 'Client'

3/23/21 4:15:41.613 AM Client session timed out, have not heard from server in 3006ms for sessionid 0x0

3/23/21 4:15:41.613 AM Client session timed out, have not heard from server in 3006ms for sessionid 0x0, closing socket connection and attempting reconnect",,"rvaleti opened a new pull request #1684:
URL: https://github.com/apache/zookeeper/pull/1684


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Apr/21 04:57;githubbot;600","rvaleti commented on pull request #1684:
URL: https://github.com/apache/zookeeper/pull/1684#issuecomment-819291410


   The test is passing on my machine. Not sure if it's a flapper?
   
   $ mvn clean test -Dtest=ReconfigTest -pl zookeeper-server
   [INFO] Scanning for projects...
   [INFO] 
   [INFO] -------------------< org.apache.zookeeper:zookeeper >-------------------
   [INFO] Building Apache ZooKeeper - Server 3.5.10-SNAPSHOT
   [INFO] --------------------------------[ jar ]---------------------------------
   [INFO] 
   [INFO] --- maven-clean-plugin:3.0.0:clean (default-clean) @ zookeeper ---
   [INFO] Deleting ~/zookeeper_github_forked/zookeeper-server/target
   [INFO] 
   [INFO] --- git-commit-id-plugin:4.0.4:revision (find-current-git-revision) @ zookeeper ---
   [INFO] 
   [INFO] --- maven-antrun-plugin:1.8:run (default) @ zookeeper ---
   [INFO] Executing tasks
   
   main:
   [INFO] Executed tasks
   [INFO] 
   [INFO] --- build-helper-maven-plugin:3.0.0:timestamp-property (tbuild-time) @ zookeeper ---
   [INFO] 
   [INFO] --- properties-maven-plugin:1.0.0:read-project-properties (default) @ zookeeper ---
   [INFO] 
   [INFO] --- maven-compiler-plugin:3.8.1:compile (pre-compile-vergen) @ zookeeper ---
   [INFO] Changes detected - recompiling the module!
   [INFO] Compiling 2 source files to ~/zookeeper_github_forked/zookeeper-server/target/classes
   [INFO] 
   [INFO] --- exec-maven-plugin:1.6.0:exec (generate-version-info) @ zookeeper ---
   [INFO] 
   [INFO] --- maven-remote-resources-plugin:1.5:process (process-resource-bundles) @ zookeeper ---
   [INFO] 
   [INFO] --- maven-resources-plugin:2.7:resources (default-resources) @ zookeeper ---
   [INFO] Using 'UTF-8' encoding to copy filtered resources.
   [INFO] skip non existing resourceDirectory ~/zookeeper_github_forked/zookeeper-serversrc/main/java/resources
   [INFO] Copying 3 resources
   [INFO] 
   [INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ zookeeper ---
   [INFO] Changes detected - recompiling the module!
   [INFO] Compiling 279 source files to ~/zookeeper_github_forked/zookeeper-server/target/classes
   [INFO] 
   [INFO] --- maven-resources-plugin:2.7:testResources (default-testResources) @ zookeeper ---
   [INFO] Using 'UTF-8' encoding to copy filtered resources.
   [INFO] Copying 34 resources
   [INFO] Copying 3 resources
   [INFO] 
   [INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ zookeeper ---
   [INFO] Changes detected - recompiling the module!
   [INFO] Compiling 269 source files to ~/zookeeper_github_forked/zookeeper-server/target/test-classes
   [INFO] 
   [INFO] --- maven-surefire-plugin:2.22.1:test (default-test) @ zookeeper ---
   [INFO] 
   [INFO] -------------------------------------------------------
   [INFO]  T E S T S
   [INFO] -------------------------------------------------------
   [INFO] Running org.apache.zookeeper.test.ReconfigTest
   [INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 285.152 s - in org.apache.zookeeper.test.ReconfigTest
   [INFO] 
   [INFO] Results:
   [INFO] 
   [INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0
   [INFO] 
   [INFO] ------------------------------------------------------------------------
   [INFO] BUILD SUCCESS
   [INFO] ------------------------------------------------------------------------
   [INFO] Total time: 05:05 min
   [INFO] Finished at: 2021-04-14T11:50:57+05:30
   [INFO] ------------------------------------------------------------------------


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Apr/21 07:20;githubbot;600","symat commented on pull request #1684:
URL: https://github.com/apache/zookeeper/pull/1684#issuecomment-819299285


   yeah, seems flaky... I retriggered the test and now everything seems green


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Apr/21 07:34;githubbot;600","rvaleti opened a new pull request #1685:
URL: https://github.com/apache/zookeeper/pull/1685


   Raising the PR for master - approved for 3.5 branch already.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Apr/21 08:34;githubbot;600","rvaleti commented on pull request #1684:
URL: https://github.com/apache/zookeeper/pull/1684#issuecomment-819345168


   Hi @symat 
   
   I raised a PR for master branch as suggested.
   
   I did spend a lot of time on trying to add a test for this. Inducing a sleep in to ClientCnxn#SendThread#startConnect() or ZookeeperSaslClient was not feasible. We have to do a lot of refactoring in order to get there.
   
   - expose ZookeeperSaslClient so that it can be mocked/extended
   - or make sendThread non-final so it can be overridden from test and then induce a pause.
   
   Please let me know if there's an easy way out.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Apr/21 08:42;githubbot;600","rvaleti commented on pull request #1685:
URL: https://github.com/apache/zookeeper/pull/1685#issuecomment-819351190


   Hi, @symat - Raised this PR for master branch as suggested here - https://github.com/apache/zookeeper/pull/1684#pullrequestreview-635310075


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Apr/21 08:52;githubbot;600","nkalmar commented on pull request #1684:
URL: https://github.com/apache/zookeeper/pull/1684#issuecomment-819357334


   This should be a clean cherry-pick to 3.5 from master, so I think this PR can be closed. But since all green it can as well stay and merged from here.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Apr/21 09:00;githubbot;600","symat commented on pull request #1685:
URL: https://github.com/apache/zookeeper/pull/1685#issuecomment-819373461


   I re-triggered the CI (most probably we hit a flaky test again)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Apr/21 09:24;githubbot;600","symat commented on pull request #1684:
URL: https://github.com/apache/zookeeper/pull/1684#issuecomment-819375420


   Thanks @rvaleti !
   
   I don't see an easy way for unit test either, and I wouldn't make a major refactoring in the production code just for this test... I think we can skip the unit test this case.
   
   Thanks for the PR on the master branch, I agree with @nkalmar that you can close this PR (on branch-3.5), as we will simply cherry-pick the master commit to the other branches. Anyway, it was good to get also a green CI run on branch-3.5, that never hurts :)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Apr/21 09:27;githubbot;600","symat commented on pull request #1685:
URL: https://github.com/apache/zookeeper/pull/1685#issuecomment-819377047


   If the CI passes, I'll merge this to master and also cherry-pick to the active branches.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Apr/21 09:30;githubbot;600","symat commented on pull request #1685:
URL: https://github.com/apache/zookeeper/pull/1685#issuecomment-819522364


   I already restarted the CI jobs 2 times... C client unit tests are failing, what is definitely not related to this PR about java client. If the java unit tests are passing (still running at the moment), then I'm going to merge this tomorrow unless someone has an objection.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Apr/21 13:34;githubbot;600","symat commented on pull request #1685:
URL: https://github.com/apache/zookeeper/pull/1685#issuecomment-822211972


   I had to restart CI at least 5 times to get a stable run... is it always this unstable?
   I'm going to merge this fix now.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Apr/21 06:39;githubbot;600","asfgit closed pull request #1685:
URL: https://github.com/apache/zookeeper/pull/1685


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Apr/21 06:47;githubbot;600","maoling commented on pull request #1684:
URL: https://github.com/apache/zookeeper/pull/1684#issuecomment-838675429


   - @rvaleti  Actually, I also found this issue at Aug 2019 [PR-1065](https://github.com/apache/zookeeper/pull/1065) (I also have a analysis here, maybe it's still helpful )
   - @symat @nkalmar Since master now has this fix, what are you going to do next? merge this PR again 3.5 or cherry-pick directly from master?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/May/21 15:24;githubbot;600","symat commented on pull request #1684:
URL: https://github.com/apache/zookeeper/pull/1684#issuecomment-839589942


   hi @maoling !
   
   I think we already pushed this fix to all active branches. E.g. it is present on 3.5, see: https://github.com/apache/zookeeper/commits/branch-3.5


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/May/21 08:47;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,9000,,,0,9000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Apr 14 09:03:43 UTC 2021,,,,,,,,,,"0|z0pkfc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Apr/21 15:00;symat;Hello [~rvaleti],

ZooKeeper 3.4 is not supported by the community anymore, please upgrade to the latest 3.5, 3.6 or 3.7 version to have community support.

(the ZooKeeper client code also got many improvements in more recent releases);;;","07/Apr/21 20:19;rvaleti;Hi [~symat], Sure, I will try this against >=3.5 and update the Jira tomorrow.

High level, looked at 3.5/6/7 branches and the code path hasn't changed (ClientCnxn.java). I'm confident that this bug exists there as well. Once I test against >=3.5, I will provide a patch to fix this.;;;","09/Apr/21 07:56;rvaleti;[~symat]


I was able to reproduce the same on 3.5 branch by inducing a 1 second delay right before Subject.doAs() in SecurityUtils#createSaslClient() method.

The bug - ZK client starts connection timer much ahead (which includes Sasl client creation) of sending a connection request to ZK Server and falsely assuming that it's timing out on ZK server and goes for retries.

Fix: ZK client should start the connection timer right before sending a connection request to ZK server.

I will provide a patch for this on 3.5 first and then we can port it to relevant branches.

 

2021-04-09 12:50:26,264 INFO  [main] zookeeper.ClientCnxnSocket - jute.maxbuffer value is 4194304 Bytes

2021-04-09 12:50:26,272 INFO  [main] zookeeper.ClientCnxn - zookeeper.request.timeout value is 0. feature enabled=

2021-04-09 12:50:26,822 INFO  [main-SendThread(xxxxx:2181)] zookeeper.Login - Client successfully logged in.

2021-04-09 12:50:26,824 INFO  [Thread-1] zookeeper.Login - TGT refresh thread started.

2021-04-09 12:50:26,824 INFO  [Thread-1] zookeeper.Login - TGT valid starting at:        xxx Apr xx 12:50:26 IST 2021

2021-04-09 12:50:26,824 INFO  [Thread-1] zookeeper.Login - TGT expires:                  xxx Apr xx 12:50:26 IST 2021

2021-04-09 12:50:26,824 INFO  [Thread-1] zookeeper.Login - TGT refresh sleeping until: xxx Apr xx 08:15:07 IST 2021

2021-04-09 12:50:26,828 INFO  [main-SendThread(xxxxx:2181)] client.ZooKeeperSaslClient - *Sleeping for 1000*

2021-04-09 12:50:27,835 INFO  [main-SendThread(xxxxx:2181)] client.ZooKeeperSaslClient - Client will use GSSAPI as SASL mechanism.

2021-04-09 12:50:27,845 INFO  [main-SendThread(xxxxx:2181)] zookeeper.ClientCnxn - *Opening socket connection to server* xxxxx/xxxxx:2181. Will attempt to SASL-authenticate using Login Context section 'Client'

2021-04-09 12:50:27,861 WARN  [main-SendThread(xxxxx:2181)] zookeeper.ClientCnxn - *Client session timed out, have not heard from server in 1589ms* for sessionid 0x0

2021-04-09 12:50:27,861 INFO  [main-SendThread(xxxxx:2181)] zookeeper.ClientCnxn - Client session timed out, have not heard from server in 1589ms for sessionid 0x0, closing socket connection and attempting reconnect

 

*Falsely times out ZK server and starts getting in to unnecessary continuous retries*

 

2021-04-09 12:50:27,972 WARN  [Thread-1] zookeeper.Login - TGT renewal thread has been interrupted and will exit.

2021-04-09 12:50:28,514 INFO  [main-SendThread(xxxxx:2181)] zookeeper.Login - Client successfully logged in.

2021-04-09 12:50:28,514 INFO  [Thread-2] zookeeper.Login - TGT refresh thread started.

2021-04-09 12:50:28,514 INFO  [main-SendThread(xxxxx:2181)] client.ZooKeeperSaslClient - *Sleeping for 1000*

2021-04-09 12:50:28,514 INFO  [Thread-2] zookeeper.Login - TGT valid starting at:        xxx Apr xx 12:50:28 IST 2021

2021-04-09 12:50:28,514 INFO  [Thread-2] zookeeper.Login - TGT expires:                  xxx Apr xx 12:50:28 IST 2021

2021-04-09 12:50:28,515 INFO  [Thread-2] zookeeper.Login - TGT refresh sleeping until: xxx Apr xx 08:39:46 IST 2021

2021-04-09 12:50:29,519 INFO  [main-SendThread(xxxxx:2181)] client.ZooKeeperSaslClient - Client will use GSSAPI as SASL mechanism.

2021-04-09 12:50:29,520 INFO  [main-SendThread(xxxxx:2181)] zookeeper.ClientCnxn - *Opening socket connection to server* xxxxx/xxxxx:2181. Will attempt to SASL-authenticate using Login Context section 'Client'

2021-04-09 12:50:29,522 WARN  [main-SendThread(xxxxx:2181)] zookeeper.ClientCnxn - *Client session timed out, have not heard from server in 1551ms* for sessionid 0x0

2021-04-09 12:50:29,522 INFO  [main-SendThread(xxxxx:2181)] zookeeper.ClientCnxn - Client session timed out, have not heard from server in 1551ms for sessionid 0x0, closing socket connection and attempting reconnect;;;","14/Apr/21 06:51;symat;Thank you [~rvaleti] for working on the issue!!

Please make sure to create the patch first on the master branch (if the problem exists there too). Usually we are making / reviewing bugfixes first on master, then backporting it to the older active branches (which currently are branch-3.7, branch-3.6 and branch-3.5).

Thank you!;;;","14/Apr/21 09:03;rvaleti;Thanks [~symat], I raised a separate PR for master [https://github.com/apache/zookeeper/pull/1685] as suggested. Please review and merge.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Flaky test - RequestThrottlerTest.testLargeRequestThrottling,ZOOKEEPER-4274,13369602,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Duplicate,ztzg,amichai,amichai,05/Apr/21 14:32,25/Aug/21 15:38,29/Jun/25 13:34,25/Aug/21 15:38,3.6.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,server,,,,,0,,,"This test occasionally fails. e.g. in [https://github.com/apache/zookeeper/pull/1672/checks?check_run_id=2265118964]. A bit hard to recreate, but it pops up again eventually.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-4327,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2021-04-05 14:32:57.0,,,,,,,,,,"0|z0pjbs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Forward port ZOOKEEPER-3931: ""zkServer.sh version"" returns a trailing dash",ZOOKEEPER-4273,13369453,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Abandoned,,arshad.mohammad,arshad.mohammad,04/Apr/21 05:12,17/May/23 12:35,29/Jun/25 13:34,17/May/23 12:34,3.6.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,"When you run zkServer.sh version the result includes a few spam lines and the version reports a trailing dash 
{noformat}
bin/zkServer.sh version
ZooKeeper JMX enabled by default
Using config: /xxxxxxxxxxx/bin/../conf/zoo.cfg
Apache ZooKeeper, version 3.6.2- 09/04/2020 12:44 GMT

{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-3786,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed May 17 12:35:29 UTC 2023,,,,,,,,,,"0|z0pieo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/May/23 12:35;kezhuw;I confirmed docker image 3.7.1 does not have such issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Flaky test - ReadOnlyModeTest.testConnectionEvents,ZOOKEEPER-4271,13368421,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Duplicate,,amichai,amichai,29/Mar/21 16:19,12/May/25 08:12,29/Jun/25 13:34,20/Jun/23 04:51,3.6.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,tests,,,,,0,pull-request-available,,The test fails sometimes. If I run this test class (with -Dtest=ReadOnlyModeTest) in a loop it always hits the failure eventually after a few runs.,,"amichair commented on pull request #1667:
URL: https://github.com/apache/zookeeper/pull/1667#issuecomment-886191923


   I can undo the refactor with a bit of work, but the rename is in a separate commit to make it trivially easy to review... also, it no longer uses a countdown latch, so the name doesn't make sense. Also, it's an implementation detail where before the inner field was accessed directly from outside and is now encapsulated instead, so it makes sense to rename to what it does rather than how it (was) implemented... no?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jul/21 12:04;githubbot;600","kezhuw commented on PR #1667:
URL: https://github.com/apache/zookeeper/pull/1667#issuecomment-2871350855

   Superceded by #1896.


;12/May/25 08:12;githubbot;600","kezhuw closed pull request #1667: ZOOKEEPER-4271: Flaky test - ReadOnlyModeTest.testConnectionEvents
URL: https://github.com/apache/zookeeper/pull/1667


;12/May/25 08:12;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,ZOOKEEPER-3996,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Apr 26 15:36:27 UTC 2021,,,,,,,,,,"0|z0pc20:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Apr/21 15:36;amichai;PR available here: https://github.com/apache/zookeeper/pull/1667;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
X509AuthFailureTest is failing consistently,ZOOKEEPER-4227,13361578,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,arshad.mohammad,arshad.mohammad,arshad.mohammad,01/Mar/21 11:03,17/Mar/21 07:45,29/Jun/25 13:34,10/Mar/21 16:13,3.6.2,3.7.0,3.8.0,,,,,,,,,,,,,,,,,,,,,,3.6.3,,,,,tests,,,,,0,pull-request-available,,"X509AuthFailureTest is failing consistently.
",,"arshadmohammad opened a new pull request #1616:
URL: https://github.com/apache/zookeeper/pull/1616


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/21 11:13;githubbot;600","arshadmohammad commented on pull request #1616:
URL: https://github.com/apache/zookeeper/pull/1616#issuecomment-794199213


   Tried to merge this change with https://github.com/apache/zookeeper/pull/1599, but no response. lets review and merge this PR itself


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 17:28;githubbot;600","arshadmohammad commented on pull request #1616:
URL: https://github.com/apache/zookeeper/pull/1616#issuecomment-794201125


   ping @eolivelli @ztzg 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 17:29;githubbot;600","eolivelli closed pull request #1616:
URL: https://github.com/apache/zookeeper/pull/1616


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 11:52;githubbot;600","arshadmohammad opened a new pull request #1616:
URL: https://github.com/apache/zookeeper/pull/1616


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 13:34;githubbot;600","arshadmohammad commented on pull request #1616:
URL: https://github.com/apache/zookeeper/pull/1616#issuecomment-795423297


   This PR change is applicable to other branches as well. I will merge to branch-3.7, branch-3.7.0 and branch-3.6


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 13:37;githubbot;600","arshadmohammad opened a new pull request #1635:
URL: https://github.com/apache/zookeeper/pull/1635


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 15:01;githubbot;600","arshadmohammad commented on pull request #1635:
URL: https://github.com/apache/zookeeper/pull/1635#issuecomment-795559460


   PR for branch-3.7 and branch-3.7.0


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 15:02;githubbot;600","arshadmohammad opened a new pull request #1636:
URL: https://github.com/apache/zookeeper/pull/1636


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 15:05;githubbot;600","arshadmohammad edited a comment on pull request #1616:
URL: https://github.com/apache/zookeeper/pull/1616#issuecomment-795423297


   This PR change is applicable to other branches as well.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 15:06;githubbot;600","arshadmohammad closed pull request #1616:
URL: https://github.com/apache/zookeeper/pull/1616


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 15:08;githubbot;600","arshadmohammad commented on pull request #1616:
URL: https://github.com/apache/zookeeper/pull/1616#issuecomment-795571165


   PR for branch-3.7 and 3.7.0  is https://github.com/apache/zookeeper/pull/1635
   PR for branch-3.6 is https://github.com/apache/zookeeper/pull/1636
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 15:08;githubbot;600","eolivelli commented on pull request #1635:
URL: https://github.com/apache/zookeeper/pull/1635#issuecomment-795671333


   @ztzg I will let you follow the merge to 3.7 branch as you are currently driving the release


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 16:14;githubbot;600","arshadmohammad commented on pull request #1636:
URL: https://github.com/apache/zookeeper/pull/1636#issuecomment-795689996


   Merged


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 16:27;githubbot;600","arshadmohammad closed pull request #1636:
URL: https://github.com/apache/zookeeper/pull/1636


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 16:27;githubbot;600","arshadmohammad commented on pull request #1635:
URL: https://github.com/apache/zookeeper/pull/1635#issuecomment-800431439


   This PR change is very simple change, shall we merge it. @eolivelli please merge it.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Mar/21 16:49;githubbot;600","ztzg closed pull request #1635:
URL: https://github.com/apache/zookeeper/pull/1635


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Mar/21 07:24;githubbot;600","ztzg commented on pull request #1635:
URL: https://github.com/apache/zookeeper/pull/1635#issuecomment-800859272


   Now in `branch-3.7`; closing.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Mar/21 07:24;githubbot;600","ztzg edited a comment on pull request #1635:
URL: https://github.com/apache/zookeeper/pull/1635#issuecomment-800859272


   Now in `branch-3.7` and `branch-3.7.0`; closing.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Mar/21 07:33;githubbot;600","arshadmohammad commented on pull request #1635:
URL: https://github.com/apache/zookeeper/pull/1635#issuecomment-800870802


   Thanks @eolivelli  for review
   Thanks @ztzg  for review and merge


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Mar/21 07:45;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,12000,,,0,12000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Mar 10 16:13:07 UTC 2021,,,,,,,,,,"0|z0o5zs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Mar/21 11:03;arshad.mohammad;This test case is failing because it is not waiting for server startup.;;;","10/Mar/21 11:52;eolivelli;Issue resolved by pull request 1616
[https://github.com/apache/zookeeper/pull/1616];;;","10/Mar/21 13:33;arshad.mohammad;This change is applicable on other branches as well.;;;","10/Mar/21 16:13;eolivelli;Issue resolved by pull request 1636
[https://github.com/apache/zookeeper/pull/1636];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zooKeeperSaslClient will product a null state event and then caused NPE while used switch(state) to deal with event,ZOOKEEPER-4218,13359765,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,DouDou,DouDou,20/Feb/21 09:52,26/Mar/21 03:32,29/Jun/25 13:34,,3.5.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,java client,server,,,,0,pull-request-available,,"zk client initialize a saslClient occurred an IOException:

!image-2021-02-20-16-30-09-316.png!

!image-2021-02-20-17-52-43-968.png!

and then will send a event which state is null

!image-2021-02-20-16-31-32-251.png!

 

 ",,"smallYellowCat opened a new pull request #1646:
URL: https://github.com/apache/zookeeper/pull/1646


   while excute zooKeeperSaslClient.initialize(ClientCnxn.this) occurred some exception, at time saslState is SaslState.INITIAL, and then sendAuthEvent will be set true,  but  KeeperState authState = zooKeeperSaslClient.getKeeperState() will return null authState, so client will create a null state event.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Mar/21 08:11;githubbot;600","maoling commented on a change in pull request #1646:
URL: https://github.com/apache/zookeeper/pull/1646#discussion_r601994178



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/client/ZooKeeperSaslClient.java
##########
@@ -369,6 +370,7 @@ private void sendSaslPacket(ClientCnxn cnxn) throws SaslException {
         try {
             cnxn.sendPacket(request, response, cb, ZooDefs.OpCode.sasl);
         } catch (IOException e) {
+            saslState = SaslState.FAILED;
             throw new SaslException(""Failed to send SASL packet to server due "" + ""to IOException:"", e);
         }
     }

Review comment:
       @smallYellowCat 
   Could you please add an unit case for this change?




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Mar/21 03:32;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,"20/Feb/21 08:30;DouDou;image-2021-02-20-16-30-09-316.png;https://issues.apache.org/jira/secure/attachment/13020780/image-2021-02-20-16-30-09-316.png","20/Feb/21 08:31;DouDou;image-2021-02-20-16-31-32-251.png;https://issues.apache.org/jira/secure/attachment/13020779/image-2021-02-20-16-31-32-251.png","20/Feb/21 09:52;DouDou;image-2021-02-20-17-52-43-968.png;https://issues.apache.org/jira/secure/attachment/13020778/image-2021-02-20-17-52-43-968.png",,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Feb 22 10:47:56 UTC 2021,,,,,,,,,,"0|z0nvgo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Feb/21 12:40;maoling;[~DouDou]  ZooKeeper uses the GitHub workflow. The contributor guideline is [here]([https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute).] Could you please help us improve/fix it?;;;","22/Feb/21 10:47;Badideas;Want a new t-shirt with cu[stom designs? |https://www.badideatshirts.com/]Take a deep breath and search bad Idea t-shirts; it has all the collections of sarcastic, Christmas, political sports and funny t-shirts online;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Zookeeper c client: detect connection loss during opportunistic async send,ZOOKEEPER-4210,13358672,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,,smikes,smikes,15/Feb/21 14:50,09/Mar/21 20:31,29/Jun/25 13:34,09/Mar/21 20:30,3.4.14,3.6.2,3.7.0,,,,,,,,,,,,,,,,,,,,,,3.8.0,,,,,c client,,,,,0,pull-request-available,,"When an async operation is performed in the C client, the client will attempt to send the command to the server if this would not block.

When this send reports an error (eg: EPIPE) this is reported up to the async message, but the return code is not stored and checked, making it impossible for the user of the c client library to identify this case.

This can eventually trigger an assertion in some IO libraries, eg libev, because the file descriptor libev is watching is not associated with a valid stream. ",Observed on Linux 3.x 4.x 5.x Centos distributions.,"maoling commented on pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#issuecomment-779578202


   Ping @ztzg @eolivelli @anmolnar  :)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Feb/21 04:46;githubbot;600","smikes commented on pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#issuecomment-780025114


   Confirmed that `ReadOnlyModeTest` passes locally, so if this is known to be flaky/slow under load, then I'm fine.
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Feb/21 18:16;githubbot;600","smikes commented on pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#issuecomment-780108485


   Running the build on branch-3.6 I see some unit tests failing, both with this change and without


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Feb/21 20:48;githubbot;600","ztzg commented on a change in pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#discussion_r577453743



##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -3730,8 +3745,9 @@ int zoo_awget(zhandle_t *zh, const char *path,
 
     LOG_DEBUG(LOGCALLBACK(zh), ""Sending request xid=%#x for path [%s] to %s"",h.xid,path,
             zoo_get_current_server(zh));
+
     /* make a best (non-blocking) effort to send the requests asap */
-    adaptor_send_queue(zh, 0);
+    return nonblocking_send(zh, rc);
     return (rc < 0)?ZMARSHALLINGERROR:ZOK;

Review comment:
       Leftover `return` statement.

##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -3691,6 +3691,21 @@ static int Request_path_watch_init(zhandle_t *zh, int mode,
 /*---------------------------------------------------------------------------*
  * ASYNC API
  *---------------------------------------------------------------------------*/
+#define nonblocking_send(zh, rc) _nonblocking_send(zh, rc, __LINE__)
+static int _nonblocking_send(zhandle_t *zh, int rc, int line)
+{
+    if (rc < 0) {
+	rc = ZMARSHALLINGERROR;
+    } else {
+	rc = adaptor_send_queue(zh, 0);
+	if (rc < 0) {
+	    rc = handle_socket_error_msg(zh, line, rc, ""Socket error during nonblocking send"");

Review comment:
       Passing an accurate `line` is nice, but I now realize that `handle_socket_error_msg` generates log lines such as `ZOO_ERROR@handle_socket_error_msg@1234` (I.e., correct line, wrong function).
   
   (Just a remark, not asking you to fix it in this PR.  Noted for later.)
   




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 09:48;githubbot;600","smikes commented on pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#issuecomment-780774963


   Sounds good, will take a look. Internally we have 3.4 and 3.6 branches active so I developed against that, I will rebase this against the main branch as you suggest


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 18:55;githubbot;600","smikes closed pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 18:58;githubbot;600","smikes opened a new pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602


   Async API calls attempt to flush the send buffer, which
   calls flush_send_queue(); and can report
     ZOPERATIONTIMEOUT
     ZSYSTEMERROR
     ZCONNECTIONLOSS
   
   Specifically: send_buffer() calls send(2) with MSG_NOSIGNAL,
   which can return EPIPE; then send_buffer return -1, causing
   ZCONNECTIONLOSS from flush_send_queue().
   
   Current async API calls drop the return value from flush_send_queue(),
   as below:
   
       adaptor_send_queue(zh, 0);
       return (rc < 0)?ZMARSHALLINGERROR:ZOK;
   
   The async API then returns ZOK instead of ZCONNECTIONLOSS.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 20:20;githubbot;600","smikes commented on a change in pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#discussion_r578041352



##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -3730,8 +3745,9 @@ int zoo_awget(zhandle_t *zh, const char *path,
 
     LOG_DEBUG(LOGCALLBACK(zh), ""Sending request xid=%#x for path [%s] to %s"",h.xid,path,
             zoo_get_current_server(zh));
+
     /* make a best (non-blocking) effort to send the requests asap */
-    adaptor_send_queue(zh, 0);
+    return nonblocking_send(zh, rc);
     return (rc < 0)?ZMARSHALLINGERROR:ZOK;

Review comment:
       Fixed, see new commits.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Feb/21 00:35;githubbot;600","smikes commented on a change in pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#discussion_r578041689



##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -3691,6 +3691,21 @@ static int Request_path_watch_init(zhandle_t *zh, int mode,
 /*---------------------------------------------------------------------------*
  * ASYNC API
  *---------------------------------------------------------------------------*/
+#define nonblocking_send(zh, rc) _nonblocking_send(zh, rc, __LINE__)
+static int _nonblocking_send(zhandle_t *zh, int rc, int line)
+{
+    if (rc < 0) {
+	rc = ZMARSHALLINGERROR;
+    } else {
+	rc = adaptor_send_queue(zh, 0);
+	if (rc < 0) {
+	    rc = handle_socket_error_msg(zh, line, rc, ""Socket error during nonblocking send"");

Review comment:
       I added a commit that addresses this, but it is incidental to the problem of connection loss, so it may be better to put that in a different PR.  Please advise.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Feb/21 00:36;githubbot;600","smikes commented on pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#issuecomment-780952654


   Summary of current changes:
   
   * bc5c997
   A revised version of the original change.  This now *DOES NOT* change the ABI -- it does not modify the return values that come from the `zoo_a*` functions.
   
   Also, the action on ZCONNECTIONLOSS is more conservative.  Now, a connection loss that is detected during an opportunistic nonblocking send will be treated as a normal connection loss, not an error.  The pending send buffers will not be cleared, and completions/watchers will be preserved at least until the next `zookeeper_interest` call.
   
   * 9c0cd16
   Addresses the comment above, that `handle_socket_error_msg` reports the caller's line but not the caller's function name.  Not needed to address ZOOKEEPER-4210, so I would be happy to split it into a different PR.  Please advise.
   
   * e20bf70
   In addition to changing the behavior when connection loss is detected, also allow the return code ZCONNECTIONLOSS to propagate upward to the `zoo_a*` functions.  Add documentation in `zookeeper.h` for the new return codes.
   
   Note: included for completeness, but I now think this is probably a bad idea, because there is nothing the consumer of the `zookeeper.c` API can do with the new information (about connection loss during async send).  
   
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Feb/21 00:48;githubbot;600","smikes edited a comment on pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#issuecomment-780952654


   Summary of current changes:
   
   * bc5c997
   A revised version of the original change.  This now *DOES NOT* change the ABI -- it does not modify the return values that come from the `zoo_a*` functions.
   Also, the action on ZCONNECTIONLOSS is more conservative.  Now, a connection loss that is detected during an opportunistic nonblocking send will be treated as a normal connection loss, not an error.  The pending send buffers will not be cleared, and completions/watchers will be preserved at least until the next `zookeeper_interest` call.
   
   * 9c0cd16
   Addresses the comment above, that `handle_socket_error_msg` reports the caller's line but not the caller's function name.  Not needed to address ZOOKEEPER-4210, so I would be happy to split it into a different PR.  Please advise.
   
   * e20bf70
   In addition to changing the behavior when connection loss is detected, also allow the return code ZCONNECTIONLOSS to propagate upward to the `zoo_a*` functions.  Add documentation in `zookeeper.h` for the new return codes.
   Note: included for completeness, but I now think this is probably a bad idea, because there is nothing the consumer of the `zookeeper.c` API can do with the new information (about connection loss during async send).  
   
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Feb/21 00:49;githubbot;600","smikes commented on pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#issuecomment-780954496


   Separately: I am seeing the `zktest_mt` and `zktest_st` cppunit test suites fail, it seems spuriously, on some log management calls:
   
   ```     [exec] Zookeeper_simpleSystem::testLogCallbackClearLog Message Received: [2021-02-17 17:42:23,777:207110(0x7f13ca702740):ZOO_INFO@log_env@1250: Client environment:zookeeper.version=zookeeper C client 3.8.0]
        [exec] Log Message Received: [2021-02-17 17:42:24,611:207110(0x7f13c9e8f700):ZOO_ERROR@check_events@2983: Socket 127.0.0.1:22181 zk retcode=-4, errno=111(Connection refused): server refused to accept the client]
        [exec] Log Message Received: [2021-02-17 17:42:24,611:207110(0x7f13c9e8f700):ZOO_WARN@zookeeper_interest@2561: Delaying connection after exhaustively trying all servers [127.0.0.1:22181]]
        [exec]  : elapsed 1001 : OK
        [exec] terminate called after throwing an instance of 'CppUnit::Exception'
        [exec]   what():  equality assertion failed
        [exec] - Expected: -101
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Feb/21 00:54;githubbot;600","smikes edited a comment on pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#issuecomment-780954496


   Separately: I am seeing the `zktest_mt` and `zktest_st` cppunit test suites fail, it seems spuriously, on some log management calls.  I might be able to fix this by using mocks for the log tests... also a new PR/JIRA issue?
   
   ```     [exec] Zookeeper_simpleSystem::testLogCallbackClearLog Message Received: [2021-02-17 17:42:23,777:207110(0x7f13ca702740):ZOO_INFO@log_env@1250: Client environment:zookeeper.version=zookeeper C client 3.8.0]
   ....
        [exec] Log Message Received: [2021-02-17 17:42:24,611:207110(0x7f13c9e8f700):ZOO_ERROR@check_events@2983: Socket 127.0.0.1:22181 zk retcode=-4, errno=111(Connection refused): server refused to accept the client]
        [exec] Log Message Received: [2021-02-17 17:42:24,611:207110(0x7f13c9e8f700):ZOO_WARN@zookeeper_interest@2561: Delaying connection after exhaustively trying all servers [127.0.0.1:22181]]
        [exec]  : elapsed 1001 : OK
        [exec] terminate called after throwing an instance of 'CppUnit::Exception'
        [exec]   what():  equality assertion failed
        [exec] - Expected: -101
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Feb/21 00:55;githubbot;600","smikes edited a comment on pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#issuecomment-780954496


   Separately: I am seeing the `zktest_mt` and `zktest_st` cppunit test suites fail, it seems spuriously, on some async functions -- not actually log management, I see now  I might be able to fix this... also a new PR/JIRA issue?
   
   ```       
        [exec] Zookeeper_simpleSystem::testAsyncWatcherAutoResetFAIL: zktest-mt
        [exec] terminate called after throwing an instance of 'CppUnit::Exception'
        [exec]   what():  equality assertion failed
        [exec] - Expected: -101
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Feb/21 00:59;githubbot;600","smikes edited a comment on pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#issuecomment-780954496


   Separately: I was seeing the `zktest_mt` and `zktest_st` cppunit test suites fail, because of my change to the ABI, so I am hoping this will now build cleanly.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Feb/21 01:02;githubbot;600","ztzg commented on pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#issuecomment-782339189


   @smikes: Still planning to have a look at this, and https://github.com/apache/zookeeper/pull/1609, ASAP.  Thank you for all that work so far!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Feb/21 20:50;githubbot;600","ztzg commented on pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#issuecomment-782914541


   > Summary of current changes:
   > 
   > * [bc5c997](https://github.com/apache/zookeeper/commit/bc5c9975c08aa98748319ff1cd5c60b5602cba7d)
   >   A revised version of the original change.  This now _DOES NOT_ change the ABI -- it does not modify the return values that come from the `zoo_a*` functions.
   >   Also, the action on ZCONNECTIONLOSS is more conservative.  Now, a connection loss that is detected during an opportunistic nonblocking send will be treated as a normal connection loss, not an error.  The pending send buffers will not be cleared, and completions/watchers will be preserved at least until the next `zookeeper_interest` call.
   
   This is this PR.  LGTM.
   
   > * [9c0cd16](https://github.com/apache/zookeeper/commit/9c0cd1652a41269ce54120bb6656fcdd219063f7)
   >   Addresses the comment above, that `handle_socket_error_msg` reports the caller's line but not the caller's function name.  Not needed to address ZOOKEEPER-4210, so I would be happy to split it into a different PR.  Please advise.
   
   Now https://github.com/apache/zookeeper/pull/1609 and [ZOOKEEPER-4217](https://issues.apache.org/jira/browse/ZOOKEEPER-4217).  Thank you for splitting it.
   
   I note that the PR currently is in ""draft"" state.  Do you have specific improvements in mind?
   
   > * [e20bf70](https://github.com/apache/zookeeper/commit/e20bf7015ed6f28d41d488e478ec308f627fb8a7)
   >   In addition to changing the behavior when connection loss is detected, also allow the return code ZCONNECTIONLOSS to propagate upward to the `zoo_a*` functions.  Add documentation in `zookeeper.h` for the new return codes.
   >   Note: included for completeness, but I now think this is probably a bad idea, because there is nothing the consumer of the `zookeeper.c` API can do with the new information (about connection loss during async send).
   
   Agree.  (But thank you for preparing the commit anyway!)
   
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Feb/21 19:48;githubbot;600","smikes commented on pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#issuecomment-782940825


   > > Summary of current changes:
   > > 
   > > * [bc5c997](https://github.com/apache/zookeeper/commit/bc5c9975c08aa98748319ff1cd5c60b5602cba7d)
   > >   A revised version of the original change.  This now _DOES NOT_ change the ABI -- it does not modify the return values that come from the `zoo_a*` functions.
   > 
   > This is this PR. LGTM.
   
   Cool! I am happy to take more feedback on this, or it can be merged.
   
   > > * [9c0cd16](https://github.com/apache/zookeeper/commit/9c0cd1652a41269ce54120bb6656fcdd219063f7)
   > >   Addresses the comment above, that `handle_socket_error_msg` reports the caller's line but not the caller's function name.  Not needed to address ZOOKEEPER-4210, so I would be happy to split it into a different PR.  Please advise.
   > 
   > Now #1609 and [ZOOKEEPER-4217](https://issues.apache.org/jira/browse/ZOOKEEPER-4217). Thank you for splitting it.
   > 
   > I note that the PR currently is in ""draft"" state. Do you have specific improvements in mind?
   
   No. Today I removed the ""draft"" status.
   
   After this, I will make some documentation updates to the C client dev notes.
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Feb/21 22:39;githubbot;600","eolivelli commented on a change in pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#discussion_r580073782



##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -3961,6 +3961,23 @@ static int Request_path_watch_init(zhandle_t *zh, int mode,
 /*---------------------------------------------------------------------------*
  * ASYNC API
  *---------------------------------------------------------------------------*/
+#define nonblocking_send(zh, rc) _nonblocking_send(zh, rc, __LINE__)
+static int _nonblocking_send(zhandle_t *zh, int rc, int line)

Review comment:
       this parameter `line ` is not used, why should we declare it ?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Feb/21 08:51;githubbot;600","smikes commented on a change in pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#discussion_r580729927



##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -3961,6 +3961,23 @@ static int Request_path_watch_init(zhandle_t *zh, int mode,
 /*---------------------------------------------------------------------------*
  * ASYNC API
  *---------------------------------------------------------------------------*/
+#define nonblocking_send(zh, rc) _nonblocking_send(zh, rc, __LINE__)
+static int _nonblocking_send(zhandle_t *zh, int rc, int line)

Review comment:
       Thanks for pointing this out.  Formerly this was used because the function called handle_socket_error_msg() on error.  Since this is no longer called, we can omit the macro and the argument.  Updated PR , force-pushed amended version f0539f292




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Feb/21 02:27;githubbot;600","eolivelli commented on a change in pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#discussion_r581140205



##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -3961,6 +3961,22 @@ static int Request_path_watch_init(zhandle_t *zh, int mode,
 /*---------------------------------------------------------------------------*
  * ASYNC API
  *---------------------------------------------------------------------------*/
+static int nonblocking_send(zhandle_t *zh, int rc)
+{
+    if (rc < 0) {
+        rc = ZMARSHALLINGERROR;
+    } else {
+        rc = adaptor_send_queue(zh, 0);

Review comment:
       (sorry I have one last question, I could have noticed it before).
   
   in the previous version of this code we were basically always calling `adaptor_send_queue`, now in case of previous error (rc < 0) we are not calling that function anymore.
   
   can this have a behavioural impact ?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Feb/21 15:34;githubbot;600","smikes commented on a change in pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#discussion_r581493588



##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -3961,6 +3961,22 @@ static int Request_path_watch_init(zhandle_t *zh, int mode,
 /*---------------------------------------------------------------------------*
  * ASYNC API
  *---------------------------------------------------------------------------*/
+static int nonblocking_send(zhandle_t *zh, int rc)
+{
+    if (rc < 0) {
+        rc = ZMARSHALLINGERROR;
+    } else {
+        rc = adaptor_send_queue(zh, 0);

Review comment:
       Thanks, this is a good question.  I have reorganized the code to minimize the change; now adaptor_send_queue() will always be called.
   
   If an error is returned from adaptor_send_queue(), check if we are in a connected state (`is_connected`) and only then, close the socket and set state to `ZOO_NOTCONNECTED_STATE`.
   
   Also: removed the replicated comment and collapsed the ZMARSHALLINGERROR check in `aremove_watches`.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Feb/21 00:20;githubbot;600","ztzg commented on a change in pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#discussion_r582692030



##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -3961,6 +3961,19 @@ static int Request_path_watch_init(zhandle_t *zh, int mode,
 /*---------------------------------------------------------------------------*
  * ASYNC API
  *---------------------------------------------------------------------------*/
+
+/* make an attempt to send queued requests immediately without blocking */
+static int nonblocking_send(zhandle_t *zh, int rc)
+{
+    if (adaptor_send_queue(zh, 0) < 0) {
+        if (is_connected(zh)) {
+            close_zsock(zh->fd);
+            zh->state = ZOO_NOTCONNECTED_STATE;
+        }
+    }
+    return (rc < 0) ? ZMARSHALLINGERROR : ZOK;

Review comment:
       @eolivelli wrote:
   
   > in the previous version of this code we were basically always calling `adaptor_send_queue`, now in case of previous error (rc < 0) we are not calling that function anymore.
   > 
   > can this have a behavioural impact ?
   
   Good point, indeed.  I don't think we have a way to be sure, so I prefer this version.
   
   Now… sorry to be annoying, but:
   
   I'm not sure I like the `is_connected(zh)` condition.  You previously had `zh->fd->sock != -1` here, which seems to make more sense—as the client might *not* be connected when this function is called.  (That can happen, e.g., if the client is in the middle of a `prime_connection` or a SASL authentication sequence; applications do not always wait for a state notification before they start issuing requests.)
   
   WDYT?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/21 09:51;githubbot;600","ztzg commented on a change in pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#discussion_r582692030



##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -3961,6 +3961,19 @@ static int Request_path_watch_init(zhandle_t *zh, int mode,
 /*---------------------------------------------------------------------------*
  * ASYNC API
  *---------------------------------------------------------------------------*/
+
+/* make an attempt to send queued requests immediately without blocking */
+static int nonblocking_send(zhandle_t *zh, int rc)
+{
+    if (adaptor_send_queue(zh, 0) < 0) {
+        if (is_connected(zh)) {
+            close_zsock(zh->fd);
+            zh->state = ZOO_NOTCONNECTED_STATE;
+        }
+    }
+    return (rc < 0) ? ZMARSHALLINGERROR : ZOK;

Review comment:
       @eolivelli wrote:
   
   > in the previous version of this code we were basically always calling `adaptor_send_queue`, now in case of previous error (rc < 0) we are not calling that function anymore.
   > 
   > can this have a behavioural impact ?
   
   Good point, indeed.  I don't think we have a way to be sure, so I prefer this version.
   
   Now… sorry to be annoying, but:
   
   I'm not sure I like the `is_connected(zh)` condition.  You previously had `zh->fd->sock != -1` here, which seems to make more sense—as the client might *not* be connected when this function is called.  (That can happen, e.g., if the client is in the middle of a `prime_connection` or a SASL authentication sequence. Aplications do not always wait for a connection notification before they start issuing requests.)
   
   WDYT?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/21 09:52;githubbot;600","ztzg commented on a change in pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#discussion_r582692030



##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -3961,6 +3961,19 @@ static int Request_path_watch_init(zhandle_t *zh, int mode,
 /*---------------------------------------------------------------------------*
  * ASYNC API
  *---------------------------------------------------------------------------*/
+
+/* make an attempt to send queued requests immediately without blocking */
+static int nonblocking_send(zhandle_t *zh, int rc)
+{
+    if (adaptor_send_queue(zh, 0) < 0) {
+        if (is_connected(zh)) {
+            close_zsock(zh->fd);
+            zh->state = ZOO_NOTCONNECTED_STATE;
+        }
+    }
+    return (rc < 0) ? ZMARSHALLINGERROR : ZOK;

Review comment:
       @eolivelli wrote:
   
   > in the previous version of this code we were basically always calling `adaptor_send_queue`, now in case of previous error (rc < 0) we are not calling that function anymore.
   > 
   > can this have a behavioural impact ?
   
   Good point, indeed.  I don't think we have a way to be sure, so I prefer this version.
   
   Now… sorry to be annoying, but:
   
   I'm not sure I like the `is_connected(zh)` condition.  You previously had `zh->fd->sock != -1` here, which seems to make more sense—as the client might *not* be connected when this function is called.  (That can happen, e.g., if the client is in the middle of a `prime_connection` or a SASL authentication sequence. Aplications do not always wait for a connection notification before they start issuing requests.)
   
   WDYT?
   
   (This would also align the test & logic with `destroy` and `update_addrs`.)




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/21 09:54;githubbot;600","smikes commented on a change in pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#discussion_r583979202



##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -3961,6 +3961,19 @@ static int Request_path_watch_init(zhandle_t *zh, int mode,
 /*---------------------------------------------------------------------------*
  * ASYNC API
  *---------------------------------------------------------------------------*/
+
+/* make an attempt to send queued requests immediately without blocking */
+static int nonblocking_send(zhandle_t *zh, int rc)
+{
+    if (adaptor_send_queue(zh, 0) < 0) {
+        if (is_connected(zh)) {
+            close_zsock(zh->fd);
+            zh->state = ZOO_NOTCONNECTED_STATE;
+        }
+    }
+    return (rc < 0) ? ZMARSHALLINGERROR : ZOK;

Review comment:
       Sounds reasonable.  Will return to using `zh->fd != -1` as the guard for calling `close_zsock()` ; new version bc8adb0b4 is pushed.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/21 23:24;githubbot;600","smikes commented on a change in pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#discussion_r583979202



##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -3961,6 +3961,19 @@ static int Request_path_watch_init(zhandle_t *zh, int mode,
 /*---------------------------------------------------------------------------*
  * ASYNC API
  *---------------------------------------------------------------------------*/
+
+/* make an attempt to send queued requests immediately without blocking */
+static int nonblocking_send(zhandle_t *zh, int rc)
+{
+    if (adaptor_send_queue(zh, 0) < 0) {
+        if (is_connected(zh)) {
+            close_zsock(zh->fd);
+            zh->state = ZOO_NOTCONNECTED_STATE;
+        }
+    }
+    return (rc < 0) ? ZMARSHALLINGERROR : ZOK;

Review comment:
       Sounds reasonable.  Will return to using `zh->fd != -1` as the guard for calling `close_zsock()` ; new version 037a4f884 is pushed.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/21 23:28;githubbot;600","ztzg closed pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 20:30;githubbot;600","ztzg commented on pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#issuecomment-794416188


   This is now in `master`.  Thank you for the contribution, and for your patience, @smikes!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 20:31;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,17400,,,0,17400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Mar 09 20:30:28 UTC 2021,,,,,,,,,,"0|z0nops:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Mar/21 20:30;ztzg;Issue resolved by pull request 1602
[https://github.com/apache/zookeeper/pull/1602];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak in  Zookeeper C Client,ZOOKEEPER-4020,13343881,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,gowrima,rogerluo,rogerluo,03/Dec/20 00:02,07/Dec/24 06:02,29/Jun/25 13:34,07/Dec/24 05:59,3.6.2,,,,,,,,,,,,,,,,,,,,,,,,3.10.0,3.9.4,,,,c client,,,,,0,pull-request-available,,"There is memory leak in the SSL support of Zookeeper C Client, see below code (line 1457 of zookeeper.c):
{code:java}
    zcert.ca = strtok(strdup(cert), "",""); 
{code}
In the above code, memory is allocated by calling strdup, but it's never been released.",,"Gowrima opened a new pull request, #2209:
URL: https://github.com/apache/zookeeper/pull/2209

   Fixing memory leak by freeing memory allocated by strdup in cert_t.


;29/Oct/24 22:39;githubbot;600","kezhuw commented on code in PR #2209:
URL: https://github.com/apache/zookeeper/pull/2209#discussion_r1821706486


##########
zookeeper-client/zookeeper-client-c/src/zookeeper.c:
##########
@@ -1324,6 +1324,8 @@ static zhandle_t *zookeeper_init_internal(const char *host, watcher_fn watcher,
     if (cert) {
         zh->fd->cert = calloc(1, sizeof(zcert_t));
         memcpy(zh->fd->cert, cert, sizeof(zcert_t));
+        free(cert->certstr);

Review Comment:
   The two statements above copies `cert` from stack to heap. `cert`'s content must still be valid.



;30/Oct/24 00:55;githubbot;600","kezhuw commented on code in PR #2209:
URL: https://github.com/apache/zookeeper/pull/2209#discussion_r1821712931


##########
zookeeper-client/zookeeper-client-c/src/zookeeper.c:
##########
@@ -1324,6 +1324,8 @@ static zhandle_t *zookeeper_init_internal(const char *host, watcher_fn watcher,
     if (cert) {
         zh->fd->cert = calloc(1, sizeof(zcert_t));
         memcpy(zh->fd->cert, cert, sizeof(zcert_t));
+        free(cert->certstr);

Review Comment:
   This [crash `Zookeeper_readOnly::testReadOnlyWithSSL`](https://ci-hadoop.apache.org/blue/organizations/jenkins/zookeeper-precommit-github-pr/detail/PR-2209/2/pipeline/#step-35-log-577) which is the next test of Zookeeper_readOnly::testReadOnly.



;30/Oct/24 01:03;githubbot;600","Gowrima commented on code in PR #2209:
URL: https://github.com/apache/zookeeper/pull/2209#discussion_r1821882665


##########
zookeeper-client/zookeeper-client-c/src/zookeeper.c:
##########
@@ -1324,6 +1324,8 @@ static zhandle_t *zookeeper_init_internal(const char *host, watcher_fn watcher,
     if (cert) {
         zh->fd->cert = calloc(1, sizeof(zcert_t));
         memcpy(zh->fd->cert, cert, sizeof(zcert_t));
+        free(cert->certstr);

Review Comment:
   Thanks for pointing it out, cert has to be freed in zookeeper_close(). 



;30/Oct/24 05:06;githubbot;600","Gowrima commented on PR #2209:
URL: https://github.com/apache/zookeeper/pull/2209#issuecomment-2448016426

   @kezhuw Please review. 


;30/Oct/24 18:24;githubbot;600","kezhuw commented on PR #2209:
URL: https://github.com/apache/zookeeper/pull/2209#issuecomment-2458627959

   ```c
   zhandle_t *zookeeper_init_ssl(const char *host, const char *cert, watcher_fn watcher,
           int recv_timeout, const clientid_t *clientid, void *context, int flags)
   {
       zcert_t zcert;
       zcert.certstr = strdup(cert);
       zcert.ca = strtok(strdup(cert), "","");
       zcert.cert = strtok(NULL, "","");
       zcert.key = strtok(NULL, "","");
       zcert.passwd = strtok(NULL, "","");       
       return zookeeper_init_internal(host, watcher, recv_timeout, clientid, context, flags, NULL, &zcert, NULL);
   }
   ```
   
   After checking above code, I suggest we fix like following.
   
   ```diff
   -    zcert.ca = strtok(strdup(cert), "","");
   +    zcert.ca = strtok(zcert.certstr, "","");
   ```
   
   Given the ""Possible implementation"" in https://en.cppreference.com/w/cpp/string/byte/strtok and also after evaluting `strtok`. I think there is no guarantee that `zcert.ca` will always point to allocated memory after `strtok`.
   
   cc @symat @ztzg 


;06/Nov/24 02:55;githubbot;600","Gowrima commented on PR #2209:
URL: https://github.com/apache/zookeeper/pull/2209#issuecomment-2460700581

   @kezhuw 
   Isn't zcert.certstr supposed to hold the entire certificate and zcert.ca, zcert.key,  zcert.password hold the appropriate tokens? With the suggested change, zcert.certstr will no longer hold the whole certificate, but only the first token (both zcert.certstr and zcert.ca will point to the first token - duplicates).
   
   zcert.ca = strtok(strdup(cert), "",""); ;06/Nov/24 20:20;githubbot;600","kezhuw commented on PR #2209:
URL: https://github.com/apache/zookeeper/pull/2209#issuecomment-2461388919

   > Isn't zcert.certstr supposed to hold the entire certificate and zcert.ca, zcert.key, zcert.password hold the appropriate tokens?
   
   >  zcert.certstr = strdup(cert) - this will hold the entire certificate as a string.
   
   
   https://github.com/apache/zookeeper/blob/9d522642a9c78dafb7084952f9807beb205478c3/zookeeper-client/zookeeper-client-c/tests/TestReadOnlyClient.cc#L144-L158
   
   `certstr` is only used in `free(zh->fd->cert->certstr)`. I think it serves as a way to pass multiple ssl related parameters.
    After `zookeeper_init_ssl`, it is done and should never be used until `free`. If `zcert_t` is a strong encapsulated struct, than `certstr` should not be exposed.
   
   ```c
   zcert_t zcert_new(const char *certstr) {
       zcert_t zcert;
       zcert.certstr = strdup(cert);
       zcert.ca = strtok(zcert.certstr, "","");
       zcert.cert = strtok(NULL, "","");
       zcert.key = strtok(NULL, "","");
       zcert.passwd = strtok(NULL, "","");  
       return zcert;
   }
   
   void zcert_destroy(zert_t *zcert) {
       free(zcert->certstr);
   }
   
   const char* zcert_get_ca(zcert_t *zcert) {
       return zcert->ca;
   }
   
   // api to retrieve `cert`, `key` and `passwd` but not `certstr`.
   ```


;07/Nov/24 05:55;githubbot;600","Gowrima commented on PR #2209:
URL: https://github.com/apache/zookeeper/pull/2209#issuecomment-2465816255

   void testReadOnlyWithSSL() {
           startReadOnly();
   
           watchctx_t watch;
           zhandle_t* zh = connectReadOnlySSL(""localhost:22281"",
                                              ""/tmp/certs/server.crt,/tmp/certs/client.crt,/tmp/certs/clientkey.pem,password"",
                                              &watch);
   
   certstr = ""/tmp/certs/server.crt,/tmp/certs/client.crt,/tmp/certs/clientkey.pem,password""
   
   server.crt is the public key stored in zcert.ca, client.crt is the private key stored in zcert.cert, followed by zcert.key and zcert.password storing the client key and password.
   
   With the suggested change, both zcert.certstr and zcert.ca will point to 'server.crt', as follows,
   
   certstr = /tmp/certs/server.crt
   ca = /tmp/certs/server.crt
   cert = /tmp/certs/client.crt
   key = /tmp/certs/clientkey.pem
   password = password
   
   We should either completely remove certstr from struct zcert_t or keep it to store the SSL parameters. I strongly recommend keeping the existing implementation to store the original SSL parameters.
   


;08/Nov/24 22:00;githubbot;600","kezhuw commented on PR #2209:
URL: https://github.com/apache/zookeeper/pull/2209#issuecomment-2466111427

   > With the suggested change, both zcert.certstr and zcert.ca will point to 'server.crt', as follows,
   
   Does it matter if we never use `certstr` as `const char*` ?
   
   The problem of current aproach is that it will **corrupt program only after zookeeper_close**  with cert str "",,,/tmp/certs/server.crt,/tmp/certs/client.crt,/tmp/certs/clientkey.pem,password""(be aware of the leading "","") as `ca` will point to address not from `malloc`. My best wish is crash.
   
   I think there are several ways to fix this:
   1. `zcert.ca = strtok(zcert.certstr, "","");`
   2. Enforce strong checking against input `certstr` and use only `ca`.
   3. Enforce strong checking against input `certstr` and use both `certstr` and `ca`.
   
   I prefer to the first as it demands no api semantic changes.
   
   > I strongly recommend keeping the existing implementation to store the original SSL parameters.
   
   If you are going to this approach, please ensure `ca` pointing to address from `malloc`.


;09/Nov/24 08:06;githubbot;600","kezhuw commented on PR #2209:
URL: https://github.com/apache/zookeeper/pull/2209#issuecomment-2466114665

   > Given the ""Possible implementation"" in https://en.cppreference.com/w/cpp/string/byte/strtok and also after evaluting strtok. I think there is no guarantee that zcert.ca will always point to allocated memory after strtok.
   
   Quoted from  https://github.com/apache/zookeeper/pull/2209#issuecomment-2458627959


;09/Nov/24 08:18;githubbot;600","Gowrima commented on PR #2209:
URL: https://github.com/apache/zookeeper/pull/2209#issuecomment-2466279138

   This is the original implementation,
   
   zcert_t zcert;
   zcert.certstr = strdup(cert);
   zcert.ca = strtok(strdup(cert), "","");
   
   zcert.ca is pointing to malloc'd memory created by strdup() (https://man7.org/linux/man-pages/man3/strdup.3.html).
   
   Since zcert.ca is allocated by malloc, it has to be explicitly freed, it leads to memory leak otherwise.
   
   
   


;09/Nov/24 16:40;githubbot;600","Gowrima commented on PR #2209:
URL: https://github.com/apache/zookeeper/pull/2209#issuecomment-2474930971

   @kezhuw Awaiting your approval to merge. Please let me know if the changes look good.


;13/Nov/24 22:13;githubbot;600","kezhuw commented on PR #2209:
URL: https://github.com/apache/zookeeper/pull/2209#issuecomment-2484562704

   > The problem of current aproach is that it will corrupt program only after zookeeper_close with cert str "",,,/tmp/certs/server.crt,/tmp/certs/client.crt,/tmp/certs/clientkey.pem,password""(be aware of the leading "","") as ca will point to address not from malloc. My best wish is crash.   ;19/Nov/24 02:14;githubbot;600","kezhuw commented on PR #2209:
URL: https://github.com/apache/zookeeper/pull/2209#issuecomment-2484602716

   > There is no guarantee that free will crash in this case.


;19/Nov/24 02:55;githubbot;600","Gowrima commented on PR #2209:
URL: https://github.com/apache/zookeeper/pull/2209#issuecomment-2495363364

   @kezhuw I think the input cert string has to be validated before being stored in cert_t. Nonetheless, memory allocated by strdup() in cert.ca has to be freed (after the validation check, it should be safe to assume that the first token's address points to the address returned by strdup()).


;23/Nov/24 06:20;githubbot;600","kezhuw commented on PR #2209:
URL: https://github.com/apache/zookeeper/pull/2209#issuecomment-2499384241

   > he input cert string has to be validated before being stored in cert_t
   
   There is no guarantee from our side. For invalid input, we have to do either:
   1. Reports error.
   2. Crashes eagerly.
   3. Tolerates ""invalid"" input.
   
   This pr goes opposite as I pointed out in https://github.com/apache/zookeeper/pull/2209#issuecomment-2484562704.
   
   I am willing to accept either of above(I stated this in https://github.com/apache/zookeeper/pull/2209#issuecomment-2458627959 and https://github.com/apache/zookeeper/pull/2209#issuecomment-2466111427). Personally, I prefer the third as it is the current situation.


;26/Nov/24 01:28;githubbot;600","kezhuw commented on PR #2209:
URL: https://github.com/apache/zookeeper/pull/2209#issuecomment-2499386928

   > Personally, I prefer the third as it is the current situation.
   
   More importantly, the third introduces nothing new in API.


;26/Nov/24 01:31;githubbot;600","Gowrima commented on PR #2209:
URL: https://github.com/apache/zookeeper/pull/2209#issuecomment-2501648004

   Hi @kezhuw, Thanks for your suggestions. Please review the following options to fix this,
   
   1. If we remove strdup() for cert.ca, then cert.certstr and cert.ca will point to the first token. In this case, should certstr be removed from cert_t structure since certstr is not holding the whole string?
   2. Introduce a new API to validate the input cert string, followed by strdup() to allocate heap memory for cert.ca, eventually freeing this memory in close().
   3. Assume that the input string is valid, go ahead with freeing the memory allocated for cert.ca by strdup().
   
   I believe that (2) is the right approach, will willing to accept suggestions. Thank you!


;26/Nov/24 18:25;githubbot;600","kezhuw commented on PR #2209:
URL: https://github.com/apache/zookeeper/pull/2209#issuecomment-2502369147

   1. I have pointed that ""there is no guarantee that zcert.ca will always point to allocated memory after strtok"" since https://github.com/apache/zookeeper/pull/2209#issuecomment-2458627959. (and repeated also in https://github.com/apache/zookeeper/pull/2209#issuecomment-2466111427 https://github.com/apache/zookeeper/pull/2209#issuecomment-2484562704). Given cert str **,,,/tmp/certs/server.crt,/tmp/certs/client.crt,/tmp/certs/clientkey.pem,password**(be aware of leading **,,,**), `cert.certstr` and `cert.ca` will point to different memory address.
   2. Is this a brand new user-facing API ? -1 if it is the case. I don't think people want and will use a separate API to validate the cert str. All changes should accommodate to existing code path.
   3. -1 on this. This is the current state of this pr. I have pointed out the problem of this approach. https://github.com/apache/zookeeper/pull/2209#issuecomment-2458627959 https://github.com/apache/zookeeper/pull/2209#issuecomment-2466111427 https://github.com/apache/zookeeper/pull/2209#issuecomment-2484562704.
   
   
   > I believe that (2) is the right approach, but willing to accept suggestions.
   
   I suggest you to focus on fixing the memory leaking problem and leave changes to API behavior to new issue. Personally, I have no willing to change existing behavior of API.
   
   > should certstr be removed from cert_t structure since certstr is not holding the whole string
   
   If you are worried about misuse of `cert.certstr`, it would be nice to comment it a bit. Say:
   
   ```diff
    typedef struct _zcert {
   +    // Points to memory region from `malloc`, don't use it for any purposes other than `free`.
        char *certstr;
   ```
   
   Combining with fix in https://github.com/apache/zookeeper/pull/2209#issuecomment-2458627959, the result is sufficient for us to ship it.


;27/Nov/24 00:56;githubbot;600","Gowrima commented on PR #2209:
URL: https://github.com/apache/zookeeper/pull/2209#issuecomment-2506551082

   @kezhuw With the following code changes,
       zcert_t zcert;
       zcert.certstr = strdup(cert);
       zcert.ca = strtok(zcert.certstr, "","");
   
   and the following input,
   init_("",,,/tmp/certs/server.crt,/tmp/certs/client.crt,/tmp/certs/clientkey.pem,password"");
   
   the result is going to be,
   certstr = ,,,/tmp/certs/server.crt
    ca = /tmp/certs/server.crt
    cert = /tmp/certs/client.crt
   key = /tmp/certs/clientkey.pem
    password = password
   
   This is still not correct - certstr is not serving it's purpose (to hold the entire cert string as-is), but I will go ahead and keep this version of the fix. Since this is not a user-input from CLI, and hard-coded, we can make sure that the input string does not contain malicious characters. Thanks.


;28/Nov/24 17:24;githubbot;600","kezhuw commented on PR #2209:
URL: https://github.com/apache/zookeeper/pull/2209#issuecomment-2507215294

   > certstr is not serving it's purpose (to hold the entire cert string as-is)
   
   I don't think there is such a purpose. I pointed out this.
   
   > certstr is only used in free(zh->fd->cert->certstr). I think it serves as a way to pass multiple ssl related parameters.
   After zookeeper_init_ssl, it is done and should never be used until free. If zcert_t is a strong encapsulated struct, than certstr should not be exposed.    ;29/Nov/24 07:13;githubbot;600","kezhuw merged PR #2209:
URL: https://github.com/apache/zookeeper/pull/2209


;07/Dec/24 05:58;githubbot;600","kezhuw commented on PR #2209:
URL: https://github.com/apache/zookeeper/pull/2209#issuecomment-2524956837

   @Gowrima Thank you for your contribution! Merged!


;07/Dec/24 06:02;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,14400,,,0,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sat Dec 07 05:59:33 UTC 2024,,,,,,,,,,"0|z0l5bk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Dec/20 01:55;maoling;[~rogerluo]

Could you please help us fix this issue?

ZooKeeper uses the github workflow. The contributor guideline is [here](https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute);;;","07/Dec/24 05:59;kezhuw;Issue resolved by pull request 2209
[https://github.com/apache/zookeeper/pull/2209];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No install target for C library,ZOOKEEPER-4012,13341952,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,Fraser,Fraser,21/Nov/20 22:44,13/Apr/21 07:17,29/Jun/25 13:34,,3.5.7,3.5.8,3.6.1,3.6.2,,,,,,,,,,,,,,,,,,,,,,,,,,c client,,,,,0,pull-request-available,,"`CMakeLists.txt` in `zookeeper-client/zookeeper-client-c` has no `INSTALL()` directives, so running `make install` ends up not installing anything.",,"Hugmeir opened a new pull request #1546:
URL: https://github.com/apache/zookeeper/pull/1546


   Previously, did this:
   
       ; cmake .
       ; make
       ; make install
   
   ended up doing nothing, because CMakeLists.txt didn't include
   INSTALL() directives.  With this commit applied, the last
   command outputs:
   
       ; make install
       [ 18%] Built target hashtable
       [ 75%] Built target zookeeper
       [ 87%] Built target load_gen
       [100%] Built target cli
       Install the project...
       -- Install configuration: """"
       -- Installing: /usr/local/include/zookeeper/zookeeper.h
       -- Installing: /usr/local/include/zookeeper/proto.h
       -- Installing: /usr/local/include/zookeeper/config.h
       -- Installing: /usr/local/include/zookeeper/zookeeper_version.h
       -- Installing: /usr/local/include/zookeeper/winconfig.h
       -- Installing: /usr/local/include/zookeeper/zookeeper_log.h
       -- Installing: /usr/local/include/zookeeper/recordio.h
       -- Installing: /usr/local/lib/libzookeeper.a


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Nov/20 22:45;githubbot;600","Hugmeir commented on pull request #1546:
URL: https://github.com/apache/zookeeper/pull/1546#issuecomment-731655516


   Whoops, missed the generated header in the list of files that need to be installed -- patched now!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Nov/20 00:03;githubbot;600","ztzg commented on a change in pull request #1546:
URL: https://github.com/apache/zookeeper/pull/1546#discussion_r528568179



##########
File path: zookeeper-client/zookeeper-client-c/CMakeLists.txt
##########
@@ -290,3 +290,21 @@ if(WANT_CPPUNIT)
     ""ZKROOT=${CMAKE_CURRENT_SOURCE_DIR}/../..""
     ""CLASSPATH=$CLASSPATH:$CLOVER_HOME/lib/clover*.jar"")
 endif()
+
+# set up `make install`.
+# headers end up in /usr/local/include/zookeeper/*.h
+# (with /usr/local being overrideable by using --prefix etc)
+INSTALL(FILES
+    include/zookeeper.h
+    include/proto.h
+    include/config.h

Review comment:
       Note `$C_CLIENT/include/config.h` only exists if one builds in-place.  This, which is valid (and recommended) in CMake:
   
   ```sh
   mkdir build \
       && cd build \
       && cmake -DCMAKE_INSTALL_PREFIX=/tmp/zkc -DCMAKE_VERBOSE_MAKEFILE=YES .. \
       && cmake --build . \
       && cmake --install .
   ```
   
   fails with ""no such file,"" as `config.h` ends up in `$C_CLIENT/build/include`.
   
   But `config.h` should not be installed, anyway: its only purpose is to drive the compilation of the library.  Each program which is compiled and linked against the ZooKeeper client should have their own `config.h`, and the binary interface to `libzookeeper` should be independent from it.
   
   (I know that `zookeeper.h` includes some `HAVE_*`/`THREADED` preprocessor defines, but that is unfortunate and historical.  And I have also seen your [ZOOKEEPER-4013](https://issues.apache.org/jira/browse/ZOOKEEPER-4013), ""pkg-config file for C library,"" and agree that this is how client program compilation should be driven.)
   
   So: would you mind removing that line?

##########
File path: zookeeper-client/zookeeper-client-c/CMakeLists.txt
##########
@@ -290,3 +290,21 @@ if(WANT_CPPUNIT)
     ""ZKROOT=${CMAKE_CURRENT_SOURCE_DIR}/../..""
     ""CLASSPATH=$CLASSPATH:$CLOVER_HOME/lib/clover*.jar"")
 endif()
+
+# set up `make install`.
+# headers end up in /usr/local/include/zookeeper/*.h
+# (with /usr/local being overrideable by using --prefix etc)
+INSTALL(FILES
+    include/zookeeper.h
+    include/proto.h
+    include/config.h
+    include/zookeeper_version.h
+    include/winconfig.h
+    include/zookeeper_log.h
+    include/recordio.h
+    generated/zookeeper.jute.h
+  DESTINATION include/zookeeper/)
+# libzookeeper.a ends up in /usr/local/lib/libzookeeper.a
+INSTALL(TARGETS zookeeper
+  ARCHIVE DESTINATION lib)
+

Review comment:
       I have seen your [ZOOKEEPER-4014](https://issues.apache.org/jira/browse/ZOOKEEPER-4014), ""libzookeeper.a not properly linking to libhashtable.a,"" but I believe there is some confusion due to the way `.a` archives (""static libraries"") work.
   
   `.a` archives cannot be ""linked"" against each other; they're just ""ZIP archives of objects"" of sorts.  The fact that the objects contained in `x.a` require more objects from `y.a` is, at best, encoding in a `pkg-config` or `libtool` metadata file.
   
   In the current state of affairs, the ""least wrong"" thing to do probably is to install both archives to the destination:
   
   ```
   INSTALL(TARGETS zookeeper hashtable
      ARCHIVE DESTINATION lib)
   ```
   
   and to link any client program against both; i.e., something like:
   
   ```
   $LINK […] -L/path/to/client/lib \
       -lzookeeper -lhashtable \
       -lcrypto -lssl -lsasl2
   ```
   
   But: it is indeed unclear why/if `libhashtable.a` is still needed if we go the CMake route.
   
   The Autoconf path produces a `libhashtable.a`, but it is systematically used with the internal `libzk{st,mt}.a`; as far as I can tell, its only purpose is to allow its thread-agnostic source files to only be compiled once. And as opposed to `libzk{st,mt}.a`, the installed `libzookeeper_{st,mt}.a` archives include the `hashtable` objects.
   
   (`.so` shared objects—or DLLs—also include the `hashtable` code, but that is different as these are ""hard-linked"" rather than being collections of loose objects.)




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Nov/20 11:13;githubbot;600","symat commented on pull request #1546:
URL: https://github.com/apache/zookeeper/pull/1546#issuecomment-732769920


   Hello! Thanks for the initiative / contribution @Hugmeir !  In general I like the idea, and I also think the questions raised by @ztzg are important. 
   
   Sorry, I can't go much deeper to this PR right now, also I'm not really an expert in cmake or in make in general. But I'll follow this PR and I'm happy to test it later.
   
   >One thing you have to be aware of, is that this build mechanism was initially contributed for ""easier"" Windows support; as far as I can tell, everybody still uses Autotools on POSIX-ish platforms.
   
   this is true, and AFAIK cmake is the only way now how to build the C client on windows, so it is important that whatever we change here we should test it on windows too (I can help with that). 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Nov/20 09:26;githubbot;600","moruoxian commented on pull request #1546:
URL: https://github.com/apache/zookeeper/pull/1546#issuecomment-733558986


   hello dear friend I found a problem  , I. download the 3.6.0 version and I cannot find the build.xml in the footpath then I cannot build the zookeeper-client-c  ,and I get. the error like this xxxx ant xxxx ,I think the build.xml is missing  !


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Nov/20 08:47;githubbot;600","symat commented on pull request #1546:
URL: https://github.com/apache/zookeeper/pull/1546#issuecomment-733576904


   @moruoxian please try this way:
   - download the latest release (3.6.2 now)
   - in the parent folder run 'mvn clean install -DskipTests -Pfull-build`
   
   more info for building the C-client can be found here: https://github.com/apache/zookeeper/blob/master/README_packaging.md#building-the-c-client-using-maven
   
   I think this readme file is not up-to-date, we should fix it: https://github.com/apache/zookeeper/blob/master/zookeeper-client/zookeeper-client-c/README (it is still referring to ant, what we don't use anymore)
   
   also feel free to ask these type of generic questions on the mailing list (https://zookeeper.apache.org/lists.html), here in this pull request much less people are watching :)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Nov/20 09:19;githubbot;600","moruoxian commented on pull request #1546:
URL: https://github.com/apache/zookeeper/pull/1546#issuecomment-734257898


   > Hello! Thanks for the initiative / contribution @Hugmeir ! In general I like the idea, and I also think the questions raised by @ztzg are important.
   > 
   > Sorry, I can't go much deeper to this PR right now, also I'm not really an expert in cmake or in make in general. But I'll follow this PR and I'm happy to test it later.
   > 
   > > One thing you have to be aware of, is that this build mechanism was initially contributed for ""easier"" Windows support; as far as I can tell, everybody still uses Autotools on POSIX-ish platforms.
   > 
   > this is true, and AFAIK cmake is the only way now how to build the C client on windows, so it is important that whatever we change here we should test it on windows too (I can help with that).
   
   thanks  a lot  and I find that I build it success on linux ，but  I  cannot build on windows  it  post error like this 
   
   [ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.8.1:compile (pre-compile-jute) on project zookeeper-jute: Compilation failure
   [ERROR] No compiler is provided in this environment. Perhaps you are running on a JRE rather than a JDK?
   [ERROR]
   [ERROR] -> [Help 1]
   can u help me dear friend？thanks 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Nov/20 12:00;githubbot;600","eolivelli commented on pull request #1546:
URL: https://github.com/apache/zookeeper/pull/1546#issuecomment-734261103


   Probably you have only a JRE and not a fully JDK.
   I suggest you to install a full JDK.
   Consider using JDK11.
   I am using the one distributed by AdoptOpenJDK for instance. 
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Nov/20 12:07;githubbot;600","moruoxian commented on pull request #1546:
URL: https://github.com/apache/zookeeper/pull/1546#issuecomment-734567974


   > Probably you have only a JRE and not a fully JDK.
   > I suggest you to install a full JDK.
   > Consider using JDK11.
   > I am using the one distributed by AdoptOpenJDK for instance.
   
   thank u
   I solve the jdk problem in windows system ，I change the path in system and  I use the cmake to build the project client_c , and mkdir build && cd build 
   ​cmake ..   -G ""Visual Studio 16 2019""  -A win32 -T v140  -DCMAKE_BUILD_TYPE=Release
    then open the sln file with vs2019 and build  the I found the release file success !! thanks a lot  I think it need to put in the README file to help other C++ programmer to know it ,thanks  to everyone help me .


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Nov/20 02:37;githubbot;600","eolivelli commented on pull request #1546:
URL: https://github.com/apache/zookeeper/pull/1546#issuecomment-734711857


   I am happy that it worked for you.
   Do you want to send a PR to update the README file please?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Nov/20 08:31;githubbot;600","ShallyLai commented on pull request #1546:
URL: https://github.com/apache/zookeeper/pull/1546#issuecomment-818383280


   Excuse me, I have a problem of install zookeeper on my MBP M1. When I type
   `brew install --build-from-source zookeeper`
   to install it, but appear these error messages below, and I can't find the answer online. Can you guys please help me how to solve it? 
   Thank you.
   
   [ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.8.1:compile (pre-compile-jute) on project zookeeper-jute: Fatal error compiling: error: invalid flag: -Xdoclint:-missing -> [Help 1]
   [ERROR]
   [ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
   [ERROR] Re-run Maven using the -X switch to enable full debug logging.
   [ERROR]
   [ERROR] For more information about the errors and possible solutions, please read the following articles:
   [ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
   [ERROR]
   [ERROR] After correcting the problems, you can resume the build with the command
   [ERROR]   mvn <args> -rf :zookeeper-jute


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Apr/21 02:23;githubbot;600","ShallyLai edited a comment on pull request #1546:
URL: https://github.com/apache/zookeeper/pull/1546#issuecomment-818383280


   Excuse me, I have a problem of installing zookeeper on my MBP M1. When I type
   `brew install --build-from-source zookeeper`
   to install it, but appear these error messages below, and I can't find the answer online. Can you guys please help me how to solve it? 
   Thank you.
   
   [ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.8.1:compile (pre-compile-jute) on project zookeeper-jute: Fatal error compiling: error: invalid flag: -Xdoclint:-missing -> [Help 1]
   [ERROR]
   [ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
   [ERROR] Re-run Maven using the -X switch to enable full debug logging.
   [ERROR]
   [ERROR] For more information about the errors and possible solutions, please read the following articles:
   [ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
   [ERROR]
   [ERROR] After correcting the problems, you can resume the build with the command
   [ERROR]   mvn <args> -rf :zookeeper-jute


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Apr/21 02:36;githubbot;600","ShallyLai removed a comment on pull request #1546:
URL: https://github.com/apache/zookeeper/pull/1546#issuecomment-818383280


   Excuse me, I have a problem of installing zookeeper on my MBP M1. When I type
   `brew install --build-from-source zookeeper`
   to install it, but appear these error messages below, and I can't find the answer online. Can you guys please help me how to solve it? 
   Thank you.
   
   [ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.8.1:compile (pre-compile-jute) on project zookeeper-jute: Fatal error compiling: error: invalid flag: -Xdoclint:-missing -> [Help 1]
   [ERROR]
   [ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
   [ERROR] Re-run Maven using the -X switch to enable full debug logging.
   [ERROR]
   [ERROR] For more information about the errors and possible solutions, please read the following articles:
   [ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
   [ERROR]
   [ERROR] After correcting the problems, you can resume the build with the command
   [ERROR]   mvn <args> -rf :zookeeper-jute


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Apr/21 07:17;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,7800,,,0,7800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sat Nov 21 22:45:28 UTC 2020,,,,,,,,,,"0|z0ktgg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Nov/20 22:45;Fraser;[https://github.com/apache/zookeeper/pull/1546];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Vulnerabilities in components packaged in zookeeper docker,ZOOKEEPER-3995,13339162,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,sridarshans,sridarshans,06/Nov/20 11:53,03/Mar/22 18:48,29/Jun/25 13:34,,3.6.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,build,other,,,,0,,,"On running the Aquasec Trivy Vulnerability scanner on the latest version on zookeeper docker (3.6.2) 124 vulnerabilities were identified with the following severities LOW: 88, MEDIUM: 13, HIGH: 23

These issues were across various libraries packaged along with zookeeper in the docker image.

 

Attaching the list of vulnerabilities.

 

Expected: The libraries packaged need to be up to date with no known vulnerabilities.

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-4484,,,,,,,"06/Nov/20 11:52;sridarshans;Zookeeper 3.6.2.txt;https://issues.apache.org/jira/secure/attachment/13014823/Zookeeper+3.6.2.txt",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Nov 06 12:30:54 UTC 2020,,,,,,,,,,"0|z0kc8o:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Nov/20 12:30;eolivelli;I am sorry, but AKAIK we are not maintaining that docker image.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
QuorumCnxManager Listener port bind retry does not retry DNS lookup,ZOOKEEPER-3991,13338634,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,,lander.visterin,lander.visterin,03/Nov/20 12:46,28/Jul/23 03:23,29/Jun/25 13:34,16/Nov/20 07:53,3.6.2,,,,,,,,,,,,,,,,,,,,,,,,3.6.3,3.7.0,,,,quorum,,,,,0,pull-request-available,,"We run Zookeeper in a container environment where DNS is not stable. As recommended by the documentation, we set _electionPortBindRetry_ to 0 (keeps retrying forever).

On some instances, we get the following exception in an infinite loop, even though the address already became resolve-able:

 
{noformat}
zk-2_1  | 2020-11-03 10:57:08,407 [myid:3] - ERROR [ListenerHandler-zk-2.test:3888:QuorumCnxManager$Listener$ListenerHandler@1093] - Exception while listening
zk-2_1  | java.net.SocketException: Unresolved address
zk-2_1  | 	at java.base/java.net.ServerSocket.bind(Unknown Source)
zk-2_1  | 	at java.base/java.net.ServerSocket.bind(Unknown Source)
zk-2_1  | 	at org.apache.zookeeper.server.quorum.QuorumCnxManager$Listener$ListenerHandler.createNewServerSocket(QuorumCnxManager.java:1140)
zk-2_1  | 	at org.apache.zookeeper.server.quorum.QuorumCnxManager$Listener$ListenerHandler.acceptConnections(QuorumCnxManager.java:1064)
zk-2_1  | 	at org.apache.zookeeper.server.quorum.QuorumCnxManager$Listener$ListenerHandler.run(QuorumCnxManager.java:1033)
zk-2_1  | 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
zk-2_1  | 	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
zk-2_1  | 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
zk-2_1  | 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
zk-2_1  | 	at java.base/java.lang.Thread.run(Unknown Source){noformat}
Zookeeper does not actually retry the DNS resolution, it just keeps using the old failed result.

 

This happens because the InetSocketAddress is created once and the DNS lookup happens when it is created.

This issue has come up previously in https://issues.apache.org/jira/browse/ZOOKEEPER-1506 but it appears to still happen here.

I have attached a repro.tar.gz to help reproduce this issue. Steps:
 * Untar repro.tar.gz
 * docker-compose up
 * See the exception keeps happening for zk-2, not for the others
 * Open db.test and uncomment the zk-2 line, increment the serial and save
 * Wait a few seconds for the DNS to refresh
 * Verify that you can resolve zk-2.test now (dig @172.16.60.2 zk-2.test) but the error keeps appearing

I have also attached a patch that resolves this. The patch will retry DNS resolution if the address is still unresolved every time it tries to create the server socket.

 ",,"lvisterin opened a new pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524


   Setting `electionPortBindRetry` to 0 (as recommended by the documentation for the setup we are using) results in this code being called in a loop. 
   
   The desired behaviour is that in case of a bad DNS reply the server socket creation will fail and keep retrying until the hostname resolves. The current behaviour is that it keeps throwing unresolved address errors even though the DNS entry became correct.
   
   For more details and reproduction steps see the Jira issue at https://issues.apache.org/jira/browse/ZOOKEEPER-3991
   
   Please note that the contents of this PR are different from the patch I initially attached to the issue.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Nov/20 10:34;githubbot;600","lvisterin commented on pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524#issuecomment-722357182


   I have tried to reproduce the CI error:
   
   ```
   StandaloneDisabledTest.startSingleServerTest:112->startObservers:224->startServer:176 Error- Server started in Standalone Mode! ==> expected: <true> but was: <false>
   ```
   
   But on my machine on a clean working tree I do not get any test failures, using an identical test command. Is this a known issue or should I dig deeper?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Nov/20 12:49;githubbot;600","eolivelli commented on pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524#issuecomment-722934617


   I have restarted the build
   https://ci-hadoop.apache.org/blue/organizations/jenkins/zookeeper-precommit-github-pr/detail/PR-1524/2/pipeline
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Nov/20 07:54;githubbot;600","lvisterin commented on pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524#issuecomment-722938335


   I have been running this code for a couple of days, however today I noticed the same issue appearing in `Leader.java` 's `createServerSocket`, so I am planning to fix that in this PR too if possible.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Nov/20 08:04;githubbot;600","symat commented on pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524#issuecomment-723854767


   > I have been running this code for a couple of days, however today I noticed the same issue appearing in Leader.java 's createServerSocket, so I am planning to fix that in this PR too if possible.
   
   sure, go ahead, I'll approve the change and merge it. Let us know when you think you finished


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/20 08:33;githubbot;600","symat commented on pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524#issuecomment-723857220


   I saw you originally guarded the address recreation with the following condition:
   
   ``` 
   if (address.isUnresolved()) { ... }
   ```
   
   Why did you decide to remove this condition? Anyway, this code shouldn't run frequently, so I'm fine to recreate the address every time... but I'm curious: having the `if (address.isUnresolved())` didn't solve the problem?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/20 08:37;githubbot;600","lvisterin commented on pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524#issuecomment-723870998


   > I saw you originally guarded the address recreation with the following condition:
   > 
   > ```
   > if (address.isUnresolved()) { ... }
   > ```
   > 
   > Why did you decide to remove this condition? Anyway, this code shouldn't run frequently, so I'm fine to recreate the address every time... but I'm curious: having the `if (address.isUnresolved())` didn't solve the problem?
   
   In the container environment I am running in, it is possible to get the old address of a certain Zookeeper instance when it is rescheduled. In such case the address will be ""resolved"", just to the wrong one, and it will again fail in a loop.
   
   That said I think it is reasonable to say Zookeeper does not need to support this scenario and that my DNS just has to be fixed. Most users won't run into this. So let me know if you'd prefer for me to add it back, because I do have other workarounds for this error case.
   
   > sure, go ahead, I'll approve the change and merge it. Let us know when you think you finished
   
   Have not gotten to committing this yet because I am dealing with some other strange things happening in our setup and need to make sure this patch is good. I'll leave a comment when I know more.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/20 09:00;githubbot;600","symat commented on pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524#issuecomment-723986677


   > That said I think it is reasonable to say Zookeeper does not need to support this scenario and that my DNS just has to be fixed. Most users won't run into this. So let me know if you'd prefer for me to add it back
   
   no, I actually prefer it as it is (without the `isUnresolved`) check. I was just curious :) Thanks for your explanation!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/20 12:36;githubbot;600","symat edited a comment on pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524#issuecomment-723986677


   > That said I think it is reasonable to say Zookeeper does not need to support this scenario and that my DNS just has to be fixed. Most users won't run into this. So let me know if you'd prefer for me to add it back
   
   no, I actually prefer it as it is (without the `isUnresolved` check). I was just curious :) Thanks for your explanation!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/20 12:37;githubbot;600","lvisterin commented on pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524#issuecomment-725991120


   >however today I noticed the same issue appearing in Leader.java 's createServerSocket
   
   I have not been able to repro this one, but identified it is most likely caused by an issue on our DNS where the response flips between bad and good IP addresses (due to consistency issues). That way it was able to pass this fixed part, land in that other piece of code, and break again. The problem was that at that point things were so messed up that there are many other issues so a simple fix there does not help.
   
   Therefore I believe this PR is sufficient to make Zookeeper more resilient for users with a laggy DNS, and in cases where the DNS gives a random mix of good and bad replies it is better fixed on the user's side instead (which I did on my end).
   
   So for me this is good to be merged if you agree.
   
   Thanks for the review! 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Nov/20 10:31;githubbot;600","eolivelli commented on pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524#issuecomment-725994957


   @symat are you okay with this patch ?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Nov/20 10:38;githubbot;600","symat commented on pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524#issuecomment-726157835


   sure, let's merge it! 
   I think this is some kind of a bugfix, so we should merge it to all active branches, not only to master.
   (I'm a bit overloaded right now, but I can do it on Monday, if noone else is doing it before)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Nov/20 15:42;githubbot;600","asfgit closed pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Nov/20 07:43;githubbot;600","symat commented on pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524#issuecomment-727802805


   I merged this to branch-3.6 and to master.
   The cherry-pick to branch-3.5 was not clean. I'm not really sure, but quickly checking the code I think this fix is not even needed on 3.5, we might already recreate the socket address there.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Nov/20 07:52;githubbot;600","symat commented on pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524#issuecomment-727803765


   thank you @lvisterin for your contribution!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Nov/20 07:54;githubbot;600","showuon commented on PR #1524:
URL: https://github.com/apache/zookeeper/pull/1524#issuecomment-1654924012

   @lvisterin , we encountered this issue recently, and I found you also mentioned this in the [comment](https://github.com/apache/zookeeper/pull/1524#issuecomment-722938335):
   
   > I have been running this code for a couple of days, however today I noticed the same issue appearing in Leader.java 's createServerSocket, so I am planning to fix that in this PR too if possible.
   
   Looks like you didn't manage to fix that at the same time. I've opened a [PR](https://github.com/apache/zookeeper/pull/2040) to address the one in `Leader.java`. FYI.
   
   cc @symat @eolivelli 
   


;28/Jul/23 03:23;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,9600,,,0,9600,,,,,,,,,,,,,ZOOKEEPER-4728,,,,,,,,,"03/Nov/20 12:41;lander.visterin;repro.tar.gz;https://issues.apache.org/jira/secure/attachment/13014635/repro.tar.gz",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,9223372036854775807,,,,,Tue Nov 03 17:26:13 UTC 2020,,,,,,,,,,"0|z0k8zs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Nov/20 13:07;maoling;[~lander.visterin]

ZooKeeper uses the github workflow. The contributor guideline is [here](https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute);;;","03/Nov/20 17:26;lander.visterin;[~maoling],

Thank you for the link, I will make a GitHub PR when I have tested my patch more thoroughly.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
use of uninitialized data in zookeeper-client/zookeeper-client-c/src/zookeeper.c:free_auth_completion,ZOOKEEPER-3954,13333632,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,ztzg,mwhudson,mwhudson,04/Oct/20 23:39,28/Mar/21 08:54,29/Jun/25 13:34,12/Oct/20 06:41,3.6.2,,,,,,,,,,,,,,,,,,,,,,,,3.5.9,3.6.3,3.7.0,,,c client,,,,,0,pull-request-available,,"When compiled with {{-O3}} and {{gcc-10}} (which is the default for Ubuntu on ppc64el), compilation fails like this:
{code}
/bin/bash ./libtool -tag=CC --mode=compile gcc -DHAVE_CONFIG_H -I. -I./include -I./tests -I./generated -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Werror -g -O3 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -MT zookeeper.lo -MD -MP -MF .deps/zookeeper.Tpo -c -o zookeeper.lo `test -f 'src/zookeeper.c' || echo './'`src/zookeeper.c libtool: compile: gcc -DHAVE_CONFIG_H -I. -I./include -I./tests -I./generated -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Werror -g -O3 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -MT zookeeper.lo -MD -MP -MF .deps/zookeeper.Tpo -c src/zookeeper.c -fPIC -DPIC -o .libs/zookeeper.o
src/zookeeper.c: In function 'free_completions': 
src/zookeeper.c:284:9: error: 'a_list.next' may be used uninitialized in this function [-Werror=maybe-uninitialized] 
284 | tmp = a_list>next; 
    | ~~~^~~~~~~~~~~~~ 
cc1: all warnings being treated as errors
{code}
 What's happening here is that free_auth_completions is being inlined into free_completions, and this lets gcc see that members of a_list are being accessed without initialization. I don't know anything like enough about this code to see if this is a bug in code paths that are actually taken but at a glance it's certainly not obviously impossible: if the two if conditions at the top level of free_completions evaluate false, the function effectively looks like this:
 
{code:c}
void free_completions(zhandle_t *zh,int callCompletion,int reason)
{ 
 auth_completion_list_t a_list; 
 free_auth_completion(&a_list); 
} 
{code}

so it's pretty clear that a_list is backed by uninitialized stack memory. Explicitly initializing the variable with ""{{a_list = \{NULL, NULL, NULL}}}"" makes the warning go away.
 ",,"ztzg opened a new pull request #1481:
URL: https://github.com/apache/zookeeper/pull/1481


   The most important change in this PR avoids a confusing and scary compilation issue [encountered by Michael Hudson-Doyle](https://issues.apache.org/jira/browse/ZOOKEEPER-3954) when building the C client with GCC 10 and ""aggressive"" optimization settings:
   
   > `free_auth_completions` is being inlined into `free_completions`, and this lets gcc see that members of `a_list` are being accessed without initialization
   
   This is (fortunately!) a red herring: what GCC doesn't see is that, in practice, `zoo_lock_auth` always returns zero, and that `a_list` is always initialized in the conditional block which follows it.
   
   That issue is easily ""fixed"" by removing the `if`.  The rest of the client code doesn't check `zoo_lock_auth`'s return value--and we have bigger issues if unconditional locks start failing anyway.
   
   The remaining changes get rid of a couple of innocuous warnings, to that the client can successfully build even when configured with `-Werror`.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Oct/20 21:24;githubbot;600","ztzg commented on pull request #1481:
URL: https://github.com/apache/zookeeper/pull/1481#issuecomment-703898784


   This PR is against the 3.5 branch, but the commits, once reviewed, should also be cherry-picked to 3.6 and (partially) to `master`.  (Only the first commit is necessary on `master`; the other two create trivial conflicts because they have already been fixed there.)
   
   Cc: @mwhudson, @eolivelli, @symat.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Oct/20 21:28;githubbot;600","eolivelli commented on pull request #1481:
URL: https://github.com/apache/zookeeper/pull/1481#issuecomment-704035647


   The best practice is to send the PR against master, then send amended patches for other active branches when needed.
   
   Btw thank you very much for this fix.
   
   Please send the patch for master as well


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Oct/20 05:26;githubbot;600","ztzg opened a new pull request #1486:
URL: https://github.com/apache/zookeeper/pull/1486


   The most important change in this PR avoids a confusing and scary compilation issue [encountered by Michael Hudson-Doyle](https://issues.apache.org/jira/browse/ZOOKEEPER-3954) when building the C client with GCC 10 and ""aggressive"" optimization settings:
   
   > `free_auth_completions` is being inlined into `free_completions`, and this lets gcc see that members of `a_list` are being accessed without initialization
   
   This is (fortunately!) a red herring: what GCC doesn't see is that, in practice, `zoo_lock_auth` always returns zero, and that `a_list` is always initialized in the conditional block which follows it.
   
   That issue is easily ""fixed"" by removing the `if`.  The rest of the client code doesn't check `zoo_lock_auth`'s return value--and we have bigger issues if unconditional locks start failing anyway.
   
   The remaining changes get rid of a couple of innocuous warnings, to that the client can successfully build even when configured with `-Werror`.
   
   See also https://github.com/apache/zookeeper/pull/1481.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Oct/20 21:13;githubbot;600","ztzg opened a new pull request #1487:
URL: https://github.com/apache/zookeeper/pull/1487


   The in this PR avoids a confusing and scary compilation issue [encountered by Michael Hudson-Doyle](https://issues.apache.org/jira/browse/ZOOKEEPER-3954) when building the C client with GCC 10 and ""aggressive"" optimization settings:
   
   > `free_auth_completions` is being inlined into `free_completions`, and this lets gcc see that members of `a_list` are being accessed without initialization
   
   This is (fortunately!) a red herring: what GCC doesn't see is that, in practice, `zoo_lock_auth` always returns zero, and that `a_list` is always initialized in the conditional block which follows it.
   
   That issue is easily ""fixed"" by removing the `if`.  The rest of the client code doesn't check `zoo_lock_auth`'s return value--and we have bigger issues if unconditional locks start failing anyway.
   
   See also https://github.com/apache/zookeeper/pull/1481.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Oct/20 21:14;githubbot;600","ztzg commented on pull request #1481:
URL: https://github.com/apache/zookeeper/pull/1481#issuecomment-704557446


   > The best practice is to send the PR against master, then send amended patches for other active branches when needed.
   
   Okay; here is [a patch against `master`](https://github.com/apache/zookeeper/pull/1487) and [one against `branch-3.6`](https://github.com/apache/zookeeper/pull/1486).
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Oct/20 21:16;githubbot;600","ztzg commented on pull request #1481:
URL: https://github.com/apache/zookeeper/pull/1481#issuecomment-706361637


   Okay, noted.  (But in this case, I just thought I'd push the branch as I had created it for testing anyway.)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Oct/20 19:23;githubbot;600","symat commented on pull request #1487:
URL: https://github.com/apache/zookeeper/pull/1487#issuecomment-706903747


   I'm going to merge this PR, plus the others open for branch-3.6 and 3.5)
   @eolivelli is it OK for you? (you +1 this one, but not the other two: https://github.com/apache/zookeeper/pull/1486 https://github.com/apache/zookeeper/pull/1481)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Oct/20 06:38;githubbot;600","asfgit closed pull request #1487:
URL: https://github.com/apache/zookeeper/pull/1487


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Oct/20 06:41;githubbot;600","eolivelli commented on pull request #1487:
URL: https://github.com/apache/zookeeper/pull/1487#issuecomment-706936147


   Ok for all of them


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Oct/20 07:35;githubbot;600","ztzg commented on pull request #1487:
URL: https://github.com/apache/zookeeper/pull/1487#issuecomment-706955745


   Thanks!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Oct/20 08:09;githubbot;600","symat closed pull request #1486:
URL: https://github.com/apache/zookeeper/pull/1486


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Oct/20 08:54;githubbot;600","symat closed pull request #1481:
URL: https://github.com/apache/zookeeper/pull/1481


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Oct/20 08:56;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,7800,,,0,7800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Oct 12 06:41:21 UTC 2020,,,,,,,,,,"0|z0jels:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Oct/20 06:58;ztzg;Hi [~mwhudson],

This should obviously be fixed, but, luckily enough, is not a big issue: the second condition in {{free_completions}} will, in practice, always evaluate to
{{true}}—as {{zoo_lock_auth}} either returns a hardcoded zero ({{_st}} variant) or is a wrapper around {{pthread_mutex_lock}} ({{_mt}} variant):

{noformat}
if (zoo_lock_auth(zh) == 0) {
    ...
}
{noformat}

I would suggest simply getting rid of the conditional (but not the locking!), as 1/ most of the client code does not check {{zoo_lock_auth}} 's return value and 2/ we have bigger problems if (unconditional) locks start failing.

What do you think?  Are you planning to submit a ""pull request,"" or should I cook one up?

Cheers, -D
;;;","05/Oct/20 07:56;mwhudson;I wasn't planning on submitting a fix, no. I can if you want...;;;","05/Oct/20 13:24;ztzg;Okay, I'll take care of it.  Thanks!;;;","05/Oct/20 21:28;ztzg;Here it is: https://github.com/apache/zookeeper/pull/1481;;;","12/Oct/20 06:41;symat;Issue resolved by pull request 1487
[https://github.com/apache/zookeeper/pull/1487];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Zxid mismatch after new node becomes the leader,ZOOKEEPER-3936,13327566,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,badai,badai,15/Sep/20 02:15,20/Sep/20 09:51,29/Jun/25 13:34,,3.5.8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,"Adding 2 nodes to 3 nodes ensemble with the following steps:

1. Start the new nodes (node 4, 5) and let them join the ensemble 
2. Update existing nodes' configuration (node 1, 2, 3) to add the new nodes addresses and ports 
3. Rolling restart the existing nodes 
4. Stop the current leader (node 2)
5. New node (node 5) becomes leader

After this, zxid in the new leader (node 5) becomes the same as the old leader (node 2).

{noformat}
badai@192-168-1-129 3 % grep -i zxid logs-zk*/logs/before/*stat*
logs-zk1/logs/before/zk-1-stat-before-crash.log:Zxid: 0xe0000050c
logs-zk2/logs/before/zk-2-stat-before-crash.log:Zxid: 0xf00000000
logs-zk3/logs/before/zk-3-stat-before-crash.log:Zxid: 0xe0000050c
logs-zk4/logs/before/zk-4-stat-before-crash.log:Zxid: 0xe0000050c
logs-zk5/logs/before/zk-5-stat-before-crash.log:Zxid: 0xf00000000
badai@192-168-1-129 3 %
{noformat}

Please ignore the ""before"" wording on the logs name as they are irrelevant.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Sep/20 02:12;badai;logs-zk1.tar.gz;https://issues.apache.org/jira/secure/attachment/13011521/logs-zk1.tar.gz","15/Sep/20 02:12;badai;logs-zk2.tar.gz;https://issues.apache.org/jira/secure/attachment/13011520/logs-zk2.tar.gz","15/Sep/20 02:12;badai;logs-zk3.tar.gz;https://issues.apache.org/jira/secure/attachment/13011519/logs-zk3.tar.gz","15/Sep/20 02:12;badai;logs-zk4.tar.gz;https://issues.apache.org/jira/secure/attachment/13011518/logs-zk4.tar.gz","15/Sep/20 02:12;badai;logs-zk5.tar.gz;https://issues.apache.org/jira/secure/attachment/13011517/logs-zk5.tar.gz",,,,,,5.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sun Sep 20 09:51:22 UTC 2020,,,,,,,,,,"0|z0ilps:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Sep/20 02:27;maoling;[~badai]

_*-->After this, zxid in the new leader (node 5) becomes the same as the old leader (node 2).*_

What behaviour do you want about this? If any write requests in this process, it's a expected behaviour?

Could you please give us more details?;;;","20/Sep/20 09:51;badai;[~maoling]

Thank you for replying. The problem is that all zxid didn't change after that. And the zxid of the new leader is way higher than the old zxid, so the jump did not make sense.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Missing zookeeper.jute.c, zookeeper.jute.h in release archive",ZOOKEEPER-3820,13303188,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,dmitry.wagin,dmitry.wagin,06/May/20 18:32,21/Nov/20 21:41,29/Jun/25 13:34,,3.5.7,3.6.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,build-infrastructure,c client,,,,0,,,"Since  3.5.7 version release archive does not contain generated zookeeper.jute.c, zookeeper.jute.h",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sat Nov 21 21:41:59 UTC 2020,,,,,,,,,,"0|z0eg48:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/May/20 10:27;ctubbsii;Possibly related to ZOOKEEPER-3718?;;;","07/May/20 13:48;symat;I am not sure how we did this historically... But I think the current approach is that for ZooKeeper in the release archive we are only releasing the source code (ideally exactly in the same form as you can find in git if you check-out the release tag). The generated java / C sources are not part of the source code, they get created during the build process. So I don't think we should release these. If one wants to build the C client, he should follow our procedure and use the following command:
{code:java}
mvn clean install -DskipTests -Pfull-build 
{code}
[~eolivelli], [~andor] what is your opinion on this?;;;","07/May/20 14:42;dmitry.wagin;>If one wants to build the C client, he should follow our procedure

IMHO this is a bad idea, because it makes difficult to build a separate c client

 

 ;;;","07/May/20 20:19;eolivelli;Yes we must not bundle in the source release generated files.

We have a binary tarball for the C client but we are not releasing it officially.

Any comment and improvement is welcome.
Maybe a discussion on dev@ is better 

;;;","24/May/20 17:28;dmitry.wagin;>Yes we must not bundle in the source release generated files.

requirement of java build system to build c lib is wrong

 
>We have a binary tarball for the C client but we are not releasing it officially.
it is not for all systems;;;","21/Nov/20 21:41;Fraser;If the generated files are not going to be included anymore, the instructions to build the C client should be updated: [https://git-wip-us.apache.org/repos/asf?p=zookeeper.git;a=blob;f=zookeeper-client/zookeeper-client-c/README;h=ade5ad98fa128eca3a67bc7dab9bb74fec775a28;hb=HEAD#l35]

Right now they claim that the release tarballs include the generated files + a configure script, but neither of those exist, and building the C client requires java & mvn.

As a complete outsider, my 2c: If I can't built the C client in a small docker image using just the recent tarballs, I'm just going to stick to using releases 3.5.6 and older.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Potential Races on DataTree,ZOOKEEPER-3819,13303148,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,bz_liu,bz_liu,06/May/20 15:27,08/May/20 15:54,29/Jun/25 13:34,,3.5.4,3.6.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,server,,,,,0,,,"We run our static race detector on ZooKeeper and discovered three methods in class org/apache/zookeeper/server/DataTree may have concurrent accesses on ephemerals without proper lock protection. The four methods are createNode(), deleteNode(), killSession() and deserialize(). They all read and write the ephemerals in the similar way without common lock from get() to put():
{code:java}
public void deserialize(InputArchive ia, String tag) {
  ...
  HashSet<String> list = ephemerals.get(eowner); 
  if (list == null){ 
    list = new HashSet<String>(); 
    ephemerals.put(eowner, list); 
  }
  list.add(path);//createNode() has lock on list  
}

void killSession(long session, long zxid) {
  HashSet<String> list = ephemerals.remove(session);
  ...
}
{code}
Both createNode() and deserialize() can add to the list of a session, one with lock, but the other has no lock.

Both createNode() and deleteNode() can update the list of a session with lock, which can be executed concurrently. However, killSession() can be called after deleteNode(), which will remove the mapping that added previously by createNode(). Is this a proper operation? or is there other forced sequences to avoid this?

This is similar to ZOOKEEPER-3102.

The possible traces that lead to the race are (v3.5.4, probably the same in v3.6.1):

=> Race: org/apache/zookeeper/server/DataTree.java/util/Map (org/apache/zookeeper/server/DataTree:478 (TID: 2190) , org/apache/zookeeper/server/DataTree:1215 (TID: 9592) )
 Trace 1st node: (TID: 2190) 
 -> Call org/apache/zookeeper/server/quorum/QuorumPeerMain.initializeAndRun from org/apache/zookeeper/server/quorum/QuorumPeerMain.main (line 82)
 -> Call org/apache/zookeeper/server/quorum/QuorumPeerMain.runFromConfig from org/apache/zookeeper/server/quorum/QuorumPeerMain.initializeAndRun (line 123)
 *> Thread (153) created by Application,Lorg/apache/zookeeper/server/quorum/QuorumPeerMain>.runFromConfig (line 200)
 -> Call java/lang/Thread.start from org/apache/zookeeper/server/quorum/QuorumPeer.start (line 862)
 -> Call org/apache/zookeeper/server/quorum/QuorumPeer.run from java/lang/Thread.start (line -1)
 *> Thread (2190) created by Application,Lorg/apache/zookeeper/server/quorum/QuorumPeer>.run (line 1167)
 -> Call org/apache/zookeeper/server/PrepRequestProcessor.run from java/lang/Thread.start (line -1)
 -> Call org/apache/zookeeper/server/PrepRequestProcessor.pRequest from org/apache/zookeeper/server/PrepRequestProcessor.run (line 145)
 -> Call org/apache/zookeeper/server/FinalRequestProcessor.processRequest from org/apache/zookeeper/server/PrepRequestProcessor.pRequest (line 906)
 -> Call org/apache/zookeeper/server/ZooKeeperServer.processTxn from org/apache/zookeeper/server/FinalRequestProcessor.processRequest (line 104)
 -> Call org/apache/zookeeper/server/ZooKeeperServer.processTxn from org/apache/zookeeper/server/ZooKeeperServer.processTxn (line 1190)
 -> Call org/apache/zookeeper/server/ZKDatabase.processTxn from org/apache/zookeeper/server/ZooKeeperServer.processTxn (line 1199)
 -> Call org/apache/zookeeper/server/DataTree.processTxn from org/apache/zookeeper/server/ZKDatabase.processTxn (line 434)
 -> Call org/apache/zookeeper/server/DataTree.createNode from org/apache/zookeeper/server/DataTree.processTxn (line 786)
 => Read on org/apache/zookeeper/server/DataTree.java/util/Map(ephemerals) in org/apache/zookeeper/server/DataTree.createNode (line 478)
 Trace 2st node: (TID: 9592) 
 -> Call org/apache/zookeeper/server/quorum/QuorumPeerMain.initializeAndRun from org/apache/zookeeper/server/quorum/QuorumPeerMain.main (line 82)
 -> Call org/apache/zookeeper/server/quorum/QuorumPeerMain.runFromConfig from org/apache/zookeeper/server/quorum/QuorumPeerMain.initializeAndRun (line 123)
 *> Thread (153) created by Application,Lorg/apache/zookeeper/server/quorum/QuorumPeerMain>.runFromConfig (line 200)
 -> Call java/lang/Thread.start from org/apache/zookeeper/server/quorum/QuorumPeer.start (line 862)
 -> Call org/apache/zookeeper/server/quorum/QuorumPeer.run from java/lang/Thread.start (line -1)
 -> Call org/apache/zookeeper/server/quorum/Leader.lead from org/apache/zookeeper/server/quorum/QuorumPeer.run (line 1227)
 *> Thread (6402) created by Application,Lorg/apache/zookeeper/server/quorum/Leader>.lead (line 448)
 -> Call org/apache/zookeeper/server/quorum/Leader$LearnerCnxAcceptor.run from java/lang/Thread.start (line -1)
 *> Thread (7676) created by Application,Lorg/apache/zookeeper/server/quorum/Leader$LearnerCnxAcceptor>.run (line 386)
 -> Call org/apache/zookeeper/server/quorum/LearnerHandler.run from java/lang/Thread.start (line -1)
 -> Call org/apache/zookeeper/server/quorum/Leader.processAck from org/apache/zookeeper/server/quorum/LearnerHandler.run (line 559)
 -> Call org/apache/zookeeper/server/quorum/Leader.tryToCommit from org/apache/zookeeper/server/quorum/Leader.processAck (line 863)
 -> Call org/apache/zookeeper/server/quorum/QuorumPeer.processReconfig from org/apache/zookeeper/server/quorum/Leader.tryToCommit (line 779)
 -> Call org/apache/zookeeper/server/quorum/QuorumPeer.restartLeaderElection from org/apache/zookeeper/server/quorum/QuorumPeer.processReconfig (line 1871)
 -> Call org/apache/zookeeper/server/quorum/QuorumPeer.startLeaderElection from org/apache/zookeeper/server/quorum/QuorumPeer.restartLeaderElection (line 1530)
 -> Call org/apache/zookeeper/server/quorum/QuorumPeer.getLastLoggedZxid from org/apache/zookeeper/server/quorum/QuorumPeer.startLeaderElection (line 917)
 -> Call org/apache/zookeeper/server/quorum/QuorumPeer.loadDataBase from org/apache/zookeeper/server/quorum/QuorumPeer.getLastLoggedZxid (line 1009)
 -> Call org/apache/zookeeper/server/ZKDatabase.loadDataBase from org/apache/zookeeper/server/quorum/QuorumPeer.loadDataBase (line 867)
 -> Call org/apache/zookeeper/server/persistence/FileTxnSnapLog.restore from org/apache/zookeeper/server/ZKDatabase.loadDataBase (line 240)
 -> Call org/apache/zookeeper/server/persistence/FileSnap.deserialize from org/apache/zookeeper/server/persistence/FileTxnSnapLog.restore (line 200)
 -> Call org/apache/zookeeper/server/persistence/FileSnap.deserialize from org/apache/zookeeper/server/persistence/FileSnap.deserialize (line 87)
 -> Call org/apache/zookeeper/server/util/SerializeUtils.deserializeSnapshot from org/apache/zookeeper/server/persistence/FileSnap.deserialize (line 122)
 -> Call org/apache/zookeeper/server/DataTree.deserialize from org/apache/zookeeper/server/util/SerializeUtils.deserializeSnapshot (line 141)
 => Write to org/apache/zookeeper/server/DataTree.java/util/Map(ephemerals) in org/apache/zookeeper/server/DataTree.deserialize (line 1215)
 --------------------------------------------------------------------------------------------------------------------------------
 => Race: org/apache/zookeeper/server/DataTree.java/util/Map (org/apache/zookeeper/server/DataTree:478 (TID: 2190) , org/apache/zookeeper/server/DataTree:1005 (TID: 2835) )
 Trace 1st node: (TID: 2190) 
 -> Call org/apache/zookeeper/server/quorum/QuorumPeerMain.initializeAndRun from org/apache/zookeeper/server/quorum/QuorumPeerMain.main (line 82)
 -> Call org/apache/zookeeper/server/quorum/QuorumPeerMain.runFromConfig from org/apache/zookeeper/server/quorum/QuorumPeerMain.initializeAndRun (line 123)
 *> Thread (153) created by Application,Lorg/apache/zookeeper/server/quorum/QuorumPeerMain>.runFromConfig (line 200)
 -> Call java/lang/Thread.start from org/apache/zookeeper/server/quorum/QuorumPeer.start (line 862)
 -> Call org/apache/zookeeper/server/quorum/QuorumPeer.run from java/lang/Thread.start (line -1)
 *> Thread (2190) created by Application,Lorg/apache/zookeeper/server/quorum/QuorumPeer>.run (line 1167)
 -> Call org/apache/zookeeper/server/PrepRequestProcessor.run from java/lang/Thread.start (line -1)
 -> Call org/apache/zookeeper/server/PrepRequestProcessor.pRequest from org/apache/zookeeper/server/PrepRequestProcessor.run (line 145)
 -> Call org/apache/zookeeper/server/FinalRequestProcessor.processRequest from org/apache/zookeeper/server/PrepRequestProcessor.pRequest (line 906)
 -> Call org/apache/zookeeper/server/ZooKeeperServer.processTxn from org/apache/zookeeper/server/FinalRequestProcessor.processRequest (line 104)
 -> Call org/apache/zookeeper/server/ZooKeeperServer.processTxn from org/apache/zookeeper/server/ZooKeeperServer.processTxn (line 1190)
 -> Call org/apache/zookeeper/server/ZKDatabase.processTxn from org/apache/zookeeper/server/ZooKeeperServer.processTxn (line 1199)
 -> Call org/apache/zookeeper/server/DataTree.processTxn from org/apache/zookeeper/server/ZKDatabase.processTxn (line 434)
 -> Call org/apache/zookeeper/server/DataTree.createNode from org/apache/zookeeper/server/DataTree.processTxn (line 786)
 => Read on org/apache/zookeeper/server/DataTree.java/util/Map(ephemerals) in org/apache/zookeeper/server/DataTree.createNode (line 478)
 Trace 2st node: (TID: 2835) 
 -> Call org/apache/zookeeper/server/quorum/QuorumPeerMain.initializeAndRun from org/apache/zookeeper/server/quorum/QuorumPeerMain.main (line 82)
 -> Call org/apache/zookeeper/server/quorum/QuorumPeerMain.runFromConfig from org/apache/zookeeper/server/quorum/QuorumPeerMain.initializeAndRun (line 123)
 *> Thread (153) created by Application,Lorg/apache/zookeeper/server/quorum/QuorumPeerMain>.runFromConfig (line 200)
 -> Call java/lang/Thread.start from org/apache/zookeeper/server/quorum/QuorumPeer.start (line 862)
 -> Call org/apache/zookeeper/server/quorum/QuorumPeer.run from java/lang/Thread.start (line -1)
 *> Thread (2190) created by Application,Lorg/apache/zookeeper/server/quorum/QuorumPeer>.run (line 1167)
 -> Call org/apache/zookeeper/server/quorum/QuorumPeer$1.run from java/lang/Thread.start (line -1)
 -> Call org/apache/zookeeper/server/quorum/ReadOnlyZooKeeperServer.startup from org/apache/zookeeper/server/quorum/QuorumPeer$1.run (line 1157)
 -> Call org/apache/zookeeper/server/ZooKeeperServer.startup from org/apache/zookeeper/server/quorum/ReadOnlyZooKeeperServer.startup (line 70)
 -> Call org/apache/zookeeper/server/quorum/ReadOnlyZooKeeperServer.setupRequestProcessors from org/apache/zookeeper/server/ZooKeeperServer.startup (line 453)
 *> Thread (2835) created by Application,Lorg/apache/zookeeper/server/quorum/ReadOnlyZooKeeperServer>.setupRequestProcessors (line 59)
 -> Call org/apache/zookeeper/server/PrepRequestProcessor.run from java/lang/Thread.start (line -1)
 -> Call org/apache/zookeeper/server/PrepRequestProcessor.pRequest from org/apache/zookeeper/server/PrepRequestProcessor.run (line 145)
 -> Call org/apache/zookeeper/server/FinalRequestProcessor.processRequest from org/apache/zookeeper/server/PrepRequestProcessor.pRequest (line 906)
 -> Call org/apache/zookeeper/server/ZooKeeperServer.processTxn from org/apache/zookeeper/server/FinalRequestProcessor.processRequest (line 104)
 -> Call org/apache/zookeeper/server/ZooKeeperServer.processTxn from org/apache/zookeeper/server/ZooKeeperServer.processTxn (line 1190)
 -> Call org/apache/zookeeper/server/ZKDatabase.processTxn from org/apache/zookeeper/server/ZooKeeperServer.processTxn (line 1199)
 -> Call org/apache/zookeeper/server/DataTree.processTxn from org/apache/zookeeper/server/ZKDatabase.processTxn (line 434)
 -> Call org/apache/zookeeper/server/DataTree.killSession from org/apache/zookeeper/server/DataTree.processTxn (line 854)
 => Write to org/apache/zookeeper/server/DataTree.java/util/Map(ephemerals) in org/apache/zookeeper/server/DataTree.killSession (line 1005)
 --------------------------------------------------------------------------------------------------------------------------------
 => Race: org/apache/zookeeper/server/DataTree.java/util/Map (org/apache/zookeeper/server/DataTree:478 (TID: 2190) , org/apache/zookeeper/server/DataTree:481 (TID: 13154) )
 Trace 1st node: (TID: 2190) 
 -> Call org/apache/zookeeper/server/quorum/QuorumPeerMain.initializeAndRun from org/apache/zookeeper/server/quorum/QuorumPeerMain.main (line 82)
 -> Call org/apache/zookeeper/server/quorum/QuorumPeerMain.runFromConfig from org/apache/zookeeper/server/quorum/QuorumPeerMain.initializeAndRun (line 123)
 *> Thread (153) created by Application,Lorg/apache/zookeeper/server/quorum/QuorumPeerMain>.runFromConfig (line 200)
 -> Call java/lang/Thread.start from org/apache/zookeeper/server/quorum/QuorumPeer.start (line 862)
 -> Call org/apache/zookeeper/server/quorum/QuorumPeer.run from java/lang/Thread.start (line -1)
 *> Thread (2190) created by Application,Lorg/apache/zookeeper/server/quorum/QuorumPeer>.run (line 1167)
 -> Call org/apache/zookeeper/server/PrepRequestProcessor.run from java/lang/Thread.start (line -1)
 -> Call org/apache/zookeeper/server/PrepRequestProcessor.pRequest from org/apache/zookeeper/server/PrepRequestProcessor.run (line 145)
 -> Call org/apache/zookeeper/server/FinalRequestProcessor.processRequest from org/apache/zookeeper/server/PrepRequestProcessor.pRequest (line 906)
 -> Call org/apache/zookeeper/server/ZooKeeperServer.processTxn from org/apache/zookeeper/server/FinalRequestProcessor.processRequest (line 104)
 -> Call org/apache/zookeeper/server/ZooKeeperServer.processTxn from org/apache/zookeeper/server/ZooKeeperServer.processTxn (line 1190)
 -> Call org/apache/zookeeper/server/ZKDatabase.processTxn from org/apache/zookeeper/server/ZooKeeperServer.processTxn (line 1199)
 -> Call org/apache/zookeeper/server/DataTree.processTxn from org/apache/zookeeper/server/ZKDatabase.processTxn (line 434)
 -> Call org/apache/zookeeper/server/DataTree.createNode from org/apache/zookeeper/server/DataTree.processTxn (line 786)
 => Read on org/apache/zookeeper/server/DataTree.java/util/Map(ephemerals) in org/apache/zookeeper/server/DataTree.createNode (line 478)
 Trace 2st node: (TID: 13154) 
 -> Call org/apache/zookeeper/server/quorum/QuorumPeerMain.initializeAndRun from org/apache/zookeeper/server/quorum/QuorumPeerMain.main (line 82)
 -> Call org/apache/zookeeper/server/quorum/QuorumPeerMain.runFromConfig from org/apache/zookeeper/server/quorum/QuorumPeerMain.initializeAndRun (line 123)
 *> Thread (153) created by Application,Lorg/apache/zookeeper/server/quorum/QuorumPeerMain>.runFromConfig (line 200)
 -> Call java/lang/Thread.start from org/apache/zookeeper/server/quorum/QuorumPeer.start (line 862)
 -> Call org/apache/zookeeper/server/quorum/QuorumPeer.run from java/lang/Thread.start (line -1)
 -> Call org/apache/zookeeper/server/quorum/Observer.observeLeader from org/apache/zookeeper/server/quorum/QuorumPeer.run (line 1201)
 -> Call org/apache/zookeeper/server/quorum/Learner.syncWithLeader from org/apache/zookeeper/server/quorum/Observer.observeLeader (line 74)
 -> Call org/apache/zookeeper/server/ZooKeeperServer.startup from org/apache/zookeeper/server/quorum/Learner.syncWithLeader (line 559)
 -> Call org/apache/zookeeper/server/quorum/ObserverZooKeeperServer.setupRequestProcessors from org/apache/zookeeper/server/ZooKeeperServer.startup (line 453)
 *> Thread (8653) created by Application,Lorg/apache/zookeeper/server/quorum/ObserverZooKeeperServer>.setupRequestProcessors (line 97)
 -> Call java/lang/Thread.start from org/apache/zookeeper/server/quorum/CommitProcessor.start (line 263)
 -> Call org/apache/zookeeper/server/quorum/CommitProcessor.run from java/lang/Thread.start (line -1)
 -> Call org/apache/zookeeper/server/quorum/CommitProcessor.sendToNextProcessor from org/apache/zookeeper/server/quorum/CommitProcessor.run (line 180)
 -> Call org/apache/zookeeper/server/WorkerService.schedule from org/apache/zookeeper/server/quorum/CommitProcessor.sendToNextProcessor (line 272)
 *> Thread (13154) created by Application,Lorg/apache/zookeeper/server/WorkerService>.schedule (line 128)
 -> Call org/apache/zookeeper/server/WorkerService$ScheduledWorkRequest.run from java/lang/Thread.start (line -1)
 -> Call org/apache/zookeeper/server/quorum/CommitProcessor$CommitWorkRequest.doWork from org/apache/zookeeper/server/WorkerService$ScheduledWorkRequest.run (line 162)
 -> Call org/apache/zookeeper/server/FinalRequestProcessor.processRequest from org/apache/zookeeper/server/quorum/CommitProcessor$CommitWorkRequest.doWork (line 297)
 -> Call org/apache/zookeeper/server/ZooKeeperServer.processTxn from org/apache/zookeeper/server/FinalRequestProcessor.processRequest (line 104)
 -> Call org/apache/zookeeper/server/ZooKeeperServer.processTxn from org/apache/zookeeper/server/ZooKeeperServer.processTxn (line 1190)
 -> Call org/apache/zookeeper/server/ZKDatabase.processTxn from org/apache/zookeeper/server/ZooKeeperServer.processTxn (line 1199)
 -> Call org/apache/zookeeper/server/DataTree.processTxn from org/apache/zookeeper/server/ZKDatabase.processTxn (line 434)
 -> Call org/apache/zookeeper/server/DataTree.createNode from org/apache/zookeeper/server/DataTree.processTxn (line 786)
 => Write to org/apache/zookeeper/server/DataTree.java/util/Map(ephemerals) in org/apache/zookeeper/server/DataTree.createNode (line 481)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2020-05-06 15:27:45.0,,,,,,,,,,"0|z0efvk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
upgrade netty to 4.1.49,ZOOKEEPER-3804,13300579,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Won't Fix,nkalmar,nkalmar,nkalmar,23/Apr/20 15:01,12/Oct/22 14:03,29/Jun/25 13:34,12/Oct/22 14:03,3.5.7,3.6.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,We accidently had a netty-codec-4.1.49 versioned license file added instead of 4.1.48. Since 4.1.49 was just released a day ago (it's not even seen in mvn central) why not upgrade instead of fixing the licence file name.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2020-04-23 15:01:02.0,,,,,,,,,,"0|z0e00w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PrometheusProvider uses deprecated sun.misc.Unsafe,ZOOKEEPER-3784,13296160,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,karthik.1987,karthik.1987,04/Apr/20 05:53,08/Apr/20 03:09,29/Jun/25 13:34,,3.6.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,metric system,,,,,0,,,"Enabled Prometheus Metrics Server  on zookeeper that is running on  OpenJDK-11.0.5 with minimal modules enabled. Server crashed with below error.

 

 
{code:java}
2020-04-04 05:17:32,310 [myid:1] - INFO  [main:AbstractConnector@330] - Started ServerConnector@7c711375{HTTP/1.1,[http/1.1]} {0.0.0.0:7000} 2020-04-04 05:17:32,310 [myid:1] - INFO  [main:AbstractConnector@330] - Started ServerConnector@7c711375{HTTP/1.1,[http/1.1]} {0.0.0.0:7000} 2020-04-04 05:17:32,311 [myid:1] - INFO  [main:Server@399] - Started @897ms2020-04-04 05:17:32,321 [myid:1] - INFO  [main:ServerMetrics@62] - ServerMetrics initialized with provider org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider@5efa40fe2020-04-04 05:17:32,334 [myid:1] - INFO  [main:AbstractConnector@380] - Stopped ServerConnector@7c711375{HTTP/1.1,[http/1.1]} {0.0.0.0:7000} 2020-04-04 05:17:32,335 [myid:1] - INFO  [main:ContextHandler@1016] - Stopped o.e.j.s.ServletContextHandler@4c163e3{/,null,UNAVAILABLE}Exception in thread ""main"" java.lang.NoClassDefFoundError: sun/misc/Unsafe at io.prometheus.client.Striped64.getUnsafe(Striped64.java:316) at io.prometheus.client.Striped64.<clinit>(Striped64.java:296) at io.prometheus.client.Summary$Child.<init>(Summary.java:260) at io.prometheus.client.Summary$Child.<init>(Summary.java:198) at io.prometheus.client.Summary.newChild(Summary.java:159) at io.prometheus.client.Summary.newChild(Summary.java:81) at io.prometheus.client.SimpleCollector.labels(SimpleCollector.java:76) at io.prometheus.client.SimpleCollector.initializeNoLabelsChild(SimpleCollector.java:107) at io.prometheus.client.Summary.<init>(Summary.java:92) at io.prometheus.client.Summary$Builder.create(Summary.java:136) at io.prometheus.client.Summary$Builder.create(Summary.java:95) at io.prometheus.client.SimpleCollector$Builder.register(SimpleCollector.java:245) at org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider$PrometheusSummary.<init>(PrometheusMetricsProvider.java:348) at org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider$Context.lambda$getSummary$2(PrometheusMetricsProvider.java:235) at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(Unknown Source) at org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider$Context.getSummary(PrometheusMetricsProvider.java:231) at org.apache.zookeeper.server.ServerMetrics.<init>(ServerMetrics.java:70) at org.apache.zookeeper.server.ServerMetrics.metricsProviderInitialized(ServerMetrics.java:63) at org.apache.zookeeper.server.quorum.QuorumPeerMain.runFromConfig(QuorumPeerMain.java:161) at org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:136) at org.apache.zookeeper.server.quorum.QuorumPeerMain.main(QuorumPeerMain.java:90)Caused by: java.lang.ClassNotFoundException: sun.misc.Unsafe at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(Unknown Source) at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(Unknown Source) at java.base/java.lang.ClassLoader.loadClass(Unknown Source) ... 21 more  
{code}
 

When I enabled jdk.unsupported module, zookeeper server started and able to access prometheus metrics. However jdk.unsupported is deprecated.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Apr/20 05:50;karthik.1987;zoo.log;https://issues.apache.org/jira/secure/attachment/12998819/zoo.log",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Apr 08 03:09:35 UTC 2020,,,,,,,,,,"0|z0d9vk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Apr/20 06:05;ctubbsii;I wonder if the modernizer-maven-plugin would catch these and propose good alternatives. I know it has been very useful to Accumulo in finding and replacing deprecated APIs in newer versions of Java... I just don't know if it will find and suggest alternatives for this particular unsupported API.;;;","06/Apr/20 20:38;kari3x;thats good mann:)☺☺☺;;;","08/Apr/20 03:09;ctubbsii;I started looking at setting up the modernizer-maven-plugin in ZooKeeper's builds and I don't think it would catch this. However, it may catch other things, so I'll still try to work on that in a new issue, after I wrap up ZOOKEEPER-3786.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Transaction log sync can take 20+ seconds after leader election when there is a large snapCount,ZOOKEEPER-3757,13291736,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,alextkaiser,alextkaiser,14/Mar/20 16:33,17/Dec/24 13:09,29/Jun/25 13:34,,3.5.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,leaderElection,,,,,1,,,"Short overview:

If you have a large snapCount (we are using 10,000,000) you can end up with a very large transaction log (ours are between 1GB - 1.5 GB), which can cause the sync between a newly elected leader and it's followers to take 20+ seconds.  This stems from the code (FileTxnIterator.getStorageSize()) in most cases returning 0 even if the transaction log is 1GB.

 

Long Explanation:

A few years ago we had some trouble with our zookeeper cluster having many shortish (100-500ms) pauses during our peak traffic times.  These ended up resulting from the master taking a snap shot.  To solve this we upped the snapCount to 10,000,000 so that we weren't taking snapshots nearly as often.  We also made changes to reduce the size of our snapshots (from around 2.5 GB to ~500 MB).

I don't remember what version of zookeeper we were using originally, but this was all working fine using 3.4.10, but we started to have problems when we upgraded to 3.5.6 around 3 months ago.  We have a fairly high transaction rate and thus end up hitting the zxid overflow about once a month, which will cause a leader election.  When we were on 3.4.10, this was fine because leader election and syncing would happen within 2-4 seconds, which was low enough for us to be able to basically ignore it.  However after we upgraded to 3.5.6 the pauses we saw took between 15 - 30 seconds which were unacceptable for us.

For now to solve this I set zookeeper.forceSnapshotSync=true (yes, I know the comments say this is only supposed to be used for testing), which causes syncing using snapshots (only 10-50 MB) instead of the transaction log (1-1.5 GB).

 

Technical details:

I tried taking a look at the code and I think I know why this happens.  From what I learned, it looks like when a follower needs to sync with a leader on the leader LearnerHandler.syncFollower() gets called.  It goes through a big if statement, but at one point it will call db.getProposalsFromTxnLog(peerLastZxid, sizeLimit).  That peerLastZxid could be some very old zxid if the follower hadn't taken a snapshot in a long time (i.e. has a large snapCount) and the sizeLimit will generally be 0.33 * snapshot size (in my case around 10 MB).

Inside of that getProposalsFromTxnLog it will create a TxnIterator and then call getStorageSize() on it.  The problem comes from the fact that this call to getStorageSize() will usually return with 0.  The reason that happens is because the FileTxnIterator class has a ""current"" log file that it is reading, this.logFile, and a list of files that it would still have to iterate through, this.storedFiles.  The getStroageSize() function though only looks at the storedFiles list, so if the iterator has one large transaction log as the ""current"" log file and nothing in the storedFiles list, then this method will return 0 even though there is a huge transaction log to sync.

One other side affect of this problem is that even bouncing a follower can cause long (5-10 second) pauses as the leader will hold a read lock on the transaction log while it syncs up with the follower.

While I know what the problem is I don't know what the best solution is.  I'm willing to work on the solution, but I would appreciate suggestions.  One possible solution would be to include the this.logFile in the getStorageSize() calculation, however this could cause the estimate to over estimate the amount of data that is in the iterator (possibly by a lot) and I don't know what the consequences of doing that is.  I'm not quite sure what is a good way to get an accurate estimate.

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Dec 17 13:09:59 UTC 2024,,,,,,,,,,"0|z0cj8w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Sep/24 22:45;brettf;I saw this issue in production recently on 3.6.2.

Steps to reproduce:
1) set snapCount high (10 million)
2) wait for the txlog to roll over on the leader, since we need it to have room to grow in step 4 without rolling
3) shut off a follower
4) write a few million transactions (in my case I watched the txlog on the leader until it grew to 2gb, which was ~6 million transactions)
5) turn the follower back on

Now the leader will try to sync the follower by replaying  all 2gb of transactions instead of sending a 20mb snapshot of the current data tree. This goes past the 10 second default timeout, fails, and restarts forever. Meanwhile the sync process is holding a transaction log lock that prevents the leader from processing writes. The whole cluster fails until something stops the attempts to sync from the follower, rolls the transaction log on the leader, or changes the leadership.

log sample from the leader (this loop repeats):
{noformat}
2024-09-25 22:10:28,018 [myid:2] - WARN  [LearnerHandler-/10.9.145.61:35398:LearnerHandler@737] - ******* GOODBYE /10.9.145.61:35398 ********
2024-09-25 22:10:28,238 [myid:2] - INFO  [LearnerHandler-/10.9.145.61:35456:LearnerHandler@979] - Sending DIFF zxid=0x2f00871bdd  for peer sid: 1
2024-09-25 22:10:43,899 [myid:2] - INFO  [WorkerReceiver[myid=2]:FastLeaderElection$Messenger$WorkerReceiver@389] - Notification: my state:LEADING; n.sid:1, n.state:LOOKING, n.leader:1, n.round:0x20, n.peerEpoch:0x2f, n.zxid:0x2f0028ce99, message format version:0x2, n.config version:0x2f0071c25a
2024-09-25 22:10:43,907 [myid:2] - INFO  [LearnerHandler-/10.9.145.61:35562:LearnerHandler@504] - Follower sid: 1 : info : 10.9.145.61:2888:3888:participant;0.0.0.0:2181
2024-09-25 22:10:43,909 [myid:2] - INFO  [LearnerHandler-/10.9.145.61:35562:ZKDatabase@345] - On disk txn sync enabled with snapshotSizeFactor 0.33
2024-09-25 22:10:51,945 [myid:2] - INFO  [LearnerHandler-/10.9.145.61:35562:LearnerHandler@807] - Synchronizing with Learner sid: 1 maxCommittedLog=0x2f00871bde minCommittedLog=0x2f008719ea lastProcessedZxid=0x2f00871bde peerLastZxid=0x2f0028ce99
2024-09-25 22:10:51,945 [myid:2] - ERROR [LearnerHandler-/10.9.145.61:35456:LearnerHandler@714] - Unexpected exception causing shutdown while sock still open
java.io.EOFException
        at java.io.DataInputStream.readInt(DataInputStream.java:392)
        at org.apache.jute.BinaryInputArchive.readInt(BinaryInputArchive.java:96)
        at org.apache.zookeeper.server.quorum.QuorumPacket.deserialize(QuorumPacket.java:86)
        at org.apache.jute.BinaryInputArchive.readRecord(BinaryInputArchive.java:134)
        at org.apache.zookeeper.server.quorum.LearnerHandler.run(LearnerHandler.java:611)
2024-09-25 22:10:51,946 [myid:2] - WARN  [LearnerHandler-/10.9.145.61:35456:LearnerHandler@737] - ******* GOODBYE /10.9.145.61:35456 ********
2024-09-25 22:10:51,947 [myid:2] - INFO  [LearnerHandler-/10.9.145.61:35562:LearnerHandler@884] - Use txnlog and committedLog for peer sid: 1
2024-09-25 22:10:52,854 [myid:2] - INFO  [LearnerHandler-/10.9.145.61:35562:LearnerHandler@979] - Sending DIFF zxid=0x2f00871bde  for peer sid: 1
2024-09-25 22:11:03,948 [myid:2] - INFO  [WorkerReceiver[myid=2]:FastLeaderElection$Messenger$WorkerReceiver@389] - Notification: my state:LEADING; n.sid:1, n.state:LOOKING, n.leader:1, n.round:0x20, n.peerEpoch:0x2f, n.zxid:0x2f0028ce99, message format version:0x2, n.config version:0x2f0071c25a
2024-09-25 22:11:03,953 [myid:2] - INFO  [LearnerHandler-/10.9.145.61:35612:LearnerHandler@504] - Follower sid: 1 : info : 10.9.145.61:2888:3888:participant;0.0.0.0:2181
2024-09-25 22:11:03,954 [myid:2] - INFO  [LearnerHandler-/10.9.145.61:35612:ZKDatabase@345] - On disk txn sync enabled with snapshotSizeFactor 0.33
2024-09-25 22:11:14,309 [myid:2] - INFO  [LearnerHandler-/10.9.145.61:35612:LearnerHandler@807] - Synchronizing with Learner sid: 1 maxCommittedLog=0x2f00871bdf minCommittedLog=0x2f008719eb lastProcessedZxid=0x2f00871bdf peerLastZxid=0x2f0028ce99
2024-09-25 22:11:14,311 [myid:2] - ERROR [LearnerHandler-/10.9.145.61:35562:LearnerHandler@714] - Unexpected exception causing shutdown while sock still open{noformat}
And the logs from the follower have this on repeat:
{noformat}
2024-09-25 22:13:29,722 [myid:1] - INFO  [QuorumPeer[myid=1](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled):QuorumPeer@863] - Peer state changed: following - synchronization - diff
2024-09-25 22:13:49,741 [myid:1] - WARN  [QuorumPeer[myid=1](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled):Follower@129] - Exception when following the leader
java.net.SocketTimeoutException: Read timed out
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
        at java.net.SocketInputStream.read(SocketInputStream.java:171)
        at java.net.SocketInputStream.read(SocketInputStream.java:141)
        at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
        at java.io.BufferedInputStream.read(BufferedInputStream.java:265)
        at java.io.DataInputStream.readInt(DataInputStream.java:387)
        at org.apache.jute.BinaryInputArchive.readInt(BinaryInputArchive.java:96)
        at org.apache.zookeeper.server.quorum.QuorumPacket.deserialize(QuorumPacket.java:86)
        at org.apache.jute.BinaryInputArchive.readRecord(BinaryInputArchive.java:134)
        at org.apache.zookeeper.server.quorum.Learner.readPacket(Learner.java:182)
        at org.apache.zookeeper.server.quorum.Learner.syncWithLeader(Learner.java:506)
        at org.apache.zookeeper.server.quorum.Follower.followLeader(Follower.java:107)
        at org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:1458){noformat}
Fixing the getStorageSize calculation should make the decision to use txlog sync vs snapshot sync accurate.

I believe impact in my example is so great because snapCount is raised without setting _txnLogSizeLimitInKb_ to keep transaction logs appropriately sized. In fact I believe similar problems could occur when transaction logs get oversized even if getStorageSize was correct, due to extended seek times in the file while zk searches for the first zxid it really needs.

On default settings, the impact is limited to 100k transactions (default snapCount) and likely is only adding a few hundred millis of delay when joining.

 ;;;","27/Sep/24 04:17;kezhuw;I think we could solves this by steps:

1. {{getStorageSize}} takes into account the remaining bytes in current log file .
2. Calculate a sensible default for {{txnLogSizeLimitInKb}} to take advantage of it.

I guess we clould also introduce heuristic snapshot in future based on criterion, say size of last snapshot, txn log size since last snapshot and etc.

{quote}
I believe impact in my example is so great because snapCount is raised without setting txnLogSizeLimitInKb to keep transaction logs appropriately sized. In fact I believe similar problems could occur when transaction logs get oversized even if getStorageSize was correct, due to extended seek times in the file while zk searches for the first zxid it really needs.
{quote}

This is where {{txnLogSizeLimitInKb}} should kick in to avoid large txn log file. We cloud also consider zxid offset index to enable fast seek. But, I doubt it could be overkill since ""seek"" is rare in ZooKeeper. Keeping txn log small is most likely enough for us, it has negligible negative impact from my perspective.;;;","17/Dec/24 13:09;fghibzndo;Experienced the same problem in production, tracked it down to the exact same cause.

In our case the connection is terminated due to a [`Closing connection to peer due to transaction timeout.`|https://github.com/apache/zookeeper/blob/f7af2acd7f92868507e66780bf6818f47d068a77/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LearnerHandler.java#L1079] after ~1min±20s and not 10s. This seems to be related to the fact that [the timeout starts being enforced only once the leader starts sending data to the follower|https://github.com/apache/zookeeper/blob/f7af2acd7f92868507e66780bf6818f47d068a77/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LearnerHandler.java#L1070].

We've also observed that in our case the follower does make progress with each synchronization attempt (the `Synchronizing with Learner sid: ... peerLastZxid=<zxid>` differs between the iterations).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
https://zookeeper.apache.org/documentation.html links all dead,ZOOKEEPER-3749,13290338,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,polarpal99,polarpal99,08/Mar/20 00:59,09/Mar/20 07:47,29/Jun/25 13:34,,3.5.7,,,,,,,,,,,,,,,,,,,,,,,,3.5.7,,,,,documentation,,,,,0,pull-request-available,,"[https://zookeeper.apache.org/documentation.html] links all dead, rendering all Zookeeper documentation inaccessible.",Web site https://zookeeper.apache.org,"ztzg commented on pull request #1282: ZOOKEEPER-3749: Restore `content/doc` subdirectory
URL: https://github.com/apache/zookeeper/pull/1282
 
 
   It looks like commit 07fa2155f6a384f2a11fb48573179559be234ce5, ""Update downloads page,"" mistakenly removed the `content/doc` subdirectory. This commit restores it to the latest state before deletion.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/20 11:34;githubbot;600","ztzg commented on issue #1282: ZOOKEEPER-3749: Restore `content/doc` subdirectory
URL: https://github.com/apache/zookeeper/pull/1282#issuecomment-596196213
 
 
   @eolivelli: This preserves your edits to `content/releases.html`, but restores everything else.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/20 11:42;githubbot;600","eolivelli commented on issue #1282: ZOOKEEPER-3749: Restore `content/doc` subdirectory
URL: https://github.com/apache/zookeeper/pull/1282#issuecomment-596200026
 
 
   Thank you.
   
   I followed the procedure here
   https://cwiki.apache.org/confluence/display/ZOOKEEPER/WebSiteSetup
   
   I feel it is better to always rebuild the website from scratch and not to patch it, the asft-site branch is only used in order to push contents to the website.
   
    
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/20 12:26;githubbot;600","eolivelli commented on issue #1282: ZOOKEEPER-3749: Restore `content/doc` subdirectory
URL: https://github.com/apache/zookeeper/pull/1282#issuecomment-596200069
 
 
   I will rebuild the website tonight if no one else with write access can
   
   cc @anmolnar @nkalmar @hanm 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/20 12:27;githubbot;600","ztzg commented on issue #1282: ZOOKEEPER-3749: Restore `content/doc` subdirectory
URL: https://github.com/apache/zookeeper/pull/1282#issuecomment-596216271
 
 
   @eolivelli: Thank you for the reference.  (I had never looked into how to build the website; I thought I'd submit a PR with the files just in case.)
   
   Looking at that ""workflow,"" it looks like step #4 has to be redone after each `mvn clean install`.  (That's a bit dangerous indeed, as one could expect `install` to produce the final result!)
   
   Even though the results should be identical, I suppose going through the official procedure is better than pulling this in, so I'm closing the PR.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/20 15:15;githubbot;600","ztzg commented on pull request #1282: ZOOKEEPER-3749: Restore `content/doc` subdirectory
URL: https://github.com/apache/zookeeper/pull/1282
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/20 15:15;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,14400,10800,3600,25%,14400,10800,3600,,,,,,,,ZOOKEEPER-3753,ZOOKEEPER-3752,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Mar 09 07:43:51 UTC 2020,,,,,,,,,,"0|z0cam8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Mar/20 11:38;ztzg;It looks like the whole {{doc/}} subdirectory was accidentally removed.  I have created a trivial PR, [#1282|https://github.com/apache/zookeeper/pull/1282], which just restores it.;;;","09/Mar/20 07:43;ztzg;I have temporarily uploaded the contents of [the pull request|https://github.com/apache/zookeeper/pull/1282] to {{http://crosstwine.com/asf-site/}}, in case that helps.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zoo_amulti can attempt to free invalid memory after marshalling errors.,ZOOKEEPER-3697,13279106,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,a3a3e1,a3a3e1,13/Jan/20 14:53,13/Feb/20 08:49,29/Jun/25 13:34,,3.4.14,3.5.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,c client,,,,,0,,,"{{zoo_amulti}} only initializes request objects if {{rc == ZOK}}, but it unconditionally calls {{free_duplicate_path}}.  For example:

{noformat}
             case ZOO_CHECK_OP: {
                struct CheckVersionRequest req;
                rc = rc < 0 ? rc : CheckVersionRequest_init(zh, &req,
                                        op->check_op.path, op->check_op.version);
                rc = rc < 0 ? rc : serialize_CheckVersionRequest(oa, ""req"", &req);
                enter_critical(zh);
                entry = create_completion_entry(zh, h.xid, COMPLETION_VOID, op_result_void_completion, result, 0, 0);
                leave_critical(zh);
                free_duplicate_path(req.path, op->check_op.path);
                break;
            }
{noformat}

This means that if there is a marshalling error in one operation, for all the later operations, the request will be initialized, the value of {{req.path}} will be undefined, and {{free_duplicate_path}} may attempt to free an invalid pointer.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Feb/20 08:49;a3a3e1;0001-ZOOKEEPER-3697-prevent-zoo_amulti-from-attempting-to.patch;https://issues.apache.org/jira/secure/attachment/12993340/0001-ZOOKEEPER-3697-prevent-zoo_amulti-from-attempting-to.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2020-01-13 14:53:55.0,,,,,,,,,,"0|z0agbc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix QuorumSSLTest to remove hardcoded localhost and port,ZOOKEEPER-3655,13275326,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,kishorvpatil,kishorvpatil,18/Dec/19 20:36,02/Mar/20 12:31,29/Jun/25 13:34,,3.5.5,3.5.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,server,,,,,0,pull-request-available,,"Depending on localhost and /etc/hosts config, this test can fail.. So trying make it more resilient.

I have put up the patch on https://github.com/apache/zookeeper/pull/1188",,"maoling commented on pull request #1188: [ZOOKEEPER-3655] Remove localhost hardcoding from QuorumSSLTest
URL: https://github.com/apache/zookeeper/pull/1188#discussion_r361127682
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumSSLTest.java
 ##########
 @@ -122,10 +124,26 @@
     private static final String PORT_UNIFICATION_DISABLED = ""portUnification=false\n"";
 
     private static final char[] PASSWORD = ""testpass"".toCharArray();
-    private static final String HOSTNAME = ""localhost"";
+
+    private static String HOSTNAME;
+    private static String ipAddress;
+
+    {
+        InetAddress address = null;
+        try {
+            address = InetAddress.getLocalHost();
+            HOSTNAME = address.getHostName();
+            ipAddress = address.getHostAddress();
+        } catch (UnknownHostException e) {
+            e.printStackTrace();
+        }
 
 Review comment:
   -  When `UnknownHostException` happens, `ipAddress` should still use the `127.0.0.1` as default ?
   - >  Depending on localhost and /etc/hosts config, this test can fail.. So trying make it more resilient.
   
     Could you plz explain more for me to understand the benefit of this change?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Dec/19 10:16;githubbot;600","kishorvpatil commented on pull request #1188: [ZOOKEEPER-3655] Remove localhost hardcoding from QuorumSSLTest
URL: https://github.com/apache/zookeeper/pull/1188#discussion_r362641153
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumSSLTest.java
 ##########
 @@ -122,10 +124,26 @@
     private static final String PORT_UNIFICATION_DISABLED = ""portUnification=false\n"";
 
     private static final char[] PASSWORD = ""testpass"".toCharArray();
-    private static final String HOSTNAME = ""localhost"";
+
+    private static String HOSTNAME;
+    private static String ipAddress;
+
+    {
+        InetAddress address = null;
+        try {
+            address = InetAddress.getLocalHost();
+            HOSTNAME = address.getHostName();
+            ipAddress = address.getHostAddress();
+        } catch (UnknownHostException e) {
+            e.printStackTrace();
+        }
 
 Review comment:
   @maoling , The test fails if /etc/hosts has ipv6 because localhost or ip address is hardcoded in the tests. The change makes it agostic to host setup.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Jan/20 21:43;githubbot;600","kishorvpatil commented on pull request #1188: [ZOOKEEPER-3655] Remove localhost hardcoding from QuorumSSLTest
URL: https://github.com/apache/zookeeper/pull/1188#discussion_r362641153
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumSSLTest.java
 ##########
 @@ -122,10 +124,26 @@
     private static final String PORT_UNIFICATION_DISABLED = ""portUnification=false\n"";
 
     private static final char[] PASSWORD = ""testpass"".toCharArray();
-    private static final String HOSTNAME = ""localhost"";
+
+    private static String HOSTNAME;
+    private static String ipAddress;
+
+    {
+        InetAddress address = null;
+        try {
+            address = InetAddress.getLocalHost();
+            HOSTNAME = address.getHostName();
+            ipAddress = address.getHostAddress();
+        } catch (UnknownHostException e) {
+            e.printStackTrace();
+        }
 
 Review comment:
   @maoling , The test fails if /etc/hosts has ipv6 because localhost or ip address is hardcoded in the tests. The change makes it agnostic to host setup.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Jan/20 21:43;githubbot;600","kishorvpatil commented on pull request #1272: [ZOOKEEPER-3655] Remove localhost hardcoding from QuorumSSLTest on master
URL: https://github.com/apache/zookeeper/pull/1272
 
 
   As requested on #1188, creating corresponding PR for master.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/20 16:35;githubbot;600","kishorvpatil commented on issue #1188: [ZOOKEEPER-3655] Remove localhost hardcoding from QuorumSSLTest
URL: https://github.com/apache/zookeeper/pull/1188#issuecomment-591520927
 
 
   @anmolnar , The PR for master is available now #1272 1272
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/20 16:36;githubbot;600","kishorvpatil commented on issue #1188: [ZOOKEEPER-3655] Remove localhost hardcoding from QuorumSSLTest
URL: https://github.com/apache/zookeeper/pull/1188#issuecomment-591520927
 
 
   @anmolnar , The PR for master is available now #1272
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/20 16:36;githubbot;600","symat commented on pull request #1272: [ZOOKEEPER-3655] Remove localhost hardcoding from QuorumSSLTest on master
URL: https://github.com/apache/zookeeper/pull/1272#discussion_r386362763
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumSSLTest.java
 ##########
 @@ -122,7 +124,21 @@
     private static final String PORT_UNIFICATION_DISABLED = ""portUnification=false\n"";
 
     private static final char[] PASSWORD = ""testpass"".toCharArray();
-    private static final String HOSTNAME = ""localhost"";
+    private static String HOSTNAME;
+    private static String ipAddress;
+
+    {
+        InetAddress address = null;
+        try {
+            address = InetAddress.getLocalHost();
+            HOSTNAME = address.getHostName();
+            ipAddress = address.getHostAddress();
+        } catch (UnknownHostException e) {
+            e.printStackTrace();
 
 Review comment:
   please use a logger to log exceptions.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/20 12:27;githubbot;600","symat commented on pull request #1272: [ZOOKEEPER-3655] Remove localhost hardcoding from QuorumSSLTest on master
URL: https://github.com/apache/zookeeper/pull/1272#discussion_r386361817
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumSSLTest.java
 ##########
 @@ -122,7 +124,21 @@
     private static final String PORT_UNIFICATION_DISABLED = ""portUnification=false\n"";
 
     private static final char[] PASSWORD = ""testpass"".toCharArray();
-    private static final String HOSTNAME = ""localhost"";
+    private static String HOSTNAME;
+    private static String ipAddress;
+
+    {
 
 Review comment:
   is there a benefit using a static variable plus this initializer block? I would maybe prefer simply setting non-static `ipAddress` ad `hostname` in the `setup()` method we have already below. I think the later would be a bit nicer.
   
   If you decide to stick with the static variables, then please use capital letters (e.g. IP_ADDRESS) to match the other static variables.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/20 12:27;githubbot;600","symat commented on issue #1272: [ZOOKEEPER-3655] Remove localhost hardcoding from QuorumSSLTest on master
URL: https://github.com/apache/zookeeper/pull/1272#issuecomment-593379428
 
 
   It looks the test class is actually fails now on Jenkins: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build-maven/1883/testReport/
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/20 12:31;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4800,,,0,4800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2019-12-18 20:36:51.0,,,,,,,,,,"0|z09tbs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
C CLI should close session properly,ZOOKEEPER-3645,13273850,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Duplicate,symat,symat,symat,11/Dec/19 11:06,12/Dec/19 14:03,29/Jun/25 13:34,12/Dec/19 14:03,3.5.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,"Whenever you quit from the C command line client, you got a warning on the server logs like:

```
2019-12-11 10:28:40,973 [myid:] - WARN  [NIOWorkerThread-6:NIOServerCnxn@364] - Unexpected exception
EndOfStreamException: Unable to read additional data from client, it probably closed the socket: address = /0:0:0:0:0:0:0:1:51026, session = 0x1000012817e001c
	at org.apache.zookeeper.server.NIOServerCnxn.handleFailedRead(NIOServerCnxn.java:163)
	at org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:326)
	at org.apache.zookeeper.server.NIOServerCnxnFactory$IOWorkRequest.doWork(NIOServerCnxnFactory.java:522)
	at org.apache.zookeeper.server.WorkerService$ScheduledWorkRequest.run(WorkerService.java:154)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
``` 

This happens no matter how you exit from the C command-line client. E.g.:
- using Ctrl-C
- using the `quit` command
- using the `--cmd` option and executing a single command",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-1105,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Dec 12 14:03:52 UTC 2019,,,,,,,,,,"0|z09k7s:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Dec/19 22:02;bpendleton;Is this different than ZOOKEEPER-1105?;;;","12/Dec/19 08:21;symat;yep, it is clearly a duplicate. Thanks for the note!
I was checking a few yeas back in Jira before opened the ticket, but didn't think I will have to check this far :)
I will close this one and try to assign the old one to myself.;;;","12/Dec/19 14:03;symat;I fixed this in the original ticket (ZOOKEEPER-1105), see [https://github.com/apache/zookeeper/pull/1176];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZooKeeper 3.5.6 Quorum TLS protocol issues,ZOOKEEPER-3622,13268888,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,KellySchoenhofen,KellySchoenhofen,17/Nov/19 02:38,18/Nov/19 01:39,29/Jun/25 13:34,,3.5.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,server,,,,,0,,,"Using 3.5.6 I have quorum tls working, but I'm being asked to tighten up from the default of AES128 & TLS 1.2, I've tried the following in the zoo.cfg:

ssl.quorum.protocol=TLSv1.3

This is apparently not supported yet - is this dependent on the version of openssl on the system, or is this just not an option I can specify? Where can I find the list of protocols that are recognized? If 1.3 is not yet available, not the end of the world.

-ssl.quorum.ciphersuites=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384-

-This is not a recognized cipher, neither is AES256/SHA256. The above cipher _should_ be available though, and is the stronger successor to AES128/SHA256.-

-I have the suspicion that I'm setting it wrong, because if I set it to the cipher it defaults to when unset:-

-ssl.quorum.ciphersuites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256-

-Gives me this when cluster members try to connect:-

-2019-11-16 19:39:33,731 [myid:1] - INFO [xxx/x.x.x.x:3888:UnifiedServerSocket$UnifiedSocket@273] - Accepted TLS connection from xxx/x.x.x.x:40822 - NONE - SSL_NULL_WITH_NULL_NULL-
 -2019-11-16 19:39:33,732 [myid:1] - WARN [xxx/x.x.x.x:3888:QuorumCnxManager@542] - Exception reading or writing challenge: {}-

 

(the only alteration I made to the above snippet is changing the machine names to xxx and ip's to x.x.x.x, I altered it in no other way)

So two questions:

1) is tls 1.3 an option?

2) what is the cipher list? I would like an aes256 option. 

Update: So I removed all my changes and I kept getting the the SSL_NULL_WITH_NULL_NULL error. I tore everything down, put it all back together, and still got SSL_NULL. Started again with just the first two nodes, very slowly, picking over the log, and then I noticed the initial error that the name in the cert didn't match the name of the server. When I set up the reverse lookup zone in DNS on Friday, I had set the FQDN properly, but over the weekend (while zk hummed along fine) the zone populated and overwrote everything with just the machine names, removing the FQDN. Hence the name not matching. 
I manually added the FQDN to the entries, rebooted the servers, and they started working.
Since I was getting SSL_NULL when I got off of trying TLSv1.3 and just trying AES256-SHA384, I tried that again, and it works fine:

2019-11-16 22:20:09,346 [myid:2] - INFO [LearnerHandler-/x.x.x.x:43548:UnifiedServerSocket$UnifiedSocket@273] - Accepted TLS connection from xxx/x.x.x.x:43548 - TLSv1.2 - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384

So, this is less of a bug and more of a request - is TLS 1.3 an option, and how can I get a cipher list? I have AES256-SHA384 so that's acceptable to the SecOps where I work. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2019-11-17 02:38:42.0,,,,,,,,,,"0|z08pls:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZKConfig fails to return proper value on getBoolean() when user accidentally includes spaces at the end of the value,ZOOKEEPER-3613,13267793,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,sujithsimon22,scott.guminy@syncsort.com,scott.guminy@syncsort.com,12/Nov/19 18:14,14/Feb/20 15:23,29/Jun/25 13:34,20/Jan/20 08:10,3.5.5,,,,,,,,,,,,,,,,,,,,,,,,3.5.7,3.6.0,3.7.0,,,server,,,,,0,pull-request-available,,"I was using ZooKeeper client in WebSphere Liberty and attempting to configure SSL/TLS for client connections.

To do so, I must add the system property {{zookeeper.client.secure=true}}.  In WebSphere Liberty, java system properties are placed in a file called bootstrap.properties - each property on a separate line.  I accidentally added a space at the end of the line.  When {{ZKConfig.getBoolean()}} attempted to convert this string to a {{boolean}}, it returned {{false}} due to the space at the end.

{{ZKConfig.getBoolean()}} should trim the string before attempting to convert to a boolean.",,"sujithsimon22 commented on pull request #1190: ZOOKEEPER-3613: ZKConfig fails to return proper value on getBoolean()when user accidentally includes spaces at the end of the value
URL: https://github.com/apache/zookeeper/pull/1190
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Dec/19 09:12;githubbot;600","arshadmohammad commented on pull request #1190: ZOOKEEPER-3613: ZKConfig fails to return proper value on getBoolean()when user accidentally includes spaces at the end of the value
URL: https://github.com/apache/zookeeper/pull/1190#discussion_r361331795
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/common/ZKConfigTest.java
 ##########
 @@ -0,0 +1,107 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper.common;
+
+
+import static org.junit.Assert.assertEquals;
+import java.io.File;
+import java.util.concurrent.TimeUnit;
+import org.junit.BeforeClass;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.rules.Timeout;
+
+
+
+public class ZKConfigTest {
+
+    private static final File testData = new File(System.getProperty(""test.data.dir"", ""src/test/resources/data""));
 
 Review comment:
   I think this is not required. you can delete it . init method also can be deleted.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Dec/19 18:29;githubbot;600","arshadmohammad commented on pull request #1190: ZOOKEEPER-3613: ZKConfig fails to return proper value on getBoolean()when user accidentally includes spaces at the end of the value
URL: https://github.com/apache/zookeeper/pull/1190#discussion_r361331900
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/common/ZKConfigTest.java
 ##########
 @@ -0,0 +1,107 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper.common;
+
+
+import static org.junit.Assert.assertEquals;
+import java.io.File;
+import java.util.concurrent.TimeUnit;
+import org.junit.BeforeClass;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.rules.Timeout;
+
+
+
+public class ZKConfigTest {
+
+    private static final File testData = new File(System.getProperty(""test.data.dir"", ""src/test/resources/data""));
+    X509Util x509Util;
+    @Rule
+    public Timeout timeout = new Timeout(10, TimeUnit.SECONDS);
+
+    @BeforeClass
+    public static void init() {
+        if (!testData.exists()) {
+            testData.mkdirs();
+        }
+    }
+
+    // property is not set we should get the default value
+    @Test
+    public void testBooleanRetrievalFromPropertyDefault() {
+        ZKConfig conf = new ZKConfig();
+        String prop = ""UnSetProperty"" + System.currentTimeMillis();
+        boolean defaultValue = false;
+        boolean result = conf.getBoolean(prop, defaultValue);
+        assertEquals(defaultValue, result);
+    }
+
+    // property is set to an valid boolean, we should get the set value
+    @Test
+    public void testBooleanRetrievalFromProperty() {
+        boolean value = true;
+        boolean defaultValue = false;
+        x509Util = new ClientX509Util();
+        System.setProperty(x509Util.getSslProtocolProperty(), Boolean.toString(value));
+        ZKConfig conf = new ZKConfig();
+        boolean result = conf.getBoolean(x509Util.getSslProtocolProperty(), defaultValue);
+        assertEquals(value, result);
+        System.clearProperty(x509Util.getSslProtocolProperty());
 
 Review comment:
   Clear properties in tearDown method
   @After    
   public void tearDown() throws Exception {       }
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Dec/19 18:34;githubbot;600","sujithsimon22 commented on pull request #1190: ZOOKEEPER-3613: ZKConfig fails to return proper value on getBoolean()when user accidentally includes spaces at the end of the value
URL: https://github.com/apache/zookeeper/pull/1190#discussion_r364641702
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/common/ZKConfigTest.java
 ##########
 @@ -0,0 +1,107 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper.common;
+
+
+import static org.junit.Assert.assertEquals;
+import java.io.File;
+import java.util.concurrent.TimeUnit;
+import org.junit.BeforeClass;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.rules.Timeout;
+
+
+
+public class ZKConfigTest {
+
+    private static final File testData = new File(System.getProperty(""test.data.dir"", ""src/test/resources/data""));
 
 Review comment:
   Done, thanks
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Jan/20 09:43;githubbot;600","sujithsimon22 commented on pull request #1190: ZOOKEEPER-3613: ZKConfig fails to return proper value on getBoolean()when user accidentally includes spaces at the end of the value
URL: https://github.com/apache/zookeeper/pull/1190#discussion_r364641959
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/common/ZKConfigTest.java
 ##########
 @@ -0,0 +1,107 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper.common;
+
+
+import static org.junit.Assert.assertEquals;
+import java.io.File;
+import java.util.concurrent.TimeUnit;
+import org.junit.BeforeClass;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.rules.Timeout;
+
+
+
+public class ZKConfigTest {
+
+    private static final File testData = new File(System.getProperty(""test.data.dir"", ""src/test/resources/data""));
+    X509Util x509Util;
+    @Rule
+    public Timeout timeout = new Timeout(10, TimeUnit.SECONDS);
+
+    @BeforeClass
+    public static void init() {
+        if (!testData.exists()) {
+            testData.mkdirs();
+        }
+    }
+
+    // property is not set we should get the default value
+    @Test
+    public void testBooleanRetrievalFromPropertyDefault() {
+        ZKConfig conf = new ZKConfig();
+        String prop = ""UnSetProperty"" + System.currentTimeMillis();
+        boolean defaultValue = false;
+        boolean result = conf.getBoolean(prop, defaultValue);
+        assertEquals(defaultValue, result);
+    }
+
+    // property is set to an valid boolean, we should get the set value
+    @Test
+    public void testBooleanRetrievalFromProperty() {
+        boolean value = true;
+        boolean defaultValue = false;
+        x509Util = new ClientX509Util();
+        System.setProperty(x509Util.getSslProtocolProperty(), Boolean.toString(value));
+        ZKConfig conf = new ZKConfig();
+        boolean result = conf.getBoolean(x509Util.getSslProtocolProperty(), defaultValue);
+        assertEquals(value, result);
+        System.clearProperty(x509Util.getSslProtocolProperty());
 
 Review comment:
   Done, thanks
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Jan/20 09:43;githubbot;600","arshadmohammad commented on issue #1190: ZOOKEEPER-3613: ZKConfig fails to return proper value on getBoolean()when user accidentally includes spaces at the end of the value
URL: https://github.com/apache/zookeeper/pull/1190#issuecomment-575471237
 
 
   +1
   I will merge it in master branch-3.6 and branch-3.5
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Jan/20 05:30;githubbot;600","asfgit commented on pull request #1190: ZOOKEEPER-3613: ZKConfig fails to return proper value on getBoolean()when user accidentally includes spaces at the end of the value
URL: https://github.com/apache/zookeeper/pull/1190
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Jan/20 08:07;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4200,,,0,4200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Jan 20 08:10:25 UTC 2020,,,,,,,,,,"0|z08iug:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Nov/19 08:14;maoling;[~scott.guminy@syncsort.com]

Could you plz help us fix this issue?

the contributor guideline is [here]
(https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute]);;;","19/Dec/19 06:21;sujithsimon22;I can take up this issue;;;","20/Jan/20 08:10;arshad.mohammad;Issue resolved by pull request 1190
[https://github.com/apache/zookeeper/pull/1190];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Zookeeper is unable to set the zookeeper.sasl.client.canonicalize.hostname using system variable,ZOOKEEPER-3590,13263855,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,,aristotelhs,aristotelhs,22/Oct/19 17:59,14/Feb/20 15:23,29/Jun/25 13:34,22/Nov/19 22:43,3.5.6,,,,,,,,,,,,,,,,,,,,,,,,3.5.7,3.6.0,,,,java client,,,,,0,pull-request-available,,"After some reworking on the Zookeeper Sasl implementation (https://issues.apache.org/jira/browse/ZOOKEEPER-3156) the knob of zookeeper.sasl.client.canonicalize.hostname was introduced in order to disable the host name canonicalization. However in ZKClientConfig in handleBackwardCompatibility() this option is not included, which I assume is due to omission. This creates an issue if the zookeeper library is hidden behind another library that does provide an interface to change this value.

Therefore it should also be set by the system properties like the rest of the variables.",,"aristotelhs commented on pull request #1124: ZOOKEEPER-3590: Zookeeper is unable to set the zookeeper.sasl.client.canonicalize.hostname using system property
URL: https://github.com/apache/zookeeper/pull/1124
 
 
   See https://issues.apache.org/jira/browse/ZOOKEEPER-3590
   
   This is a very small patch that gives sets the option after reading it from the system.getProperty(). 
   
   There should not be any side effects since this is mostly copy paste.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Oct/19 18:15;githubbot;600","eolivelli commented on issue #1124: ZOOKEEPER-3590: Zookeeper is unable to set the zookeeper.sasl.client.canonicalize.hostname using system property
URL: https://github.com/apache/zookeeper/pull/1124#issuecomment-545122585
 
 
   Looks good.
   Thank you for providing this patch.
   I guess you would like to see in in 3.5.x, is that correct?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Oct/19 19:44;githubbot;600","aristotelhs commented on issue #1124: ZOOKEEPER-3590: Zookeeper is unable to set the zookeeper.sasl.client.canonicalize.hostname using system property
URL: https://github.com/apache/zookeeper/pull/1124#issuecomment-545123556
 
 
   Yes, besides master I think it is suitable for 3.5.x
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Oct/19 19:47;githubbot;600","asfgit commented on pull request #1124: ZOOKEEPER-3590: Zookeeper is unable to set the zookeeper.sasl.client.canonicalize.hostname using system property
URL: https://github.com/apache/zookeeper/pull/1124
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Nov/19 22:42;githubbot;600","anmolnar commented on issue #1124: ZOOKEEPER-3590: Zookeeper is unable to set the zookeeper.sasl.client.canonicalize.hostname using system property
URL: https://github.com/apache/zookeeper/pull/1124#issuecomment-557721665
 
 
   Merged to both. Thanks @aristotelhs !
   Please pick up the Jira.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Nov/19 22:43;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3000,,,0,3000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Nov 22 22:43:14 UTC 2019,,,,,,,,,,"0|z07ujc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Nov/19 22:43;andor;Issue resolved by pull request 1124
[https://github.com/apache/zookeeper/pull/1124];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong placeholder '{}' in logs.,ZOOKEEPER-3541,13255793,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Duplicate,,xiaodong.hu,xiaodong.hu,10/Sep/19 05:16,05/Jun/23 13:08,29/Jun/25 13:34,05/Jun/23 13:08,3.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,server,,,,,0,pull-request-available,,"In the method 'org.apache.zookeeper.client.ZooKeeperSaslClient#respondToServer', 
{code:java}
 LOG.error(""SASL authentication failed using login context '""
 + this.getLoginContext()
 + ""' with exception: {}"", e); {code}
// I think '{}' above is wrong. It's redundant.

 

!image-2019-09-10-14-02-30-306.png!",,"ajingxian200 commented on pull request #1084: ZOOKEEPER-3541: Wrong placeholder '{}' in logs.
URL: https://github.com/apache/zookeeper/pull/1084
 
 
   The placeholder '{}' in the method 'org.apache.zookeeper.client.ZooKeeperSaslClient#respondToServer' is wrong. It doesn't  work.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Sep/19 05:30;githubbot;600","eolivelli commented on pull request #1084: ZOOKEEPER-3541: Wrong placeholder '{}' in logs.
URL: https://github.com/apache/zookeeper/pull/1084#discussion_r322558927
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/client/ZooKeeperSaslClient.java
 ##########
 @@ -274,7 +274,7 @@ public void respondToServer(byte[] serverToken, ClientCnxn cnxn) {
             } catch (SaslException e) {
                 LOG.error(""SASL authentication failed using login context '""
                           + this.getLoginContext()
-                          + ""' with exception: {}"", e);
 
 Review comment:
   I think slf4 still logs the exception as exceptions are handled in a special way.
   Doesn't it?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Sep/19 05:35;githubbot;600","ajingxian200 commented on pull request #1084: ZOOKEEPER-3541: Wrong placeholder '{}' in logs.
URL: https://github.com/apache/zookeeper/pull/1084#discussion_r322559780
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/client/ZooKeeperSaslClient.java
 ##########
 @@ -274,7 +274,7 @@ public void respondToServer(byte[] serverToken, ClientCnxn cnxn) {
             } catch (SaslException e) {
                 LOG.error(""SASL authentication failed using login context '""
                           + this.getLoginContext()
-                          + ""' with exception: {}"", e);
 
 Review comment:
   ![image](https://user-images.githubusercontent.com/7615397/64586920-4a04d600-d3d0-11e9-87be-1f880bc6c8c6.png)
   Just like this.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Sep/19 05:39;githubbot;600","TisonKun commented on pull request #1084: ZOOKEEPER-3541: Wrong placeholder '{}' in logs.
URL: https://github.com/apache/zookeeper/pull/1084#discussion_r322566400
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/client/ZooKeeperSaslClient.java
 ##########
 @@ -274,7 +274,7 @@ public void respondToServer(byte[] serverToken, ClientCnxn cnxn) {
             } catch (SaslException e) {
                 LOG.error(""SASL authentication failed using login context '""
                           + this.getLoginContext()
-                          + ""' with exception: {}"", e);
 
 Review comment:
   @eolivelli there are several overload methods, what are relevant is as below
   
   ```java
   public void error(String format, Object... arguments);
   public void error(String msg, Throwable t);
   ```
   
   I think
   
   ```java
   LOG.error(String.format(""... %s"", e.getMessage()), e);
   ```
   
   is also a valid fix.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Sep/19 06:11;githubbot;600","TisonKun commented on pull request #1084: ZOOKEEPER-3541: Wrong placeholder '{}' in logs.
URL: https://github.com/apache/zookeeper/pull/1084#discussion_r322566400
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/client/ZooKeeperSaslClient.java
 ##########
 @@ -274,7 +274,7 @@ public void respondToServer(byte[] serverToken, ClientCnxn cnxn) {
             } catch (SaslException e) {
                 LOG.error(""SASL authentication failed using login context '""
                           + this.getLoginContext()
-                          + ""' with exception: {}"", e);
 
 Review comment:
   @eolivelli there are several overload methods, what are relevant is as below
   
   ```java
   public void error(String format, Object arg);
   public void error(String format, Object arg1, Object arg2);
   public void error(String format, Object... arguments);
   public void error(String msg, Throwable t);
   ```
   
   I think
   
   ```java
   LOG.error(String.format(""... %s"", e.getMessage()), e);
   ```
   
   is also a valid fix.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Sep/19 06:11;githubbot;600","belugabehr commented on pull request #1084: ZOOKEEPER-3541: Wrong placeholder '{}' in logs.
URL: https://github.com/apache/zookeeper/pull/1084#discussion_r322761573
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/client/ZooKeeperSaslClient.java
 ##########
 @@ -274,7 +274,7 @@ public void respondToServer(byte[] serverToken, ClientCnxn cnxn) {
             } catch (SaslException e) {
                 LOG.error(""SASL authentication failed using login context '""
                           + this.getLoginContext()
-                          + ""' with exception: {}"", e);
 
 Review comment:
   Ya, this example is a bit odd.
   
   ```
                   LOG.error(""SASL authentication failed using login context '""
                             + this.getLoginContext()
                             + ""' with exception: {}"", e);
   ```
   
   It is using parameters and concatenation.  Typically one or the other is used, not both.
   
   `Throwable` objects are handled special.  They do not need the marker `{}` to be included in the message, they just need to be the last argument in the list.  If a stack trace is not desirable, then  using a marker in conjunction with `e.getMessage()` can be used.
   
   Something better would be:
   ```
   LOG.error(""SASL authentication failed using login context '{}'"", this.getLoginContext(), e);
   ```
   
   The login context is passed to the marker, and the `Exception` message (plus stack trace) is printed as well.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Sep/19 14:03;githubbot;600","TisonKun commented on issue #1084: ZOOKEEPER-3541: Wrong placeholder '{}' in logs.
URL: https://github.com/apache/zookeeper/pull/1084#issuecomment-530192952
 
 
   Hi @ajingxian200! Thanks for your contribution!
   
   As @eolivelli said we can enrich this topic a bit to revisit the log format among our project.
   
   In fact, we already met this requirement and tracked it as [ZOOKEEPER-3509](https://issues.apache.org/jira/browse/ZOOKEEPER-3509). It would be great if you take a look at it and kick off the discussion about log format among our project.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Sep/19 02:26;githubbot;600","ajingxian200 commented on issue #1084: ZOOKEEPER-3541: Wrong placeholder '{}' in logs.
URL: https://github.com/apache/zookeeper/pull/1084#issuecomment-530234532
 
 
   @TisonKun @eolivelli @belugabehr ,Thanks you all.
   So as @TisonKun said, it can be tracked it by [ZOOKEEPER-3509](https://issues.apache.org/jira/browse/ZOOKEEPER-3509).
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Sep/19 06:06;githubbot;600","ajingxian200 commented on issue #1084: ZOOKEEPER-3541: Wrong placeholder '{}' in logs.
URL: https://github.com/apache/zookeeper/pull/1084#issuecomment-530234532
 
 
   @TisonKun @eolivelli @belugabehr ,Thank you all.
   So as @TisonKun said, it can be tracked it by [ZOOKEEPER-3509](https://issues.apache.org/jira/browse/ZOOKEEPER-3509).
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Sep/19 06:07;githubbot;600","nkalmar commented on issue #1084: ZOOKEEPER-3541: Wrong placeholder '{}' in logs.
URL: https://github.com/apache/zookeeper/pull/1084#issuecomment-532684810
 
 
   I'm closing this in reference to the conversation above.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Sep/19 13:30;githubbot;600","nkalmar commented on pull request #1084: ZOOKEEPER-3541: Wrong placeholder '{}' in logs.
URL: https://github.com/apache/zookeeper/pull/1084
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Sep/19 13:30;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,6600,,,0,6600,,,,,,,,,,,,,,,,,,ZOOKEEPER-3509,,,,"10/Sep/19 06:02;xiaodong.hu;image-2019-09-10-14-02-30-306.png;https://issues.apache.org/jira/secure/attachment/12979929/image-2019-09-10-14-02-30-306.png",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2019-09-10 05:16:34.0,,,,,,,,,,"0|z06hog:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
On Windows maven build generates corrupted tarball,ZOOKEEPER-3536,13255140,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Invalid,,arshad.mohammad,arshad.mohammad,06/Sep/19 03:13,20/Sep/19 10:28,29/Jun/25 13:34,20/Sep/19 10:28,3.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,build,,,,,0,,,"On windows maven command {code}mvn clean install -DskipTests{code} creates corrupted tarballs.
In zookeeper-assembly/pom.xml <tarLongFileMode>posix</tarLongFileMode> causing the problem.  Many use Windows as development environment. it would be better if we can make tarLongFileMode property configurable or select based on OS.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Sep 20 10:28:43 UTC 2019,,,,,,,,,,"0|z06dnc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Sep/19 05:43;maoling;* it seems not due to *tarLongFileMode,*changing to *gnu* also failed
 * Cc [~nkalmar], [~eolivelli] What's your insight?
 * >*mvn clean compile -e -X -DtrimStackTrace=false -DskipTests*. (Windows 10,java version ""1.8.0_151"")
 * 
{code:java}
[INFO] Compiling 334 source files to E:\WORKSPACES\workspace_zookeeper\zookeeper\zookeeper-server\target\classes
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO]
[INFO] Apache ZooKeeper ................................... SUCCESS [  8.970 s]
[INFO] Apache ZooKeeper - Documentation ................... SUCCESS [  9.712 s]
[INFO] Apache ZooKeeper - Jute ............................ SUCCESS [  9.208 s]
[INFO] Apache ZooKeeper - Server .......................... FAILURE [ 15.542 s]
[INFO] Apache ZooKeeper - Metrics Providers ............... SKIPPED
[INFO] Apache ZooKeeper - Prometheus.io Metrics Provider .. SKIPPED
[INFO] Apache ZooKeeper - Client .......................... SKIPPED
[INFO] Apache ZooKeeper - Recipes ......................... SKIPPED
[INFO] Apache ZooKeeper - Recipes - Election .............. SKIPPED
[INFO] Apache ZooKeeper - Recipes - Lock .................. SKIPPED
[INFO] Apache ZooKeeper - Recipes - Queue ................. SKIPPED
[INFO] Apache ZooKeeper - Assembly ........................ SKIPPED
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 44.006 s
[INFO] Finished at: 2019-09-08T13:38:37+08:00
[INFO] Final Memory: 50M/429M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.8.0:compile (default-compile) on project zookeeper: Fatal error compiling: java.lang.NullPointerException -> [Help 1]
org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.8.0:compile (default-compile) on project zookeeper: Fatal error compiling
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:213)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:154)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:146)
        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117)
        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81)
        at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
        at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:309)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:194)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:107)
        at org.apache.maven.cli.MavenCli.execute(MavenCli.java:993)
        at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:345)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:191)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:498)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
        at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
        at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: org.apache.maven.plugin.MojoExecutionException: Fatal error compiling
        at org.apache.maven.plugin.compiler.AbstractCompilerMojo.execute(AbstractCompilerMojo.java:1140)
        at org.apache.maven.plugin.compiler.CompilerMojo.execute(CompilerMojo.java:188)
        at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
        ... 20 more
Caused by: org.codehaus.plexus.compiler.CompilerException: java.lang.NullPointerException
        at org.codehaus.plexus.compiler.javac.JavaxToolsCompiler.compileInProcess(JavaxToolsCompiler.java:173)
        at org.codehaus.plexus.compiler.javac.JavacCompiler.performCompile(JavacCompiler.java:174)
        at org.apache.maven.plugin.compiler.AbstractCompilerMojo.execute(AbstractCompilerMojo.java:1129)
        ... 23 more
Caused by: java.lang.RuntimeException: java.lang.NullPointerException
        at com.sun.tools.javac.main.Main.compile(Main.java:559)
        at com.sun.tools.javac.api.JavacTaskImpl.doCall(JavacTaskImpl.java:129)
        at com.sun.tools.javac.api.JavacTaskImpl.call(JavacTaskImpl.java:138)
        at org.codehaus.plexus.compiler.javac.JavaxToolsCompiler.compileInProcess(JavaxToolsCompiler.java:126)
        ... 25 more
Caused by: java.lang.NullPointerException
        at com.sun.tools.javac.model.JavacTypes.getOverriddenMethods(JavacTypes.java:306)
        at com.sun.tools.doclint.Env.setCurrent(Env.java:155)
        at com.sun.tools.doclint.Checker.scan(Checker.java:144)
        at com.sun.tools.doclint.DocLint$2.visitDecl(DocLint.java:285)
        at com.sun.tools.doclint.DocLint$DeclScanner.visitVariable(DocLint.java:372)
        at com.sun.tools.doclint.DocLint$DeclScanner.visitVariable(DocLint.java:346)
        at com.sun.tools.javac.tree.JCTree$JCVariableDecl.accept(JCTree.java:864)
        at com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:68)
        at com.sun.source.util.TreeScanner.scan(TreeScanner.java:91)
        at com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:99)
        at com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:133)
        at com.sun.tools.doclint.DocLint$DeclScanner.visitClass(DocLint.java:360)
        at com.sun.tools.doclint.DocLint$DeclScanner.visitClass(DocLint.java:346)
        at com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:720)
        at com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:68)
        at com.sun.source.util.TreeScanner.scan(TreeScanner.java:91)
        at com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:99)
        at com.sun.source.util.TreeScanner.visitCompilationUnit(TreeScanner.java:120)
        at com.sun.tools.doclint.DocLint$DeclScanner.visitCompilationUnit(DocLint.java:354)
        at com.sun.tools.doclint.DocLint$DeclScanner.visitCompilationUnit(DocLint.java:346)
        at com.sun.tools.javac.tree.JCTree$JCCompilationUnit.accept(JCTree.java:550)
        at com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:68)
        at com.sun.tools.doclint.DocLint$3.started(DocLint.java:296)
        at com.sun.tools.javac.api.ClientCodeWrapper$WrappedTaskListener.started(ClientCodeWrapper.java:668)
        at com.sun.tools.javac.api.MultiTaskListener.started(MultiTaskListener.java:103)
        at com.sun.tools.javac.main.JavaCompiler.attribute(JavaCompiler.java:1240)
        at com.sun.tools.javac.main.JavaCompiler.compile2(JavaCompiler.java:901)
        at com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:860)
        at com.sun.tools.javac.main.Main.compile(Main.java:523)
        ... 28 more
[ERROR]
[ERROR]
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
[ERROR]
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn <goals> -rf :zookeeper
{code}

 

 ;;;","08/Sep/19 06:25;eolivelli;Looks like a javac bug.
Try updating to latest and greatest version of jdk8

You can find it at AdoptOpenJDK;;;","09/Sep/19 05:58;arshad.mohammad;{quote} it seems not due to tarLongFileMode,*changing to *gnu also failed {quote}
In branch-3.5 build is success but it creates corrupted tarball. 


;;;","20/Sep/19 10:28;arshad.mohammad;It is not an issue;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Logging false leader election times,ZOOKEEPER-3479,13247975,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,karolos,karolos,karolos,31/Jul/19 01:23,23/Jul/20 05:12,29/Jun/25 13:34,02/Aug/19 18:09,3.5.5,,,,,,,,,,,,,,,,,,,,,,,,3.6.0,,,,,leaderElection,,,,,0,pull-request-available,,"There seems to be a problem with the logging of leader election times: the logged times are much smaller than the actual time it took for the leader election to complete.

This bug can be easily reproduced by following these steps:

1) Run a ZK cluster of 3 servers

2) Kill the server that is currently the leader

3) The log files of the remaining 2 servers contain false leader election times

 

In the attached files you can see the log files of the remaining 2 serve. For brevity, I removed the parts before and after the leader election from the log files.

For example, in {{server1.txt}} we can see that:

 
{code:java}
2019-07-31 00:57:31,852 [myid:1] - WARN [QuorumPeer[myid=1](plain=/0.0.0.0:2791)(secure=disabled):QuorumPeer@1318] - PeerState set to LOOKING
2019-07-31 00:57:31,853 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2791)(secure=disabled):QuorumPeer@1193] - LOOKING
2019-07-31 00:57:31,853 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2791)(secure=disabled):FastLeaderElection@885] - New election. My id = 1, proposed zxid=0x100000001
[...]
2019-07-31 00:57:32,272 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2791)(secure=disabled):Follower@69] - FOLLOWING - LEADER ELECTION TOOK - 1 MS{code}
Leader election supposedly took only 1ms, but in reality it took (32,272 - 31,853) = 419ms!

The reason for this bug seems to be the introduction of this line
{code:java}
start_fle = Time.currentElapsedTime();{code}
(seen here [https://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java#L1402]) 

back in this commit [https://github.com/apache/zookeeper/commit/5428cd4bc963c2e653a260c458a8a8edf3fa08ef].

 

 

 

 ",,"insumity commented on pull request #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031
 
 
   See https://issues.apache.org/jira/browse/ZOOKEEPER-3479 here for the issue.
   
   The problem is that the logged leader election times are much smaller than in reality. For example, we have log files that contain the following lines:
   ```
   2019-07-31 00:57:31,852 [myid:1] - WARN [QuorumPeer[myid=1](plain=/0.0.0.0:2791)(secure=disabled):QuorumPeer@1318] - PeerState set to LOOKING
   2019-07-31 00:57:31,853 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2791)(secure=disabled):QuorumPeer@1193] - LOOKING
   2019-07-31 00:57:31,853 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2791)(secure=disabled):FastLeaderElection@885] - New election. My id = 1, proposed zxid=0x100000001
   [...]
   2019-07-31 00:57:32,272 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2791)(secure=disabled):Follower@69] - FOLLOWING - LEADER ELECTION TOOK - 1 MS
   ```
   Leader election took more than 400ms, not 1ms!
   
   
   The reason this logging bug exists has to do with this [line](https://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java#L1402) in `QuorumPeer`. The computation of the leader election time starts inside [`FastLeaderElection.lookForLeader` ](https://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java#L915) where `start_fle` is set. After a server has found a leader, it repeats the `QuorumPeer` [loop](https://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java#L1288) and resets the `start_fle` value. Hence, when, for example, a follower [logs](https://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Follower.java#L75) how much time it took for the leader election, it logs a much smaller time than it actually took for the leader election to complete. To be precise, it just logs the time it took to loop inside [`QuorumPeer`](https://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java#L1288).
   
   Furthermore, if we remove the problematic [line](https://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java#L1402), then there is no reason to check whether `start_fle == 0` in [`FastLeaderElection`](https://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java#L914), since `start_fle` is always `0` at that point. I'm not sure if this `if` statement is needed in the first place.
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jul/19 01:48;githubbot;600","hanm commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-516694171
 
 
   LGTM.
   
   @lvfangmin Any feedback for this patch? I am curious if you guys use something different internally to measure LE time, as the current LE metrics is not very reliable.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jul/19 04:49;githubbot;600","lvfangmin commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517127249
 
 
   @hanm internally, we're tracking the quorum unavailable time, which is the time between server first went to LOOKING state and set ZAB state to leading broadcast state. This is close to real quorum unavailable time in general, which includes leader election time + leader activation time (syncing with majority).
   
   This metric is more useful than the leader election itself, and we're using this instead of the leader election metric, we'll contribute that back as well.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 05:37;githubbot;600","lvfangmin commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517127681
 
 
   Jenkins failed due to flaky test in CommitProcessorMetricsTest, tracked in JIRA ZOOKEEPER-3480.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 05:38;githubbot;600","lvfangmin commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517127713
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 05:38;githubbot;600","insumity commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517365560
 
 
   test maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 16:39;githubbot;600","insumity commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517365560
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 16:39;githubbot;600","insumity commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517365560
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 16:39;githubbot;600","insumity commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517365866
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 16:40;githubbot;600","hanm commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517397943
 
 
   thanks @lvfangmin.
   
   >> which includes leader election time + leader activation time
   
   Agree. Since this also include LE time, unless you guys are using something different to measure LE, this patch should improve your metrics accuracy as well, though it probably would not make a big difference if the leader activation time costs a lot more than LE. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 18:08;githubbot;600","hanm commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517397994
 
 
   test maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 18:08;githubbot;600","hanm commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517398734
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 18:10;githubbot;600","hanm commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517453247
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 20:51;githubbot;600","hanm commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517488865
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 23:07;githubbot;600","insumity commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517753659
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 15:56;githubbot;600","insumity commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517753659
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 16:45;githubbot;600","insumity commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517769682
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 16:45;githubbot;600","hanm commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517794803
 
 
   Thanks @insumity , the build is green now, and I am landing this patch.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 18:05;githubbot;600","asfgit commented on pull request #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 18:09;githubbot;600","karanmehta93 commented on pull request #1031:
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-662821654


   > This metric is more useful than the leader election itself, and we're using this instead of the leader election metric, we'll contribute that back as well.
   
   @lvfangmin Your point makes sense. Did you contribute that metric back? I am interested in it.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jul/20 05:12;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,12000,,,0,12000,,,,,,,,,,,,,,,,,,,,,,"31/Jul/19 01:09;karolos;server1.txt;https://issues.apache.org/jira/secure/attachment/12976286/server1.txt","31/Jul/19 01:09;karolos;server2.txt;https://issues.apache.org/jira/secure/attachment/12976285/server2.txt",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Aug 02 23:38:30 UTC 2019,,,,,,,,,,"0|z056g8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Aug/19 18:09;hanm;Issue resolved by pull request 1031
[https://github.com/apache/zookeeper/pull/1031];;;","02/Aug/19 21:31;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #643 (See [https://builds.apache.org/job/ZooKeeper-trunk/643/])
ZOOKEEPER-3479: Logging false leader election times (hanm: rev 3882a0171f91280bf1adbbd4ffaeb17cb5131316)
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java
;;;","02/Aug/19 23:38;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #479 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/479/])
ZOOKEEPER-3479: Logging false leader election times (hanm: rev 3882a0171f91280bf1adbbd4ffaeb17cb5131316)
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
download page file package broken,ZOOKEEPER-3424,13238714,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,,,Totoro,Totoro,11/Jun/19 09:21,27/Aug/19 13:45,29/Jun/25 13:34,,3.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,build,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Aug 27 13:45:01 UTC 2019,,,,,,,,,,"0|z03lz4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Aug/19 13:45;maoling;[~Totoro]

Could you plz give us more details about this issue?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
./zkTxnLogToolkit.sh will throw the NPE and stop the process of formatting txn logs due to the data's content is null,ZOOKEEPER-3410,13237041,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Resolved,maoling,maoling,maoling,01/Jun/19 13:33,12/Jul/19 02:04,29/Jun/25 13:34,12/Jul/19 02:04,3.6.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,scripts,,,,,0,pull-request-available,,"[zk: 127.0.0.1:2180(CONNECTED) 26] create -t 500 /ttl_node

19-5-30 下午06时10分50秒 session 0x10007a75c0c0000 cxid 0x0 zxid 0x6 createSession 30000
Exception in thread ""main"" java.lang.NullPointerException
 at java.lang.String.<init>(String.java:566)
 at org.apache.zookeeper.server.persistence.TxnLogToolkit.getDataStrFromTxn(TxnLogToolkit.java:316)
 at org.apache.zookeeper.server.persistence.TxnLogToolkit.printTxn(TxnLogToolkit.java:272)
 at org.apache.zookeeper.server.persistence.TxnLogToolkit.printTxn(TxnLogToolkit.java:266)
 at org.apache.zookeeper.server.persistence.TxnLogToolkit.dump(TxnLogToolkit.java:217)
 at org.apache.zookeeper.server.persistence.TxnLogToolkit.main(TxnLogToolkit.java:116)

t*xnData.append(createTTLTxn.getPath() + "","" + new String(createTTLTxn.getData()))*
 *.append("","" + createTTLTxn.getAcl() + "","" + createTTLTxn.getParentCVersion())*
 *.append("","" + createTTLTxn.getTtl());*",,"maoling commented on pull request #975: ZOOKEEPER-3410:./zkTxnLogToolkit.sh will throw the NPE and stop the process of formatting txn logs due to the data's content is null
URL: https://github.com/apache/zookeeper/pull/975
 
 
   - the data can be null,but the other fileds(`acl`,`version`,`ttl`)  cannot be `null`.  I also make the `printTxn` method more safer , surrounding it with `try-catch` in case of other unexpected NPEs.
   - some test cases were included in the [JIRA](https://issues.apache.org/jira/browse/ZOOKEEPER-3410).
   - more details in the [ZOOKEEPER-3410](https://issues.apache.org/jira/browse/ZOOKEEPER-3410)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Jun/19 08:00;githubbot;600","eolivelli commented on pull request #975: ZOOKEEPER-3410:./zkTxnLogToolkit.sh will throw the NPE and stop the process of formatting txn logs due to the data's content is null
URL: https://github.com/apache/zookeeper/pull/975#discussion_r291849845
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/TxnLogToolkit.java
 ##########
 @@ -332,7 +338,15 @@ private static String getDataStrFromTxn(Record txn) {
 
         return txnData.toString();
     }
-    
+
+    private static String checkNullToEmpty(byte[] data) {
+        if (data == null || data.length == 0) {
+            return """";
+        }
+
+        return new String(data);
 
 Review comment:
   Can we set a charset? Like ASCII or UTF8?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Jun/19 20:47;githubbot;600","eolivelli commented on pull request #975: ZOOKEEPER-3410:./zkTxnLogToolkit.sh will throw the NPE and stop the process of formatting txn logs due to the data's content is null
URL: https://github.com/apache/zookeeper/pull/975#discussion_r291849858
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/TxnLogToolkit.java
 ##########
 @@ -332,7 +338,15 @@ private static String getDataStrFromTxn(Record txn) {
 
         return txnData.toString();
     }
-    
+
+    private static String checkNullToEmpty(byte[] data) {
 
 Review comment:
   Do we have any utility class for this stuff?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Jun/19 20:47;githubbot;600","maoling commented on pull request #975: ZOOKEEPER-3410:./zkTxnLogToolkit.sh will throw the NPE and stop the process of formatting txn logs due to the data's content is null
URL: https://github.com/apache/zookeeper/pull/975#discussion_r291867269
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/TxnLogToolkit.java
 ##########
 @@ -332,7 +338,15 @@ private static String getDataStrFromTxn(Record txn) {
 
         return txnData.toString();
     }
-    
+
+    private static String checkNullToEmpty(byte[] data) {
 
 Review comment:
   Since the parameters is `byte[] data`, I think we may don't hava any one.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Jun/19 02:58;githubbot;600","maoling commented on issue #975: ZOOKEEPER-3410:./zkTxnLogToolkit.sh will throw the NPE and stop the process of formatting txn logs due to the data's content is null
URL: https://github.com/apache/zookeeper/pull/975#issuecomment-500734821
 
 
   retest this please
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Jun/19 08:08;githubbot;600","anmolnar commented on pull request #975: ZOOKEEPER-3410:./zkTxnLogToolkit.sh will throw the NPE and stop the process of formatting txn logs due to the data's content is null
URL: https://github.com/apache/zookeeper/pull/975#discussion_r295527654
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/TxnLogToolkit.java
 ##########
 @@ -262,57 +262,63 @@ private boolean askForFix(Scanner scanner) throws TxnLogToolkitException {
         }
     }
 
-    private void printTxn(byte[] bytes) throws IOException {
+    private void printTxn(byte[] bytes) {
         printTxn(bytes, """");
     }
 
-    private void printTxn(byte[] bytes, String prefix) throws IOException {
-        TxnHeader hdr = new TxnHeader();
-        Record txn = SerializeUtils.deserializeTxn(bytes, hdr);
-        String txnStr = getDataStrFromTxn(txn);
-        String txns = String.format(""%s session 0x%s cxid 0x%s zxid 0x%s %s %s"",
-                DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.LONG).format(new Date(hdr.getTime())),
-                Long.toHexString(hdr.getClientId()),
-                Long.toHexString(hdr.getCxid()),
-                Long.toHexString(hdr.getZxid()),
-                TraceFormatter.op2String(hdr.getType()),
-                txnStr);
-        if (prefix != null && !"""".equals(prefix.trim())) {
-            System.out.print(prefix + "" - "");
-        }
-        if (txns.endsWith(""\n"")) {
-            System.out.print(txns);
-        } else {
-            System.out.println(txns);
+    private void printTxn(byte[] bytes, String prefix) {
+        try {
+            TxnHeader hdr = new TxnHeader();
+            Record txn = SerializeUtils.deserializeTxn(bytes, hdr);
+            String txnStr;
+
+            txnStr = getFormattedTxnStr(txn);
+            String txns = String.format(""%s session 0x%s cxid 0x%s zxid 0x%s %s %s"",
+                    DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.LONG).format(new Date(hdr.getTime())),
+                    Long.toHexString(hdr.getClientId()),
+                    Long.toHexString(hdr.getCxid()),
+                    Long.toHexString(hdr.getZxid()),
+                    TraceFormatter.op2String(hdr.getType()),
+                    txnStr);
+            if (prefix != null && !"""".equals(prefix.trim())) {
+                System.out.print(prefix + "" - "");
+            }
+            if (txns.endsWith(""\n"")) {
+                System.out.print(txns);
+            } else {
+                System.out.println(txns);
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
 
 Review comment:
   You've already fixed the 'null' reference problem, why do you catch everything here?
   If something goes wrong with a txn, probably will happen for the others too and you'll end up flooding your console with error messages. I think it's better to full stop in case of an unhandled error.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Jun/19 21:17;githubbot;600","maoling commented on issue #975: ZOOKEEPER-3410:./zkTxnLogToolkit.sh will throw the NPE and stop the process of formatting txn logs due to the data's content is null
URL: https://github.com/apache/zookeeper/pull/975#issuecomment-505818200
 
 
   @anmolnar  can this patch be landed now ?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jun/19 10:30;githubbot;600","asfgit commented on pull request #975: ZOOKEEPER-3410:./zkTxnLogToolkit.sh will throw the NPE and stop the process of formatting txn logs due to the data's content is null
URL: https://github.com/apache/zookeeper/pull/975
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Jul/19 11:34;githubbot;600","anmolnar commented on issue #975: ZOOKEEPER-3410:./zkTxnLogToolkit.sh will throw the NPE and stop the process of formatting txn logs due to the data's content is null
URL: https://github.com/apache/zookeeper/pull/975#issuecomment-509606729
 
 
   Merged to master. Thanks @maoling !
   I think this should be nice to fix in branch-3.5. Would you please create separate pull request?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Jul/19 11:36;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,5400,,,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Jul 09 16:29:19 UTC 2019,,,,,,,,,,"0|z03bq0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Jun/19 06:53;maoling;*./zkTxnLogToolkit.sh /data/zkBackup/version-2/log.57*
ZooKeeper Transactional Log File with dbid 0 txnlog format version 2
19-6-8 下午05时39分33秒 session 0x1000978b3850000 cxid 0x0 zxid 0x57 createSession 30000
19-6-8 下午05时39分42秒 session 0x1000978b3850000 cxid 0x2 zxid 0x58 create /p_node*,,*[31,s\{'world,'anyone}
],false,13
19-6-8 下午05时39分52秒 session 0x1000978b3850000 cxid 0x3 zxid 0x59 createContainer /container_node*,,*[31,s\{'world,'anyone}
],14
19-6-8 下午05时39分59秒 session 0x100091e93c20001 cxid 0x0 zxid 0x5a closeSession
19-6-8 下午05时40分04秒 session 0x1000978b3850000 cxid 0x4 zxid 0x5b createTtl /ttl_node*,,*[31,s\{'world,'anyone}
],15,1000
19-6-8 下午05时40分28秒 session 0x0 cxid 0x0 zxid 0x5c deleteContainer '/ttl_node
19-6-8 下午05时40分37秒 session 0x1000978b3850000 cxid 0x0 zxid 0x5d closeSession
EOF reached after 7 txns.


*./zkTxnLogToolkit.sh /data/zkBackup/version-2/log.5e*
19-6-9 下午02时38分59秒 session 0x1000aec8ddd0000 cxid 0x0 zxid 0x5e createSession 30000
19-6-9 下午02时39分27秒 session 0x1000aec8ddd0000 cxid 0x1 zxid 0x5f create /05-09-node,,[31,s\{'world,'anyone}
],false,16
19-6-9 下午02时39分41秒 session 0x1000aec8ddd0000 cxid 0x2 zxid 0x60 error -101
19-6-9 下午02时39分53秒 session 0x1000aec8ddd0000 cxid 0x3 zxid 0x61 error -101
19-6-9 下午02时40分34秒 session 0x1000aec8ddd0000 cxid 0x0 zxid 0x62 closeSession
19-6-9 下午02时43分08秒 session 0x1000aec8ddd0001 cxid 0x0 zxid 0x63 createSession 30000
19-6-9 下午02时43分17秒 session 0x1000aec8ddd0001 cxid 0x3 zxid 0x64 error -110
19-6-9 下午02时44分06秒 session 0x1000aec8ddd0001 cxid 0x5 zxid 0x65 setData /05-09-node,,1
19-6-9 下午02时50分32秒 session 0x1000aec8ddd0001 cxid 0x6 zxid 0x66 create /06-09,,[31,s\{'world,'anyone}
],false,17
19-6-9 下午02时50分39秒 session 0x1000aec8ddd0001 cxid 0x8 zxid 0x67 setData /06-09,,1
19-6-9 下午02时51分16秒 session 0x1000aec8ddd0001 cxid 0x9 zxid 0x68 create /ttl-node-2,,[31,s\{'world,'anyone}
],false,18
19-6-9 下午02时51分26秒 session 0x1000aec8ddd0001 cxid 0xa zxid 0x69 createContainer /container-node-2,,[31,s\{'world,'anyone}
],19
EOF reached after 12 txns.;;;","09/Jul/19 15:15;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #442 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/442/])
ZOOKEEPER-3410: zkTxnLogToolkit.sh will throw the NPE and stop the (andor: rev 433cf7e2b660fce3c73eb011452814f7084ff196)
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/TxnLogToolkit.java
;;;","09/Jul/19 16:29;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #607 (See [https://builds.apache.org/job/ZooKeeper-trunk/607/])
ZOOKEEPER-3410: zkTxnLogToolkit.sh will throw the NPE and stop the (andor: rev 433cf7e2b660fce3c73eb011452814f7084ff196)
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/TxnLogToolkit.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broken Link - Release Notes (PDF),ZOOKEEPER-3390,13232989,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,,,edgar.pascoal,edgar.pascoal,13/May/19 13:53,13/May/19 13:53,29/Jun/25 13:34,,3.5.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,"Not possible to obtain the release notes in PDF format (broken link):

[https://zookeeper.apache.org/doc/r3.5.4-beta/releasenotes.pdf]

!image-2019-05-13-14-51-18-496.png|width=429,height=125!

 

!image-2019-05-13-14-49-14-464.png|width=528,height=267!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/May/19 13:49;edgar.pascoal;image-2019-05-13-14-49-14-464.png;https://issues.apache.org/jira/secure/attachment/12968564/image-2019-05-13-14-49-14-464.png","13/May/19 13:51;edgar.pascoal;image-2019-05-13-14-51-18-496.png;https://issues.apache.org/jira/secure/attachment/12968563/image-2019-05-13-14-51-18-496.png",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2019-05-13 13:53:04.0,,,,,,,,,,"0|z02mq0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Zookeeper does not export all required packages in OSGi (needed for curator),ZOOKEEPER-3389,13232952,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,jondruse,jondruse,13/May/19 10:37,09/Oct/23 11:24,29/Jun/25 13:34,,3.4.10,3.5.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,pull-request-available,,"Install Zookeeper and Curator (4.1+) in OSGi.
Some export packages are missing.
Problem could is happening on bot 3.4.x and 3.5.x.",,"JiriOndrusek commented on pull request #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945
 
 
   Issue: https://issues.apache.org/jira/browse/ZOOKEEPER-3389
   
   Added exported-packages which are required for Curator installation in OSGi.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/May/19 10:51;githubbot;600","JiriOndrusek commented on pull request #946: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (for Curator)
URL: https://github.com/apache/zookeeper/pull/946
 
 
   Issue: https://issues.apache.org/jira/browse/ZOOKEEPER-3389
   
   Cherry-picked from 316962a09aa2d64f3c695e8dcfe22045c2475295
   
   Added exported-packages which are required for Curator installation in OSGi
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/May/19 10:51;githubbot;600","anmolnar commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-491787982
 
 
   retest this please
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/May/19 11:40;githubbot;600","eolivelli commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-491793466
 
 
   Please update maven pom as well
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/May/19 12:00;githubbot;600","JiriOndrusek commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-491797203
 
 
   Hi @eolivelli , 
   I'd like to upgrade also pom, but I'm not able to find any plugin creating OSGi headers in mvn
   (mainly I'm looking into https://github.com/apache/zookeeper/blob/master/pom.xml)
   Can you please help me to find it?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/May/19 12:12;githubbot;600","eolivelli commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-491797836
 
 
   Let me check.
   Maybe we lost ot in the migration.
   
   @anmolnar this will be a -1 on the 3.5.5rc6
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/May/19 12:14;githubbot;600","eolivelli commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-492130327
 
 
   Is this  @JiriOndrusek a ""regression"" ?
   As you are adding the manifest lines on ANT build I guess this is not a problem introduced by the recent Maven Migration
   
   cc @nkalmar @anmolnar 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/May/19 08:23;githubbot;600","eolivelli commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-492130477
 
 
   Can you please try to add a fix even for the maven build ?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/May/19 08:24;githubbot;600","nkalmar commented on issue #946: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (for Curator)
URL: https://github.com/apache/zookeeper/pull/946#issuecomment-492154707
 
 
   Less of an importance on branch 3.4 to fix it on maven (we do not plan to release with maven on this branch), but I agree, we should definitely fix it on master and 3.5.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/May/19 09:09;githubbot;600","nkalmar commented on issue #946: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (for Curator)
URL: https://github.com/apache/zookeeper/pull/946#issuecomment-492154707
 
 
   Less of an importance on branch 3.4 to fix it on maven (we do not plan to release with maven on this branch), but I agree, we should definitely fix it on master and 3.5. I'm also looking into a maven fix.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/May/19 09:09;githubbot;600","JiriOndrusek commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-492213488
 
 
   @eolivelli Hi,
   I've checked history of build.xml and it is not a regression. Just an issue, which could be seen only after installing Curator 4.1.1 (may be older) in OSGi.
   
   For maven: I haven't found any occurrence of OSGi headers in main pom.xml.
   I'm not sure whether I just misses them -> so only a little fix would be needed
   or whether it has to be added -> slightly bigger change.
   
   I can look into it later this week, is this time horizon acceptable? (I see in comment above ""this will be a -1 on the 3.5.5rc6"")
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/May/19 12:18;githubbot;600","nkalmar commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-492236889
 
 
   Hi @JiriOndrusek ,
   Thanks for this patch and looking into this.
   Unfortunately there is no maven OSGi whatsoever, so it needs to be added.
   
   As this is not a regression, I believe rc6 will be rolled out, still short on binding +1 though. So at my current knowledge, target version for this is 3.5.6. But it needs a maven fix for sure. I'll also try to look into it, I'll let you know if I find anything.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/May/19 13:27;githubbot;600","JiriOndrusek commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-492561609
 
 
   Hi @nkalmar ,
   I've started with osgification of maven build, so far in my branch https://github.com/JiriOndrusek/zookeeper/commits/osgi_in_maven
   If you've already started with this task also, we can calaborate.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/May/19 08:37;githubbot;600","eolivelli commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-492569164
 
 
   @JiriOndrusek I feel you can continue on this branch, we can merge all this OSGI stuff in a single commit.
   On branch 3.5 and master we are not using Ant anymore.
   Ant is living mostly only for 3.4
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/May/19 08:59;githubbot;600","nkalmar commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-492587354
 
 
   I agree with Enrico, please just continue on this branch, as maven will be used to release future 3.5.x and 3.6.x versions.
   I don't have much to add, but I'll keep a lookout for this PR!
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/May/19 09:52;githubbot;600","JiriOndrusek commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-492672683
 
 
   @nkalmar @eolivelli
   I'm getting close to the finishing. I just want to clarify some facts and also ask for the help.
   - just to be sure, only zookeeper-server jar will be compiled as OSGi bundle? (I see also possible modules jute and recipes, so I would like to be sure)
   - I'm currently facing a problem with OSGi build, there is a warning that zookeeper-server is exporting package, which is also present in different jar - zookeeper-jute. (Packages org/apache/zookeeper/server/quorum and org/apache/zookeeper/server/persistence)
   It would help me to know, how these packages should be handled. I looked into package 'quorum' and it seems, that it contains different classes. But  even if they are different, it could change in the FUTURE. So I'd like to ask, how to face it
      - best solution from OSGi would be to change jute to use different package names - but it is probably not possible 
      - best way (from my POV) is to merge packages together (with rule that classes from zookeeper-server has to be treated as primary) - but it can remove some classes which are needed to run and I have also problems to define it with maven-plugin (still not sure why it is not working, I think it should work)
      - may be it is possible also to ignore these packages from zookeeper-jute - but it doesn't seem much probable
   What do you think about it? 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/May/19 14:14;githubbot;600","JiriOndrusek commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-492672683
 
 
   @nkalmar @eolivelli
   I'm getting close to the finishing. I just want to clarify some facts and also ask for the help.
   - just to be sure, only zookeeper-server jar will be compiled as OSGi bundle? (I see also possible modules jute and recipes, so I would like to be sure)
   - I'm currently facing a problem with OSGi build, there is a warning that zookeeper-server is exporting package, which is also present in different jar - zookeeper-jute. (Packages org/apache/zookeeper/server/quorum and org/apache/zookeeper/server/persistence)
   It would help me to know, how these packages should be handled. I looked into package 'quorum' and it seems, that it contains different classes. But  even if they are different, it could change in the FUTURE. So I'd like to ask, how to face it
      - best solution from OSGi would be to change jute to use different package names - but it is probably not possible 
      - best way (from my POV) is to merge packages together (with rule that classes from zookeeper-server has to be treated as primary) - but it can remove some classes which are needed to run and I have also problems to define it with maven-plugin (still not sure why it is not working, I think it should work)
      - may be it is possible also to ignore these packages from zookeeper-jute - but it doesn't seem much probable
   
   What do you think about it? 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/May/19 14:14;githubbot;600","nkalmar commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-492677907
 
 
   There will be 2 jars upon release, zookeeper-jute and zookeeper-server. zookeeper-jute is the serialization library (just like protobuf). zookeeper-server depends on zookeeper-jute. 
   Since jute (originally) was an independent project, it was always kept seperate. But it evolved with zookeeper, hence the same package names. It's not ideal, and even causes problems like this one with OSGi.
   
   The jute classes are generated, just like in protobuf. 
   I'm afraid merging the packages together is not.. uhm, preferable, to say. The most plausible solution out of these fro me seems to be changing jute package names. Those should be all private to ZooKeeper, so we do not change public API. But I would be happy if we found another solution.
   
   Unfortunately I don't know much about OSGi, so I don't know what the best solution would be here. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/May/19 14:26;githubbot;600","nkalmar commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-492677907
 
 
   There will be 2 jars upon release, zookeeper-jute and zookeeper-server. zookeeper-jute is the serialization library (just like protobuf). zookeeper-server depends on zookeeper-jute. 
   Since jute (originally) was an independent project, it was always kept seperate. But it evolved with zookeeper, hence the same package names. It's not ideal, and even causes problems like this one with OSGi.
   
   The jute classes are generated, just like in protobuf. 
   I'm afraid merging the packages together is not.. uhm, preferable, to say. The most plausible solution out of these for me seems to be changing jute package names. Those should be all private to ZooKeeper, so we do not change public API. But I would be happy if we found another solution.
   
   Unfortunately I don't know much about OSGi, so I don't know what the best solution would be here. But zookeeper-server needs zookeeper-jute to serialize the messages between nodes. 
   Maven automatically downloads zookeeper-jute when zookeeper-server is used, as it is a dependency for it. I'm not sure how OSGi solves this.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/May/19 14:29;githubbot;600","nkalmar commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-492680330
 
 
   I see you changed zookeeper-server packaging from jar to bundle. Yeah... I will check up on this sometime this week. I'm afraid this also affects other things.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/May/19 14:32;githubbot;600","eolivelli commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-492683153
 
 
   Yes changing the package name is feasible but only for 3.6+.
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/May/19 14:38;githubbot;600","JiriOndrusek commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-492704512
 
 
   @nkalmar @eolivelli 
   I'll continue with this tomorrow.
   I see in your comment: ""Those should be all private to ZooKeeper, so we do not change public API"" and the fact that jute is another artifact, I see ""simple"" solution:
   I'll try to dig up little bit if there is some way, when zookeeper-jute won't export these ""private packages"". But I have to try some possibilities,  how to solve zookeeper-server's dependency on those libraries. I'm not sure whether it will be possible. 
   Current status is: 
   - build changes are only for zookeeper-server to be changed into OSGi bundle, 
   - there are no warnings during build. 
   - I have to validate whether there is some ""real"" difference between current manifest and manifest generated by ant.
   
   As there is a mentioning, that changing packaging from 'jar' to 'bundle' will cause some errors elsewhere. Unfortunately I'm not aware of other way of running OSGi build, but I'll try to look into it also tomorrow.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/May/19 15:30;githubbot;600","eolivelli commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-492714723
 
 
   Maybe you can simply add raw entries to the manifest in the jar plugin configuration
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/May/19 15:55;githubbot;600","JiriOndrusek commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-492796520
 
 
   Hi @nkalmar @eolivelli,
   
   let me introduce ""a better solution"" for the problem with  same package's names of zookeeper-jute and zookeeper-server.
   
   If I understand it correctly, maven way of solving this problem is acceptable even if it causes problems sometimes. From previous comment - ""It's not ideal, and even causes problems like this one with OSGi."" Maven solution is that in case that packages DOESN'T contain the same classes - it works as EXPECTED. If it contains the same classes, then classloader return class from jar based on ORDER of jars. (so even if I want clas from jute, I can get class from server) Which is typicalli zookeeper-server and then zookeeper-jute (as jute is dependency from server)
   
   I propose to use OSGi merge capability, which brings the same behavior. If someone wants class from that shared package, in case that classes are differen in both jars, this merge ""feature"" will behave as expected and correct class is returned. In case that there are overlapping classes, we define, which jar has advantage. (so I'd say that zookeeper-server has advantage). IMHO behavior  will be a little bit better then in maven, because it will behave always in the same way. (In reality it won't robabnly happen, because the same classes in the shared packages will probably cause problems elsewhere, so everyone will try to avoid that)
   
   In other words - behavior of OSGI with merge will be the same as maven if packages contains different classes. If in the future there will be the overlapping classes, behavior in OSGi would be defined (in contrast with maven, where it would ddepend on order of jar loading - so almost ""random"")
   
   Possibly (I'm not sure about it in this time) I can also try to add some insurance/condition, that it will work for 3.5.x only. I mean that after upgrading to higher version of zookeeper, it will cause error during build (or at least warning), so someone will look into it and will find a comment explaining, that correct solution is to rename packages -> which is the correct solution. In case that packages won't be renamed at that time. This condition would allow us to solve problem in 3.5.x time, where packages couldn't be renamed.
   
   Just to avoid confusion, this merge capability only defines, how OSGi returns classes if the class is in package, which is shared in more jars. No actuall merging of compiled classes is not happening.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/May/19 19:43;githubbot;600","eolivelli commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-492824404
 
 
   It would be great to have some integration test which loads zookeeper client with osgi and this way we will ensure that we are delivering something that really works.
   We can do this by adding another module to the build which uses the client inside an osgi container.
   It is not so simple (because the test will need to start at least one server and use the client and server and client are packaged inside of the same jars).
   
   We have to setup these kind of integration tests (maybe docker based) in the short term, not necessarily for thia case.
   I will be happy to work on this.
   
   Maybe you can continue with the osgi packaging stuff and I will then try to setup the integration test in a followup patch
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/May/19 21:08;githubbot;600","JiriOndrusek commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-492933860
 
 
   @eolivelli 
   Ok, i'll continue with osgi packaging. I'll apply this also to zookeeper-jute and somehow solve ""the same package name"" problem in the way as described in my previous post.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/May/19 06:22;githubbot;600","JiriOndrusek commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-492933860
 
 
   @eolivelli 
   Ok, i'll continue with osgi packaging. I'll apply this also to zookeeper-jute and somehow solve ""the same package name"" problem in the way as described in my previous post.
   
   Integration test validating that OSGi is working, would be really nice.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/May/19 06:23;githubbot;600","nkalmar commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-492971219
 
 
   What I meant in ""private package"" is that we do not expose any of this to clients. Jute is only used to serialize messages between ZooKeeper nodes, client does not use Jute for serialization. 
   In theory, anyone could use zookeeper-jute for serialization, in reality, no one will and no one should. But it was agreed upon jute should be a different module still. And on a side note, some want to replace jute with a more recent and actively developed serialization library like protobuf or avro. 
   But, for now, jute is here to stay, and it might only be replaced in a new major version (like 4.0.0).
   
   Anyway, thanks again for looking into this, the merge stuff sounds good!
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/May/19 08:28;githubbot;600","JiriOndrusek commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-492974467
 
 
   @nkalmar I've added OSGi support to zookeeper-jute. I had to change pockaging to bundle as well, but in maven environment it behaves still  as jar packaging.
   @eolivelli I think that it is possible to prepare integration test. I'll try to verify both bundles manually (that they could be deployed) I've talked to @grgrzybek and he could possibly help with integration test.
   
   I think that current state is, that both jars (z-server and z-jute) are also osgi bundles. Now I plan to fine tuning dependencies during manual installation.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/May/19 08:37;githubbot;600","JiriOndrusek commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-492984271
 
 
   I was able to install manually zookeeper with curator. But I had to change a little bit export-packages in zookeeper-server, which throws now warning during build about package ""org.apache.zookeeper.data"".
   
   Warning message looks like:
   zookeeper:bundle:3.6.0-SNAPSHOT : Export org.apache.zookeeper,  has 1,  private references [org.apache.zookeeper.data]
   zookeeper:bundle:3.6.0-SNAPSHOT : Export org.apache.zookeeper.cli,  has 1,  private references [org.apache.zookeeper.data]
   zookeeper:bundle:3.6.0-SNAPSHOT : Export org.apache.zookeeper.client,  has 1,  private references [org.apache.zookeeper.data]
   zookeeper:bundle:3.6.0-SNAPSHOT : Export org.apache.zookeeper.server,  has 1,  private references [org.apache.zookeeper.data]
   zookeeper:bundle:3.6.0-SNAPSHOT : Export org.apache.zookeeper.server.auth,  has 1,  private references [org.apache.zookeeper.data]
   zookeeper:bundle:3.6.0-SNAPSHOT : Export org.apache.zookeeper.server.quorum,  has 1,  private references [org.apache.zookeeper.data]
   zookeeper:bundle:3.6.0-SNAPSHOT : Export org.apache.zookeeper.proto,  has 1,  private references [org.apache.zookeeper.data]
   
   Meaning of this warning is, that some classes from zookeeper (zookeeper.cli, ...) for example returns classes from package ""org.apache.zookeeper.data"" which is not exported from the bundle.
   I have to solve this minor thing.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/May/19 09:05;githubbot;600","JiriOndrusek commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-493012808
 
 
   @eolivelli @nkalmar 
   I've found problem with current approach (2 bundles, one is server and second is jute)
   Problem:
   - zookeeper-jute has package 'org.apache.zookeeper.data', it has to be exported for zookeeper-server to use it
   - zookeeper-server contais also package 'org.apache.zookeeper.data', which has to be exported, because it is use from packages like org.apache.zookeeper
   -> bundles can not be deployed into karaf as two libraries are exporting the same packages
   Solution:
   - best solution is to change name of one of these packages (probably in zookeeper-jute - which us used only by zookeeper) - but as @eolivelli wrote: ""Yes changing the package name is feasible but only for 3.6+.""
   - only other solution is to create only one bundle (e.g. zookeeper-osgi), which will contain both libraries together and will expose theit both packages at the same time
   (simillar approach is used in e.g. hibernate-osgi, httpcore-osgi, httpclient-osgi)
   
   But with the fact that in the 3.6+ version renaming is possible so we can use solution #1 from 3.6+ as it is a better solution, i would like to ask on your opinion about current version.
   Is renaming of jute's packages really unreal. Is creation of zookeeper-osgi library the only solution?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/May/19 10:30;githubbot;600","JiriOndrusek commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-493012808
 
 
   @eolivelli @nkalmar 
   I've found problem with current approach (2 bundles, one is server and second is jute)
   Problem:
   - zookeeper-jute has package 'org.apache.zookeeper.data', it has to be exported for zookeeper-server to use it
   - zookeeper-server contais also package 'org.apache.zookeeper.data', which has to be exported, because it is use from packages like org.apache.zookeeper
   -> bundles can not be deployed into karaf as two libraries are exporting the same packages
   
   Solution:
   - best solution is to change name of one of these packages (probably in zookeeper-jute - which us used only by zookeeper) - but as @eolivelli wrote: ""Yes changing the package name is feasible but only for 3.6+.""
   - only other solution is to create only one bundle (e.g. zookeeper-osgi), which will contain both libraries together and will expose theit both packages at the same time
   (simillar approach is used in e.g. hibernate-osgi, httpcore-osgi, httpclient-osgi)
   
   But with the fact that in the 3.6+ version renaming is possible so we can use solution #1 from 3.6+ as it is a better solution, i would like to ask on your opinion about current version.
   Is renaming of jute's packages really unreal. Is creation of zookeeper-osgi library the only solution?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/May/19 10:31;githubbot;600","nkalmar commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-493015133
 
 
   We would still need to solve it for 3.5 branch. 
   So, for me, creating a zookeeper-osgi seems the way to go, but this should be voted on the zookeeper-dev mail list.
   
   Can you write an email to the dev list @JiangJiafu with your findings?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/May/19 10:38;githubbot;600","nkalmar commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-493015133
 
 
   We would still need to solve it for 3.5 branch. 
   So, for me, creating a zookeeper-osgi seems the way to go, but this should be voted on the zookeeper-dev mail list.
   
   Can you write an email to the dev list @JiangJiafu with your findings?
   
   A short summary, and then you can link this PR.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/May/19 10:39;githubbot;600","JiriOndrusek commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-493017349
 
 
   @nkalmar I've just asked for subscription to dev mailing list, then I'd be able to send an email there.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/May/19 10:46;githubbot;600","JiriOndrusek commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-493025000
 
 
   I've sent email to zookeeper-dev mailing list:
   
   > ZooKeeper and OSGi (maven)
   
   Hi,
   
   I 've created issue [1] with missing exported packages in osgi for zookeeper 3.4.10. Then I started to prepare maven OSGi packaging [2] for the higher version of ZooKeeper (in the PR for issue).
   
   I've tried to implement OSGi packaging with the low impact. So I've tried to create OSGi bundles from Zookeeper-server and from zookeeper-jute modules.
   
   But there is a problem for this solution:
   
       zookeeper-jute has package 'org.apache.zookeeper.data', it has to be exported for zookeeper-server to use it
       zookeeper-server contains also package 'org.apache.zookeeper.data', which has to be exported, because it is used from packages like org.apache.zookeeper, which are exported
   
   -> bundles can not be deployed into osgi as two libraries are exporting the same packages
   
   
   Solution:
   
       best solution is to change name of one of these packages (probably in module zookeeper-jute - which us used only by zookeeper) - but question is, whether this change is feasible
       only other solution is to create only one bundle (e.g. zookeeper-osgi), which will contain both libraries together and will expose their both packages at the same time (similar approach is used in e.g. hibernate-osgi, httpcore-osgi, httpclient-osgi)
   
   Solution #1 is a better solution, I would like to ask for your opinion about feasibility of renaming zookeeper-jute generated packages to not collide with zookeeper-server. 
   (As these packages are to be used only for zookeeper, it shouldn't cause any harm)
   
   If #1 is not acceptable, then we can go with #2. But I highly suggest to consider renaming of zookeeper-jute's packages in the nearest point in the future as possible and return to solution #1.
   
   Best regards,
   
   jiri
   
   
   [1] https://issues.apache.org/jira/browse/ZOOKEEPER-3389
   [2] https://github.com/apache/zookeeper/pull/945
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/May/19 11:13;githubbot;600","JiriOndrusek commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-493025000
 
 
   I've sent email to zookeeper-dev mailing list:
   
   ZooKeeper and OSGi (maven)
   
   Hi,
   
   I 've created issue [1] with missing exported packages in osgi for zookeeper 3.4.10. Then I started to prepare maven OSGi packaging [2] for the higher version of ZooKeeper (in the PR for issue).
   
   I've tried to implement OSGi packaging with the low impact. So I've tried to create OSGi bundles from Zookeeper-server and from zookeeper-jute modules.
   
   But there is a problem for this solution:
   
       zookeeper-jute has package 'org.apache.zookeeper.data', it has to be exported for zookeeper-server to use it
       zookeeper-server contains also package 'org.apache.zookeeper.data', which has to be exported, because it is used from packages like org.apache.zookeeper, which are exported
   
   -> bundles can not be deployed into osgi as two libraries are exporting the same packages
   
   
   Solution:
   
       best solution is to change name of one of these packages (probably in module zookeeper-jute - which us used only by zookeeper) - but question is, whether this change is feasible
       only other solution is to create only one bundle (e.g. zookeeper-osgi), which will contain both libraries together and will expose their both packages at the same time (similar approach is used in e.g. hibernate-osgi, httpcore-osgi, httpclient-osgi)
   
   Solution #1 is a better solution, I would like to ask for your opinion about feasibility of renaming zookeeper-jute generated packages to not collide with zookeeper-server. 
   (As these packages are to be used only for zookeeper, it shouldn't cause any harm)
   
   If #1 is not acceptable, then we can go with #2. But I highly suggest to consider renaming of zookeeper-jute's packages in the nearest point in the future as possible and return to solution #1.
   
   Best regards,
   
   jiri
   
   
   [1] https://issues.apache.org/jira/browse/ZOOKEEPER-3389
   [2] https://github.com/apache/zookeeper/pull/945
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/May/19 11:13;githubbot;600","JiriOndrusek commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-493061694
 
 
   @nkalmar 
   Solution #2 seems to be feasible - I've just tried simple prototype in different branch: https://github.com/JiriOndrusek/zookeeper/commits/zookeeper-osgi-module
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/May/19 13:12;githubbot;600","anmolnar commented on issue #946: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (for Curator)
URL: https://github.com/apache/zookeeper/pull/946#issuecomment-497318173
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/May/19 12:51;githubbot;600","nkalmar commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-497346963
 
 
   Thanks @JiriOndrusek , I'll ping @eolivelli if he has anything to add, otherwise LGTM! I'll also check 3.5 fix...
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/May/19 14:21;githubbot;600","nkalmar commented on issue #946: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (for Curator)
URL: https://github.com/apache/zookeeper/pull/946#issuecomment-497361500
 
 
   Can you backport the maven part from master @JiriOndrusek ? I think it should work the same here.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/May/19 15:01;githubbot;600","JiriOndrusek commented on issue #946: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (for Curator)
URL: https://github.com/apache/zookeeper/pull/946#issuecomment-497372439
 
 
   hi, @nkalmar problem with master branch is, that it is not finished: There has to be made a decision how to continue with this problem (https://github.com/apache/zookeeper/pull/945#issuecomment-493015133). As soon as the proper way is selected, I could finish master and then backport it here. With the time distance (from the master PR creation) I tend to a solution, with a new module -  only for osgi. I've prepared prototype here: https://github.com/JiriOndrusek/zookeeper/commits/zookeeper-osgi-module
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/May/19 15:31;githubbot;600","JiriOndrusek commented on issue #946: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (for Curator)
URL: https://github.com/apache/zookeeper/pull/946#issuecomment-497373054
 
 
   @nkalmar would it be possible to merge ant part - this PR (for purposes of 3.4.x) and merge maven part as soon as is master finished?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/May/19 15:32;githubbot;600","JiriOndrusek commented on issue #946: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (for Curator)
URL: https://github.com/apache/zookeeper/pull/946#issuecomment-497373054
 
 
   @nkalmar would it be possible to merge ant part - this PR (for purposes of 3.4.x) and merge maven part as soon as is master finished? Because maven part of solution does not exist yet, it will not cause any more difference between ant and maven.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/May/19 15:33;githubbot;600","grgrzybek commented on issue #945: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (needed for curator)
URL: https://github.com/apache/zookeeper/pull/945#issuecomment-498168041
 
 
   Excuse me for being late to the party.
   
   Let me introduce myself - I'm OSGi dinosaur and I'd be happy to help here.
   
   So `zookeeper-jute` jar contains (generated from `zookeeper-jute/src/main/resources/zookeeper.jute`) these packages:
   * org.apache.zookeeper.data
   * org.apache.zookeeper.proto
   * org.apache.zookeeper.server.quorum
   * org.apache.zookeeper.server.persistence
   * org.apache.zookeeper.txn
   
   `org.apache.zookeeper.data` is fine there, but `org.apache.zookeeper.server.quorum` and `org.apache.zookeeper.server.persistence` are duplicated in `zookeeper` jar, thus simple _OSGIfication_ of `zookeeper` + `zookeeper-jute` is not possible (can't have single package exported from two OSGi bundles. I mean it's possible, but may lead to unpredictable results - you can't tell which package your _importing_ bundle will _wire_ to).
   
   I understand that some classes of `org.apache.zookeeper.server.quorum` are written and some are generated from `zookeeper.jute` and it's fine in _flat classpath_ scenario.
   
   For OSGi, you'd have to do what for example Hibernate or httpclient (before silently dropping OSGi support in httpclient 5) is doing - there should be zookeeper-osgi.jar which just embeds both zookeeper and zookeeper-jute. This is best approach, because there'll be only one Maven artifact with `<packaging>bundle</packaging>`.
   
   I'll continue checking.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Jun/19 08:44;githubbot;600","nkalmar commented on issue #946: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (for Curator)
URL: https://github.com/apache/zookeeper/pull/946#issuecomment-498587839
 
 
   Yes, this is fine for 3.4, no need for a maven fix. I'll restart the builds, as both failed.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Jun/19 09:05;githubbot;600","nkalmar commented on issue #946: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (for Curator)
URL: https://github.com/apache/zookeeper/pull/946#issuecomment-498587839
 
 
   Yes, this is fine for 3.4, no need for a maven fix. I'll restart the builds, as both failed.
   @eolivelli , are you fine with merging just the ant fix for 3.4? We will not build 3.4 with maven. If there will be a fix, it can be backported, but this fix would help folks using OSGi.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Jun/19 09:07;githubbot;600","nkalmar commented on issue #946: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (for Curator)
URL: https://github.com/apache/zookeeper/pull/946#issuecomment-498588352
 
 
   retest this please
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Jun/19 09:07;githubbot;600","nkalmar commented on issue #946: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (for Curator)
URL: https://github.com/apache/zookeeper/pull/946#issuecomment-505785564
 
 
   @eolivelli , what do you say we merge this to 3.4 only? Maven will not pass on 3.4 anyway, and this would fix OSGi for the branch. And I don't even think we need a maven fix for 3.4
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jun/19 08:56;githubbot;600","nkalmar commented on issue #946: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (for Curator)
URL: https://github.com/apache/zookeeper/pull/946#issuecomment-505838905
 
 
   Merged to 3.4, for master and 3.5 see https://github.com/apache/zookeeper/pull/945
   Thanks @JiriOndrusek 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jun/19 11:41;githubbot;600","nkalmar commented on pull request #946: [ZOOKEEPER-3389] Zookeeper does not export all required packages in OSGi (for Curator)
URL: https://github.com/apache/zookeeper/pull/946
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jun/19 11:41;githubbot;600",,,,,,,0,30600,,,0,30600,,,,,,,,,,,,,,,ZOOKEEPER-3403,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Jun 26 11:42:46 UTC 2019,,,,,,,,,,"0|z02mhs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/May/19 10:40;jondruse;I'm working on this issue;;;","13/May/19 10:52;jondruse;PRs: https://github.com/apache/zookeeper/pull/945 and https://github.com/apache/zookeeper/pull/946;;;","26/Jun/19 11:42;nkalmar;I pushed the fix to 3.4: https://github.com/apache/zookeeper/pull/946
master and 3.5 still under review here: https://github.com/apache/zookeeper/pull/945;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"need change description for ""Single System Image"" guarantee in document",ZOOKEEPER-3373,13230535,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,ihavenoemail@163.com,ihavenoemail@163.com,ihavenoemail@163.com,28/Apr/19 09:19,12/Nov/20 15:56,29/Jun/25 13:34,05/Aug/19 23:51,3.4.14,,,,,,,,,,,,,,,,,,,,,,,,3.6.0,,,,,documentation,,,,,0,pull-request-available,,"In website, ""Single System Image"" is ""A client will see the same view of the service regardless of the server that it connects to.""

I want to change it to ""Once connected, a client will see the same view of the service even if it switchs to another server""

Because the old one is a little misleading, if cluster has a outdated follower and a normal follower, I not think a client will see the same view of the service regardless of the server that it connects to at its first connection.",,"kabike commented on pull request #931: ZOOKEEPER-3373:need change description for ""Single System Image"" guarantee in document
URL: https://github.com/apache/zookeeper/pull/931
 
 
   In website, ""Single System Image"" is ""A client will see the same view of the service regardless of the server that it connects to.""
   
   I want to change it to ""Once connected, a client will see the same view of the service even if it switchs to another server""
   
   Because the old one is a little misleading, if cluster has a outdated follower and a normal follower, I do not think a client will see the same view of the service regardless of the server that it connects to at its first connection.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/May/19 13:04;githubbot;600","kabike commented on issue #931: ZOOKEEPER-3373:need change description for ""Single System Image"" guarantee in document
URL: https://github.com/apache/zookeeper/pull/931#issuecomment-489897367
 
 
   funny story, I just changed some MD documents, why checks faild?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/May/19 03:53;githubbot;600","maoling commented on issue #931: ZOOKEEPER-3373:need change description for ""Single System Image"" guarantee in document
URL: https://github.com/apache/zookeeper/pull/931#issuecomment-489963241
 
 
   @kabike
   - the CI failure is not related.due to `Installing oraclejdk11 `, don't worry about this.
   - Yep,the description is a little misleading.IMO,What the ""Single System Image"" means is that a client cannot read the stale data that it had ever read regardless of the server that it connects to.   e.g:
   `set /key v1-->v2-->v3`
   A client's view of the /key cannot be like: `v1-->v3-->v2.`
   - For the implement, when the client reconnect to another server, that server will refuse the connection when his current zxid is less than the client's lastZxid.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/May/19 07:16;githubbot;600","kabike commented on issue #931: ZOOKEEPER-3373:need change description for ""Single System Image"" guarantee in document
URL: https://github.com/apache/zookeeper/pull/931#issuecomment-490307991
 
 
   @maoling yes, it is quite misleading. see https://stackoverflow.com/questions/40797443/how-zookeeper-guarantees-single-system-image. That is why I made this pull request
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/May/19 01:03;githubbot;600","anmolnar commented on issue #931: ZOOKEEPER-3373:need change description for ""Single System Image"" guarantee in document
URL: https://github.com/apache/zookeeper/pull/931#issuecomment-496963385
 
 
   @hanm @phunt Do you agree with this change?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/May/19 14:34;githubbot;600","hanm commented on issue #931: ZOOKEEPER-3373:need change description for ""Single System Image"" guarantee in document
URL: https://github.com/apache/zookeeper/pull/931#issuecomment-497152729
 
 
   I agree the original statement is not very clear, but instead of changing it, how about actually clarify it with this:
   
   A client will see the same view of the service regardless of the server that it connects to, and a client will never see an older view of the system even if the client fails over to a different server with the same session.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/May/19 00:10;githubbot;600","kabike commented on issue #931: ZOOKEEPER-3373:need change description for ""Single System Image"" guarantee in document
URL: https://github.com/apache/zookeeper/pull/931#issuecomment-498082733
 
 
   @hanm ""A client will see the same view of the service regardless of the server that it connects to"" sounds like ""A client will see the same view of the service regardless of the server that it connects to at the first time"", IMO
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Jun/19 01:12;githubbot;600","maoling commented on issue #931: ZOOKEEPER-3373:need change description for ""Single System Image"" guarantee in document
URL: https://github.com/apache/zookeeper/pull/931#issuecomment-516681286
 
 
   
   
   > A client will see the same view of the service regardless of the server that it connects to. i.e., a client will never see an older view of the system even if the client fails over to a different server with the same session
   
   Clarifying it is better than changing it, WDYT? @kabike Can we move on?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jul/19 03:38;githubbot;600","kabike commented on issue #931: ZOOKEEPER-3373:need change description for ""Single System Image"" guarantee in document
URL: https://github.com/apache/zookeeper/pull/931#issuecomment-517077920
 
 
   @maoling What should I do to move on?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 01:06;githubbot;600","maoling commented on issue #931: ZOOKEEPER-3373:need change description for ""Single System Image"" guarantee in document
URL: https://github.com/apache/zookeeper/pull/931#issuecomment-517090109
 
 
   @kabike 
   Keep the original statement still and add a clarification behind it, just like this:
   
   > A client will see the same view of the service regardless of the server that it connects to. i.e., a client will never see an older view of the system even if the client fails over to a different server with the same session
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 02:12;githubbot;600","asfgit commented on pull request #931: ZOOKEEPER-3373:need change description for ""Single System Image"" guarantee in document
URL: https://github.com/apache/zookeeper/pull/931
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Aug/19 23:52;githubbot;600","Michealwwx commented on pull request #931:
URL: https://github.com/apache/zookeeper/pull/931#issuecomment-726162504


   It is very misleading


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Nov/20 15:49;githubbot;600","eolivelli commented on pull request #931:
URL: https://github.com/apache/zookeeper/pull/931#issuecomment-726166603


   @Michealwwx can you please tell us more ?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Nov/20 15:56;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,7800,,,0,7800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Aug 06 04:49:35 UTC 2019,,,,,,,,,,"0|z027m8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Aug/19 23:51;hanm;Issue resolved by pull request 931
[https://github.com/apache/zookeeper/pull/931];;;","06/Aug/19 01:58;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #649 (See [https://builds.apache.org/job/ZooKeeper-trunk/649/])
ZOOKEEPER-3373: need change description for ""Single System Image"" (hanm: rev f252c769206a9ed9688998a1608bcbd2840a90f4)
* (edit) zookeeper-docs/src/main/resources/markdown/zookeeperProgrammers.md
* (edit) zookeeper-docs/src/main/resources/markdown/zookeeperOver.md
;;;","06/Aug/19 04:49;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #484 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/484/])
ZOOKEEPER-3373: need change description for ""Single System Image"" (hanm: rev f252c769206a9ed9688998a1608bcbd2840a90f4)
* (edit) zookeeper-docs/src/main/resources/markdown/zookeeperProgrammers.md
* (edit) zookeeper-docs/src/main/resources/markdown/zookeeperOver.md
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Automatically add IP authorization for Netty connections,ZOOKEEPER-3331,13223448,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,enixon,enixon,enixon,22/Mar/19 22:23,21/May/24 11:23,29/Jun/25 13:34,06/May/19 16:32,3.6.0,,,,,,,,,,,,,,,,,,,,,,,,3.6.0,,,,,server,,,,,0,pull-request-available,,"NIOServerCnxn automatically adds the client's address as an auth token under the ""ip"" scheme. Extend that functionality to the NettyServerCnxn as well to bring parity to the two approaches.",,"enixon commented on pull request #867: ZOOKEEPER-3331: Automatically add IP authorization for Netty connections
URL: https://github.com/apache/zookeeper/pull/867
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Mar/19 22:24;githubbot;600","enixon commented on issue #867: ZOOKEEPER-3331: Automatically add IP authorization for Netty connections
URL: https://github.com/apache/zookeeper/pull/867#issuecomment-488370082
 
 
   Any remaining concerns about merging?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/May/19 18:32;githubbot;600","asfgit commented on pull request #867: ZOOKEEPER-3331: Automatically add IP authorization for Netty connections
URL: https://github.com/apache/zookeeper/pull/867
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/May/19 16:32;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,ZOOKEEPER-2547,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue May 21 11:23:31 UTC 2024,,,,,,,,,,"0|z010ew:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/May/19 16:32;lvfangmin;Issue resolved by pull request 867
[https://github.com/apache/zookeeper/pull/867];;;","06/May/19 19:24;hudson;FAILURE: Integrated in Jenkins build Zookeeper-trunk-single-thread #344 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/344/])
ZOOKEEPER-3331: Automatically add IP authorization for Netty connections (fangmin: rev c67760523492b8da033c7bc0ea3076ab4acf1a93)
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/test/ACLTest.java
;;;","06/May/19 19:51;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #509 (See [https://builds.apache.org/job/ZooKeeper-trunk/509/])
ZOOKEEPER-3331: Automatically add IP authorization for Netty connections (fangmin: rev c67760523492b8da033c7bc0ea3076ab4acf1a93)
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/test/ACLTest.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java
;;;","21/May/24 11:23;andor;Converted to bug, because it makes a lot more sense to me.

The original duplicated ticket is also a bug. The user who upgrades to Netty network stack loses functionality - this is a bug, not a missing feature.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZooKeeper Perl client zkperl doesn't compile on newer RHEL systems ie. Fedora,ZOOKEEPER-3303,13220632,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,harisekhon,harisekhon,09/Mar/19 15:29,06/Jan/21 11:10,29/Jun/25 13:34,,3.4.12,3.4.13,3.4.8,,,,,,,,,,,,,,,,,,,,,,,,,,,c client,contrib,,,,0,,,"ZooKeeper Perl client zkperl fails to compile on Fedora 29 (compiles ok on CentOS 7 though). I cannot build the project to get the zkperl dependencies to run on Fedora as it is. This happens on various versions of ZooKeeper 3.4.x
{code:java}
# perl Makefile.PL --zookeeper-include=/usr/local/include --zookeeper-lib=/usr/local/lib
Generating a Unix-style Makefile
Writing Makefile for Net::ZooKeeper
Writing MYMETA.yml and MYMETA.json

# make
Skip blib/lib/Net/ZooKeeper.pm (unchanged)
Running Mkbootstrap for ZooKeeper ()
chmod 644 ""ZooKeeper.bs""
""/usr/bin/perl"" -MExtUtils::Command::MM -e 'cp_nonempty' -- ZooKeeper.bs blib/arch/auto/Net/ZooKeeper/ZooKeeper.bs 644
gcc -c  -I/usr/local/include -I. -D_REENTRANT -D_GNU_SOURCE -O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fexceptions -fstack-protector-strong -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1 -m64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection -fwrapv -fno-strict-aliasing -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -g   -DVERSION=\""0.36\"" -DXS_VERSION=\""0.36\"" -fPIC ""-I/usr/lib64/perl5/CORE""   ZooKeeper.c
ZooKeeper.c: In function ‘XS_Net__ZooKeeper_acl_constant’:
ZooKeeper.c:784:7: warning: unused variable ‘RETVAL’ [-Wunused-variable]
  AV * RETVAL;
       ^~~~~~
ZooKeeper.c: In function ‘XS_Net__ZooKeeper_CLONE’:
ZooKeeper.c:1089:9: warning: unused variable ‘package’ [-Wunused-variable]
  char * package = (char *)SvPV_nolen(ST(0))
         ^~~~~~~
ZooKeeper.c: In function ‘XS_Net__ZooKeeper_CLONE_SKIP’:
ZooKeeper.c:1109:9: warning: unused variable ‘package’ [-Wunused-variable]
  char * package = (char *)SvPV_nolen(ST(0))
         ^~~~~~~
ZooKeeper.c: In function ‘XS_Net__ZooKeeper_TIEHASH’:
ZooKeeper.c:1129:9: warning: unused variable ‘package’ [-Wunused-variable]
  char * package = (char *)SvPV_nolen(ST(0))
         ^~~~~~~
ZooKeeper.c: In function ‘XS_Net__ZooKeeper_UNTIE’:
ZooKeeper.c:1151:5: warning: unused variable ‘ref_count’ [-Wunused-variable]
  IV ref_count = (IV)SvIV(ST(1))
     ^~~~~~~~~
ZooKeeper.c:1150:17: warning: variable ‘attr_hash’ set but not used [-Wunused-but-set-variable]
  Net__ZooKeeper attr_hash;
                 ^~~~~~~~~
ZooKeeper.c: In function ‘XS_Net__ZooKeeper_SCALAR’:
ZooKeeper.c:1281:17: warning: variable ‘attr_hash’ set but not used [-Wunused-but-set-variable]
  Net__ZooKeeper attr_hash;
                 ^~~~~~~~~
ZooKeeper.c: In function ‘XS_Net__ZooKeeper_DELETE’:
ZooKeeper.c:1528:7: warning: unused variable ‘attr_key’ [-Wunused-variable]
  SV * attr_key = ST(1)
       ^~~~~~~~
ZooKeeper.c:1527:17: warning: variable ‘attr_hash’ set but not used [-Wunused-but-set-variable]
  Net__ZooKeeper attr_hash;
                 ^~~~~~~~~
ZooKeeper.c: In function ‘XS_Net__ZooKeeper_CLEAR’:
ZooKeeper.c:1561:17: warning: variable ‘attr_hash’ set but not used [-Wunused-but-set-variable]
  Net__ZooKeeper attr_hash;
                 ^~~~~~~~~
ZooKeeper.xs: In function ‘XS_Net__ZooKeeper_add_auth’:
ZooKeeper.xs:1206:30: warning: format ‘%u’ expects argument of type ‘unsigned int’, but argument 3 has type ‘STRLEN’ {aka ‘long unsigned int’} [-Wformat=]
             Perl_croak(aTHX_ ""invalid certificate length: %u"", cert_len);
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  ~~~~~~~~
ZooKeeper.xs: In function ‘XS_Net__ZooKeeper_create’:
ZooKeeper.xs:1286:30: warning: format ‘%u’ expects argument of type ‘unsigned int’, but argument 3 has type ‘STRLEN’ {aka ‘long unsigned int’} [-Wformat=]
             Perl_croak(aTHX_ ""invalid data length: %u"", buf_len);
                              ^~~~~~~~~~~~~~~~~~~~~~~~~  ~~~~~~~
ZooKeeper.xs:1321:21: error: format not a string literal and no format arguments [-Werror=format-security]
                     Perl_croak(aTHX_ err);
                     ^~~~~~~~~~
ZooKeeper.xs: In function ‘XS_Net__ZooKeeper_set’:
ZooKeeper.xs:1760:30: warning: format ‘%u’ expects argument of type ‘unsigned int’, but argument 3 has type ‘STRLEN’ {aka ‘long unsigned int’} [-Wformat=]
             Perl_croak(aTHX_ ""invalid data length: %u"", buf_len);
                              ^~~~~~~~~~~~~~~~~~~~~~~~~  ~~~~~~~
ZooKeeper.xs: In function ‘XS_Net__ZooKeeper_set_acl’:
ZooKeeper.xs:1923:13: error: format not a string literal and no format arguments [-Werror=format-security]
             Perl_croak(aTHX_ err);
             ^~~~~~~~~~
ZooKeeper.c: In function ‘XS_Net__ZooKeeper__Stat_CLONE’:
ZooKeeper.c:2871:9: warning: unused variable ‘package’ [-Wunused-variable]
  char * package = (char *)SvPV_nolen(ST(0))
         ^~~~~~~
ZooKeeper.c: In function ‘XS_Net__ZooKeeper__Stat_CLONE_SKIP’:
ZooKeeper.c:2891:9: warning: unused variable ‘package’ [-Wunused-variable]
  char * package = (char *)SvPV_nolen(ST(0))
         ^~~~~~~
ZooKeeper.c: In function ‘XS_Net__ZooKeeper__Stat_TIEHASH’:
ZooKeeper.c:2911:9: warning: unused variable ‘package’ [-Wunused-variable]
  char * package = (char *)SvPV_nolen(ST(0))
         ^~~~~~~
ZooKeeper.c: In function ‘XS_Net__ZooKeeper__Stat_UNTIE’:
ZooKeeper.c:2933:5: warning: unused variable ‘ref_count’ [-Wunused-variable]
  IV ref_count = (IV)SvIV(ST(1))
     ^~~~~~~~~
ZooKeeper.c:2932:23: warning: variable ‘attr_hash’ set but not used [-Wunused-but-set-variable]
  Net__ZooKeeper__Stat attr_hash;
                       ^~~~~~~~~
ZooKeeper.c: In function ‘XS_Net__ZooKeeper__Stat_SCALAR’:
ZooKeeper.c:3065:23: warning: variable ‘attr_hash’ set but not used [-Wunused-but-set-variable]
  Net__ZooKeeper__Stat attr_hash;
                       ^~~~~~~~~
ZooKeeper.c: In function ‘XS_Net__ZooKeeper__Stat_STORE’:
ZooKeeper.c:3167:7: warning: unused variable ‘attr_val’ [-Wunused-variable]
  SV * attr_val = ST(2)
       ^~~~~~~~
ZooKeeper.c: In function ‘XS_Net__ZooKeeper__Stat_DELETE’:
ZooKeeper.c:3271:7: warning: unused variable ‘attr_key’ [-Wunused-variable]
  SV * attr_key = ST(1)
       ^~~~~~~~
ZooKeeper.c:3270:23: warning: variable ‘attr_hash’ set but not used [-Wunused-but-set-variable]
  Net__ZooKeeper__Stat attr_hash;
                       ^~~~~~~~~
ZooKeeper.c: In function ‘XS_Net__ZooKeeper__Stat_CLEAR’:
ZooKeeper.c:3304:23: warning: variable ‘attr_hash’ set but not used [-Wunused-but-set-variable]
  Net__ZooKeeper__Stat attr_hash;
                       ^~~~~~~~~
ZooKeeper.c: In function ‘XS_Net__ZooKeeper__Watch_CLONE’:
ZooKeeper.c:3405:9: warning: unused variable ‘package’ [-Wunused-variable]
  char * package = (char *)SvPV_nolen(ST(0))
         ^~~~~~~
ZooKeeper.c: In function ‘XS_Net__ZooKeeper__Watch_CLONE_SKIP’:
ZooKeeper.c:3425:9: warning: unused variable ‘package’ [-Wunused-variable]
  char * package = (char *)SvPV_nolen(ST(0))
         ^~~~~~~
ZooKeeper.c: In function ‘XS_Net__ZooKeeper__Watch_TIEHASH’:
ZooKeeper.c:3445:9: warning: unused variable ‘package’ [-Wunused-variable]
  char * package = (char *)SvPV_nolen(ST(0))
         ^~~~~~~
ZooKeeper.c: In function ‘XS_Net__ZooKeeper__Watch_UNTIE’:
ZooKeeper.c:3467:5: warning: unused variable ‘ref_count’ [-Wunused-variable]
  IV ref_count = (IV)SvIV(ST(1))
     ^~~~~~~~~
ZooKeeper.c:3466:24: warning: variable ‘attr_hash’ set but not used [-Wunused-but-set-variable]
  Net__ZooKeeper__Watch attr_hash;
                        ^~~~~~~~~
ZooKeeper.c: In function ‘XS_Net__ZooKeeper__Watch_SCALAR’:
ZooKeeper.c:3599:24: warning: variable ‘attr_hash’ set but not used [-Wunused-but-set-variable]
  Net__ZooKeeper__Watch attr_hash;
                        ^~~~~~~~~
ZooKeeper.c: In function ‘XS_Net__ZooKeeper__Watch_DELETE’:
ZooKeeper.c:3803:7: warning: unused variable ‘attr_key’ [-Wunused-variable]
  SV * attr_key = ST(1)
       ^~~~~~~~
ZooKeeper.c:3802:24: warning: variable ‘attr_hash’ set but not used [-Wunused-but-set-variable]
  Net__ZooKeeper__Watch attr_hash;
                        ^~~~~~~~~
ZooKeeper.c: In function ‘XS_Net__ZooKeeper__Watch_CLEAR’:
ZooKeeper.c:3836:24: warning: variable ‘attr_hash’ set but not used [-Wunused-but-set-variable]
  Net__ZooKeeper__Watch attr_hash;
                        ^~~~~~~~~
cc1: some warnings being treated as errors
make: *** [Makefile:335: ZooKeeper.o] Error 1
{code}",Fedora 29 in docker,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-3293,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Jan 06 11:10:11 UTC 2021,,,,,,,,,,"0|z00j20:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Mar/19 15:30;harisekhon;I believe this is due to newer GCC code issue detection, similar to the linked ticket ZOOKEEPER-3293;;;","09/Mar/19 15:50;eolivelli;Can you please reproduce your failure on current master?
Our policy is to fix master and then backport

I am not and user of perl client
Which is the command line to reproduce the issue.
It seems to me that it is only a matter of fixing code quality issues;;;","09/Mar/19 16:25;harisekhon;Hacky workaround:
{code:java}
# perl Makefile.PL --zookeeper-include=/usr/local/include --zookeeper-lib=/usr/local/lib

# perl -pi -e 's/-Werror=format-security//' Makefile

# make{code}
which seems to succeed in compile and install:
{code:java}
# make install
make[1]: Entering directory '/github/nagios-plugins/zookeeper-3.4.12/src/contrib/zkperl'
""/usr/bin/perl"" -MExtUtils::Command::MM -e 'cp_nonempty' -- ZooKeeper.bs blib/arch/auto/Net/ZooKeeper/ZooKeeper.bs 644
Manifying 1 pod document
Files found in blib/arch: installing files in blib/lib into architecture dependent library tree
Installing /usr/local/lib64/perl5/auto/Net/ZooKeeper/ZooKeeper.so
Installing /usr/local/lib64/perl5/Net/ZooKeeper.pm
Installing /usr/local/share/man/man3/Net::ZooKeeper.3pm
Appending installation info to /usr/lib64/perl5/perllocal.pod
make[1]: Leaving directory '/github/nagios-plugins/zookeeper-3.4.12/src/contrib/zkperl'
{code}
but when it comes to trying load the Net::ZooKeeper module I get this error:
{code:java}
# perl -e ""use Net::ZooKeeper""
Can't load '/usr/local/lib64/perl5/auto/Net/ZooKeeper/ZooKeeper.so' for module Net::ZooKeeper: libzookeeper_mt.so.2: cannot open shared object file: No such file or directory at /usr/share/perl5/XSLoader.pm line 93.
 at /usr/local/lib64/perl5/Net/ZooKeeper.pm line 109.
Compilation failed in require at -e line 1.
BEGIN failed--compilation aborted at -e line 1.
make: *** [Makefile:198: zookeeper] Error 255

# ll /usr/local/lib64/perl5/auto/Net/ZooKeeper/ZooKeeper.so
-r-xr-xr-x 1 root root 344592 Mar  9 16:05 /usr/local/lib64/perl5/auto/Net/ZooKeeper/ZooKeeper.so
{code}

I'll have a look at master.;;;","10/Mar/19 21:28;harisekhon;I get exactly the same error using the latest master branch of zookeeper.

I am at hashref:
{code:java}
commit 372e713a9d2d9264417313e5d68e9437ffddd0f5 (HEAD -> master, origin/master, origin/HEAD)
Author: Andor Molnar <andor@apache.org>
Date:   Tue Mar 5 19:32:11 2019 -0800
{code};;;","10/Mar/19 21:31;harisekhon;The library it is complaining about is definitely there though:
{code:java}
# perl -e ""use Net::ZooKeeper""
Can't load '/usr/local/lib64/perl5/auto/Net/ZooKeeper/ZooKeeper.so' for module Net::ZooKeeper: libzookeeper_mt.so.2: cannot open shared object file: No such file or directory at /usr/share/perl5/XSLoader.pm line 93.
 at /usr/local/lib64/perl5/Net/ZooKeeper.pm line 109.
Compilation failed in require at -e line 1.
BEGIN failed--compilation aborted at -e line 1.
make: *** [Makefile:198: zookeeper] Error 255
{code}
{code}
# ll /usr/local/lib64/perl5/auto/Net/ZooKeeper/ZooKeeper.so
-r-xr-xr-x 1 root root 344592 Mar 10 21:11 /usr/local/lib64/perl5/auto/Net/ZooKeeper/ZooKeeper.so
{code}
{code:java}
# find / -name libzookeeper_mt.so.2
/usr/local/lib/libzookeeper_mt.so.2
{code}
So I used this old trick, which works:
{code}
LD_LIBRARY_PATH=/usr/local/lib perl -e 'use Net::ZooKeeper;'
{code}
No Error.

The better fix is:
{code}
perl Makefile.PL --zookeeper-include=/usr/local/include --zookeeper-lib=/usr/local/lib &&
perl -pi -e 's/-Werror=format-security//' Makefile &&
LD_RUN_PATH=/usr/local/lib sudo make
{code}

This is actually an old fix I found in my Makefile here:

https://github.com/HariSekhon/nagios-plugins/blob/11f31de8da6764e92267b4acf9a503ab70400efa/Makefile#L203;;;","11/Mar/19 13:13;eolivelli;Is it something we have to fix in ZooKeeper build ?

From your fix is seems to me that libraries are not in the place that they are supposed to be;;;","11/Mar/19 21:53;harisekhon;That LD_RUN issue is a secondary problem, you can ignore that.

The original comment is a ZooKeeper code issue where newer GCC has more code quality checks that are causing the compile to fail for unused variables.

It looks like the ZooKeeper C code still needs to be fixed, or else worked around on newer versions of GCC such as Fedora 29 has, by doing the following hack:

{code}
perl -pi -e 's/-Werror=format-security//' Makefile
{code};;;","12/Mar/19 20:27;eolivelli;Okay.
Now it is clear to me.

I wonder why this part of the build is not regularly tests.
I am on fedora as you and I got into the other problem

Honestly I wasn't aware of the perl module, it is not compiled using neither ant nor the new maven build.

We should definitely and automatic build and tests for the perl module.

Do you have time to try to fix the warnings reported by gcc? 
I am not a C expert but the warnings seem simple to fix at a first glance;;;","02/Jun/19 22:20;eolivelli;[~harisekhon] do you have time to try to fix this problem ?
The C client builds cleanly on current master.
We should fix the perl module as well
;;;","03/Feb/20 11:41;ztzg;Greetings, all,

I have just submitted a ""pull request"" which may fix some or all of this:
https://github.com/apache/zookeeper/pull/1243.

Reviews and comments would be welcome!;;;","08/Apr/20 17:49;ztzg;This should probably be closed now that [the SASL pull request|https://github.com/apache/zookeeper/pull/1243] has been merged into {{master}}. [~harisekhon], could you check?;;;","06/Jan/21 11:10;ztzg;[~harisekhon]: Could you check if these build issues still happen on {{master}}?

In the meantime, downgrading from blocker as this should not block 3.7.0.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZooKeeper fails to compile on newer RHEL systems ie. Fedora,ZOOKEEPER-3293,13219713,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,harisekhon,harisekhon,06/Mar/19 00:20,06/Jan/21 11:08,29/Jun/25 13:34,,3.4.12,3.4.13,3.4.8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,"ZooKeeper fails to compile on Fedora 29 (compiles ok on CentOS 7 though). I cannot build the project to get the zkperl dependencies to run on Fedora as it is. This happens on various versions of ZooKeeper 3.4.x
{code:java}
cd zookeeper-3.4.8/src/c
./configure
make
make  all-am
make[1]: Entering directory '/github/nagios-plugins/zookeeper-3.4.13/src/c'
/bin/sh ./libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I.  -I./include -I./tests -I./generated   -Wall -Werror  -g -O2 -D_GNU_SOURCE -MT zookeeper.lo -MD -MP -MF .deps/zookeeper.Tpo -c -o zookeeper.lo `test -f 'src/zookeeper.c' || echo './'`src/zookeeper.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I./include -I./tests -I./generated -Wall -Werror -g -O2 -D_GNU_SOURCE -MT zookeeper.lo -MD -MP -MF .deps/zookeeper.Tpo -c src/zookeeper.c  -fPIC -DPIC -o .libs/zookeeper.o
src/zookeeper.c: In function ‘format_endpoint_info’:
src/zookeeper.c:3506:21: error: ‘%d’ directive writing between 1 and 5 bytes into a region of size between 0 and 127 [-Werror=format-overflow=]
     sprintf(buf,""%s:%d"",addrstr,ntohs(port));
                     ^~
src/zookeeper.c:3506:17: note: directive argument in the range [0, 65535]
     sprintf(buf,""%s:%d"",addrstr,ntohs(port));
                 ^~~~~~~
src/zookeeper.c:3506:5: note: ‘sprintf’ output between 3 and 134 bytes into a destination of size 128
     sprintf(buf,""%s:%d"",addrstr,ntohs(port));
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cc1: all warnings being treated as errors
make[1]: *** [Makefile:955: zookeeper.lo] Error 1
make[1]: Leaving directory '/github/nagios-plugins/zookeeper-3.4.13/src/c'
make: *** [Makefile:631: all] Error 2
{code}",Fedora 29 in docker,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-3303,,ZOOKEEPER-3741,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Jan 06 11:08:33 UTC 2021,,,,,,,,,,"0|z00dfc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Mar/19 00:23;harisekhon;Might be related to ZOOKEEPER-3064 but not sure why that is marked as minor when this fails to build entirely.

Is there a quick fix / workaround?

I'm guessing this is a newer GCC setting changing warnings to errors since it compiles ok on other distributions like CentOS 7, Debian, Ubuntu, Alpine etc....

The code probably needs fixing, otherwise maybe workaround:
{code:java}
-Wno-error=format-overflow={code}
 ;;;","08/Mar/19 16:51;eolivelli;I get the same error;;;","09/Mar/19 14:15;harisekhon;Try this workaround:
{code:java}
CFLAGS=""$CFLAGS -Wno-error=format-overflow="" ./configure
make{code}

Really the ZooKeeper code should be fixed to compile with newer GCC versions with this check though.;;;","09/Mar/19 15:13;eolivelli;On current master I have only this problem

And this is my fix
https://github.com/apache/zookeeper/pull/846

See ZOOKEEPER-3302

I can't see your error anymore, are you on another branch?

Can you send a pull request?;;;","09/Mar/19 15:23;harisekhon;I am compiling from tarballs of versions listed in ""Affects Version/s"", rather than from git master branch.;;;","09/Mar/19 15:26;eolivelli;I see.

Btw if we fix the release  from branch (branch-3.4) new release tarballs won't have the problem
;;;","09/Mar/19 15:32;harisekhon;I also have the next problem of compiling the zkperl client, see linked ticket ZOOKEEPER-3293. I expect a similar workaround is possible, but really your pull request fixing the C code is the right type of solution.;;;","01/Nov/20 18:26;ctubbsii;Can this issue be closed? Fedora 29 is EOL, and so is ZK 3.4. ZK 3.7.0-SNAPSHOT seems to build fine on F32, I'm guessing 3.5 and 3.6 also build fine on F32, but I haven't tried.;;;","06/Jan/21 11:08;ztzg;[~harisekhon]: Would you agree to close this, as suggested by [~ctubbsii]?  Or do you still see problems with non-EOL versions of ZooKeeper on non-EOL versions of Fedora?

In the meantime, downgrading from blocker as this should not block 3.7.0.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
xid wrap-around causes connection loss/segfault when hitting predefined XIDs,ZOOKEEPER-3286,13217308,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,ccma13,ccma13,21/Feb/19 22:00,18/May/22 13:40,29/Jun/25 13:34,,3.5.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,c client,,,,,0,pull-request-available,,"*Description:*

The get_xid functions in mt_adaptor.c/st_adaptor.c return a 32 bit signed integer that is initialized to the current unix epoch timestamp on startup.

This counter will eventually wrap around, which is not a problem per se, since the client does not expect XID values to monotonically increase: It just verifies that replies to operations come back in order by checking the XID of a request received against the next XID expected. (zookeeper.c:zookeeper_process).

However, after a wrap-around the XID values will eventually collide with the reserved XIDs ad defined in zk_adaptor.h:
 * The first collision will be with SET_WATCHES_XID (-8): The reply to the request that happens to get tagged with -8 will be misinterpreted as a reply to SET_WATCHES. This causes the client to see a connection timeout.
 * The next collision will be with AUTH_XID (-4): At that point the client will segfault, when mis-interpreting the reply:

#0  0x0000000000407645 in auth_completion_func (zh=0x61d010, rc=0) at src/zookeeper.c:1823
 #1  zookeeper_process (zh=zh@entry=0x61d010, events=<optimized out>) at src/zookeeper.c:2896
 #2  0x000000000040c34c in do_io (v=0x61d010) at src/mt_adaptor.c:451
 #3  0x00007ffff7bc8dc5 in start_thread () from /lib64/libpthread.so.0
 #4  0x00007ffff75f573d in clone () from /lib64/libc.so.6

I hit this with a busy C client that runs for a very long time (months). Also, when a client spins in a tight loop trying to submit more operations even for a short period of time after a connection loss the xid values will increment very fast.

 

*Proposed patch:*

To avoid introducing any additional locking, this can be solved by just masking out the MSB in the xid returned by get_xid. Effectively this prevents the returned XID from ever going negative.

To avoid a race when the static xid variable hits -1 eventually after a wrap, around, I propose to not initialize xid with the result of time(0) on startup. This is not needed. This also means that the get_xid function in mt_adapter.c no longer needs to be flagged as constructor.

 Proposed patch is attached.

 

I ran into this on zookeeper 3.5.4 but other versions are likely affected as well.",CentOS 7.2,"ccma14 commented on pull request #831: ZOOKEEPER-3286: xid wrap-around causes connection loss/segfault when hitting predefined XIDs
URL: https://github.com/apache/zookeeper/pull/831
 
 
   I just saw ZOOKEEPER-3253, which seems to fix the issue for the Java client.
   This fixes the issue for the C client, by avoiding returning negative XIDs.
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Feb/19 21:03;githubbot;600","ccma14 commented on issue #831: ZOOKEEPER-3286: xid wrap-around causes connection loss/segfault when hitting predefined XIDs
URL: https://github.com/apache/zookeeper/pull/831#issuecomment-466559790
 
 
   Regarding an automated test case:
   
   In the C client the XID counter is stored in a static variable within the scope of the get_xid function in st_adapter.c/mt_adapter.c, which makes writing a test case a little harder than for the Java case, because you can't set the initial value for the XID counter from outside that function.
   
   In order to be able to write a test case similar to what we have for Java would require moving the static XID counter to the library's global scope and making it accessible/settable from outside the library, which we probably don't want for regular use cases of the library.
   
   However, if that's acceptable I can modify the patch and cook up a unit test...
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Feb/19 21:48;githubbot;600","enixon commented on issue #831: ZOOKEEPER-3286: xid wrap-around causes connection loss/segfault when hitting predefined XIDs
URL: https://github.com/apache/zookeeper/pull/831#issuecomment-470214811
 
 
   The code looks good to me.
   
   As for the unit test, making the counter global strikes me as overkill too but I'll let someone who represents the project make the actual decision.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Mar/19 18:11;githubbot;600","phunt commented on pull request #831: ZOOKEEPER-3286: xid wrap-around causes connection loss/segfault when hitting predefined XIDs
URL: https://github.com/apache/zookeeper/pull/831#discussion_r264012775
 
 

 ##########
 File path: zookeeper-client/zookeeper-client-c/src/st_adaptor.c
 ##########
 @@ -77,11 +77,11 @@ int32_t inc_ref_counter(zhandle_t* zh,int i)
 
 int32_t get_xid()
 {
-    static int32_t xid = -1;
-    if (xid == -1) {
-        xid = time(0);
-    }
-    return xid++;
+    static int32_t xid = 1;
+
+    // The XID returned should not be negative to avoid collisions
+    // with reserved XIDs, such as AUTH_XID or SET_WATCHES_XID.
+    return xid++ & ~(1<<31);
 
 Review comment:
   I realize this will sound very boring but why not just reset xid to 1 prior to it rolling over? a) the xid actually represents the next xid to send and b) much easier to read/grok for someone new to the code.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/19 20:16;githubbot;600","phunt commented on pull request #831: ZOOKEEPER-3286: xid wrap-around causes connection loss/segfault when hitting predefined XIDs
URL: https://github.com/apache/zookeeper/pull/831#discussion_r264012939
 
 

 ##########
 File path: zookeeper-client/zookeeper-client-c/src/mt_adaptor.c
 ##########
 @@ -502,13 +502,13 @@ int32_t fetch_and_add(volatile int32_t* operand, int incr)
 }
 
 // make sure the static xid is initialized before any threads started
-__attribute__((constructor)) int32_t get_xid()
 
 Review comment:
   why is this being removed? Granted this is from a looong time ago but this is considered MT code and the changelog particularly mentions
   
   >     * get_xid() is not thread-safe (xid initialization race condition 
   >       in the multi-threaded mode).
   
   please remove this change from the patch.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/19 20:16;githubbot;600","ccma14 commented on pull request #831: ZOOKEEPER-3286: xid wrap-around causes connection loss/segfault when hitting predefined XIDs
URL: https://github.com/apache/zookeeper/pull/831#discussion_r264013463
 
 

 ##########
 File path: zookeeper-client/zookeeper-client-c/src/mt_adaptor.c
 ##########
 @@ -502,13 +502,13 @@ int32_t fetch_and_add(volatile int32_t* operand, int incr)
 }
 
 // make sure the static xid is initialized before any threads started
-__attribute__((constructor)) int32_t get_xid()
 
 Review comment:
   __attribute__((constructor)) is no longer needed since the following statement was removed:
   
   if (xid == -1) {
       xid = time(0);
   }
   
   Having this statement is what made the function not MT safe (that's the racy initialization that the comment talks about).  -- The only way that the MT version of get_xid now manipulates the xid static variable is via an atomic increment.
   
   For the single threaded version of get_xid i stuck with
   
   return xid++ & ~(1<<31);
   
   to keep the behavior of the ST and MT version of get_xid identical, but if you want me to i can change that...
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/19 20:30;githubbot;600","ccma14 commented on pull request #831: ZOOKEEPER-3286: xid wrap-around causes connection loss/segfault when hitting predefined XIDs
URL: https://github.com/apache/zookeeper/pull/831#discussion_r264014014
 
 

 ##########
 File path: zookeeper-client/zookeeper-client-c/src/mt_adaptor.c
 ##########
 @@ -502,13 +502,13 @@ int32_t fetch_and_add(volatile int32_t* operand, int incr)
 }
 
 // make sure the static xid is initialized before any threads started
-__attribute__((constructor)) int32_t get_xid()
 
 Review comment:
   To clarify further:
   
   A statement like
      static int xid = 1;
   
   even when within the scope of a function does NOT cause any MT issues, since this places the variable into the initialized data section of the library, hence this gets set when the library gets loaded.
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/19 20:47;githubbot;600","phunt commented on pull request #831: ZOOKEEPER-3286: xid wrap-around causes connection loss/segfault when hitting predefined XIDs
URL: https://github.com/apache/zookeeper/pull/831#discussion_r264049061
 
 

 ##########
 File path: zookeeper-client/zookeeper-client-c/src/mt_adaptor.c
 ##########
 @@ -502,13 +502,13 @@ int32_t fetch_and_add(volatile int32_t* operand, int incr)
 }
 
 // make sure the static xid is initialized before any threads started
-__attribute__((constructor)) int32_t get_xid()
 
 Review comment:
   gotcha, makes sense. And given we are retaining the warning comment on the method itself we should be OK for future generations... Thanks!
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/19 17:19;githubbot;600","anmolnar commented on pull request #831: ZOOKEEPER-3286: xid wrap-around causes connection loss/segfault when hitting predefined XIDs
URL: https://github.com/apache/zookeeper/pull/831#discussion_r264450447
 
 

 ##########
 File path: zookeeper-client/zookeeper-client-c/src/st_adaptor.c
 ##########
 @@ -77,11 +77,11 @@ int32_t inc_ref_counter(zhandle_t* zh,int i)
 
 int32_t get_xid()
 {
-    static int32_t xid = -1;
-    if (xid == -1) {
-        xid = time(0);
-    }
-    return xid++;
+    static int32_t xid = 1;
+
+    // The XID returned should not be negative to avoid collisions
+    // with reserved XIDs, such as AUTH_XID or SET_WATCHES_XID.
+    return xid++ & ~(1<<31);
 
 Review comment:
   I'm not a C expert, but I believe C coders generally prefer magic bitwise operations to gain performance.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Mar/19 22:06;githubbot;600","phunt commented on pull request #831: ZOOKEEPER-3286: xid wrap-around causes connection loss/segfault when hitting predefined XIDs
URL: https://github.com/apache/zookeeper/pull/831#discussion_r264970714
 
 

 ##########
 File path: zookeeper-client/zookeeper-client-c/src/st_adaptor.c
 ##########
 @@ -77,11 +77,11 @@ int32_t inc_ref_counter(zhandle_t* zh,int i)
 
 int32_t get_xid()
 {
-    static int32_t xid = -1;
-    if (xid == -1) {
-        xid = time(0);
-    }
-    return xid++;
+    static int32_t xid = 1;
+
+    // The XID returned should not be negative to avoid collisions
+    // with reserved XIDs, such as AUTH_XID or SET_WATCHES_XID.
+    return xid++ & ~(1<<31);
 
 Review comment:
   The obscurity over-weights the benefits to me... (a/b earlier)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Mar/19 04:25;githubbot;600","ccma14 commented on pull request #831: ZOOKEEPER-3286: xid wrap-around causes connection loss/segfault when hitting predefined XIDs
URL: https://github.com/apache/zookeeper/pull/831#discussion_r266115547
 
 

 ##########
 File path: zookeeper-client/zookeeper-client-c/src/st_adaptor.c
 ##########
 @@ -77,11 +77,11 @@ int32_t inc_ref_counter(zhandle_t* zh,int i)
 
 int32_t get_xid()
 {
-    static int32_t xid = -1;
-    if (xid == -1) {
-        xid = time(0);
-    }
-    return xid++;
+    static int32_t xid = 1;
+
+    // The XID returned should not be negative to avoid collisions
+    // with reserved XIDs, such as AUTH_XID or SET_WATCHES_XID.
+    return xid++ & ~(1<<31);
 
 Review comment:
   Sorry for the delay. I just updated the patch such that for the single threaded version of get_xid we now reset the xid counter to 1 if a previous increment has caused an overflow.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Mar/19 19:12;githubbot;600","anmolnar commented on pull request #831: ZOOKEEPER-3286: xid wrap-around causes connection loss/segfault when hitting predefined XIDs
URL: https://github.com/apache/zookeeper/pull/831#discussion_r266697000
 
 

 ##########
 File path: zookeeper-client/zookeeper-client-c/src/mt_adaptor.c
 ##########
 @@ -502,13 +502,13 @@ int32_t fetch_and_add(volatile int32_t* operand, int incr)
 }
 
 // make sure the static xid is initialized before any threads started
-__attribute__((constructor)) int32_t get_xid()
+int32_t get_xid()
 {
-    static int32_t xid = -1;
-    if (xid == -1) {
-        xid = time(0);
-    }
-    return fetch_and_add(&xid,1);
+    static int32_t xid = 1;
+
+    // The XID returned should not be negative to avoid collisions
+    // with reserved XIDs, such as AUTH_XID or SET_WATCHES_XID.
+    return fetch_and_add(&xid,1) & ~(1<<31);
 
 Review comment:
   This will return `0` when the overflow happens at the first time, so `xid == INT_MIN`, right?
   Which is not consistent with the single threaded case where we restart xid from 1 (similarly to the java client).
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Mar/19 00:58;githubbot;600","anmolnar commented on pull request #831: ZOOKEEPER-3286: xid wrap-around causes connection loss/segfault when hitting predefined XIDs
URL: https://github.com/apache/zookeeper/pull/831#discussion_r266697000
 
 

 ##########
 File path: zookeeper-client/zookeeper-client-c/src/mt_adaptor.c
 ##########
 @@ -502,13 +502,13 @@ int32_t fetch_and_add(volatile int32_t* operand, int incr)
 }
 
 // make sure the static xid is initialized before any threads started
-__attribute__((constructor)) int32_t get_xid()
+int32_t get_xid()
 {
-    static int32_t xid = -1;
-    if (xid == -1) {
-        xid = time(0);
-    }
-    return fetch_and_add(&xid,1);
+    static int32_t xid = 1;
+
+    // The XID returned should not be negative to avoid collisions
+    // with reserved XIDs, such as AUTH_XID or SET_WATCHES_XID.
+    return fetch_and_add(&xid,1) & ~(1<<31);
 
 Review comment:
   This will return `0` when the overflow happens at the first time, so when `xid == INT_MIN`, right?
   Which is not consistent with the single threaded case where we restart xid from 1 (similarly to the java client).
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Mar/19 00:58;githubbot;600","ccma14 commented on pull request #831: ZOOKEEPER-3286: xid wrap-around causes connection loss/segfault when hitting predefined XIDs
URL: https://github.com/apache/zookeeper/pull/831#discussion_r266701482
 
 

 ##########
 File path: zookeeper-client/zookeeper-client-c/src/mt_adaptor.c
 ##########
 @@ -502,13 +502,13 @@ int32_t fetch_and_add(volatile int32_t* operand, int incr)
 }
 
 // make sure the static xid is initialized before any threads started
-__attribute__((constructor)) int32_t get_xid()
+int32_t get_xid()
 {
-    static int32_t xid = -1;
-    if (xid == -1) {
-        xid = time(0);
-    }
-    return fetch_and_add(&xid,1);
+    static int32_t xid = 1;
+
+    // The XID returned should not be negative to avoid collisions
+    // with reserved XIDs, such as AUTH_XID or SET_WATCHES_XID.
+    return fetch_and_add(&xid,1) & ~(1<<31);
 
 Review comment:
   You are correct. -- The first revision of the patch had behavior (and code) that was symmetric between ST/MT. -- I looked at the code (and ran some tests) and there is nothing special about XID being 0 in the C client.
   
   I think at this point we have two options:
   
   1) reset XID to 0 instead of 1 in the ST version of the code. This would give you symmetric behavior (even tho the code no longer looks symmetric).
   
   2) If there is some opposition against ever having 0 returned, I can modify the MT code such that if you were about to return 0, you do another fetch and add. Something like:
   
       result = 0;
       while (result == 0) {
           result = fetch_and_add(&xid,1) & ~(1<<31);
       }
       return result;
   
   Please LMK what your preference is. IMHO none of the two solutions proposed has a correctness issue.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Mar/19 01:26;githubbot;600","anmolnar commented on pull request #831: ZOOKEEPER-3286: xid wrap-around causes connection loss/segfault when hitting predefined XIDs
URL: https://github.com/apache/zookeeper/pull/831#discussion_r266710758
 
 

 ##########
 File path: zookeeper-client/zookeeper-client-c/src/mt_adaptor.c
 ##########
 @@ -502,13 +502,13 @@ int32_t fetch_and_add(volatile int32_t* operand, int incr)
 }
 
 // make sure the static xid is initialized before any threads started
-__attribute__((constructor)) int32_t get_xid()
+int32_t get_xid()
 {
-    static int32_t xid = -1;
-    if (xid == -1) {
-        xid = time(0);
-    }
-    return fetch_and_add(&xid,1);
+    static int32_t xid = 1;
+
+    // The XID returned should not be negative to avoid collisions
+    // with reserved XIDs, such as AUTH_XID or SET_WATCHES_XID.
+    return fetch_and_add(&xid,1) & ~(1<<31);
 
 Review comment:
   I don't think there's anything wrong with using `0` as `xid`, but I would stick to consistent behaviour between clients anyway.
   So, I vote for option 2., but let's see what other people think.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Mar/19 02:30;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,9000,,,0,9000,,,,,,,,,,,,,,,,,,,,,,"21/Feb/19 21:55;ccma13;c-client-xid.diff;https://issues.apache.org/jira/secure/attachment/12959677/c-client-xid.diff",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,9223372036854775807,,,,,2019-02-21 22:00:27.0,,,,,,,,,,"0|yi1900:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"client should not send requests with cxid=-4, -2, or -1",ZOOKEEPER-3253,13211130,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,sjust2,sjust2,sjust2,22/Jan/19 23:21,09/Oct/23 11:24,29/Jun/25 13:34,08/Mar/19 04:10,3.4.9,3.5.4,3.6.0,,,,,,,,,,,,,,,,,,,,,,3.5.5,3.6.0,,,,java client,,,,,0,pull-request-available,,"Once the cxid value increments to -4, the client will interpret the response as an auth packet rather than as a response to a request and will transparently drop the response and the request will hang.  Similarly, -2 will be seen as a ping and will be dropped hanging the request.  -1 shows up as a WatcherEvent and results in the error below.

 
{quote}2019-01-07T21:58:23.209+00:00 [INFO ] [main-SendThread(mnds1-2-phx.ops.sfdc.net:2181)] [ClientCnxn.java:1381] [:] - Session establishment complete on server mnds1-2-phx.ops.sfdc.net/10.246.244.71:2181, sessionid = 0x267859729d66320, negotiated timeout = 10000
 2019-01-07T21:58:22.281+00:00 20190107215822.281000 [WARN ] [main-SendThread(mnds1-3-phx.ops.sfdc.net:2181)] [ClientCnxn.java:1235] [:] - Session 0x267859729d66320 for server mnds1-3-phx.ops.sfdc.net/10.246.244.69:2181, unexpected error, closing socket connection and attempting reconnect
 java.io.IOException: Unreasonable length = 892612659
 at org.apache.jute.BinaryInputArchive.checkLength(BinaryInputArchive.java:127) ~[zookeeper-3.5.3-beta.jar:3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60]
 at org.apache.jute.BinaryInputArchive.readString(BinaryInputArchive.java:81) ~[zookeeper-3.5.3-beta.jar:3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60]
 at org.apache.zookeeper.proto.WatcherEvent.deserialize(WatcherEvent.java:66) ~[zookeeper-3.5.3-beta.jar:3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60]
 at org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:839) ~[zookeeper-3.5.3-beta.jar:3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60]
 at org.apache.zookeeper.ClientCnxnSocketNIO.doIO(ClientCnxnSocketNIO.java:101) ~[zookeeper-3.5.3-beta.jar:3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60]
 at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:363) ~[zookeeper-3.5.3-beta.jar:3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60]
 at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1214) ~[zookeeper-3.5.3-beta.jar:3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60]
{quote}
 ",,"athanatos commented on pull request #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787
 
 
   - Add test for cxid rollover to 1
   - Modify ClientCnxn.SendThread.getXid() to increment from -5 to 1.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/19 20:49;githubbot;600","eolivelli commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-457723646
 
 
   Interesting.
   Are you interested in a back port to 3.4, 3.5?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/19 20:51;githubbot;600","athanatos commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-457724146
 
 
   Yeah, I've got the 3.4 one ready, 3.5 presumably also easy.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/19 20:53;githubbot;600","eolivelli commented on pull request #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#discussion_r251139004
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1510,6 +1511,11 @@ public void close() throws IOException {
      * the server. Thus, getXid() must be public.
      */
     synchronized public int getXid() {
+        // xid values of -4, -2, and -1 are special, see SendThread.readResponse
 
 Review comment:
   What about introducing constants for these special values ? (and replace in readResponse)
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/19 21:20;githubbot;600","athanatos commented on pull request #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#discussion_r251140151
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1510,6 +1511,11 @@ public void close() throws IOException {
      * the server. Thus, getXid() must be public.
      */
     synchronized public int getXid() {
+        // xid values of -4, -2, and -1 are special, see SendThread.readResponse
 
 Review comment:
   Where do protocol level constants like that usually get put?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/19 21:22;githubbot;600","athanatos commented on pull request #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#discussion_r251141069
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1510,6 +1511,11 @@ public void close() throws IOException {
      * the server. Thus, getXid() must be public.
      */
     synchronized public int getXid() {
+        // xid values of -4, -2, and -1 are special, see SendThread.readResponse
 
 Review comment:
   Also, that seems a bit intrusive for a patch I want to backport since it would also touch the server side.  I suppose I could add it as an additional commit and only backport the actual fix?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/19 21:26;githubbot;600","eolivelli commented on pull request #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#discussion_r251143313
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1510,6 +1511,11 @@ public void close() throws IOException {
      * the server. Thus, getXid() must be public.
      */
     synchronized public int getXid() {
+        // xid values of -4, -2, and -1 are special, see SendThread.readResponse
 
 Review comment:
   I am thinking about having constants only _locally_ to this file, this way it will be easier to understand the code and the patch wouldn't be so intrusive.
   In the (hopefully near) future we will separate client size code from server side code so introducing new shared constants would be overkilling.
   
   I don't fell strong about having such constants, it is only a thought/suggestion.
   
   cc @anmolnar @lvfangmin @hanm 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/19 21:34;githubbot;600","athanatos commented on pull request #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#discussion_r251145160
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1510,6 +1511,11 @@ public void close() throws IOException {
      * the server. Thus, getXid() must be public.
      */
     synchronized public int getXid() {
+        // xid values of -4, -2, and -1 are special, see SendThread.readResponse
 
 Review comment:
   I'm inclined to keep the patch minimal since grepping for those identifiers wouldn't tell you where those packets get sent.  Also, the numerical values are useful to see here.  I don't feel strongly about it though.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/19 21:40;githubbot;600","eolivelli commented on pull request #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#discussion_r251150405
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1510,6 +1511,11 @@ public void close() throws IOException {
      * the server. Thus, getXid() must be public.
      */
     synchronized public int getXid() {
+        // xid values of -4, -2, and -1 are special, see SendThread.readResponse
 
 Review comment:
   no problem from my side, let's keep the patch simple
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/19 22:01;githubbot;600","eolivelli commented on pull request #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#discussion_r251150647
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/TestableZooKeeper.java
 ##########
 @@ -35,6 +36,39 @@ public TestableZooKeeper(String host, int sessionTimeout,
             Watcher watcher) throws IOException {
         super(host, sessionTimeout, watcher);
     }
+
+    class TestableClientCnxn extends ClientCnxn {
+        TestableClientCnxn(String chrootPath, HostProvider hostProvider, int sessionTimeout, ZooKeeper zooKeeper,
+            ClientWatchManager watcher, ClientCnxnSocket clientCnxnSocket, boolean canBeReadOnly)
+                throws IOException {
+            super(chrootPath, hostProvider, sessionTimeout, zooKeeper, watcher,
+                clientCnxnSocket, 0, new byte[16], canBeReadOnly);
+        }
+
+        void setXid(int newXid) {
+            xid = newXid;
+        }
+
+        int checkXid() {
+            return xid;
+        }
+    }
+
+    protected ClientCnxn createConnection(String chrootPath,
 
 Review comment:
   what about overriding this method only in your new testcase?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/19 22:02;githubbot;600","athanatos commented on pull request #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#discussion_r251152973
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/TestableZooKeeper.java
 ##########
 @@ -35,6 +36,39 @@ public TestableZooKeeper(String host, int sessionTimeout,
             Watcher watcher) throws IOException {
         super(host, sessionTimeout, watcher);
     }
+
+    class TestableClientCnxn extends ClientCnxn {
+        TestableClientCnxn(String chrootPath, HostProvider hostProvider, int sessionTimeout, ZooKeeper zooKeeper,
+            ClientWatchManager watcher, ClientCnxnSocket clientCnxnSocket, boolean canBeReadOnly)
+                throws IOException {
+            super(chrootPath, hostProvider, sessionTimeout, zooKeeper, watcher,
+                clientCnxnSocket, 0, new byte[16], canBeReadOnly);
+        }
+
+        void setXid(int newXid) {
+            xid = newXid;
+        }
+
+        int checkXid() {
+            return xid;
+        }
+    }
+
+    protected ClientCnxn createConnection(String chrootPath,
 
 Review comment:
   I figured that the xid manipulation methods might be generally useful.  Also, createClient test helper method explicitly creates a TestableZooKeeper, so I'd have to create another version of that, I think.  Doesn't seem worthwhile.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/19 22:12;githubbot;600","athanatos commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-458640950
 
 
   Is this waiting on something from me?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jan/19 17:55;githubbot;600","eolivelli commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-458650488
 
 
   We need two committers to review and then merge.
   
   Tagging @anmolnar 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jan/19 18:22;githubbot;600","athanatos commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-461972654
 
 
   Anything I can do to move this along?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Feb/19 22:44;githubbot;600","eolivelli commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-462019934
 
 
   @anmolnar can we include this in 3.5.5 and 3.4.14?
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Feb/19 06:54;githubbot;600","anmolnar commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-462297767
 
 
   @eolivelli 3.5.5 is fine, but 3.4.14 is already cut, I wouldn't touch it anymore.
   
   We can make an exception if it's critical, but we need at least one more committer to review.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Feb/19 11:36;githubbot;600","phunt commented on pull request #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#discussion_r259901448
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1510,6 +1511,11 @@ public void close() throws IOException {
      * the server. Thus, getXid() must be public.
      */
     synchronized public int getXid() {
+        // xid values of -4, -2, and -1 are special, see SendThread.readResponse
+        // Skip from -5 to 1.
 
 Review comment:
   why are we allowing negative numbers at all? shouldn't we check for ""about to rollover"" prior to the increment and then reset to 1? It seems to me that that would be a whole lot easier to grok.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/19 16:17;githubbot;600","athanatos commented on pull request #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#discussion_r259966632
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1510,6 +1511,11 @@ public void close() throws IOException {
      * the server. Thus, getXid() must be public.
      */
     synchronized public int getXid() {
+        // xid values of -4, -2, and -1 are special, see SendThread.readResponse
+        // Skip from -5 to 1.
 
 Review comment:
   A reasonable point.  Nothing I could find directly compares cxid values or will otherwise notice the MAX to MIN wrap, so I chose to use the full range.  I'll switch it.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/19 18:49;githubbot;600","athanatos commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-467140893
 
 
   Ok, I pushed a version that wraps from MAX to 1 avoiding negative values entirely. @phunt 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/19 19:10;githubbot;600","phunt commented on pull request #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#discussion_r260123920
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1510,6 +1511,11 @@ public void close() throws IOException {
      * the server. Thus, getXid() must be public.
      */
     synchronized public int getXid() {
+        // xid values of -4, -2, and -1 are special, see SendThread.readResponse
+        // Skip from -5 to 1.
 
 Review comment:
   Sounds good, thanks. Essentially negative cxid are essentially ""reserved"" this way.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/19 04:45;githubbot;600","phunt commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-467940965
 
 
   So here's my current concern, which I have not had time yet to look at and I think should be addressed before this is committed - what happens on the server side? Is it allowing the cxid to ""go back in time"", if so is that ok, if not then what happens? (does it disco the client session?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Feb/19 16:53;githubbot;600","phunt commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-467940965
 
 
   So here's my current concern, which I have not had time yet to look at and I think should be addressed before this is committed - what happens on the server side? Is it allowing the cxid to ""go back in time"", if so is that ok, if not then what happens? (e.g. does it disco the client session?)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Feb/19 16:53;githubbot;600","athanatos commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-467962868
 
 
   @phunt I was unable to find anything server side that actually compares cxids other than to check equality.  I believe this patch to be safe so long as two requests with the same cxid on the same session are not live at the same time -- which a 31 bit cxid is probably sufficient to ensure.  Note, the current implementation already permits wrapping from MAX to MIN.  This behavior occurs regularly in our environment and the only misbehavior it seems to cause is that the requests submitted with a cxid value of -4, -2, or -1 hang or cause a reconnect.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Feb/19 17:51;githubbot;600","athanatos commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-467962868
 
 
   @phunt I was unable to find anything server side that actually compares cxids other than to check equality.  I believe this patch to be safe so long as two requests with the same cxid on the same session are not live at the same time -- which a 31 bit cxid is probably sufficient to ensure.  Note, the current implementation already permits wrapping from MAX to MIN.  This behavior occurs regularly in our environment and the only misbehavior it seems to cause is that the requests submitted with a cxid value of -4, -2, or -1 hang or cause a reconnect.  The patch also includes a test to exercise the behavior specifically.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Feb/19 17:53;githubbot;600","athanatos commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-467963738
 
 
   Pushed to fix the commit message -- forgot to update it before.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Feb/19 17:54;githubbot;600","phunt commented on pull request #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#discussion_r261877616
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/test/ClientTest.java
 ##########
 @@ -868,4 +870,37 @@ public void testTryWithResources() throws Exception {
 
         Assert.assertFalse(zooKeeper.getState().isAlive());
     }
+
+    @Test
+    public void testCXidRollover() throws Exception {
+        TestableZooKeeper zk = null;
+        try {
+            zk = createClient();
+            zk.setXid(Integer.MAX_VALUE - 10);
+
+            zk.create(""/testnode"", """".getBytes(), Ids.OPEN_ACL_UNSAFE,
+                CreateMode.PERSISTENT);
+            for (int i = 0; i < 20; ++i) {
+                final CountDownLatch latch = new CountDownLatch(1);
+                final AtomicInteger rc = new AtomicInteger(0);
+                zk.setData(""/testnode"", """".getBytes(), -1,
+                    new AsyncCallback.StatCallback() {
+                        @Override
+                        public void processResult(int retcode, String path, Object ctx, Stat stat) {
+                            rc.set(retcode);
+                            latch.countDown();
+                        }
+                    }, null);
+                Assert.assertTrue(""setData should complete within 5s"",
+                    latch.await(5, TimeUnit.SECONDS));
 
 Review comment:
   this is generally an anti-pattern in the tests and leads to flakey tests. e.g. we can see on some test environments that are oversubscribed. I'd suggest something very large, e.g. 30 seconds or just using the session timeout.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Mar/19 17:30;githubbot;600","athanatos commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-469395692
 
 
   @phunt I pushed a version with that changed.  The JenkinsMaven failure doesn't appear related to this patch.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Mar/19 19:49;githubbot;600","phunt commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-469939867
 
 
   +1, lgtm. thanks @athanatos 
   
   I also reviewed the server side code and it looks like client xid ""going back in time"" (my earlier concern) is fine.
   
   I did notice this however - notice negative client xids circumvent throttling! So we're fixing this bug as well by resetting the xid before it rolls over.
   
   ```
       public void incrOutstandingAndCheckThrottle(RequestHeader h) {
           if (h.getXid() <= 0) {
               return;
           }
           if (zkServer.shouldThrottle(outstandingCount.incrementAndGet())) {
               disableRecv(false);
           }
       }
   ```
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Mar/19 02:18;githubbot;600","asfgit commented on pull request #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Mar/19 02:33;githubbot;600","athanatos commented on pull request #844: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/844
 
 
   - Add test for cxid rollover to 1
   - Modify ClientCnxn.SendThread.getXid() to increment from MAX to 1.
   
   Author: Samuel Just <sjust@salesforce.com>
   
   Reviewers: phunt@apache.org
   
   Closes #787 from athanatos/forupstream/ZOOKEEPER-3253
   
   Change-Id: Ib3d111170bb086d6982f2cf0ee5cf8afd5157588
   (cherry picked from commit e10c93a590cc1b73eebad48d18cfcbceb3ec0d4d)
   
   Includes backport of createConnection testability refactor
   from 9f82798415351a20136ceb1640b1781723e51cc1.
   
   Signed-off-by: Samuel Just <sjust@salesforce.com>
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/19 00:22;githubbot;600","phunt commented on pull request #844: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/844
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/19 04:09;githubbot;600","phunt commented on issue #844: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/844#issuecomment-470798289
 
 
   +1 thanks @athanatos !
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/19 04:09;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,172800,154200,18600,10%,172800,154200,18600,,,,,,,,ZOOKEEPER-3280,,,,,ZOOKEEPER-1277,,ZOOKEEPER-3650,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,Reviewed,,,,Fri Mar 08 04:10:40 UTC 2019,,,,,,,,,,"0|yi071c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Jan/19 23:27;sjust2;It seems to me that the fix is relatively simple – the rollover seems to be harmless so we simply need to tick from -5 to 0 in ClientCnxn.getXid().  I'm working on a test and a fix.;;;","06/Mar/19 02:40;phunt;Issue resolved by pull request 787
[https://github.com/apache/zookeeper/pull/787];;;","06/Mar/19 03:57;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #261 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/261/])
ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1 (phunt: rev e10c93a590cc1b73eebad48d18cfcbceb3ec0d4d)
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/TestableZooKeeper.java
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/test/ClientTest.java
;;;","06/Mar/19 06:50;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #427 (See [https://builds.apache.org/job/ZooKeeper-trunk/427/])
ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1 (phunt: rev e10c93a590cc1b73eebad48d18cfcbceb3ec0d4d)
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/test/ClientTest.java
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/TestableZooKeeper.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
;;;","06/Mar/19 16:29;phunt;[~sjust2] - can you submit a new pull request for this against 3.4 branch? I had to revert from 3.4, while it compiled fine the test was failing consistently across the 3.4 jenkins jobs. Thanks!;;;","07/Mar/19 13:36;elserj;FWIW, I had pulled this change into a fork and ran into the same issue. I assumed it was an issue with my fork :)
{code:java}
diff --git a/zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java b/zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java
index 03c8b0d7e..0577d5f15 100644
--- a/zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java
+++ b/zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java
@@ -448,12 +448,21 @@ public ZooKeeper(String connectString, int sessionTimeout, Watcher watcher,
                 connectString);
         HostProvider hostProvider = new StaticHostProvider(
                 connectStringParser.getServerAddresses());
-        cnxn = new ClientCnxn(connectStringParser.getChrootPath(),
+        cnxn = createConnection(connectStringParser.getChrootPath(),
                 hostProvider, sessionTimeout, this, watchManager,
                 getClientCnxnSocket(), canBeReadOnly);
         cnxn.start();
     }

+    // @VisibleForTesting
+    protected ClientCnxn createConnection(String chrootPath,
+            HostProvider hostProvider, int sessionTimeout, ZooKeeper zooKeeper,
+            ClientWatchManager watcher, ClientCnxnSocket clientCnxnSocket,
+            boolean canBeReadOnly) throws IOException {
+        return new ClientCnxn(chrootPath, hostProvider, sessionTimeout, this,
+                watchManager, clientCnxnSocket, canBeReadOnly);
+    }
+
     /**
      * To create a ZooKeeper client object, the application needs to pass a
      * connection string containing a comma separated list of host:port pairs,{code}
Just missing the ""hook"" to inject a custom {{ClientCnxn}} object that the test code relies on.

(Can send this as a PR, just didn't want to steal [~sjust2]'s thunder ;));;;","07/Mar/19 23:04;sjust2;Yeah, that's the right fix, I'll have a PR out today or tomorrow.;;;","08/Mar/19 04:10;phunt;Committed the updated patch to 3.4 - thanks [~sjust2] !;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Handle Java 9/11 additions of covariant return types to java.nio.ByteBuffer methods,ZOOKEEPER-3215,13204348,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,andor,softwareengg,softwareengg,13/Dec/18 20:54,11/May/20 15:41,29/Jun/25 13:34,30/Apr/20 07:30,3.4.13,,,,,,,,,,,,,,,,,,,,,,,,3.5.8,3.6.2,3.7.0,,,,,,,,0,pull-request-available,,"Java 9 introduces covariant return types which allows one to have different return types if return type in the overridden method is a sub type. Since Java 9, few functions return ByteBuffer, whereas the parent method return Buffer, resulting in causing issues for Java 8 and below since for them the method does not exist.

Steps To Reproduce:
1. Setup ZooKeeper Server with JDK11.
2. Setup ZooKeeper Client with JDK8.
3. Try connecting the client and server.

Results:
Cast ByteBuffer instances to Buffer before calling the method.

 

Notes:
There was a similar bug in the MongoDB community - [https://jira.mongodb.org/browse/JAVA-2559]

 

This is not a contribution.",,"vivekpatani commented on pull request #760: ZOOKEEPER-3215: Handle Java 9/11 additions of covariant return types …
URL: https://github.com/apache/zookeeper/pull/760
 
 
   …to java.nio.ByteBuffer methods
   
   Co-authored-by: Brandon Miles <brandon_miles@apple.com>
   
   Java 9 introduces covariant return types which allows one to have different return types if return type in the overridden method is a sub type. Since Java 9, few functions return ByteBuffer, whereas the parent method return Buffer, resulting in causing issues for Java 8 and below since for them the method does not exist.
   
   To fix this, we must cast the ByteBuffer instances to Buffer before we call the method. The methods that need this are:
   
   - position(int newPosition)
   - limit(int newLimit)
   - flip()
   - clear()
   - mark()
   - reset()
   - rewind()
   
   Signed-off-by: Vivek Patani <softwareengg@pm.me>
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Jan/19 20:11;githubbot;600","anmolnar commented on issue #760: ZOOKEEPER-3215: Handle Java 9/11 additions of covariant return types …
URL: https://github.com/apache/zookeeper/pull/760#issuecomment-452734142
 
 
   @vivekpatani Since Java 1.9 there's a `--release` switch for the javac compiler which sets the ""source"", ""target"" and ""bootclasspath"" properties in order to properly cross-compile.
   
   Wouldn't it be better to use that for cross-compile ZooKeeper instead of code change?
   I tested it on branch-3.4 and it works fine.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Jan/19 15:21;githubbot;600","anmolnar commented on issue #760: ZOOKEEPER-3215: Handle Java 9/11 additions of covariant return types …
URL: https://github.com/apache/zookeeper/pull/760#issuecomment-452734142
 
 
   @vivekpatani Since Java 9 there's a `--release` switch for the javac compiler which sets the ""source"", ""target"" and ""bootclasspath"" properties in order to properly cross-compile.
   
   Wouldn't it be better to use that for cross-compile ZooKeeper instead of code change?
   I tested it on branch-3.4 and it works fine.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Jan/19 15:21;githubbot;600","anmolnar commented on issue #760: ZOOKEEPER-3215: Handle Java 9/11 additions of covariant return types …
URL: https://github.com/apache/zookeeper/pull/760#issuecomment-452735551
 
 
   https://openjdk.java.net/jeps/247
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Jan/19 15:25;githubbot;600","vivekpatani commented on issue #760: ZOOKEEPER-3215: Handle Java 9/11 additions of covariant return types …
URL: https://github.com/apache/zookeeper/pull/760#issuecomment-452933177
 
 
   @anmolnar it builds just fine, passes tests, it's more about return types discrepancy post JDK9. Were you able to spin up a server/client and talk to each other? I'll give it a try as well.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Jan/19 01:14;githubbot;600","anmolnar commented on issue #760: ZOOKEEPER-3215: Handle Java 9/11 additions of covariant return types …
URL: https://github.com/apache/zookeeper/pull/760#issuecomment-452977671
 
 
   @vivekpatani I tested it (cross-building with `--release 8` flag) on all major branches:
   - branch-3.4 works fine: compiling with Java 11, running on Java 8, client connected, able to execute commands,
   - branch-3.5 and master: code doesn't compile due to unavailability of `com.sun.nio.file.SensitivityWatchEventModifier` imported in `FileChangeWatcher.java`, but that's seems like a problem that we should deal with anyway.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Jan/19 05:43;githubbot;600","vivekpatani commented on issue #760: ZOOKEEPER-3215: Handle Java 9/11 additions of covariant return types …
URL: https://github.com/apache/zookeeper/pull/760#issuecomment-454982760
 
 
   @anmolnar looks like it works for me. We can close this PR out and just comment on the issue if anyone comes across the same problem, they can use ```--release``` flag as a solution. Thank you.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Jan/19 23:24;githubbot;600","anmolnar commented on issue #760: ZOOKEEPER-3215: Handle Java 9/11 additions of covariant return types …
URL: https://github.com/apache/zookeeper/pull/760#issuecomment-455232025
 
 
   Thanks @vivekpatani . I think a patch is needed anyway to modify ant/maven scripts to use release flag instead of javac.target. Because now one could mistakenly make the assumption of ZooKeeper correctly cross-compiles for JDK8. Would you mind creating or modifying your existing patch accordingly?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Jan/19 16:16;githubbot;600","eolivelli commented on issue #760: ZOOKEEPER-3215: Handle Java 9/11 additions of covariant return types …
URL: https://github.com/apache/zookeeper/pull/760#issuecomment-455237059
 
 
   @anmolnar  the 'release' flag is available only from JDK9+ 
   we need to put  a bunch of ""if/else"" in ant/maven configuration and it is quite complicated the resulting configuration.
   
    IMHO It is better to add the ""animal sniffer plugin "" in the maven build and leave Ant as it is now
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Jan/19 16:29;githubbot;600","anmolnar commented on issue #760: ZOOKEEPER-3215: Handle Java 9/11 additions of covariant return types …
URL: https://github.com/apache/zookeeper/pull/760#issuecomment-455260317
 
 
   @eolivelli Sure. I like the idea.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Jan/19 17:35;githubbot;600","anmolnar commented on issue #760: ZOOKEEPER-3215: Handle Java 9/11 additions of covariant return types …
URL: https://github.com/apache/zookeeper/pull/760#issuecomment-606548661
 
 
   Branch-3.4 is locked already.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Mar/20 10:48;githubbot;600","anmolnar commented on pull request #760: ZOOKEEPER-3215: Handle Java 9/11 additions of covariant return types …
URL: https://github.com/apache/zookeeper/pull/760
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Mar/20 10:48;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon May 11 15:41:14 UTC 2020,,,,,,,,,,"0|s01i6w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Dec/18 02:20;maoling;look at the patch:https://github.com/mongodb/mongo-java-driver/commit/21c91bd364d38489e0bbe2e390efdb3746ee3fff
just cast ByteBuffer to Buffer. Java 9 hasn't the good downward compatibility.
Thanks for telling us how to reproduce this issue.
[~softwareengg]
Could you give us a patch?;;;","26/Apr/20 15:14;busbey;I hit this issue when trying to use Zookeeper 3.5.7 installed via Homebrew.

The logs (after adjusting the log level in {{/usr/local/etc/zookeeper/log4j.properties}} from WARN to INFO) contain the tell-tale complaint:

{code}
2020-04-25 02:42:15 NIOServerCnxn [WARN] Unable to read additional data from client sessionid 0x0, likely client has closed socket
2020-04-25 02:42:16 ClientCnxn [INFO] Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
2020-04-25 02:42:16 ClientCnxn [WARN] Session 0x0 for server localhost/127.0.0.1:2181, unexpected error, closing socket connection and attempting reconnect
java.lang.NoSuchMethodError: java.nio.ByteBuffer.clear()Ljava/nio/ByteBuffer;
        at org.apache.zookeeper.ClientCnxnSocketNIO.connect(ClientCnxnSocketNIO.java:296)
        at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1104)
        at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
2020-04-25 02:42:16 NIOServerCnxn [WARN] Unable to read additional data from client sessionid 0x0, likely client has closed socket
2020-04-25 02:42:16 ZooKeeper [INFO] Session: 0x0 closed
2020-04-25 02:42:16 ClientCnxn [INFO] EventThread shut down for session: 0x0
{code}

My JAVA_HOME is set to jdk8 build 161, as is the bare ""javac"" command

{code}
echo $busbey-mba13:~ busbey$ echo $JAVA_HOME
/Library/Java/JavaVirtualMachines/jdk1.8.0_161.jdk/Contents/Home/
busbey-mba13:~ busbey$ which javac
/usr/bin/javac
busbey-mba13:~ busbey$ /usr/bin/javac -version
javac 1.8.0_161
{code}

I do have other Javas installed
{code}
busbey-mba13:~ busbey$ ls /Library/Java/JavaVirtualMachines/
jdk-9.jdk		jdk1.8.0_161.jdk	jdk1.8.0_74.jdk		jdk8u172-b11		zulu-7.jdk
jdk1.7.0_80.jdk		jdk1.8.0_192.jdk	jdk1.9-ea-b102.jdk	openjdk-11.0.2.jdk
{code}

I'm checking to see now if homebrew installed from source and if so how it picked which JDK to compile with.;;;","26/Apr/20 15:48;busbey;the homebrew formula looks to come from the core homebrew project [defined over in homebrew-core's github|https://github.com/Homebrew/homebrew-core/blob/master/Formula/zookeeper.rb].

AFAICT it installs from source and builds via a bare invocation of ant. running {{ant -diagnostics}} on my system points to JDK8 as what ant is seeing
{code}
busbey-mba13:~ busbey$ ant -diagnostics | grep -E ""(ant.java.version|java.home|java.vm.vendor|java.vm.version|java.runtime.version)""
ant.java.version: 1.8
java.vm.version : 25.161-b12
java.vm.vendor : Oracle Corporation
java.runtime.version : 1.8.0_161-b12
java.home : /Library/Java/JavaVirtualMachines/jdk1.8.0_161.jdk/Contents/Home/jre
{code}

I'll try wiping everything, confirming jdk versions, and rerunning the install. maybe the console where I did my installation had a different jdk active.;;;","26/Apr/20 20:30;busbey;a verbose install showed that I'm not building from source but rather installing a prebuild homebrew ""bottle"" specific for my version of OS X. so that build must have happened with JDK9+.;;;","27/Apr/20 14:07;busbey;Now that I've gotten zookeeper 3.5.7 to build from source I get the same issue. I also worked out that the from source build is using an openjdk also from homebrew, which is totally different then all the other JDKs I have installed because it's keg-only (which means that by default it gets used within homebrew but not outside of it).

{code}
busbey-mba13:~ busbey$ /usr/local/opt/openjdk/bin/javac -version
javac 13.0.2
{code}

I would assume the bottle for zookeeper is made with this same jdk version, which explains why I hit the issue. The oldest homebrew openjdk version I can find is JDK11, which essentially means folks trying to use a homebrew installed Zookeeper client will need to use JDK9+ until this issue is addressed.;;;","27/Apr/20 14:13;busbey;For those willing to risk messing up their homebrew installation, I was able to work around things with the following high level steps:

* remove  the homebrew versions of zookeeper, ant, openjdk
* install the cask version of adoptopenjdk8
* symlink the {{adoptopenjdk-8.jdk/Contents/Home/}} directory into /usr/local/opt/openjdk
* install ant with the unsupported {{--ignore-dependencies}} flag
* use the info homebrew command to verify all the needed dependencies are present for zookeeper
* install zookeeper with the flags {{--build-from-source --ignore-dependencies}}

That got me a zookeeper that was compiled with JDK8 (currently build 252) and I could successfully use the {{zkCli}} from homebrew with JDK8 (specifically the JDK8 build 161 I previously was trying to use).

Alternatively you can keep JAVA_HOME unset when using {{zkCli}} and make sure whatever application you want to use with JDK8 has client libraries from somewhere other than homebrew.;;;","29/Apr/20 18:59;symat;[~busbey], Vivek Patani, thank you for raising this issues again! we had a discussion on the zookeeper dev mailing list and concluded on a fix proposed by [~ctubbsii] that introduces some maven magic: we are detecting now the Java compiler with maven and adding “--release 8” switch to all Java compilers with version 9+. It turned out that the master branch already contained the fix, now we are backporting it to the active 3.5 and 3.6 branches.

Just for the record, the verification steps we are using:
- build ZK from source with openjdk 13.0.2
- run server with JDK 8 (e.g. Oracle 1.8.0_201)
- connect zkcli with both java versions
- run some smoke tests
- make sure there is no exceptions like ""NoSuchMethodError"" in the logs

Once we tested the backports, I will resolve this ticket, marked as fixed in the next releases.;;;","30/Apr/20 07:30;symat;Thanks for [~andor] for investigating / fixing this issue on all branches!
;;;","11/May/20 15:41;symat;closed after releasing 3.5.8;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unreachable node can prevent remaining nodes from gaining quorum,ZOOKEEPER-3149,13185218,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Duplicate,,ajanuary,ajanuary,14/Sep/18 18:14,16/Sep/18 19:13,29/Jun/25 13:34,16/Sep/18 19:13,3.4.12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,leaderElection,,,,,0,,,"Steps to reproduce:
 # Have a 3 node cluster set up, with node 2 as the leader, and node 3 zxid ahead of node 1 such that node 3 will be the new leader when node 2 disappears.
 # Shut down node 2 such that it is unreachable and attempts to connect to it yield a socket timeout.
 # Have the remaining two nodes get ""Connection refused"" responses almost immediately if one tries to connect to the other on a port that isn't open.

Expected behaviour:

The remaining nodes reach quorum.

Actual behaviour:

The remaining nodes repeatedly fail to reach quorum, spinning and holding elections until node 2 is brought back.

 

This is because:
 # An election for a new leader starts.
 # Both nodes broadcast notifications to all the other nodes
 # The notifications are sent to node 1 quickly, then it tries to send it to node 2, which takes cnxTimeout (default 5s) before timing out, then sends it to node 3. This results in all the notifications to node 3 taking 5 seconds to arrive.
 # Despite the delays, node 1 and node 3 agree that node 3 should be leader.
 # node 1 sends the message that it will follow node 3, then immediately tries to connect to it as leader.
 # Because of the delay, node 3 hasn't yet received the notification that node 1 is following it, so doesn't start accepting requests.
 # This causes the requests from node 1 to fail quickly with ""Connection refused"".
 # It retries 5 times (pausing a second between each)
 # Because these connection refused are happening at 1/5th of cnxTimeout, node 1 gives up trying to follow node 3 and starts a new election.
 # Node 3 times out waiting for node 1 to acknowledge it as leader, and starts a new election.

 

We can work around the issue by decreasing cnxTimeout to be less than 5. However, it seems like a bad idea to rely on tweaking a value based on network performance, especially as the value is only configurable via JVM args rather than the conf files.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-2930,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2018-09-14 18:14:52.0,,,,,,,,,,"0|i3y41j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Documentation: Overview page has missing content,ZOOKEEPER-3126,13180187,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,pritish.kapoor,pritish.kapoor,21/Aug/18 11:15,29/Aug/18 08:19,29/Jun/25 13:34,,3.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,documentation,,,,,1,,,"Documentation: Overview page [https://zookeeper.apache.org/doc/current/zookeeperOver.html] has missing content marked as _[tbd]_

Refer section ""Nodes and ephemeral nodes"" - Last line:

""Ephemeral nodes are useful when you want to implement _[tbd]_.""

Similarly, many other lines are present with ""_[tbd]_""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Aug/18 11:15;pritish.kapoor;Zookeeper.png;https://issues.apache.org/jira/secure/attachment/12936426/Zookeeper.png",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Aug 29 08:19:16 UTC 2018,,,,,,,,,,"0|i3x9bb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Aug/18 08:19;maoling;[~pritish.kapoor] 
Yes,you're right.the* zookeeperOver.html* in the soure codes also have this problem.
It seems that it's not easy to find the original url href.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Potential race condition when create ephemeral nodes,ZOOKEEPER-3102,13174006,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Won't Fix,,LuoFucong,LuoFucong,24/Jul/18 06:08,11/May/23 16:52,29/Jun/25 13:34,11/May/23 16:52,3.6.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,server,,,,,0,pull-request-available,,"The method 
{code:java}
public void createNode(final String path, byte data[], List<ACL> acl, long ephemeralOwner, int parentCVersion, long zxid, long time, Stat outputStat)
{code}
 

in class DataTree may conceal a potential race condition regarding the session ephemeral nodes map ""Map<Long, HashSet<String>> ephemerals"".

Specifically, the codes start from line 455:

 
{code:java}
} else if (ephemeralOwner != 0) {
    HashSet<String> list = ephemerals.get(ephemeralOwner);
    if (list == null) {
        list = new HashSet<String>();
        ephemerals.put(ephemeralOwner, list);
    }
    synchronized (list) {
        list.add(path);
    }
}{code}
 

When an ephemeral owner tries to create nodes concurrently (under different parent nodes), an empty ""HashSet<String>"" might be created multiple times, and replace each other.

The following unit test reveals the race condition:

 
{code:java}
@Test(timeout = 60000)
public void testSessionEphemeralNodesConcurrentlyCreated()
        throws InterruptedException, NodeExistsException, NoNodeException {
    long session = 0x1234;
    int concurrent = 10;
    Thread[] threads = new Thread[concurrent];
    CountDownLatch latch = new CountDownLatch(1);
    for (int i = 0; i < concurrent; i++) {
        String parent = ""/test"" + i;
        dt.createNode(parent, new byte[0], null, 0, -1, 1, 1);

        Thread thread = new Thread(() -> {
            try {
                latch.await();
            } catch (InterruptedException e) {
                throw new RuntimeException(e);
            }

            String path = parent + ""/0"";
            try {
                dt.createNode(path, new byte[0], null, session, -1, 1, 1);
            } catch (Exception e) {
                throw new IllegalStateException(e);
            }
        });
        thread.start();
        threads[i] = thread;
    }
    latch.countDown();
    for (Thread thread : threads) {
        thread.join();
    }
    int sessionEphemerals = dt.getEphemerals(session).size();
    Assert.assertEquals(concurrent, sessionEphemerals);
}
{code}
The session ""0x1234"" has created 10 ephemeral nodes ""/test\{0~9}/0"" concurrently (in 10 threads), so its ephemeral nodes size retrieved from DataTree should be 10 while doesn't (assertion fail).

 

The fix should be easy:

 
{code:java}
private final ConcurrentMap<Long, HashSet<String>> ephemerals = new ConcurrentHashMap<>();

...

} else if (ephemeralOwner != 0) {
    HashSet<String> list = ephemerals.get(ephemeralOwner);
    if (list == null) {
        list = new HashSet<String>();
        HashSet<String> _list;
        if ((_list = ephemerals.putIfAbsent(ephemeralOwner, list)) != null) {
            list = _list;
        }
    }
    synchronized (list) {
        list.add(path);
    }
}
{code}
 

 

 ","operating system: macOS High Sierra 10.13.6

java version: 8u152

 ","GitHub user MichaelScofield opened a pull request:

    https://github.com/apache/zookeeper/pull/584

    ZOOKEEPER-3102: Potential race condition when create ephemeral nodes.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/MichaelScofield/zookeeper ZOOKEEPER-3102

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/584.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #584
    
----
commit f7b494858e719b2c6dc08befea5bd2caf82c3976
Author: luo.fucong <luo.fucong@...>
Date:   2018-07-26T04:46:24Z

    ZOOKEEPER-3102: Potential race condition when create ephemeral nodes.

----
;26/Jul/18 04:47;githubbot;600","Github user breed commented on the issue:

    https://github.com/apache/zookeeper/pull/584
  
    i'm not sure this is an issue. there is a single thread (FileRequestProcessor) that does all the mutations, so i don't think there is a race here. there might be a race in other places, but we need to validate that and write a test for it.
;27/Jul/18 04:21;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/584
  
    This is good enough to make the ephemerals thread safe in DataTree, if it's being called in multiple thread, the code you touched here may add ephemerals which is just removed in killSession.
    
    A lot of code inside DataTree assumes that there is a single thread will call it, and it's guaranteed from FinalRequestProcessor, which is called from the WorkerService in CommitProcessor, and CommitProcessor guarantees only a single write is allowed at a time. So I agree with Ben, I don't think we need this change.
;27/Jul/18 05:40;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/584#discussion_r205749086
  
    --- Diff: src/java/main/org/apache/zookeeper/server/DataTree.java ---
    @@ -478,7 +478,10 @@ public void createNode(final String path, byte data[], List<ACL> acl,
                     HashSet<String> list = ephemerals.get(ephemeralOwner);
                     if (list == null) {
                         list = new HashSet<String>();
    -                    ephemerals.put(ephemeralOwner, list);
    +                    HashSet<String> _list;
    --- End diff --
    
    You can use `computeIfAbsent()` like this:
    ```java
    HashSet<String> list = ephemerals.computeIfAbsent(ephemeralOwner, k -> new HashSet<String>());
    ```
;27/Jul/18 11:58;githubbot;600","Github user maoling commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/584#discussion_r205941687
  
    --- Diff: src/java/main/org/apache/zookeeper/server/DataTree.java ---
    @@ -478,7 +478,10 @@ public void createNode(final String path, byte data[], List<ACL> acl,
                     HashSet<String> list = ephemerals.get(ephemeralOwner);
                     if (list == null) {
                         list = new HashSet<String>();
    -                    ephemerals.put(ephemeralOwner, list);
    +                    HashSet<String> _list;
    +                    if ((_list = ephemerals.putIfAbsent(ephemeralOwner, list)) != null) {
    +                        list = _list;
    +                    }
                     }
                     synchronized (list) {
    --- End diff --
    
    Even if when `createNode` is called by multi-thread.this fix is also not thread-safe.
    Step1:One thread has acquired the `list` lock and enters into L487,add a element into  `list`
    Step2:But at the same time just after Step1, another thread enters into L483,the reference of `list` is pointed to the old `_list` object. It will cause thread-unsafe
    BTW: **Breaking Bad** is the best U.S.TV series
;28/Jul/18 12:03;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/584#discussion_r205950078
  
    --- Diff: src/java/main/org/apache/zookeeper/server/DataTree.java ---
    @@ -478,7 +478,10 @@ public void createNode(final String path, byte data[], List<ACL> acl,
                     HashSet<String> list = ephemerals.get(ephemeralOwner);
                     if (list == null) {
                         list = new HashSet<String>();
    -                    ephemerals.put(ephemeralOwner, list);
    +                    HashSet<String> _list;
    +                    if ((_list = ephemerals.putIfAbsent(ephemeralOwner, list)) != null) {
    +                        list = _list;
    +                    }
                     }
                     synchronized (list) {
    --- End diff --
    
    I'm not sure about that.
    
    ephemerals.putIfAbsent() is thread safe: it guarantees that newly created instance will be added to the HashMap only if the key is associated with a null value. Otherwise you will get the instance already present in the HashMap.
    Either case `list` will point to the one and only instance present in the hashmap.
    
    In your example when Step2 enters L483 it will get back the instance which was created and added to the HashMap by Step1 before it acquired the `list` lock. And that instance cannot be replaced in the HashMap with this code.
    
    After all `synchronized (list)` only guards access to the List, HashMap is guarded by putIfAbsent().
    I still believe that `computeIfAbsent()` is more convenient and readable here.
;28/Jul/18 18:14;githubbot;600","Github user breed commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/584#discussion_r205959572
  
    --- Diff: src/java/main/org/apache/zookeeper/server/DataTree.java ---
    @@ -478,7 +478,10 @@ public void createNode(final String path, byte data[], List<ACL> acl,
                     HashSet<String> list = ephemerals.get(ephemeralOwner);
                     if (list == null) {
                         list = new HashSet<String>();
    -                    ephemerals.put(ephemeralOwner, list);
    +                    HashSet<String> _list;
    --- End diff --
    
    we need synchronization to prevent znode changes while the znode is being snapshot to disk, but for request processing there is only a single thread that does mutations and mutations don't happen while read requests are being processed.
;29/Jul/18 03:12;githubbot;600","Github user maoling commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/584#discussion_r205961633
  
    --- Diff: src/java/main/org/apache/zookeeper/server/DataTree.java ---
    @@ -478,7 +478,10 @@ public void createNode(final String path, byte data[], List<ACL> acl,
                     HashSet<String> list = ephemerals.get(ephemeralOwner);
                     if (list == null) {
                         list = new HashSet<String>();
    -                    ephemerals.put(ephemeralOwner, list);
    +                    HashSet<String> _list;
    +                    if ((_list = ephemerals.putIfAbsent(ephemeralOwner, list)) != null) {
    +                        list = _list;
    +                    }
                     }
                     synchronized (list) {
    --- End diff --
    
    @anmolnar 
    I will test it with that unit test , using a 'threadpool' and create 1000000 nodes to reproduce what I guess。
    I wish I was wrong,but if i'm right ,you need to watch Breaking Bad series (smirk).
    

;29/Jul/18 05:53;githubbot;600","Github user MichaelScofield commented on the issue:

    https://github.com/apache/zookeeper/pull/584
  
    @anmolnar Thanks for the `computeIfAbsent` suggestion. Modified codes accordingly.
    @breed @lvfangmin I'm aware that `createNode` is single-threaded, and the race condition I revealed is most likely not gonna happened in real world. But the original codes already assumed a multi-threaded used ephemerals map, so I think it's more reasonable to make it behaved more concurrency safe.
;30/Jul/18 04:02;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/584
  
    @MichaelScofield Would you please respond to @lvfangmin 's comment?
    If this change doesn't make creating ephemerals thread-safe, there's no value in committing it.
;08/Aug/18 13:00;githubbot;600","Github user maoling commented on the issue:

    https://github.com/apache/zookeeper/pull/584
  
    sorry ,too embarrassed.I was wrong about my previous opinion. look at my thread-pool [unit test](https://github.com/maoling/zookeeper/blob/ZOOKEEPER-3102/src/java/test/org/apache/zookeeper/server/DataTreeTest.java#L326)
;08/Aug/18 16:36;githubbot;600","Github user MichaelScofield commented on the issue:

    https://github.com/apache/zookeeper/pull/584
  
    @anmolnar Sorry for the late response. I think what @lvfangmin wants to put here, is that `createNode()` is called in single thread, so the race condition does not exist. **IF** there were multi-threaded call, a lot of codes would have broken, including the `killSession()`.
    
    However, the original code might have synchronized on a wrong `list`:
    ```
    HashSet<String> list = ephemerals.get(ephemeralOwner);
    if (list == null) {
        list = new HashSet<String>();
        ephemerals.put(ephemeralOwner, list);
    }
    
    // the ""list"" here is assumed to be contented, if it's created or altered elsewhere
    // (not bounded by the single-threaded guarantee), we might have synchronized
    // on a wrong object (that we just created).
    synchronized (list) {
        list.add(path);
    }
    ```
    
    I'm just trying to make the codes look more robust. 
;09/Aug/18 02:47;githubbot;600","anmolnar commented on issue #584: ZOOKEEPER-3102: Potential race condition when create ephemeral nodes.
URL: https://github.com/apache/zookeeper/pull/584#issuecomment-605461779
 
 
   Looks like we don't need this patch. Closing.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Mar/20 15:22;githubbot;600","anmolnar commented on pull request #584: ZOOKEEPER-3102: Potential race condition when create ephemeral nodes.
URL: https://github.com/apache/zookeeper/pull/584
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Mar/20 15:22;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,8400,,,0,8400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu May 11 16:52:38 UTC 2023,,,,,,,,,,"0|i3w7i7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Jul/18 11:09;maoling;[~LuoFucong] 

Yep.Your analysis is right.The contributor guide is [here]([https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute]]),then we can go further!;;;","11/May/23 16:52;kezhuw;The [pr|https://github.com/apache/zookeeper/pull/584] has concluded to not fix this. From my perspective, we have not concurrent writes. But we do have concurrent reads along side write. There are {{PrepRequestProcessor}}'s read, {{ZooKeeperServer::takeSnapshot}} and {{FinalRequestProcessor}}'s write. So we only have to protect partial reads from concurrent write.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
sync zerror(int rc) with newest error definitions,ZOOKEEPER-3093,13173018,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,sl4mmy,sl4mmy,sl4mmy,18/Jul/18 19:52,20/May/19 17:51,29/Jun/25 13:34,19/Jul/18 17:32,3.5.4,3.6.0,,,,,,,,,,,,,,,,,,,,,,,3.5.5,3.6.0,,,,c client,,,,,0,pull-request-available,,Add missing #define -> string translations to zerror(int),,"Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/575
  
    +1 
    
    If you have ZOOKEEPER-3093 in title, the pull request will auto linked to the jira.
;19/Jul/18 05:30;githubbot;600","Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/575
;19/Jul/18 17:29;githubbot;600","Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/575
  
    +1, LGTM. Nice catch @sl4mmy . Consider submitting a PR to add a comment to the bottom of ZOO_ERRORS warning folks that they should also update zerror(...) if they change/add to the enum.
;19/Jul/18 17:34;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,ZOOKEEPER-3101,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Jul 19 18:54:23 UTC 2018,,,,,,,,,,"0|i3w1fb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Jul/18 20:13;sl4mmy;Created GitHub PR https://github.com/apache/zookeeper/pull/575;;;","19/Jul/18 17:32;phunt;Issue resolved by pull request 575
[https://github.com/apache/zookeeper/pull/575];;;","19/Jul/18 18:54;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #111 (See [https://builds.apache.org/job/ZooKeeper-trunk/111/])
ZOOKEEPER-3093: sync zerror with ZOO_ERRORS (phunt: rev 4c12f75a9dd546032eafb2d2840061399c2a6a5e)
* (edit) src/c/src/zookeeper.c
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix server snapshot behavior when out of disk space,ZOOKEEPER-3082,13170332,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,enixon,enixon,enixon,05/Jul/18 18:53,04/Oct/19 14:55,29/Jun/25 13:34,30/Jul/18 04:23,3.4.12,3.5.5,3.6.0,,,,,,,,,,,,,,,,,,,,,,3.6.0,,,,,server,,,,,0,pull-request-available,,"When the ZK server tries to make a snapshot and the machine is out of disk space, the snapshot creation fails and throws an IOException. An empty snapshot file is created, (probably because the server is able to create an entry in the dir) but is not able to write to the file.
 
If snapshot creation fails, the server commits suicide. When it restarts, it will do so from the last known good snapshot. However, when it tries to make a snapshot again, the same thing happens. This results in lots of empty snapshot files being created. If eventually the DataDirCleanupManager garbage collects the good snapshot files then only the empty files remain. At this point, the server is well and truly screwed.",,"GitHub user enixon opened a pull request:

    https://github.com/apache/zookeeper/pull/560

    ZOOKEEPER-3082: Fix server snapshot behavior when out of disk space

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/enixon/zookeeper ZOOKEEPER-3082

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/560.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #560
    
----
commit 7b6d575c92a076f8f2cb48510f82e3ab840d7c35
Author: Brian Nixon <nixon@...>
Date:   2018-07-05T18:55:42Z

    ZOOKEEPER-3082: Fix server snapshot behavior when out of disk space

----
;05/Jul/18 18:56;githubbot;600","Github user breed commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/560#discussion_r200716591
  
    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java ---
    @@ -399,8 +399,30 @@ public void save(DataTree dataTree,
             File snapshotFile = new File(snapDir, Util.makeSnapshotName(lastZxid));
             LOG.info(""Snapshotting: 0x{} to {}"", Long.toHexString(lastZxid),
                     snapshotFile);
    -        snapLog.serialize(dataTree, sessionsWithTimeouts, snapshotFile, syncSnap);
    -
    +        try {
    +            snapLog.serialize(dataTree, sessionsWithTimeouts, snapshotFile, syncSnap);
    +        } catch (IOException e) {
    +            if (snapshotFile.length() == 0) {
    --- End diff --
    
    this seems extra safe. i'm wondering if perhaps we should always delete the snapshot file on an exception. the snapshot file probably will not be valid if an exception occurred. right?
;06/Jul/18 17:15;githubbot;600","Github user enixon commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/560#discussion_r203474532
  
    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java ---
    @@ -399,8 +399,30 @@ public void save(DataTree dataTree,
             File snapshotFile = new File(snapDir, Util.makeSnapshotName(lastZxid));
             LOG.info(""Snapshotting: 0x{} to {}"", Long.toHexString(lastZxid),
                     snapshotFile);
    -        snapLog.serialize(dataTree, sessionsWithTimeouts, snapshotFile, syncSnap);
    -
    +        try {
    +            snapLog.serialize(dataTree, sessionsWithTimeouts, snapshotFile, syncSnap);
    +        } catch (IOException e) {
    +            if (snapshotFile.length() == 0) {
    --- End diff --
    
    I really like the idea! 
    
    Clearly this patch is aimed at closing one very particular kind of error case around snapshot writing and the idea generalizes to many more errors. My only concern with ""always delete"" is that I do not know how wide a net that casts and whether we might end up deleting a legitimately useful snapshot under some circumstances. Unfortunately, I don't have time to do the testing required to validate the safety of the more general approach.
    
    If that sounds reasonable, I'd propose that we commit on this patch and close the hole created from this particular issue (snapshot problems on no disk space) and I'll open a separate JIRA with details about extending the solution so someone can pick up the issue and do the necessary testing.
;18/Jul/18 17:59;githubbot;600","Github user hanm commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/560#discussion_r205659448
  
    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java ---
    @@ -399,8 +399,30 @@ public void save(DataTree dataTree,
             File snapshotFile = new File(snapDir, Util.makeSnapshotName(lastZxid));
             LOG.info(""Snapshotting: 0x{} to {}"", Long.toHexString(lastZxid),
                     snapshotFile);
    -        snapLog.serialize(dataTree, sessionsWithTimeouts, snapshotFile, syncSnap);
    -
    +        try {
    +            snapLog.serialize(dataTree, sessionsWithTimeouts, snapshotFile, syncSnap);
    +        } catch (IOException e) {
    +            if (snapshotFile.length() == 0) {
    --- End diff --
    
    >> If that sounds reasonable, I'd propose that we commit on this patch and close the hole created from this particular issue
    
    SGTM. @breed - ok with you? If so I'll commit this.
;27/Jul/18 03:35;githubbot;600","Github user breed commented on the issue:

    https://github.com/apache/zookeeper/pull/560
  
    +1 i approve. thanx for handling the commit @hanm !
;27/Jul/18 05:11;githubbot;600","Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/560
;30/Jul/18 04:22;githubbot;600","Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/560
  
    committed to master. thanks @enixon !
;30/Jul/18 04:24;githubbot;600","Github user enixon commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/560#discussion_r208781421
  
    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java ---
    @@ -399,8 +399,30 @@ public void save(DataTree dataTree,
             File snapshotFile = new File(snapDir, Util.makeSnapshotName(lastZxid));
             LOG.info(""Snapshotting: 0x{} to {}"", Long.toHexString(lastZxid),
                     snapshotFile);
    -        snapLog.serialize(dataTree, sessionsWithTimeouts, snapshotFile, syncSnap);
    -
    +        try {
    +            snapLog.serialize(dataTree, sessionsWithTimeouts, snapshotFile, syncSnap);
    +        } catch (IOException e) {
    +            if (snapshotFile.length() == 0) {
    --- End diff --
    
    Created https://issues.apache.org/jira/browse/ZOOKEEPER-3115 to record this idea of deleting the snapshot file on general IOException's and we can continue the conversation there.
;09/Aug/18 01:13;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4800,,,0,4800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Aug 09 13:08:35 UTC 2018,,,,,,,,,,"0|i3vl5b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Jul/18 19:16;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1896//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1896//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1896//console

This message is automatically generated.;;;","30/Jul/18 04:24;hanm;Committed to 3.6. Merge conflicts with branch-3.5, need a separate pull request to get this in 3.5.;;;","30/Jul/18 06:42;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #128 (See [https://builds.apache.org/job/ZooKeeper-trunk/128/])
ZOOKEEPER-3082: Fix server snapshot behavior when out of disk space (hanm: rev 78e4a1047c701006dd4ec8d09065eda0e7adedb5)
* (edit) src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
* (add) src/java/test/org/apache/zookeeper/server/persistence/EmptySnapshotTest.java
;;;","30/Jul/18 20:09;andor;[~nixon] [~hanm]

Thanks for sorting this out. Do you think it fixes ZOOKEEPER-1621?;;;","01/Aug/18 19:27;enixon;[~andor] my (possibly incorrect) read on ZOOKEEPER-1621 is that the issue is related to this one but not strictly a subset. Here we've removed the possibility of the snapshot side of recovery being lost during a disk-full event. There, the issue seems to be in ensuring the transaction log side of recovery is not corrupted by writing empty/incomplete log files. That issue will continue to be present even with the patch from this file applied.;;;","09/Aug/18 13:08;andor;Thanks [~nixon];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix unsafe use of sprintf(3) for creating IP address strings,ZOOKEEPER-3079,13169921,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,sl4mmy,sl4mmy,sl4mmy,03/Jul/18 20:41,10/Jul/18 19:55,29/Jun/25 13:34,10/Jul/18 11:04,3.5.4,,,,,,,,,,,,,,,,,,,,,,,,3.6.0,,,,,c client,,,,,0,pull-request-available,,The function format_endpoint_info in zookeeper.c causes compiler errors when building with GCC 8 due to a potentially unsafe use of sprintf(3).,,"GitHub user sl4mmy opened a pull request:

    https://github.com/apache/zookeeper/pull/559

    ZOOKEEPER-3079: avoid unsafe use of sprintf(3)

    The function format_endpoint_info declares both addrstr and buf as 128
    element char arrays, however on non-Windows platforms it calls
    sprintf(3) to write into buf the value of addrstr followed by ':'
    followed by the the port number.  This causes a compiler error when
    building with GCC 8 because this could potentially overflow buf if the
    value of addrstr was ever 127 characters long (or a little less
    depending on how many digits are in port).  Of course, this couldn't
    actually happen because addrstr is initialized by inet_ntop(3) which
    won't write more than INET6_ADDRSTRLEN bytes (defined in <netinet/in.h>
    on POSIX-compliant systems).  Of course, GCC doesn't know that, so let's
    just declare addrstr as a char array of only size INET6_ADDRSTRLEN
    instead of 128.
    
    Signed-off-by: Kent R. Spillner <kspillner@acm.org>

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/sl4mmy/zookeeper zookeeper-3079

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/559.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #559
    
----
commit cb26e2f8d0704e1b5074c3e89c20962c5fc7f7b5
Author: Kent R. Spillner <kspillner@...>
Date:   2018-07-03T20:44:54Z

    ZOOKEEPER-3079: avoid unsafe use of sprintf(3)
    
    The function format_endpoint_info declares both addrstr and buf as 128
    element char arrays, however on non-Windows platforms it calls
    sprintf(3) to write into buf the value of addrstr followed by ':'
    followed by the the port number.  This causes a compiler error when
    building with GCC 8 because this could potentially overflow buf if the
    value of addrstr was ever 127 characters long (or a little less
    depending on how many digits are in port).  Of course, this couldn't
    actually happen because addrstr is initialized by inet_ntop(3) which
    won't write more than INET6_ADDRSTRLEN bytes (defined in <netinet/in.h>
    on POSIX-compliant systems).  Of course, GCC doesn't know that, so let's
    just declare addrstr as a char array of only size INET6_ADDRSTRLEN
    instead of 128.
    
    Signed-off-by: Kent R. Spillner <kspillner@acm.org>

----
;03/Jul/18 21:05;githubbot;600","Github user nkalmar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/559#discussion_r200161012
  
    --- Diff: src/c/src/zookeeper.c ---
    @@ -4357,7 +4357,7 @@ int zoo_add_auth(zhandle_t *zh,const char* scheme,const char* cert,
     static const char* format_endpoint_info(const struct sockaddr_storage* ep)
     {
         static char buf[128] = { 0 };
    -    char addrstr[128] = { 0 };
    +    char addrstr[INET6_ADDRSTRLEN] = { 0 };
    --- End diff --
    
    Isn't this by default 46 as per POSIX? I don't see this overridden in ZK.
;04/Jul/18 15:35;githubbot;600","Github user sl4mmy commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/559#discussion_r200184176
  
    --- Diff: src/c/src/zookeeper.c ---
    @@ -4357,7 +4357,7 @@ int zoo_add_auth(zhandle_t *zh,const char* scheme,const char* cert,
     static const char* format_endpoint_info(const struct sockaddr_storage* ep)
     {
         static char buf[128] = { 0 };
    -    char addrstr[128] = { 0 };
    +    char addrstr[INET6_ADDRSTRLEN] = { 0 };
    --- End diff --
    
    Check and check, it is 46 and ZK does not override it.  I apologize if my wording wasn't clear enough, but the issue that GCC 8 errors on is the fact that buf and addrstr are both size 128, but later on in the call to `sprintf(3)` we write `addrstr + ':' + port` into buf.  GCC 8 sees that buf & addrstr are both potentially 128 characters long, so the `sprintf(3)` could *potentially* overflow buf when it tacks on the colon & port.  Of course, we know that will never happen, but GCC 8 doesn't.  So by resizing the declaration of addrstr we safely avoid any confusion or doubt.
;04/Jul/18 18:12;githubbot;600","Github user nkalmar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/559#discussion_r200190816
  
    --- Diff: src/c/src/zookeeper.c ---
    @@ -4357,7 +4357,7 @@ int zoo_add_auth(zhandle_t *zh,const char* scheme,const char* cert,
     static const char* format_endpoint_info(const struct sockaddr_storage* ep)
     {
         static char buf[128] = { 0 };
    -    char addrstr[128] = { 0 };
    +    char addrstr[INET6_ADDRSTRLEN] = { 0 };
    --- End diff --
    
    OK, thanks for clearing that up. Well, you were clear now that I understand the issue - probably the problem was that I'm not much of a C developer :)
;04/Jul/18 19:16;githubbot;600","Github user breed commented on the issue:

    https://github.com/apache/zookeeper/pull/559
  
    +1 thanks for the submission. if there are no objections, i'll commit this tomorrow
;06/Jul/18 17:10;githubbot;600","Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/559
;10/Jul/18 10:50;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Jul 10 12:08:58 UTC 2018,,,,,,,,,,"0|i3vilz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Jul/18 21:05;sl4mmy;Created GitHub PR: https://github.com/apache/zookeeper/pull/559;;;","03/Jul/18 21:28;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1892//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1892//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1892//console

This message is automatically generated.;;;","10/Jul/18 12:08;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #93 (See [https://builds.apache.org/job/ZooKeeper-trunk/93/])
ZOOKEEPER-3079: avoid unsafe use of sprintf(3) (breed: rev 5d187ff0adc836e6d18fd4c78188f52cdbb56c25)
* (edit) src/c/src/zookeeper.c
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix IPv6 literal usage,ZOOKEEPER-3057,13164593,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Resolved,mjeelani,mjeelani,mjeelani,07/Jun/18 00:37,14/Feb/20 15:23,29/Jun/25 13:34,13/Oct/18 14:00,3.4.12,,,,,,,,,,,,,,,,,,,,,,,,3.5.7,3.6.0,,,,other,,,,,0,pull-request-available,,IPv6 literals are not parsed correctly and can lead to potential errors if not be an eye sore. Need to parse and display them correctly.,,"GitHub user mjeelanimsft opened a pull request:

    https://github.com/apache/zookeeper/pull/548

    [ZOOKEEPER-3057] Fix IPv6 literal usage

    This patch contains fixes for IPv6 literal usage and corresponding unit test changes. 
    
    As per discussion in ZOOKEEPER-3057 - The issue/problem is the same as ZOOKEEPER-2989, but we changed the code to pass IPv6 literal [%s]:%s, also we changed the logging and the LocalPeerBean to show this IPv6 literal as well, which makes it easier to check when using Ipv6 and we added detailed tests for this change, sending out for review to see if it's better or not.
    
    ZKPatch: 88e94e6f3665353446bf70a042c8f0cd50834f7c (extract)

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/mjeelanimsft/zookeeper fix-ipv6-literal

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/548.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #548
    
----
commit 196d6c3758df8a86cce405ce9552ea72d2cca18a
Author: Jeelani Mohamed Abdul Khader <mjeelani@...>
Date:   2018-06-06T01:58:26Z

    Fix IPv6 literal usage
    
    ZKPatch: 88e94e6f3665353446bf70a042c8f0cd50834f7c (extract)

----
;22/Jun/18 23:46;githubbot;600","Github user maoling commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/548#discussion_r197633888
  
    --- Diff: src/java/main/org/apache/zookeeper/server/util/ConfigUtils.java ---
    @@ -60,4 +60,25 @@ static public String getClientConfigStr(String configData) {
             }
             return version + "" "" + sb.toString();
         }
    +
    +    public static String[] splitServerConfig(String s)
    +        throws ConfigException
    +    {
    +        /* Does it start with an IPv6 literal? */
    --- End diff --
    
    good method.this annotation's answer is sure(grin)
    
    
    

;24/Jun/18 09:43;githubbot;600","Github user maoling commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/548#discussion_r197633896
  
    --- Diff: src/java/test/org/apache/zookeeper/common/NetUtilsTest.java ---
    @@ -0,0 +1,46 @@
    +package apache.zookeeper.common;
    --- End diff --
    
    ???
;24/Jun/18 09:43;githubbot;600","Github user maoling commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/548#discussion_r197633793
  
    --- Diff: src/java/main/org/apache/zookeeper/client/FourLetterWordMain.java ---
    @@ -86,7 +86,7 @@ public static String send4LetterWord(String host, int port, String cmd, boolean
                 throws IOException, SSLContextException {
             LOG.info(""connecting to {} {}"", host, port);
             Socket sock;
    -        InetSocketAddress hostaddress= host != null ? new InetSocketAddress(host, port) :
    +        InetSocketAddress hostaddress = host != null ? new InetSocketAddress(host, port) :
    --- End diff --
    
    it seems that this PR includes some code formats and typos which isn't related.
;24/Jun/18 09:43;githubbot;600","Github user maoling commented on the issue:

    https://github.com/apache/zookeeper/pull/548
  
    - It seems that zk server side supports ipv6 style like this: `server.1=[2001:db8:1::242:ac11:2]:2888:3888`,but zk client side supports ipv6 like this:`2001:db8:1::242:ac11:2:2181`.we need unify them?[ConnectStringParser](https://github.com/apache/zookeeper/blob/master/src/java/main/org/apache/zookeeper/client/ConnectStringParser.java#L71) can reuse that method?
    - IMO,we should document this feature to let user know.(e.g. [here](https://github.com/apache/zookeeper/blob/master/src/docs/src/documentation/content/xdocs/zookeeperAdmin.xml#L1055))
;24/Jun/18 12:42;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/548#discussion_r197779656
  
    --- Diff: src/java/main/org/apache/zookeeper/client/FourLetterWordMain.java ---
    @@ -86,7 +86,7 @@ public static String send4LetterWord(String host, int port, String cmd, boolean
                 throws IOException, SSLContextException {
             LOG.info(""connecting to {} {}"", host, port);
             Socket sock;
    -        InetSocketAddress hostaddress= host != null ? new InetSocketAddress(host, port) :
    +        InetSocketAddress hostaddress = host != null ? new InetSocketAddress(host, port) :
    --- End diff --
    
    Agreed, it's not ideal, but size of the patch makes it easy to deal with I would say.
;25/Jun/18 12:46;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/548#discussion_r197781125
  
    --- Diff: src/java/test/org/apache/zookeeper/common/NetUtilsTest.java ---
    @@ -0,0 +1,46 @@
    +package apache.zookeeper.common;
    +
    +import org.apache.zookeeper.common.NetUtils;
    +import org.apache.zookeeper.ZKTestCase;
    +import org.hamcrest.core.AnyOf;
    +import org.hamcrest.core.IsEqual;
    +import org.junit.Assert;
    +import org.junit.Test;
    +import java.net.InetSocketAddress;
    +
    +public class NetUtilsTest extends ZKTestCase {
    +
    +    private Integer port = 1234;
    +    private String v4addr = ""127.0.0.1"";
    +    private String v6addr = ""[0:0:0:0:0:0:0:1]"";
    +    private String v4local = v4addr + "":"" + port.toString();
    +    private String v6local = v6addr + "":"" + port.toString();
    +
    +    @Test
    +    public void testformatInetAddrGoodIpv4() {
    +        InetSocketAddress isa = new InetSocketAddress(v4addr, port);
    +        Assert.assertEquals(""127.0.0.1:1234"", NetUtils.formatInetAddr(isa));
    +    }
    +
    +    @Test
    +    public void testFormatInetAddrGoodIpv6() {
    --- End diff --
    
    I think it'd be great to add more IPv6 formatting tests other than the localhost case.
;25/Jun/18 12:46;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/548#discussion_r197780621
  
    --- Diff: src/java/test/org/apache/zookeeper/common/NetUtilsTest.java ---
    @@ -0,0 +1,46 @@
    +package apache.zookeeper.common;
    +
    +import org.apache.zookeeper.common.NetUtils;
    +import org.apache.zookeeper.ZKTestCase;
    +import org.hamcrest.core.AnyOf;
    +import org.hamcrest.core.IsEqual;
    +import org.junit.Assert;
    +import org.junit.Test;
    +import java.net.InetSocketAddress;
    +
    +public class NetUtilsTest extends ZKTestCase {
    +
    +    private Integer port = 1234;
    +    private String v4addr = ""127.0.0.1"";
    +    private String v6addr = ""[0:0:0:0:0:0:0:1]"";
    +    private String v4local = v4addr + "":"" + port.toString();
    +    private String v6local = v6addr + "":"" + port.toString();
    +
    +    @Test
    +    public void testformatInetAddrGoodIpv4() {
    --- End diff --
    
    Typo: capital `F`
;25/Jun/18 12:46;githubbot;600","Github user breed commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/548#discussion_r197933819
  
    --- Diff: src/java/test/org/apache/zookeeper/common/NetUtilsTest.java ---
    @@ -0,0 +1,46 @@
    +package apache.zookeeper.common;
    --- End diff --
    
    @mjeelanimsft i think this is why the tests are failing. can you fix this package name? (good catch @maoling !)
;25/Jun/18 20:37;githubbot;600","Github user mjeelanimsft commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/548#discussion_r197950541
  
    --- Diff: src/java/test/org/apache/zookeeper/common/NetUtilsTest.java ---
    @@ -0,0 +1,46 @@
    +package apache.zookeeper.common;
    --- End diff --
    
    Thanks @maoling @breed - working on fixing this
;25/Jun/18 21:37;githubbot;600","Github user mjeelanimsft commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/548#discussion_r197976612
  
    --- Diff: src/java/test/org/apache/zookeeper/common/NetUtilsTest.java ---
    @@ -0,0 +1,46 @@
    +package apache.zookeeper.common;
    +
    +import org.apache.zookeeper.common.NetUtils;
    +import org.apache.zookeeper.ZKTestCase;
    +import org.hamcrest.core.AnyOf;
    +import org.hamcrest.core.IsEqual;
    +import org.junit.Assert;
    +import org.junit.Test;
    +import java.net.InetSocketAddress;
    +
    +public class NetUtilsTest extends ZKTestCase {
    +
    +    private Integer port = 1234;
    +    private String v4addr = ""127.0.0.1"";
    +    private String v6addr = ""[0:0:0:0:0:0:0:1]"";
    +    private String v4local = v4addr + "":"" + port.toString();
    +    private String v6local = v6addr + "":"" + port.toString();
    +
    +    @Test
    +    public void testformatInetAddrGoodIpv4() {
    +        InetSocketAddress isa = new InetSocketAddress(v4addr, port);
    +        Assert.assertEquals(""127.0.0.1:1234"", NetUtils.formatInetAddr(isa));
    +    }
    +
    +    @Test
    +    public void testFormatInetAddrGoodIpv6() {
    --- End diff --
    
    Thanks @anmolnar - I'll add the additional tests
;25/Jun/18 23:51;githubbot;600","Github user lvfangmin commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/548#discussion_r198227173
  
    --- Diff: src/java/main/org/apache/zookeeper/client/FourLetterWordMain.java ---
    @@ -86,7 +86,7 @@ public static String send4LetterWord(String host, int port, String cmd, boolean
                 throws IOException, SSLContextException {
             LOG.info(""connecting to {} {}"", host, port);
             Socket sock;
    -        InetSocketAddress hostaddress= host != null ? new InetSocketAddress(host, port) :
    +        InetSocketAddress hostaddress = host != null ? new InetSocketAddress(host, port) :
    --- End diff --
    
    This is generally due to some auto format done in editor.
;26/Jun/18 17:13;githubbot;600","Github user lvfangmin commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/548#discussion_r198228442
  
    --- Diff: src/java/main/org/apache/zookeeper/client/FourLetterWordMain.java ---
    @@ -86,7 +86,7 @@ public static String send4LetterWord(String host, int port, String cmd, boolean
                 throws IOException, SSLContextException {
             LOG.info(""connecting to {} {}"", host, port);
             Socket sock;
    -        InetSocketAddress hostaddress= host != null ? new InetSocketAddress(host, port) :
    +        InetSocketAddress hostaddress = host != null ? new InetSocketAddress(host, port) :
    --- End diff --
    
    @mjeelanimsft generally, this is due to the auto-format in the editor, but I think we should remove this change from this diff, given we haven't changed other logic except this one.
;26/Jun/18 17:19;githubbot;600","Github user lvfangmin commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/548#discussion_r198228805
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java ---
    @@ -225,17 +229,25 @@ static public InitialMessage parse(Long protocolVersion, DataInputStream din)
                 // FIXME: IPv6 is not supported. Using something like Guava's HostAndPort
                 //        parser would be good.
                 String addr = new String(b);
    -            String[] host_port = addr.split("":"");
    +            String[] host_port;
    +            try {
    +                host_port = ConfigUtils.splitServerConfig(addr);
    +            } catch (ConfigException e) {
    +                throw new InitialMessageException(""Badly formed address: %s"", addr);
    +            }
     
                 if (host_port.length != 2) {
                     throw new InitialMessageException(""Badly formed address: %s"", addr);
                 }
    +            //String[] host_port = addr.split("":"");
    --- End diff --
    
    Remove this line.
;26/Jun/18 17:19;githubbot;600","Github user lvfangmin commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/548#discussion_r198229351
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/ReconfigFailureCasesTest.java ---
    @@ -58,10 +58,10 @@ public void tearDown() throws Exception {
         }
     
         /*
    -     * Tests that an incremental reconfig fails if the current config is hiearchical.
    +     * Tests that an incremental reconfig fails if the current config is hierarchical.
    --- End diff --
    
    Please remove this unrelated change as well.
;26/Jun/18 17:20;githubbot;600","Github user maoling commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/548#discussion_r200064561
  
    --- Diff: src/java/main/org/apache/zookeeper/server/util/ConfigUtils.java ---
    @@ -60,4 +60,25 @@ static public String getClientConfigStr(String configData) {
             }
             return version + "" "" + sb.toString();
         }
    +
    +    public static String[] splitServerConfig(String s)
    +        throws ConfigException
    +    {
    +        /* Does it start with an IPv6 literal? */
    --- End diff --
    
    remove this line annotation and give this method detailed javadoc
;04/Jul/18 09:30;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/548
  
    @mjeelanimsft Just to clarify my latest comment: I'd to see a new class `ConfigUtilsTest` in which you explicitly verify the behaviour of `splitServerConfig`. Thanks.
;04/Jul/18 10:56;githubbot;600","Github user mjeelanimsft commented on the issue:

    https://github.com/apache/zookeeper/pull/548
  
    Thanks @anmolnar & @maoling - I've added the Unit Test as well as the JavaDoc for splitServerConfig() method
;06/Jul/18 21:41;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/548
  
    @mjeelanimsft Sorry, I still can't see unit tests for `splitServerConfig`.
;09/Jul/18 12:52;githubbot;600","Github user mjeelanimsft commented on the issue:

    https://github.com/apache/zookeeper/pull/548
  
    Hi @anmolnar - I see it here - would you mind looking now?
    https://github.com/mjeelanimsft/zookeeper/blob/1ce5b8bdcf0925d1ce25d16bf70c1d13de44bf08/src/java/test/org/apache/zookeeper/server/util/ConfigUtilsTest.java
;09/Jul/18 18:28;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/548
  
    @mjeelanimsft Now I can see it, thanks.
    I'd write 3 tests at the minimum to validate all if branches in the method:
    With and w/o the `[` prefix and a third one for the invalid case: no matching closing brace.

;09/Jul/18 19:17;githubbot;600","Github user mjeelanimsft commented on the issue:

    https://github.com/apache/zookeeper/pull/548
  
    Thanks Andor - I've added the unit test cases - For the one w/o [ - its also an invalid case for this method as its needed to specify the port. I've added that as one at the end, let me know what you think. 
    
    1) Successful case (IPv6)
    2) Successful case (IPv4)
    3) Invalid case (IPv6 with missing closing brackets)
    4) Invalid case (IPv6 with port but missing brackets)
;10/Jul/18 21:02;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/548
  
    @mjeelanimsft  I keep trying to refresh the page, but again I can't see the new tests.
    Also the patch has some conflicts with the latest master, would you please resolve them?
;11/Jul/18 10:07;githubbot;600","Github user mjeelanimsft commented on the issue:

    https://github.com/apache/zookeeper/pull/548
  
    @anmolnar Resolved the merge conflict. You can see the commit with the unit test changes here - https://github.com/apache/zookeeper/pull/548/commits/ff4704984203921071877bdee4efef47b8c2a706
;11/Jul/18 22:42;githubbot;600","Github user maoling commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/548#discussion_r201901490
  
    --- Diff: src/java/test/org/apache/zookeeper/server/util/ConfigUtilsTest.java ---
    @@ -29,4 +30,21 @@ public void testSplitServerConfig() throws ConfigException {
             String[] nsa = ConfigUtils.splitServerConfig(""[2001:db8:85a3:8d3:1319:8a2e:370:7348]:443"");
             assertEquals(nsa.length, 2, 0);
    --- End diff --
    
    Assert the actual host and port?
;12/Jul/18 06:55;githubbot;600","Github user maoling commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/548#discussion_r201923508
  
    --- Diff: src/java/main/org/apache/zookeeper/server/util/ConfigUtils.java ---
    @@ -61,10 +61,16 @@ static public String getClientConfigStr(String configData) {
             return version + "" "" + sb.toString();
         }
     
    +    /**
    +     * Splits server config to server and port
    +     * with support for IPv6 literals
    +     * @return String[] first element being the
    +     *  IP address and the next being the port
    +     * @param s server config, server:port
    +     */
         public static String[] splitServerConfig(String s)
             throws ConfigException
    --- End diff --
    
    `splitServerConfig` is somewhat general. `getHostAndPort` is better?
;12/Jul/18 06:55;githubbot;600","Github user maoling commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/548#discussion_r201923793
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java ---
    @@ -226,17 +230,25 @@ static public InitialMessage parse(Long protocolVersion, DataInputStream din)
                 // FIXME: IPv6 is not supported. Using something like Guava's HostAndPort
                 //        parser would be good.
    --- End diff --
    
    remove this ?
;12/Jul/18 06:55;githubbot;600","Github user maoling commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/548#discussion_r201926608
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java ---
    @@ -857,15 +869,15 @@ public void run() {
                             self.recreateSocketAddresses(self.getId());
                             addr = self.getElectionAddress();
                         }
    -                    LOG.info(""My election bind port: "" + addr.toString());
    +                    LOG.info(""My election bind port: "" + formatInetAddr(addr));
                         setName(addr.toString());
    --- End diff --
    
    using  `toString` can still distinguish ipv4 from ipv6 by looking at the ip style although without `[] ` 
    if `formatInetAddr(addr)` is really needed, can you make sure all the places which log `InetSocketAddress` are covered?
;12/Jul/18 06:55;githubbot;600","Github user mjeelanimsft commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/548#discussion_r203816489
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java ---
    @@ -857,15 +869,15 @@ public void run() {
                             self.recreateSocketAddresses(self.getId());
                             addr = self.getElectionAddress();
                         }
    -                    LOG.info(""My election bind port: "" + addr.toString());
    +                    LOG.info(""My election bind port: "" + formatInetAddr(addr));
                         setName(addr.toString());
    --- End diff --
    
    Good point - I'll remove formatInetAddr(addr) from the log
;19/Jul/18 17:50;githubbot;600","Github user mjeelanimsft commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/548#discussion_r203817750
  
    --- Diff: src/java/main/org/apache/zookeeper/server/util/ConfigUtils.java ---
    @@ -61,10 +61,16 @@ static public String getClientConfigStr(String configData) {
             return version + "" "" + sb.toString();
         }
     
    +    /**
    +     * Splits server config to server and port
    +     * with support for IPv6 literals
    +     * @return String[] first element being the
    +     *  IP address and the next being the port
    +     * @param s server config, server:port
    +     */
         public static String[] splitServerConfig(String s)
             throws ConfigException
    --- End diff --
    
    Sure, I like that better too - I've renamed this
;19/Jul/18 17:55;githubbot;600","Github user mjeelanimsft commented on the issue:

    https://github.com/apache/zookeeper/pull/548
  
    Thanks for the feedback @maoling - I've incorporated the below changes. @maoling @anmolnar - let me know what you think
    
    - Assert actual host and port in unit tests for getHostAndPort
    - Renamed splitServerConfig(String s) to getHostAndPort(String s)
    - Removed Fix Me comment in QuorumCnxManager.java
    - No need to formatInetAddr(addr) in QuorumCnxManager.java log.Info - removed it
;19/Jul/18 17:59;githubbot;600","Github user breed commented on the issue:

    https://github.com/apache/zookeeper/pull/548
  
    +1 i'll kick jenkins
;27/Jul/18 05:17;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/548
  
    Jenkins is green and we got 2 approvals. Committing.
;27/Jul/18 10:23;githubbot;600","Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/548
;27/Jul/18 10:33;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/548
  
    Committed to master branch only, because it conflicts with 3.5.
    @mjeelanimsft Would you please create separate pull request for branch-3.5 and branch-3.4?
;27/Jul/18 10:34;githubbot;600","Github user maoling commented on the issue:

    https://github.com/apache/zookeeper/pull/548
  
    ping @mjeelanimsft 
    Would you please create separate pull request for branch-3.5 and branch-3.4?
;09/Oct/18 06:04;githubbot;600","xy24 commented on pull request #1168: ZOOKEEPER-3057: Fix IPv6 literal usage
URL: https://github.com/apache/zookeeper/pull/1168
 
 
   This commit backports #548 to branch-3.5.
   
   I cherry picked all the changes except the file (NetUtils.java) where modification were already made by other backports.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Dec/19 06:38;githubbot;600","asf-ci commented on issue #1168: ZOOKEEPER-3057: Fix IPv6 literal usage
URL: https://github.com/apache/zookeeper/pull/1168#issuecomment-563096774
 
 
   
   Refer to this link for build results (access rights to CI server needed): 
   https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build-maven/1697/
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Dec/19 07:12;githubbot;600","xy24 commented on issue #548: [ZOOKEEPER-3057] Fix IPv6 literal usage
URL: https://github.com/apache/zookeeper/pull/548#issuecomment-563102472
 
 
   @anmolnar @maoling 
   I've cherry picked this change and created a pr for branch-3.5.
   Would you please review it for me? Thanks
   #1168 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Dec/19 07:30;githubbot;600","maoling commented on issue #1168: ZOOKEEPER-3057: Fix IPv6 literal usage
URL: https://github.com/apache/zookeeper/pull/1168#issuecomment-564341891
 
 
   @xy24 Thanks for this work.
   I cannot make sure whether it needs to backport to branch3.5. Let's listen to @anmolnar's viewpoint, then we can start the review work.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Dec/19 01:56;githubbot;600","xy24 commented on issue #1168: ZOOKEEPER-3057: Fix IPv6 literal usage
URL: https://github.com/apache/zookeeper/pull/1168#issuecomment-564357942
 
 
   > @xy24 Thanks for this work.
   > I cannot make sure whether it needs to backport to branch3.5. Let's listen to @anmolnar's viewpoint, then we can start the review work.
   
   Thanks @maoling.
   I personally think this is necessary because IPv6 quorum configurations do not work on the current 3.5.6 release. But let's wait for @anmolnar's viewpoint.
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Dec/19 03:00;githubbot;600","xy24 commented on issue #1168: ZOOKEEPER-3057: Fix IPv6 literal usage
URL: https://github.com/apache/zookeeper/pull/1168#issuecomment-564536642
 
 
   @anmolnar Do I need to do anything to merge it? I see there is a FAILURE in JenkinsAnt but I am not sure how to fix it.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Dec/19 13:22;githubbot;600","xy24 commented on issue #1168: ZOOKEEPER-3057: Fix IPv6 literal usage
URL: https://github.com/apache/zookeeper/pull/1168#issuecomment-566458236
 
 
   @eolivelli How will it get merged? Do I need to do anything?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Dec/19 09:28;githubbot;600","eolivelli commented on issue #1168: ZOOKEEPER-3057: Fix IPv6 literal usage
URL: https://github.com/apache/zookeeper/pull/1168#issuecomment-566458585
 
 
   retest ant build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Dec/19 09:29;githubbot;600","eolivelli commented on issue #1168: ZOOKEEPER-3057: Fix IPv6 literal usage
URL: https://github.com/apache/zookeeper/pull/1168#issuecomment-566458922
 
 
   sorry for late reply.
   Let's see a green light for ANT build, then I will be happy to merge.
   
   @anmolnar it would be awesome to include this fix in 3.5.7
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Dec/19 09:30;githubbot;600","xy24 commented on issue #1168: ZOOKEEPER-3057: Fix IPv6 literal usage
URL: https://github.com/apache/zookeeper/pull/1168#issuecomment-566487928
 
 
   @eolivelli ANT build still failed. Not sure why though.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Dec/19 10:46;githubbot;600","eolivelli commented on issue #1168: ZOOKEEPER-3057: Fix IPv6 literal usage
URL: https://github.com/apache/zookeeper/pull/1168#issuecomment-566503385
 
 
   ANT build is failing with
   `  -1 release audit.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).`
   
   Honestly I don't know what it means.
   btw Jenkins job crashed with another error, maybe this is the reason why we can see the report of the 'audit', I am kicking CI again
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Dec/19 11:32;githubbot;600","eolivelli commented on issue #1168: ZOOKEEPER-3057: Fix IPv6 literal usage
URL: https://github.com/apache/zookeeper/pull/1168#issuecomment-566503421
 
 
   retest ant build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Dec/19 11:32;githubbot;600","anmolnar commented on issue #1168: ZOOKEEPER-3057: Fix IPv6 literal usage
URL: https://github.com/apache/zookeeper/pull/1168#issuecomment-566522820
 
 
   retest ant build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Dec/19 12:33;githubbot;600","anmolnar commented on issue #1168: ZOOKEEPER-3057: Fix IPv6 literal usage
URL: https://github.com/apache/zookeeper/pull/1168#issuecomment-566539112
 
 
   Ant build seems to be broken. All tests passed, but build is red.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Dec/19 13:22;githubbot;600","anmolnar commented on issue #1168: ZOOKEEPER-3057: Fix IPv6 literal usage
URL: https://github.com/apache/zookeeper/pull/1168#issuecomment-566542759
 
 
   retest ant build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Dec/19 13:33;githubbot;600","anmolnar commented on issue #1168: ZOOKEEPER-3057: Fix IPv6 literal usage
URL: https://github.com/apache/zookeeper/pull/1168#issuecomment-566681050
 
 
   killed. oh my gosh.
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Dec/19 18:08;githubbot;600","anmolnar commented on issue #1168: ZOOKEEPER-3057: Fix IPv6 literal usage
URL: https://github.com/apache/zookeeper/pull/1168#issuecomment-566681098
 
 
   retest ant build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Dec/19 18:08;githubbot;600","anmolnar commented on issue #1168: ZOOKEEPER-3057: Fix IPv6 literal usage
URL: https://github.com/apache/zookeeper/pull/1168#issuecomment-566911953
 
 
   Merged. Thanks @xy24 !
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Dec/19 07:27;githubbot;600","anmolnar commented on pull request #1168: ZOOKEEPER-3057: Fix IPv6 literal usage
URL: https://github.com/apache/zookeeper/pull/1168
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Dec/19 07:27;githubbot;600","xy24 commented on issue #1168: ZOOKEEPER-3057: Fix IPv6 literal usage
URL: https://github.com/apache/zookeeper/pull/1168#issuecomment-566939642
 
 
   Thanks @anmolnar @eolivelli @maoling !
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Dec/19 08:58;githubbot;600",,0,30600,,,0,30600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Aug 06 10:07:29 UTC 2018,,,,,,,,,,"0|i3ulqn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Jun/18 06:29;andor;Hi [~mjeelani]

Thanks for reporting this. Do you think it's related to ZOOKEEPER-2989?;;;","09/Jun/18 06:15;lvfangmin;[~andor] It's the same issue as ZOOKEEPER-2989, but we changed the code to pass IPv6 literal [%s]:%s, also we changed the logging and the LocalPeerBean to show this IPv6 literal as well, which makes it easier to check when using Ipv6. 

And we added detailed tests for this change, will send out for review to see if it's better or not.;;;","22/Jun/18 23:54;mjeelani;Pull request submitted - appreciate review and feedback - https://github.com/apache/zookeeper/pull/548;;;","23/Jun/18 00:04;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 11 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    -1 release audit.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1859//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1859//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1859//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1859//console

This message is automatically generated.;;;","29/Jun/18 00:41;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 8 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    -1 release audit.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1886//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1886//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1886//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1886//console

This message is automatically generated.;;;","09/Jul/18 18:30;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 10 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    -1 release audit.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1906//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1906//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1906//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1906//console

This message is automatically generated.;;;","11/Jul/18 22:58;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 10 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 3.0.1) warnings.

    -1 release audit.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1929//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1929//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1929//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1929//console

This message is automatically generated.;;;","19/Jul/18 18:40;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 10 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    -1 release audit.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1973//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1973//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1973//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1973//console

This message is automatically generated.;;;","27/Jul/18 11:57;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #123 (See [https://builds.apache.org/job/ZooKeeper-trunk/123/])
ZOOKEEPER-3057: Fix IPv6 literal usage (andor: rev ba8932dccb227b5b52de98e33c46054014f951b7)
* (edit) src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java
* (edit) src/java/main/org/apache/zookeeper/server/util/ConfigUtils.java
* (edit) src/java/main/org/apache/zookeeper/server/quorum/LocalPeerBean.java
* (add) src/java/test/org/apache/zookeeper/common/NetUtilsTest.java
* (edit) src/java/test/org/apache/zookeeper/server/quorum/LocalPeerBeanTest.java
* (add) src/java/test/org/apache/zookeeper/server/util/ConfigUtilsTest.java
* (edit) src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
* (edit) src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java
* (edit) src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java
* (add) src/java/main/org/apache/zookeeper/common/NetUtils.java
;;;","06/Aug/18 10:07;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #137 (See [https://builds.apache.org/job/ZooKeeper-trunk/137/])
ZOOKEEPER-3057: Fix build by adding missing licence header (andor: rev e3bae03d20f5d722957897bc1bc97ebeeae5e982)
* (edit) src/java/test/org/apache/zookeeper/common/NetUtilsTest.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
testFailedTxnAsPartOfQuorumLoss is flaky,ZOOKEEPER-3042,13158929,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,bkanivets,bkanivets,bkanivets,13/May/18 08:32,20/May/19 17:50,29/Jun/25 13:34,10/Jul/18 10:18,3.4.12,3.5.3,3.6.0,,,,,,,,,,,,,,,,,,,,,,3.5.5,,,,,tests,,,,,0,flaky,pull-request-available,"According to the [dashboard|https://builds.apache.org/job/ZooKeeper-Find-Flaky-Tests/lastSuccessfulBuild/artifact/report.html] testFailedTxnAsPartOfQuorumLoss is flaky. I've looked at some logs and there are multiple causes of flakiness. One of them is in this line after step 5
{code:java}
Assert.assertEquals(1, outstanding.size());
{code}
For example [this|https://builds.apache.org/job/ZooKeeper_branch35_java10/10/artifact/build/test/logs] build of 3.5

I was able to reproduce this particular issue in debug mode and the problem is that 'outstading' map can also have 'closeSession' entries that are expected.

I'll submit a patch to relax this check.",,"GitHub user lavacat opened a pull request:

    https://github.com/apache/zookeeper/pull/521

    ZOOKEEPER-3042: testFailedTxnAsPartOfQuorumLoss is flaky

    - relaxed check of outstanding proposals queue
    - close clients after restart
    - restart client after old leader restart

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/lavacat/zookeeper testFailedTxnAsPartOfQuorumLoss-fix

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/521.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #521
    
----
commit fb8d1cc8a5ce7dfe252726825e77030ab7e824af
Author: Bogdan Kanivets <bkanivets@...>
Date:   2018-05-14T18:08:55Z

    ZOOKEEPER-3042: testFailedTxnAsPartOfQuorumLoss is flaky
    
    - relaxed check of outstanding proposals queue
    - close clients after restart
    - restart client after old leader restart

----
;14/May/18 21:22;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/521#discussion_r188752138
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---
    @@ -967,9 +980,10 @@ public void testFailedTxnAsPartOfQuorumLoss() throws Exception {
     
             // just make sure that we actually did get it in process at the
             // leader
    -        Assert.assertEquals(1, outstanding.size());
    -        Proposal p = outstanding.values().iterator().next();
    -        Assert.assertEquals(OpCode.create, p.request.getHdr().getType());
    +        // there can be extra sessionClose proposals
    +        Assert.assertTrue(outstanding.size() > 0);
    +        Proposal p = findProposalOfType(outstanding, OpCode.create);
    +        Assert.assertNotNull(p);
    --- End diff --
    
    Please add some message to the assert here to explain what could have gone wrong.
;16/May/18 19:56;githubbot;600","Github user lavacat commented on the issue:

    https://github.com/apache/zookeeper/pull/521
  
    @anmolnar thanks, updated
;17/May/18 22:14;githubbot;600","Github user lavacat commented on the issue:

    https://github.com/apache/zookeeper/pull/521
  
    @anmolnar Are there any concerns about this PR? I can remove ""ignore LETest"" commit. It was failing for me multiple times on PR test runs, but it's not on Flaky Dashboard.
    
    testFailedTxnAsPartOfQuorumLoss is still listed as flaky on Dashboard, and I think this will fix it
;31/May/18 20:22;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/521
  
    @lavacat I think you're good to go as it is now. I've just become a committer recently, once I learn how to use the commit script, I'm happy to merge this. ;)
;01/Jun/18 04:47;githubbot;600","Github user maoling commented on the issue:

    https://github.com/apache/zookeeper/pull/521
  
    ping @anmolnar
;09/Jul/18 13:00;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/521
  
    @maoling Thanks for the heads-up.
    @lavacat What are the target branches of this patch? Is this 3.5-only?
;09/Jul/18 14:11;githubbot;600","Github user lavacat commented on the issue:

    https://github.com/apache/zookeeper/pull/521
  
    @anmolnar yes, only 3.5
    There are some trivial conflicts on 3.4 and master.  Change is still valid. I can create PRs. Do you want them now or after this is merged?
;09/Jul/18 19:58;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/521
  
    Committed to 3.5 branch. Thanks @lavacat 
    Please create separate pull request for the branches you'd like to merge this too.
;10/Jul/18 10:18;githubbot;600","Github user lavacat closed the pull request at:

    https://github.com/apache/zookeeper/pull/521
;11/Jul/18 23:57;githubbot;600","Github user maoling commented on the issue:

    https://github.com/apache/zookeeper/pull/521
  
    @lavacat  [Jenkins](https://builds.apache.org/job/ZooKeeper_branch34_java10/79/testReport/junit/org.apache.zookeeper.server.quorum/QuorumPeerMainTest/testFailedTxnAsPartOfQuorumLoss/) still comlains about the flaky test in branch-3.4 and master.Could you plz fix them?
;15/Jul/18 12:42;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/521
  
    @lavacat I second that. It would be great to fix this on all branches.
;15/Jul/18 20:21;githubbot;600","GitHub user lavacat opened a pull request:

    https://github.com/apache/zookeeper/pull/570

    ZOOKEEPER-3042: testFailedTxnAsPartOfQuorumLoss is flaky

    - relaxed check of outstanding proposals queue
    - close clients after restart
    - restart client after old leader restart

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/lavacat/zookeeper testFailedTxnAsPartOfQuorumLoss-fix-3.4

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/570.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #570
    
----
commit 52bd7ea1384ea84c08e37dce69d410048fa08697
Author: Bogdan Kanivets <bkanivets@...>
Date:   2018-05-14T18:08:55Z

    ZOOKEEPER-3042: testFailedTxnAsPartOfQuorumLoss is flaky
    
    - relaxed check of outstanding proposals queue
    - close clients after restart
    - restart client after old leader restart

----
;16/Jul/18 00:19;githubbot;600","GitHub user lavacat opened a pull request:

    https://github.com/apache/zookeeper/pull/571

    ZOOKEEPER-3042: testFailedTxnAsPartOfQuorumLoss is flaky

    - relaxed check of outstanding proposals queue
    - close clients after restart
    - restart client after old leader restart

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/lavacat/zookeeper testFailedTxnAsPartOfQuorumLoss-fix-master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/571.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #571
    
----
commit 3ad9dbcc44397a22b8a13e1c7627aa54fd1f357c
Author: Bogdan Kanivets <bkanivets@...>
Date:   2018-05-14T18:08:55Z

    ZOOKEEPER-3042: testFailedTxnAsPartOfQuorumLoss is flaky
    
    - relaxed check of outstanding proposals queue
    - close clients after restart
    - restart client after old leader restart

----
;16/Jul/18 06:50;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/570
  
    Merged. Thanks @lavacat !
    Please close this PR.
;17/Jul/18 08:40;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/571
  
    Merged. Thanks @lavacat !
;17/Jul/18 08:41;githubbot;600","Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/571
;17/Jul/18 08:41;githubbot;600","Github user lavacat closed the pull request at:

    https://github.com/apache/zookeeper/pull/570
;17/Jul/18 16:06;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,10800,,,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Jul 17 10:52:56 UTC 2018,,,,,,,,,,"0|i3tn9r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/May/18 21:39;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1685//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1685//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1685//console

This message is automatically generated.;;;","14/May/18 22:08;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1686//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1686//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1686//console

This message is automatically generated.;;;","14/May/18 22:45;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1688//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1688//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1688//console

This message is automatically generated.;;;","15/May/18 00:02;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1690//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1690//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1690//console

This message is automatically generated.;;;","15/May/18 00:29;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1691//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1691//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1691//console

This message is automatically generated.;;;","15/May/18 00:54;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1692//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1692//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1692//console

This message is automatically generated.;;;","15/May/18 03:02;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1693//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1693//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1693//console

This message is automatically generated.;;;","15/May/18 17:52;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1694//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1694//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1694//console

This message is automatically generated.;;;","17/May/18 04:50;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1701//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1701//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1701//console

This message is automatically generated.;;;","17/May/18 05:23;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1702//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1702//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1702//console

This message is automatically generated.;;;","17/May/18 08:30;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1703//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1703//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1703//console

This message is automatically generated.;;;","17/May/18 08:59;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1704//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1704//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1704//console

This message is automatically generated.;;;","10/Jul/18 10:18;andor;Issue resolved by pull request 521
[https://github.com/apache/zookeeper/pull/521];;;","16/Jul/18 01:54;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1941//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1941//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1941//console

This message is automatically generated.;;;","16/Jul/18 07:12;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1942//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1942//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1942//console

This message is automatically generated.;;;","17/Jul/18 10:52;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #106 (See [https://builds.apache.org/job/ZooKeeper-trunk/106/])
ZOOKEEPER-3042: testFailedTxnAsPartOfQuorumLoss is flaky (andor: rev cea251a185435e88f54efc5defb92ec9584fc80f)
* (edit) src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Typo in error message, affects log analysis",ZOOKEEPER-3041,13158924,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,Hugh O'Brien,Hugh O'Brien,Hugh O'Brien,13/May/18 05:47,17/Jul/18 04:49,29/Jun/25 13:34,16/May/18 17:36,3.5.3,,,,,,,,,,,,,,,,,,,,,,,,3.4.13,3.5.5,3.6.0,,,,,,,,0,pull-request-available,,"simple typo

 

PR here: https://github.com/apache/zookeeper/pull/498/commits/a8cb7f668d31a7bcf12481409328a886231020f6",,"Github user hughobrienjet commented on the issue:

    https://github.com/apache/zookeeper/pull/498
  
    Thanks @maoling , I created ZOOKEEPER-3041
;13/May/18 05:48;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,Reviewed,,,,Wed May 16 21:45:28 UTC 2018,,,,,,,,,,"0|i3tn8n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/May/18 17:36;phunt;+1 lgtm. Thanks Hugh!;;;","16/May/18 21:45;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #26 (See [https://builds.apache.org/job/ZooKeeper-trunk/26/])
ZOOKEEPER-3041: Typo in error message, affects log analysis; charater (phunt: rev dacd27568c0a20244d40f42ff8ee84b5f917128e)
* (edit) src/java/main/org/apache/zookeeper/common/PathUtils.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Facing issues while building from source,ZOOKEEPER-3034,13157538,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,meszibalu,bhavenamrata,bhavenamrata,07/May/18 09:21,25/May/21 11:45,29/Jun/25 13:34,26/Feb/19 15:39,3.4.11,,,,,,,,,,,,,,,,,,,,,,,,3.5.5,3.6.0,,,,build,,,,,0,pull-request-available,,"Building Zookeeper from source using below steps:

{{git clone git://github.com/apache/zookeeper}}
 {{cd zookeeper}}
 {{git checkout tags/release-3.4.11}}
 {{ant compile}}
 {{cd src/c}}
 {{sudo apt-get install -y libcppunit-dev}}
 {{ACLOCAL=""aclocal -I /usr/share/aclocal"" autoreconf -if}}
 {{./configure && make && sudo make install}}
 {{sudo make distclean}}

 

The 'autoreconf -if' step fails with below error:
 + ACLOCAL='aclocal -I /usr/share/aclocal'
 + autoreconf -if
 configure.ac:37: warning: macro 'AM_PATH_CPPUNIT' not found in library
 libtoolize: putting auxiliary files in '.'.
 libtoolize: copying file './ltmain.sh'
 libtoolize: Consider adding 'AC_CONFIG_MACRO_DIRS([m4])' to configure.ac,
 libtoolize: and rerunning libtoolize and aclocal.
 libtoolize: Consider adding '-I m4' to ACLOCAL_AMFLAGS in Makefile.am.
 configure.ac:37: warning: macro 'AM_PATH_CPPUNIT' not found in library
 configure.ac:37: error: possibly undefined macro: AM_PATH_CPPUNIT
 If this token and others are legitimate, please use m4_pattern_allow.
 See the Autoconf documentation.
 autoreconf: /usr/bin/autoconf failed with exit status: 1
 Build step 'Execute shell' marked build as failure
  

This is happening on Ubuntu 18.04. Can someone please help in resolving this error?","Linux x86_64, Ubuntu 18.04, Ubuntu 17.10.","GitHub user anmolnar opened a pull request:

    https://github.com/apache/zookeeper/pull/528

    ZOOKEEPER-3034 Facing issues while building from source

    Unable to compile C++ test on Ubuntu 17.10+ because libcppunit-dev package doesn't ship the aclocal macro `cppunit.m4` anymore. I added explicitly to our codebase and made some necessary changes in configure.ac and Makefile.am.
    
    Please review.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/anmolnar/zookeeper ZOOKEEPER-3034

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/528.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #528
    
----
commit e97c5c1295ff43cfac93f957a888f7795766ee60
Author: Andor Molnar <dolphy17@...>
Date:   2018-05-23T04:39:31Z

    ZOOKEEPER-3034. Added cppunit.m4, because from libcppunit-dev package doesn't ship from 1.14.0

----
;23/May/18 04:42;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    Raised the question on libreoffice mailing list and from libcppunit-1.14.0 the recommended way to configure build flags is using `pkg-config`.
    I'm working on a patch to address this and will test it on CentOS 7 and Ubuntu 18.04. If both works fine, we could go forward with it.
;23/May/18 12:00;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    Using pkg-config in the latest patch.
    I also removed unused method `print_completion_queue()`, because it doesn't compile under Ubuntu 18.04
    @rgs1 Would you care to take a look?

;24/May/18 21:34;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    @phunt @afine @hanm You guys might want to take a quick look at this in @rgs1 absence. It's kind of an infrastructural change only and would be useful in the long term.
;29/May/18 04:02;githubbot;600","Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    Seems like it breaks ubuntu 14.04 (not sure what else, that's what I tried). This is working fine w/o the patch:
    
    ----
    ./configure
    checking for doxygen... no
    checking for perl... /usr/bin/perl
    checking for dot... no
    checking for a BSD-compatible install... /usr/bin/install -c
    checking whether build environment is sane... yes
    checking for a thread-safe mkdir -p... /bin/mkdir -p
    checking for gawk... no
    checking for mawk... mawk
    checking whether make sets $(MAKE)... yes
    checking whether make supports nested variables... yes
    ./configure: line 5034: syntax error near unexpected token `CPPUNIT,'
    ./configure: line 5034: `    PKG_CHECK_MODULES_STATIC(CPPUNIT, cppunit >= 1.10.2)'
;29/May/18 23:54;githubbot;600","Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    ps. you can try using my repos, makes it easy to try out various envs:
    https://hub.docker.com/r/phunt/
    See the readme on how to run - I typically map my zk source directory into the container directly to aid in testing.
    
    these images have cppunit installed - you can use the package manager to uninstall them if you want to test with and without --without-cppunit
;29/May/18 23:57;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    Yeah, I see what the problem is: `pkg-config` package has to be installed, but there's another problem with the version that is shipped with 14.04: it doesn't have `PKG_CHECK_MODULES_STATIC` macro, because it has been added in a more recent version according to this bug:
    https://bugs.freedesktop.org/show_bug.cgi?id=19541
    
    Adding the definition of the macro to our `configure.ac` script solves the problem, but I don't want it to be effective if recent version of pkg-config is in use. Trying to add it as a conditional, but my autoconf knowledge doesn't seem to be enough here. Still looking.
;30/May/18 09:59;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    @phunt I ended up defining a custom macro to support static linking. Now the script works with older versions of `pkg-config` too.
;30/May/18 10:24;githubbot;600","Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    I'm afraid it still doesn't work for me. This is ubuntu 14.04 - the docker image I pointed to previously.
    
    ----
    # ./configure
    checking for doxygen... no
    checking for perl... /usr/bin/perl
    checking for dot... no
    checking for a BSD-compatible install... /usr/bin/install -c
    checking whether build environment is sane... yes
    checking for a thread-safe mkdir -p... /bin/mkdir -p
    checking for gawk... no
    checking for mawk... mawk
    checking whether make sets $(MAKE)... yes
    checking whether make supports nested variables... yes
    ./configure: line 5034: PKG_PROG_PKG_CONFIG: command not found
    ./configure: line 5039: syntax error near unexpected token `CPPUNIT,'
    ./configure: line 5039: `        PKG_CHECK_MODULES(CPPUNIT, cppunit >= 1.10.2, , , )'
    
    
    ----
    
    I also see all kinds of warnings popping up:
    
    # autoreconf -if
    configure.ac:39: warning: PKG_PROG_PKG_CONFIG is m4_require'd but not m4_defun'd
    configure.ac:28: ZK_PKG_CONFIG_STATIC is expanded from...
    ../../lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
    configure.ac:39: the top level
    configure.ac:39: warning: PKG_PROG_PKG_CONFIG is m4_require'd but not m4_defun'd
    configure.ac:28: ZK_PKG_CONFIG_STATIC is expanded from...
    ../../lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
    configure.ac:39: the top level
    libtoolize: putting auxiliary files in `.'.
    libtoolize: copying file `./ltmain.sh'
    libtoolize: Consider adding `AC_CONFIG_MACRO_DIR([m4])' to configure.ac and
    libtoolize: rerunning libtoolize, to keep the correct libtool macros in-tree.
    libtoolize: Consider adding `-I m4' to ACLOCAL_AMFLAGS in Makefile.am.
;31/May/18 18:15;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    @phunt have you installed `pkg-config`?
    Because your Ubuntu image doesn't include it.
;31/May/18 19:22;githubbot;600","Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    Hm. It's not very clear that
    
    > ./configure: line 5034: PKG_PROG_PKG_CONFIG: command not found
    
    means that pkg-config needs to be installed. Esp given we've never needed it - it's a new dependency.
    
    Here's an example of some pushback in the curl community https://github.com/curl/curl/issues/972
    
    If you do want to add this you probably need to add something like:
    
    ```
    m4_ifndef([PKG_PROG_PKG_CONFIG],
      [m4_fatal([Could not locate the pkg-config autoconf macros.
    Please make sure pkg-config is installed and, if necessary, set the environment
    variable ACLOCAL=""aclocal -I/path/to/pkg.m4"".])])
    ```
    
    although I'm honestly not very psyched about this change. It's going to break a bunch of folk's builds.

;31/May/18 20:56;githubbot;600","Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    Perhaps we could do this? -- check if the cppunit macro is defined, if not then check for pkg-config, if not then error out (or whatever we do today). otw use the first macro/approach available.
;31/May/18 21:13;githubbot;600","Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    Hm. iiuc the m4 checks are during configure script creation itself, so perhaps that's not the best idea either. :-(
    

;31/May/18 22:47;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    I had no luck with verifying a specific macro existence for some reason. I'm not sure if there's a way at all. Maybe I should check how other projects are dealing with similar problems.
    
    On the other hand, it's up to us whether we want to support `cppunit` 1.14.0 and move to `pkg-config` or stay on m4 which means folks won't be able to build ZooKeeper on recent distros. 
;01/Jun/18 04:13;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    @phunt I ran a few cycles with the curl commit that you linked and here're my results:
    
    - there's no such thing with autotools that ""check for a macro existence and use it if present"", because macros must always be extracted even if they behind an if condition,
    - Curl circumvents this behaviour by directly calling commands like `pkg-config --libs MYLIB` instead of using the macro that package maintainer provides,
    - as a consequence we either can use the old AM_PATH_CPPUNIT macro or the new pkg-config macro, but not both.
    
    I'm not a fan of Curl approach: it runs custom code essentially which seems to me fragile.
    
    To make an end to this conversion I think we have 2 options.
    1. Replace the old macro with the new one and commit it to trunk only --> we stop supporting the old way from 3.6.0 and pkg-config will be required. Reward: ZK builds on new systems like Ubuntu 18.04.
    2. Don't do anything. 
;08/Aug/18 12:42;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    Btw. I think it's perfectly fine to choose option 2.
    I was able to build ZooKeeper C client and run the tests on Ubuntu 18.04 with CMake.
;08/Aug/18 13:50;githubbot;600","Github user anmolnar closed the pull request at:

    https://github.com/apache/zookeeper/pull/528
;11/Aug/18 18:00;githubbot;600","Github user mkedwards commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    I'd like to see this brought back.  Not cool to drop autoconf when the CMake setup can't build shared libraries.  From `zookeeper-client/zookeeper-client-c/README`:
    ```
    Current limitations of the CMake build system include lack of Solaris support,
    no shared library option, no explicitly exported symbols (all are exported by
    default), no versions on the libraries, and no documentation generation.
    ```
;25/Nov/18 06:35;githubbot;600","meszibalu commented on pull request #803: ZOOKEEPER-3034: Facing issues while building from source
URL: https://github.com/apache/zookeeper/pull/803
 
 
   Added a new macro (CHECK_CPPUNIT) which tries to use AM_PATH_CPPUNIT or
   PKG_CHECK_MODULES.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Feb/19 12:40;githubbot;600","anmolnar commented on issue #803: ZOOKEEPER-3034: Facing issues while building from source
URL: https://github.com/apache/zookeeper/pull/803#issuecomment-460624439
 
 
   Thanks @meszibalu for the contribution. 
   
   @phunt You might want to take a look at this issue: I failed to fix Ubuntu 18.04 build problem a while ago, but now @meszibalu has found a fully backward compatible way hopefully.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Feb/19 12:43;githubbot;600","anmolnar commented on issue #803: ZOOKEEPER-3034: Facing issues while building from source
URL: https://github.com/apache/zookeeper/pull/803#issuecomment-460661098
 
 
   retest this please
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Feb/19 14:39;githubbot;600","nkalmar commented on issue #803: ZOOKEEPER-3034: Facing issues while building from source
URL: https://github.com/apache/zookeeper/pull/803#issuecomment-467391257
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/19 10:48;githubbot;600","asfgit commented on pull request #803: ZOOKEEPER-3034: Facing issues while building from source
URL: https://github.com/apache/zookeeper/pull/803
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/19 15:33;githubbot;600","asfgit commented on pull request #803: ZOOKEEPER-3034: Facing issues while building from source
URL: https://github.com/apache/zookeeper/pull/803
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/19 15:33;githubbot;600","anmolnar commented on issue #803: ZOOKEEPER-3034: Facing issues while building from source
URL: https://github.com/apache/zookeeper/pull/803#issuecomment-467488057
 
 
   Committed to 3.5 and master branches. Thanks @meszibalu !
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/19 15:40;githubbot;600","anmolnar commented on issue #803: ZOOKEEPER-3034: Facing issues while building from source
URL: https://github.com/apache/zookeeper/pull/803#issuecomment-467488057
 
 
   Committed to 3.5 and master branches. Thanks @meszibalu !
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/19 15:40;githubbot;600","asellappen commented on pull request #528:
URL: https://github.com/apache/zookeeper/pull/528#issuecomment-847799789


   I am facing the same issue now , does this support now for other cpu arch like ppc64le ?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/May/21 11:45;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,16200,,,0,16200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Sep 12 17:40:46 UTC 2019,,,,,,,,,,"0|i3teq7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/May/18 04:49;bhavenamrata;Can someone look into this issue?;;;","16/May/18 05:46;andor;Hi [~bhavenamrata], thanks for reporting the issue.

Ubuntu 18.04 is quite recent, I have some doubts about anyone has ever tried to to build ZooKeeper C++ unit tests since it's out, but given that it's an LTS release, we should start looking into it.

The error message is complaing about AM_PATH_CPPUNIT macro is missing. Have you installed any *cppunit* related package?

Is there a cppunit package available in Ubuntu 18.04 at all? I think it's quite an old tool and not actively maintained, maybe it has been removed from the distro.;;;","16/May/18 05:48;andor;Sorry, I missed your apt-get command.

So, libcppunit-dev is available and installed, maybe it's just the build process who's unable to find it and can be fixed by symlinking it to the right place. Need to look into it deeper.;;;","21/May/18 12:32;bhavenamrata;[~andor], the error is due to missing cppunit.m4 file. It was present in Ubuntu 16.04 but seems to be missing in Ubuntu 18.04.

Is Zookeeper supported on Ubuntu 18.04 as of now?;;;","22/May/18 20:05;andor;[~bhavenamrata] No, unfortunately we still don't support Ubuntu 18.04 officially. However, that was a good catch actually. I wonder how we could get round this problem, cppunit is an essential part of C++ testing code currently.

One thing you could potentially try is to compare the recent package version with the one in 16.04 and if it's reasonable get a copy of the missing file from the older package.;;;","23/May/18 04:45;andor;[~bhavenamrata] Please verify my patch [https://github.com/apache/zookeeper/pull/528]

I wonder if we need to polish it any further or it'd be just enough to support 18.04.;;;","23/May/18 05:02;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1730//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1730//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1730//console

This message is automatically generated.;;;","23/May/18 07:02;bhavenamrata;[~andor], verified your patch. Build/tests completed.

Looks like its good enough for Ubuntu 18.04.

 

Thank you for the help :);;;","24/May/18 12:41;andor;[~bhavenamrata] No probs.

Are u able to compile and run tests on Ubuntu 18.04? I got the following error message:

 
{noformat}
[exec] /bin/bash ./libtool --tag=CC --mode=compile gcc -DHAVE_CONFIG_H -I. -I/home/andor/git/my-zookeeper/src/c -I/home/andor/git/my-zookeeper/src/c/include -I/home/andor/git/my-zookeeper/src/c/tests -I/home/andor/git/my-zookeeper/src/c/generated -Wall -Werror -Wdeclaration-after-statement -g -O2 -D_GNU_SOURCE -MT zookeeper.lo -MD -MP -MF .deps/zookeeper.Tpo -c -o zookeeper.lo `test -f 'src/zookeeper.c' || echo '/home/andor/git/my-zookeeper/src/c/'`src/zookeeper.c
[exec] /home/andor/git/my-zookeeper/src/c/src/zookeeper.c: In function ‘print_completion_queue’:
[exec] /home/andor/git/my-zookeeper/src/c/src/zookeeper.c:2530:5: error: null argument where non-null required (argument 1) [-Werror=nonnull]
[exec] fprintf(LOGSTREAM,""Completion queue: "");
[exec] ^~~~~~~
[exec] /home/andor/git/my-zookeeper/src/c/src/zookeeper.c:2532:9: error: null argument where non-null required (argument 1) [-Werror=nonnull]
[exec] fprintf(LOGSTREAM,""empty\n"");
[exec] ^~~~~~~
[exec] /home/andor/git/my-zookeeper/src/c/src/zookeeper.c:2538:9: error: null argument where non-null required (argument 1) [-Werror=nonnull]
[exec] fprintf(LOGSTREAM,""%d,"",cptr->xid);
[exec] ^~~~~~~
[exec] /home/andor/git/my-zookeeper/src/c/src/zookeeper.c:2541:5: error: null argument where non-null required (argument 1) [-Werror=nonnull]
[exec] fprintf(LOGSTREAM,""end\n"");
[exec] ^~~~~~~
[exec] libtool: compile: gcc -DHAVE_CONFIG_H -I. -I/home/andor/git/my-zookeeper/src/c -I/home/andor/git/my-zookeeper/src/c/include -I/home/andor/git/my-zookeeper/src/c/tests -I/home/andor/git/my-zookeeper/src/c/generated -Wall -Werror -Wdeclaration-after-statement -g -O2 -D_GNU_SOURCE -MT zookeeper.lo -MD -MP -MF .deps/zookeeper.Tpo -c /home/andor/git/my-zookeeper/src/c/src/zookeeper.c -fPIC -DPIC -o .libs/zookeeper.o
[exec] Makefile:1030: recipe for target 'zookeeper.lo' failed
[exec] cc1: all warnings being treated as errors
[exec] make: *** [zookeeper.lo] Error 1
{noformat}
{panel:title=GCC version}
$ gcc --version
gcc (Ubuntu 7.3.0-16ubuntu3) 7.3.0
{panel}
Looks like there's some additional plumbing work needed to fully support 18.04

 ;;;","24/May/18 12:47;bhavenamrata;[~andor], I had tried your patch from PR in older version of Zookeeper(3.4.11, which is the version of my interest) where it worked. I can try it out on master once.

 ;;;","24/May/18 12:55;andor;[~bhavenamrata] That would be useful, thanks. I'm working on the master branch at the first place.;;;","24/May/18 20:41;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 1 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1753//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1753//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1753//console

This message is automatically generated.;;;","24/May/18 21:29;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 1 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1754//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1754//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1754//console

This message is automatically generated.;;;","25/May/18 08:07;bhavenamrata;Master failing for me too :
{quote}{{$ make}}
{{make  all-am}}
{{make[1]: Entering directory '/root/zoo_master/zookeeper/src/c'}}
{{/bin/bash ./libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I.  -I./include -I./tests -I./generated   -Wall -Werror -Wdeclaration-after-statement -g -O2 -D_GNU_SOURCE -MT zookeeper.lo -MD -MP -MF .deps/zookeeper.Tpo -c -o zookeeper.lo `test -f 'src/zookeeper.c' || echo './'`src/zookeeper.c}}
{{libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I./include -I./tests -I./generated -Wall -Werror -Wdeclaration-after-statement -g -O2 -D_GNU_SOURCE -MT zookeeper.lo -MD -MP -MF .deps/zookeeper.Tpo -c src/zookeeper.c  -fPIC -DPIC -o .libs/zookeeper.o}}
{{src/zookeeper.c: In function 'print_completion_queue':}}
{{src/zookeeper.c:2530:5: error: null argument where non-null required (argument 1) [-Werror=nonnull]}}
{{     fprintf(LOGSTREAM,""Completion queue: "");}}
{{     ^~~~~~~}}
{{src/zookeeper.c:2532:9: error: null argument where non-null required (argument 1) [-Werror=nonnull]}}
{{         fprintf(LOGSTREAM,""empty\n"");}}
{{         ^~~~~~~}}
{{src/zookeeper.c:2538:9: error: null argument where non-null required (argument 1) [-Werror=nonnull]}}
{{         fprintf(LOGSTREAM,""%d,"",cptr->xid);}}
{{         ^~~~~~~}}
{{src/zookeeper.c:2541:5: error: null argument where non-null required (argument 1) [-Werror=nonnull]}}
{{     fprintf(LOGSTREAM,""end\n"");}}
{{     ^~~~~~~}}
{{cc1: all warnings being treated as errors}}
{{Makefile:1026: recipe for target 'zookeeper.lo' failed}}
{{make[1]: *** [zookeeper.lo] Error 1}}
{{make[1]: Leaving directory '/root/zoo_master/zookeeper/src/c'}}
{{Makefile:685: recipe for target 'all' failed}}
{{make: *** [all] Error 2}}{quote};;;","30/May/18 10:44;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 1 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1767//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1767//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1767//console

This message is automatically generated.;;;","11/Aug/18 18:00;andor;[~bhavenamrata]

I've verified that ZooKeeper C client can be built with CMake on Ubuntu 18.04. I successfully compiled and ran the C++ unit tests too.

As a consequence I close the pull request and this Jira as won't fix, because we don't need to maintain the legacy Autoconf.;;;","26/Feb/19 15:39;andor;Issue resolved by pull request 803
[https://github.com/apache/zookeeper/pull/803];;;","26/Feb/19 20:58;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #250 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/250/])
ZOOKEEPER-3034: Facing issues while building from source (andor: rev b3577278ab23f142fdb104a07bd61fbc74a4f152)
* (edit) zookeeper-client/zookeeper-client-c/configure.ac
* (edit) zookeeper-client/zookeeper-client-c/Makefile.am
* (edit) zookeeper-client/zookeeper-client-c/acinclude.m4
;;;","26/Feb/19 23:00;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #416 (See [https://builds.apache.org/job/ZooKeeper-trunk/416/])
ZOOKEEPER-3034: Facing issues while building from source (andor: rev b3577278ab23f142fdb104a07bd61fbc74a4f152)
* (edit) zookeeper-client/zookeeper-client-c/Makefile.am
* (edit) zookeeper-client/zookeeper-client-c/configure.ac
* (edit) zookeeper-client/zookeeper-client-c/acinclude.m4
;;;","11/Sep/19 20:04;shahrs87;[~andor] Given that this bug exists is 3.4.11 branch, does it make sense to backport the patch to branch-3.4 ? Where do I see all the list of actively maintained branches ?;;;","12/Sep/19 15:06;andor;[~shahrs87]

branch-3.4 is still actively maintained, but we only backport security and critical bugfixes.

This is a minor bugfix, so I don't think we should submit this into 3.4

People should upgrade to 3.5.5 now.;;;","12/Sep/19 17:40;shahrs87;Thank you [~andor] for your response.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect log message when try to delete container node,ZOOKEEPER-3001,13146050,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,sel-fish,sel-fish,sel-fish,18/Mar/18 14:13,26/Mar/18 02:39,29/Jun/25 13:34,26/Mar/18 01:49,3.5.3,,,,,,,,,,,,,,,,,,,,,,,,3.5.4,3.6.0,,,,server,,,,,0,,,"The log message when trying to delete a container node is not proper, missing
*_String.format_*",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Mar 26 02:39:54 UTC 2018,,,,,,,,,,"0|i3rglr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Mar/18 14:19;githubbot;GitHub user sel-fish opened a pull request:

    https://github.com/apache/zookeeper/pull/491

    ZOOKEEPER-3001: Incorrect log message when try to delete container node

    Missing `String.format` when print the log.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/sel-fish/zookeeper ZOOKEEPER-3001

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/491.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #491
    
----
commit 1f90b95f2e8ad73d58ac804aeec5cfdc13aeaf86
Author: 漠冰 <mobing.fql@...>
Date:   2018-03-18T14:17:17Z

    ZOOKEEPER-3001: Incorrect log message when try to delete container node

----
;;;","18/Mar/18 14:19;githubbot;Github user sel-fish closed the pull request at:

    https://github.com/apache/zookeeper/pull/491
;;;","18/Mar/18 14:22;githubbot;GitHub user sel-fish opened a pull request:

    https://github.com/apache/zookeeper/pull/492

    ZOOKEEPER-3001: Incorrect log message when try to delete container node

    Missing `String.format`.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/sel-fish/zookeeper ZOOKEEPER-3001

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/492.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #492
    
----
commit 814b3b2eed398671b7d124509b4a2b5a87e3680d
Author: sel-fish <fqlgy@...>
Date:   2018-03-18T14:20:42Z

    ZOOKEEPER-3001: Incorrect log message when try to delete container node

----
;;;","18/Mar/18 15:54;githubbot;Github user eribeiro commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/492#discussion_r175293565
  
    --- Diff: src/java/main/org/apache/zookeeper/server/ContainerManager.java ---
    @@ -116,8 +116,8 @@ public void checkContainers()
                 Request request = new Request(null, 0, 0,
                         ZooDefs.OpCode.deleteContainer, path, null);
                 try {
    -                LOG.info(""Attempting to delete candidate container: %s"",
    -                        containerPath);
    +                LOG.info(String.format(""Attempting to delete candidate container: %s"",
    --- End diff --
    
    As this a log message you could use 
    `LOG.info(""Attempting to delete candidate container: {}"", container Path);`
;;;","19/Mar/18 00:55;githubbot;Github user sel-fish commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/492#discussion_r175313093
  
    --- Diff: src/java/main/org/apache/zookeeper/server/ContainerManager.java ---
    @@ -116,8 +116,8 @@ public void checkContainers()
                 Request request = new Request(null, 0, 0,
                         ZooDefs.OpCode.deleteContainer, path, null);
                 try {
    -                LOG.info(""Attempting to delete candidate container: %s"",
    -                        containerPath);
    +                LOG.info(String.format(""Attempting to delete candidate container: %s"",
    --- End diff --
    
    to use the same logging style as the other code.
    
                    LOG.error(String.format(""Could not delete container: %s"" ,
                            containerPath), e);
;;;","19/Mar/18 10:27;githubbot;Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/492#discussion_r175386273
  
    --- Diff: src/java/main/org/apache/zookeeper/server/ContainerManager.java ---
    @@ -116,8 +116,8 @@ public void checkContainers()
                 Request request = new Request(null, 0, 0,
                         ZooDefs.OpCode.deleteContainer, path, null);
                 try {
    -                LOG.info(""Attempting to delete candidate container: %s"",
    -                        containerPath);
    +                LOG.info(String.format(""Attempting to delete candidate container: %s"",
    --- End diff --
    
    +1 for @eribeiro 
    We already use that form at various places in the codebase, so feel free to use the better one. Existing String.formats should be refactored in the long term, but that probably will happen in small refactorings like this.
;;;","24/Mar/18 17:40;githubbot;Github user eribeiro commented on the issue:

    https://github.com/apache/zookeeper/pull/492
  
    +1 lgtm
;;;","26/Mar/18 01:49;hanm;Issue resolved by pull request 492
[https://github.com/apache/zookeeper/pull/492];;;","26/Mar/18 01:49;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/492
;;;","26/Mar/18 02:39;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3777 (See [https://builds.apache.org/job/ZooKeeper-trunk/3777/])
ZOOKEEPER-3001: Incorrect log message when try to delete container node (hanm: rev 8cfca3add9c7fd705f9114daf4adaac9fc90f040)
* (edit) src/java/main/org/apache/zookeeper/server/ContainerManager.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CMake declares incorrect ZooKeeper version,ZOOKEEPER-2998,13143978,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,andschwa,andschwa,andschwa,09/Mar/18 21:05,26/Mar/18 03:37,29/Jun/25 13:34,26/Mar/18 02:17,3.6.0,,,,,,,,,,,,,,,,,,,,,,,,3.6.0,,,,,,,,,,0,,,The \{{CMakeLists.txt}} file in the master branch declares version 3.5.3 instead of 3.6.0.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Mar 26 03:37:57 UTC 2018,,,,,,,,,,"0|i3r49b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Mar/18 21:11;githubbot;GitHub user andschwa opened a pull request:

    https://github.com/apache/zookeeper/pull/484

    ZOOKEEPER-2998: CMake declares incorrect ZooKeeper version

    This was not updated for the current development branch; it should be
    3.6.0.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/andschwa/zookeeper ZOOKEEPER-2998

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/484.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #484
    
----
commit 76d4f9708e9015438f5709cf19c866cd177314a5
Author: Andrew Schwartzmeyer <andrew@...>
Date:   2018-03-09T21:09:15Z

    ZOOKEEPER-2998: CMake declares incorrect ZooKeepeer version
    
    This was not updated for the current development branch; it should be
    3.6.0.

----
;;;","09/Mar/18 21:38;githubbot;Github user andschwa commented on the issue:

    https://github.com/apache/zookeeper/pull/484
  
    That CI failure looks spurious...
;;;","09/Mar/18 21:41;andschwa;https://github.com/apache/zookeeper/pull/484;;;","09/Mar/18 21:42;githubbot;Github user andschwa commented on the issue:

    https://github.com/apache/zookeeper/pull/484
  
    [JIRA: ZOOKEEPER-2998](https://issues.apache.org/jira/browse/ZOOKEEPER-2998)
;;;","26/Mar/18 02:17;hanm;Issue resolved by pull request 484
[https://github.com/apache/zookeeper/pull/484];;;","26/Mar/18 02:17;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/484
;;;","26/Mar/18 03:37;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3778 (See [https://builds.apache.org/job/ZooKeeper-trunk/3778/])
ZOOKEEPER-2998: CMake declares incorrect ZooKeeper version (hanm: rev 29a892907eb175adc0c6908a1fde3e7bf8d655b6)
* (edit) src/c/CMakeLists.txt
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.ignore file prevents adding src/java/main/org/apache/jute/compiler/generated dir to git repo,ZOOKEEPER-2993,13142642,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,taoist,taoist,taoist,05/Mar/18 19:48,17/Jul/18 04:49,29/Jun/25 13:34,23/May/18 03:44,3.4.10,,,,,,,,,,,,,,,,,,,,,,,,3.4.13,3.5.5,3.6.0,,,build,,,,,0,pull-request-available,,"There are Rcc.java and other required files under the src/java/main/org/apache/jute/compiler/generated directory.

However, when I tried to add the source distribution to our own git repo, the .gitignore file has ""generated"" as a key word in line 55 - which prevents the dir and files under that dir to be added to the repo.  The compilation later fails due to the missing dir and files.

*compile_jute*
 :*19:02:54* [mkdir] Created dir: /home/jenkins/workspace/3PA/PMODS/zookeeper-pgdi-patch-in-maven-repo/src/java/generated*

19:02:54* [mkdir] Created dir: /home/jenkins/workspace/3PA/PMODS/zookeeper-pgdi-patch-in-maven-repo/src/c/generated*

19:02:54* [java] Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8

*19:02:54* [java] Error: Could not find or load main class org.apache.jute.compiler.generated.Rcc*

19:02:54* [java] Java Result: 1*19:02:54* [java] Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8

*19:02:54* [java] Error: Could not find or load main class org.apache.jute.compiler.generated.Rcc*

19:02:54* [java] Java Result: 1*19:02:54* [touch] Creating /home/jenkins/workspace/3PA/PMODS/zookeeper-pgdi-patch-in-maven-repo/src/java/generated/.generated*

 

Fix is to remove or comment out the generated key word in line 55.

#
 #generated
 #

 ",,"Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/488
;23/May/18 03:43;githubbot;600","Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    Committed to master, 3.5, and 3.4.
;23/May/18 03:45;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed May 23 07:45:48 UTC 2018,,,,,,,,,,"0|i3qw0f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Mar/18 14:30;andor;[~taoist]

Nice catch, thanks for creating the Jira.

I think the name of the directory (generated) is a little bit misleading, because these files are part of the codebase since the very beginning and have mistakenly put on ignore by [~cnauroth] in [https://github.com/apache/zookeeper/commit/fa5955afa0962147268241163b7ca47dcdd074e0]

Are you happy to contribute and file a new PR on GitHub to address the issue as suggested?;;;","12/Mar/18 01:08;githubbot;GitHub user asutosh936 opened a pull request:

    https://github.com/apache/zookeeper/pull/488

    ZOOKEEPER-2993 - Removed 'generated' line from .gitignore

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/asutosh936/zookeeper ZOOKEEPER-2993

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/488.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #488
    
----
commit a02ef3db8d18cc738a1a3e24eafcaa0b5379d297
Author: asutosh936 <asutosh.pandya@...>
Date:   2018-02-25T23:40:14Z

    ZOOKEEPER-2936 - Removed duplicate code

commit 6a17613be090835286f6fd15b3fb5c40e269a25f
Author: asutosh936 <asutosh.pandya@...>
Date:   2018-03-01T01:22:30Z

    ZOOKEEPER-2936 - Deleted duplicate code

commit ad55832eafbe4e341e113a1bdeb0385674025b8e
Author: asutosh936 <asutosh.pandya@...>
Date:   2018-03-03T18:09:01Z

    Merge branch 'master' of https://github.com/apache/zookeeper

commit 67d454b5ab91b72f20b878c90c7d9f7a45bcdf88
Author: asutosh936 <asutosh.pandya@...>
Date:   2018-03-07T01:39:40Z

    Merge branch 'master' of https://github.com/apache/zookeeper

commit 13f8a235bad6f361120babf96f05aa2fc0cdcdb0
Author: asutosh936 <asutosh.pandya@...>
Date:   2018-03-12T01:06:57Z

    ZOOKEEPER-2993 - Removed 'generated' line from .gitignore

----
;;;","12/Mar/18 01:09;githubbot;Github user asutosh936 commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    @anmolnar - Please review
;;;","12/Mar/18 07:38;githubbot;Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    @asutosh936 lgtm
    It would be nice to squash your commits into one. Thanks.
;;;","12/Mar/18 19:16;githubbot;Github user afine commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    I agree with @anmolnar. This change should be fine from what I can tell but it would be nice to have a note as to why the change was made.
;;;","13/Mar/18 01:12;githubbot;Github user asutosh936 commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    @anmolnar @afine - Thank You for the review comments.
    
    The change is to remove 'generated' keyword from .gitignore because it prevents the dir and files under generated dir to be added to the repo.  The compilation later fails due to the missing dir and files.
    
    Also I am trying to squash the previous commits but somehow git is not allowing me to do so. Let me know if the changes looks good and to be merged or I need to close this PR and create new one.
;;;","13/Mar/18 20:14;githubbot;Github user afine commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    > The change is to remove 'generated' keyword from .gitignore because it prevents the dir and files under generated dir to be added to the repo. The compilation later fails due to the missing dir and files.
    
    Which files are you referring to? I don't think we have any top level `generated` directory and I also don't think we would want to add such files to the repo.
    
    Don't worry about squashing, I should be able to take care of that when it comes time to commit.
;;;","13/Mar/18 20:31;githubbot;Github user asutosh936 commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    @afine - Currently there is a folder named 'generated' at below location.
    https://github.com/apache/zookeeper/tree/master/src/java/main/org/apache/jute/compiler/generated
    
    As per the defect any java file added to above location, it will be ignored by git to add to repository.
;;;","14/Mar/18 15:39;githubbot;Github user tamaashu commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    @asutosh936 Sorry but I don't think that the generated directory is ignored by a defect.
    We should never add generated files to git, they must be ignored.
;;;","14/Mar/18 21:03;githubbot;Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    @tamaashu Generally speaking I agree with you, but that directory is somewhat different. There is code in it which we don't generate during our build process, but it's been in git since the beginning of ZooKeeper.
    I have no idea why that directory named 'generated'. It's quite misleading.
    @afine @tamaashu please take a closer look before making a judgement.

;;;","15/Mar/18 18:17;githubbot;Github user afine commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    @asutosh936 I agree with @anmolnar That directory exists, it is currently in version control, and I don't think any generated files actually end up there. My guess is that it is there purely for historical reasons and to contain the rcc.jj file.
    
    In other words, I don't think your change to the gitignore will impact that directory. According to the gitignore documentation (https://git-scm.com/docs/gitignore):
    
    > If the pattern does not contain a slash /, Git treats it as a shell glob pattern and checks for a match against the pathname relative to the location of the .gitignore file (relative to the toplevel of the work tree if not from a .gitignore file).
    
    Since there are not any top level files called `generated` I don't think this line in the gitignore has any impact on the repository. Am I missing something here?
    

;;;","15/Mar/18 19:45;githubbot;Github user jason95 commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    Hi folks,
    
    Sorry for not keeping up with the jira.
    @asutosh936 - thanks for the PR and others for reviewing.
    
    Here are some info - hope it will shed some clarity.
    
    - There exists in the repo/source code a dir named: src/java/main/org/apache/jute/compiler/generated
    - In that dir it has Rcc.java and other files
    - Files in that dir is required to for successful compilation
    
    - However, the .gitignore has the keyword ""generated""
    - when I add the source code tree into out company repo, the src/java/main/org/apache/jute/compiler/generated was effectively ignored - and thus not added into our company repo
    - I ran a jenkins job to compile the code from the repo - it failed - due to the missing Rcc and other required java sources under that excluded directory.
    
    When I did a git status - everything was in sync even though my workspace has the Rcc.java - but my company repo actually is missing that dir.  My local compile succeeds every time.  But jenkins job compile using company repo always fails.  After some comparison - then I noticed the missing dir on the company repo side.
    
    Once I removed the generated keyword from the .gitignore - git immediately detected the generated dir in my workspace as new.  I was able to git add/commit/push to make the jenkins compile successful.
    
    Hope this help clarify the situation.
    
    I prefer to have generated keyword removed.  In the future, if the compile will generate artifacts that should be ignored, then modify the .gitignore and rename the src/java/main/org/apache/jute/compiler/generated dir - so the 2 does not conflict.
    
    My 2 cents.
    
    Thanks

;;;","19/Mar/18 10:56;githubbot;Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    @afine In the other way around: if there's no '/' at the beginning of the keyword, git will check the entire path relative to the root for the string `generated` and if it finds a match, it'll ignore all files underneath.
    
    My suggestion is to remove `generated` keyword from .gitignore - like in this PR -, because 'real' generated folders are already excluded explicitly. There could be other possible solutions to the problem, I'm open to them.
;;;","23/Mar/18 21:06;githubbot;Github user afine commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    @anmolnar It looks like you are right. removing this line does not impact which files git ignores. Thanks for persisting @jason95 @asutosh936
;;;","23/Mar/18 21:07;githubbot;Github user afine commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    I would like to have this change in 3.4 so I will merge after the 3.4.12 release.
;;;","27/Mar/18 14:41;githubbot;Github user jason95 commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    Thanks everyone!! @afine @asutosh936 @anmolnar @tamaashu 
;;;","23/May/18 03:44;hanm;Issue resolved by pull request 488
[https://github.com/apache/zookeeper/pull/488];;;","23/May/18 07:45;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #36 (See [https://builds.apache.org/job/ZooKeeper-trunk/36/])
ZOOKEEPER-2993: Removed 'generated' line from .gitignore (hanm: rev 07228badc4691ca96f0d35e5aaa5ebcb2b9891cb)
* (edit) .gitignore
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE triggered if server receives a vote for a server id not in their voting view,ZOOKEEPER-2988,13141899,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,enixon,enixon,enixon,01/Mar/18 20:18,17/Jul/18 04:49,29/Jun/25 13:34,30/Apr/18 04:35,3.4.11,3.4.12,3.5.3,,,,,,,,,,,,,,,,,,,,,,3.4.13,3.5.4,3.6.0,,,leaderElection,,,,,0,,,"We've observed the following behavior in elections when a node is lagging behind the quorum in its view of the ensemble topology.

- Node A is operating with node B in its voting view, but without view of node C.

- B votes for C.

- A then switches its vote to C, but throws a NPE when attempting to connect.

This causes the QuorumPeer to spin up a Follower only to immediately have it shutdown by the exception.

Ideally, A would not advertise a vote for a server that it will not follow.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed May 02 06:10:06 UTC 2018,,,,,,,,,,"0|i3qrfb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Mar/18 20:29;githubbot;GitHub user enixon opened a pull request:

    https://github.com/apache/zookeeper/pull/476

    ZOOKEEPER-2988: NPE triggered if server receives a vote for a server …

    …id not in their voting view

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/enixon/zookeeper ZOOKEEPER-2988

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/476.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #476
    
----
commit 1862a718168ee07287d0b9769a0f4ce20bd1bd32
Author: Brian Nixon <nixon@...>
Date:   2018-03-01T19:19:51Z

    ZOOKEEPER-2988: NPE triggered if server receives a vote for a server id not in their voting view

----
;;;","01/Mar/18 20:30;githubbot;GitHub user enixon opened a pull request:

    https://github.com/apache/zookeeper/pull/477

    ZOOKEEPER-2988: NPE triggered if server receives a vote for a server …

    …id not in their voting view

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/enixon/zookeeper ZOOKEEPER-2988-3.5

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/477.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #477
    
----
commit a1364d8c4ec9fdf1c4210b6485a6a143c1e14f5f
Author: Brian Nixon <nixon@...>
Date:   2018-03-01T19:21:47Z

    ZOOKEEPER-2988: NPE triggered if server receives a vote for a server id not in their voting view

----
;;;","01/Mar/18 20:30;githubbot;GitHub user enixon opened a pull request:

    https://github.com/apache/zookeeper/pull/478

    ZOOKEEPER-2988: NPE triggered if server receives a vote for a server …

    …id not in their voting view

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/enixon/zookeeper ZOOKEEPER-2988-3.4

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/478.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #478
    
----
commit 6fc857a1cfe97a46a4f453613b95f9682adcce96
Author: Brian Nixon <nixon@...>
Date:   2018-03-01T19:19:51Z

    ZOOKEEPER-2988: NPE triggered if server receives a vote for a server id not in their voting view

----
;;;","02/Mar/18 21:58;githubbot;Github user afine commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/476#discussion_r171972029
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---
    @@ -1012,4 +1012,113 @@ public void testFailedTxnAsPartOfQuorumLoss() throws Exception {
                 Assert.assertNull(""server "" + i + "" should not have /zk"" + leader, servers.zk[i].exists(""/zk"" + leader, false));
             }
         }
    +
    +    /**
    +     * Verify that a node without the leader in its view will not attempt to connect to the leader.
    +     */
    +    @Test
    +    public void testLeaderOutOfView() throws Exception {
    +        ClientBase.setupTestEnv();
    +
    +        Layout layout = new PatternLayout(""%d{ISO8601} [,yid:%X{myid}] - %5p [%t:%C{1}@%L] - %m%n"");
    +        ByteArrayOutputStream os = new ByteArrayOutputStream();
    +        WriterAppender appender = new WriterAppender(layout, os);
    +        appender.setThreshold(Level.DEBUG);
    +        Logger qlogger = Logger.getLogger(""org.apache.zookeeper.server.quorum"");
    +        qlogger.addAppender(appender);
    +
    +        try {
    +            final int CLIENT_PORT_QP1 = PortAssignment.unique();
    +            final int CLIENT_PORT_QP2 = PortAssignment.unique();
    +            final int CLIENT_PORT_QP3 = PortAssignment.unique();
    +
    +            String quorumCfgIncomplete = getUniquePortCfgForId(1) + ""\n"" + getUniquePortCfgForId(2);
    +            String quorumCfgComplete = quorumCfgIncomplete + ""\n"" + getUniquePortCfgForId(3);
    +
    +            // Node 1 is started without the leader (3) in its config view
    +            MainThread q1 = new MainThread(1, CLIENT_PORT_QP1, quorumCfgIncomplete);
    +            MainThread q2 = new MainThread(2, CLIENT_PORT_QP2, quorumCfgComplete);
    +            MainThread q3 = new MainThread(3, CLIENT_PORT_QP3, quorumCfgComplete);
    +
    +            // Node 1 must be started first, before quorum is formed, to trigger the attempted invalid connection to 3
    +            q1.start();
    +            QuorumPeer quorumPeer1 = waitForQuorumPeer(q1, CONNECTION_TIMEOUT);
    +            Assert.assertTrue(quorumPeer1.getPeerState() == QuorumPeer.ServerState.LOOKING);
    +
    +            // Node 3 started second to avoid 1 and 2 forming a quorum before 3 starts up
    +            q3.start();
    +            QuorumPeer quorumPeer3 = waitForQuorumPeer(q3, CONNECTION_TIMEOUT);
    +            Assert.assertTrue(quorumPeer3.getPeerState() == QuorumPeer.ServerState.LOOKING);
    +
    +            // Node 2 started last, kicks off leader election
    +            q2.start();
    +
    +            // Nodes 2 and 3 now form quorum and fully start. 1 attempts to vote for 3, fails, returns to LOOKING state
    +            Assert.assertTrue(""waiting for server 2 to start"",
    +                    ClientBase.waitForServerUp(""127.0.0.1:"" + CLIENT_PORT_QP2, CONNECTION_TIMEOUT));
    +            Assert.assertTrue(""waiting for server 3 to start"",
    +                    ClientBase.waitForServerUp(""127.0.0.1:"" + CLIENT_PORT_QP3, CONNECTION_TIMEOUT));
    +
    +            Assert.assertTrue(q1.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LOOKING);
    +            Assert.assertTrue(q2.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.FOLLOWING);
    +            Assert.assertTrue(q3.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LEADING);
    +
    +            q1.shutdown();
    +            q2.shutdown();
    +            q3.shutdown();
    +
    +            Assert.assertTrue(""waiting for server 1 down"",
    +                    ClientBase.waitForServerDown(""127.0.0.1:"" + CLIENT_PORT_QP1,
    +                            ClientBase.CONNECTION_TIMEOUT));
    +            Assert.assertTrue(""waiting for server 2 down"",
    +                    ClientBase.waitForServerDown(""127.0.0.1:"" + CLIENT_PORT_QP2,
    +                            ClientBase.CONNECTION_TIMEOUT));
    +            Assert.assertTrue(""waiting for server 3 down"",
    +                    ClientBase.waitForServerDown(""127.0.0.1:"" + CLIENT_PORT_QP3,
    +                            ClientBase.CONNECTION_TIMEOUT));
    +
    +        } finally {
    +            qlogger.removeAppender(appender);
    +        }
    +
    +        // Verify that Node 1 never threw an exception
    +        LineNumberReader r = new LineNumberReader(new StringReader(os.toString()));
    +        String line;
    +        boolean found = false;
    +        Pattern p = Pattern.compile("".*java.lang.NullPointerException.*"");
    +        while ((line = r.readLine()) != null) {
    +            found = p.matcher(line).matches();
    +            if (found) {
    +                break;
    +            }
    +        }
    +
    +        Assert.assertFalse(""Node should not attempt connection to out of view leader"", found);
    +    }
    +
    +    private String getUniquePortCfgForId(int id) {
    +        return String.format(""server.%d=127.0.0.1:%d:%d"", id, PortAssignment.unique(), PortAssignment.unique());
    +    }
    +
    +    private QuorumPeer waitForQuorumPeer(MainThread mainThread, int timeout) {
    +        long start = Time.currentElapsedTime();
    +        while (true) {
    +            QuorumPeer quorumPeer = mainThread.getQuorumPeer();
    +            if (quorumPeer != null) {
    +                return quorumPeer;
    +            }
    +
    +            if (Time.currentElapsedTime() > start + timeout) {
    +                LOG.error(""Timed out while waiting for QuorumPeer"");
    +                break;
    +            }
    +
    +            try {
    +                Thread.sleep(250);
    +            } catch (InterruptedException e) {
    +                // ignore
    +            }
    +        }
    +        throw new NullPointerException();
    --- End diff --
    
    Can we use a better exception?
;;;","02/Mar/18 21:58;githubbot;Github user afine commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/476#discussion_r171972608
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---
    @@ -1012,4 +1012,113 @@ public void testFailedTxnAsPartOfQuorumLoss() throws Exception {
                 Assert.assertNull(""server "" + i + "" should not have /zk"" + leader, servers.zk[i].exists(""/zk"" + leader, false));
             }
         }
    +
    +    /**
    +     * Verify that a node without the leader in its view will not attempt to connect to the leader.
    +     */
    +    @Test
    +    public void testLeaderOutOfView() throws Exception {
    +        ClientBase.setupTestEnv();
    +
    +        Layout layout = new PatternLayout(""%d{ISO8601} [,yid:%X{myid}] - %5p [%t:%C{1}@%L] - %m%n"");
    +        ByteArrayOutputStream os = new ByteArrayOutputStream();
    +        WriterAppender appender = new WriterAppender(layout, os);
    +        appender.setThreshold(Level.DEBUG);
    +        Logger qlogger = Logger.getLogger(""org.apache.zookeeper.server.quorum"");
    +        qlogger.addAppender(appender);
    +
    +        try {
    +            final int CLIENT_PORT_QP1 = PortAssignment.unique();
    +            final int CLIENT_PORT_QP2 = PortAssignment.unique();
    +            final int CLIENT_PORT_QP3 = PortAssignment.unique();
    +
    +            String quorumCfgIncomplete = getUniquePortCfgForId(1) + ""\n"" + getUniquePortCfgForId(2);
    +            String quorumCfgComplete = quorumCfgIncomplete + ""\n"" + getUniquePortCfgForId(3);
    +
    +            // Node 1 is started without the leader (3) in its config view
    +            MainThread q1 = new MainThread(1, CLIENT_PORT_QP1, quorumCfgIncomplete);
    +            MainThread q2 = new MainThread(2, CLIENT_PORT_QP2, quorumCfgComplete);
    +            MainThread q3 = new MainThread(3, CLIENT_PORT_QP3, quorumCfgComplete);
    +
    +            // Node 1 must be started first, before quorum is formed, to trigger the attempted invalid connection to 3
    +            q1.start();
    +            QuorumPeer quorumPeer1 = waitForQuorumPeer(q1, CONNECTION_TIMEOUT);
    +            Assert.assertTrue(quorumPeer1.getPeerState() == QuorumPeer.ServerState.LOOKING);
    +
    +            // Node 3 started second to avoid 1 and 2 forming a quorum before 3 starts up
    +            q3.start();
    +            QuorumPeer quorumPeer3 = waitForQuorumPeer(q3, CONNECTION_TIMEOUT);
    +            Assert.assertTrue(quorumPeer3.getPeerState() == QuorumPeer.ServerState.LOOKING);
    +
    +            // Node 2 started last, kicks off leader election
    +            q2.start();
    +
    +            // Nodes 2 and 3 now form quorum and fully start. 1 attempts to vote for 3, fails, returns to LOOKING state
    +            Assert.assertTrue(""waiting for server 2 to start"",
    +                    ClientBase.waitForServerUp(""127.0.0.1:"" + CLIENT_PORT_QP2, CONNECTION_TIMEOUT));
    +            Assert.assertTrue(""waiting for server 3 to start"",
    +                    ClientBase.waitForServerUp(""127.0.0.1:"" + CLIENT_PORT_QP3, CONNECTION_TIMEOUT));
    +
    +            Assert.assertTrue(q1.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LOOKING);
    +            Assert.assertTrue(q2.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.FOLLOWING);
    +            Assert.assertTrue(q3.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LEADING);
    +
    +            q1.shutdown();
    --- End diff --
    
    is there a way we can use the existing tearDown code. So we make sure we never leave any servers running even if an assertion fails?
;;;","02/Mar/18 21:58;githubbot;Github user afine commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/476#discussion_r171972228
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---
    @@ -1012,4 +1012,113 @@ public void testFailedTxnAsPartOfQuorumLoss() throws Exception {
                 Assert.assertNull(""server "" + i + "" should not have /zk"" + leader, servers.zk[i].exists(""/zk"" + leader, false));
             }
         }
    +
    +    /**
    +     * Verify that a node without the leader in its view will not attempt to connect to the leader.
    +     */
    +    @Test
    +    public void testLeaderOutOfView() throws Exception {
    +        ClientBase.setupTestEnv();
    +
    +        Layout layout = new PatternLayout(""%d{ISO8601} [,yid:%X{myid}] - %5p [%t:%C{1}@%L] - %m%n"");
    +        ByteArrayOutputStream os = new ByteArrayOutputStream();
    +        WriterAppender appender = new WriterAppender(layout, os);
    +        appender.setThreshold(Level.DEBUG);
    +        Logger qlogger = Logger.getLogger(""org.apache.zookeeper.server.quorum"");
    +        qlogger.addAppender(appender);
    +
    +        try {
    +            final int CLIENT_PORT_QP1 = PortAssignment.unique();
    +            final int CLIENT_PORT_QP2 = PortAssignment.unique();
    +            final int CLIENT_PORT_QP3 = PortAssignment.unique();
    +
    +            String quorumCfgIncomplete = getUniquePortCfgForId(1) + ""\n"" + getUniquePortCfgForId(2);
    +            String quorumCfgComplete = quorumCfgIncomplete + ""\n"" + getUniquePortCfgForId(3);
    +
    +            // Node 1 is started without the leader (3) in its config view
    +            MainThread q1 = new MainThread(1, CLIENT_PORT_QP1, quorumCfgIncomplete);
    +            MainThread q2 = new MainThread(2, CLIENT_PORT_QP2, quorumCfgComplete);
    +            MainThread q3 = new MainThread(3, CLIENT_PORT_QP3, quorumCfgComplete);
    +
    +            // Node 1 must be started first, before quorum is formed, to trigger the attempted invalid connection to 3
    +            q1.start();
    +            QuorumPeer quorumPeer1 = waitForQuorumPeer(q1, CONNECTION_TIMEOUT);
    +            Assert.assertTrue(quorumPeer1.getPeerState() == QuorumPeer.ServerState.LOOKING);
    +
    +            // Node 3 started second to avoid 1 and 2 forming a quorum before 3 starts up
    +            q3.start();
    +            QuorumPeer quorumPeer3 = waitForQuorumPeer(q3, CONNECTION_TIMEOUT);
    +            Assert.assertTrue(quorumPeer3.getPeerState() == QuorumPeer.ServerState.LOOKING);
    +
    +            // Node 2 started last, kicks off leader election
    +            q2.start();
    +
    +            // Nodes 2 and 3 now form quorum and fully start. 1 attempts to vote for 3, fails, returns to LOOKING state
    +            Assert.assertTrue(""waiting for server 2 to start"",
    +                    ClientBase.waitForServerUp(""127.0.0.1:"" + CLIENT_PORT_QP2, CONNECTION_TIMEOUT));
    +            Assert.assertTrue(""waiting for server 3 to start"",
    +                    ClientBase.waitForServerUp(""127.0.0.1:"" + CLIENT_PORT_QP3, CONNECTION_TIMEOUT));
    +
    +            Assert.assertTrue(q1.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LOOKING);
    +            Assert.assertTrue(q2.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.FOLLOWING);
    +            Assert.assertTrue(q3.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LEADING);
    +
    +            q1.shutdown();
    +            q2.shutdown();
    +            q3.shutdown();
    +
    +            Assert.assertTrue(""waiting for server 1 down"",
    +                    ClientBase.waitForServerDown(""127.0.0.1:"" + CLIENT_PORT_QP1,
    +                            ClientBase.CONNECTION_TIMEOUT));
    +            Assert.assertTrue(""waiting for server 2 down"",
    +                    ClientBase.waitForServerDown(""127.0.0.1:"" + CLIENT_PORT_QP2,
    +                            ClientBase.CONNECTION_TIMEOUT));
    +            Assert.assertTrue(""waiting for server 3 down"",
    +                    ClientBase.waitForServerDown(""127.0.0.1:"" + CLIENT_PORT_QP3,
    +                            ClientBase.CONNECTION_TIMEOUT));
    +
    +        } finally {
    +            qlogger.removeAppender(appender);
    +        }
    +
    +        // Verify that Node 1 never threw an exception
    +        LineNumberReader r = new LineNumberReader(new StringReader(os.toString()));
    +        String line;
    +        boolean found = false;
    +        Pattern p = Pattern.compile("".*java.lang.NullPointerException.*"");
    +        while ((line = r.readLine()) != null) {
    +            found = p.matcher(line).matches();
    +            if (found) {
    +                break;
    +            }
    +        }
    +
    +        Assert.assertFalse(""Node should not attempt connection to out of view leader"", found);
    +    }
    +
    +    private String getUniquePortCfgForId(int id) {
    +        return String.format(""server.%d=127.0.0.1:%d:%d"", id, PortAssignment.unique(), PortAssignment.unique());
    +    }
    +
    +    private QuorumPeer waitForQuorumPeer(MainThread mainThread, int timeout) {
    --- End diff --
    
    I believe this has the potential to be flaky since we can return `quorumPeer` before the thread actually starts. We should ensure that the thread started.
;;;","02/Mar/18 21:58;githubbot;Github user afine commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/476#discussion_r171970721
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---
    @@ -1012,4 +1012,113 @@ public void testFailedTxnAsPartOfQuorumLoss() throws Exception {
                 Assert.assertNull(""server "" + i + "" should not have /zk"" + leader, servers.zk[i].exists(""/zk"" + leader, false));
             }
         }
    +
    +    /**
    +     * Verify that a node without the leader in its view will not attempt to connect to the leader.
    +     */
    +    @Test
    +    public void testLeaderOutOfView() throws Exception {
    +        ClientBase.setupTestEnv();
    +
    +        Layout layout = new PatternLayout(""%d{ISO8601} [,yid:%X{myid}] - %5p [%t:%C{1}@%L] - %m%n"");
    --- End diff --
    
    It would be great if we did not specify the pattern as a literal. Take a look at some of the other tests and see if the way they get the patternlayout could apply here (`testElectionFraud` for example).
;;;","02/Mar/18 21:58;githubbot;Github user afine commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/476#discussion_r171973588
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---
    @@ -1012,4 +1012,113 @@ public void testFailedTxnAsPartOfQuorumLoss() throws Exception {
                 Assert.assertNull(""server "" + i + "" should not have /zk"" + leader, servers.zk[i].exists(""/zk"" + leader, false));
             }
         }
    +
    +    /**
    +     * Verify that a node without the leader in its view will not attempt to connect to the leader.
    +     */
    +    @Test
    +    public void testLeaderOutOfView() throws Exception {
    +        ClientBase.setupTestEnv();
    +
    +        Layout layout = new PatternLayout(""%d{ISO8601} [,yid:%X{myid}] - %5p [%t:%C{1}@%L] - %m%n"");
    +        ByteArrayOutputStream os = new ByteArrayOutputStream();
    +        WriterAppender appender = new WriterAppender(layout, os);
    +        appender.setThreshold(Level.DEBUG);
    +        Logger qlogger = Logger.getLogger(""org.apache.zookeeper.server.quorum"");
    +        qlogger.addAppender(appender);
    +
    +        try {
    +            final int CLIENT_PORT_QP1 = PortAssignment.unique();
    +            final int CLIENT_PORT_QP2 = PortAssignment.unique();
    +            final int CLIENT_PORT_QP3 = PortAssignment.unique();
    +
    +            String quorumCfgIncomplete = getUniquePortCfgForId(1) + ""\n"" + getUniquePortCfgForId(2);
    +            String quorumCfgComplete = quorumCfgIncomplete + ""\n"" + getUniquePortCfgForId(3);
    +
    +            // Node 1 is started without the leader (3) in its config view
    +            MainThread q1 = new MainThread(1, CLIENT_PORT_QP1, quorumCfgIncomplete);
    +            MainThread q2 = new MainThread(2, CLIENT_PORT_QP2, quorumCfgComplete);
    +            MainThread q3 = new MainThread(3, CLIENT_PORT_QP3, quorumCfgComplete);
    +
    +            // Node 1 must be started first, before quorum is formed, to trigger the attempted invalid connection to 3
    +            q1.start();
    +            QuorumPeer quorumPeer1 = waitForQuorumPeer(q1, CONNECTION_TIMEOUT);
    +            Assert.assertTrue(quorumPeer1.getPeerState() == QuorumPeer.ServerState.LOOKING);
    +
    +            // Node 3 started second to avoid 1 and 2 forming a quorum before 3 starts up
    +            q3.start();
    +            QuorumPeer quorumPeer3 = waitForQuorumPeer(q3, CONNECTION_TIMEOUT);
    +            Assert.assertTrue(quorumPeer3.getPeerState() == QuorumPeer.ServerState.LOOKING);
    +
    +            // Node 2 started last, kicks off leader election
    +            q2.start();
    +
    +            // Nodes 2 and 3 now form quorum and fully start. 1 attempts to vote for 3, fails, returns to LOOKING state
    +            Assert.assertTrue(""waiting for server 2 to start"",
    +                    ClientBase.waitForServerUp(""127.0.0.1:"" + CLIENT_PORT_QP2, CONNECTION_TIMEOUT));
    +            Assert.assertTrue(""waiting for server 3 to start"",
    +                    ClientBase.waitForServerUp(""127.0.0.1:"" + CLIENT_PORT_QP3, CONNECTION_TIMEOUT));
    +
    +            Assert.assertTrue(q1.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LOOKING);
    +            Assert.assertTrue(q2.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.FOLLOWING);
    +            Assert.assertTrue(q3.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LEADING);
    +
    +            q1.shutdown();
    +            q2.shutdown();
    +            q3.shutdown();
    +
    +            Assert.assertTrue(""waiting for server 1 down"",
    +                    ClientBase.waitForServerDown(""127.0.0.1:"" + CLIENT_PORT_QP1,
    +                            ClientBase.CONNECTION_TIMEOUT));
    +            Assert.assertTrue(""waiting for server 2 down"",
    +                    ClientBase.waitForServerDown(""127.0.0.1:"" + CLIENT_PORT_QP2,
    +                            ClientBase.CONNECTION_TIMEOUT));
    +            Assert.assertTrue(""waiting for server 3 down"",
    +                    ClientBase.waitForServerDown(""127.0.0.1:"" + CLIENT_PORT_QP3,
    +                            ClientBase.CONNECTION_TIMEOUT));
    +
    +        } finally {
    +            qlogger.removeAppender(appender);
    +        }
    +
    +        // Verify that Node 1 never threw an exception
    +        LineNumberReader r = new LineNumberReader(new StringReader(os.toString()));
    +        String line;
    +        boolean found = false;
    +        Pattern p = Pattern.compile("".*java.lang.NullPointerException.*"");
    --- End diff --
    
    It would be great to have a more direct way of expressing that this member never enters the following state. Can we check the logs for `FOLLOWING` like in `testElectionFraud`?
;;;","02/Mar/18 21:58;githubbot;Github user afine commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/476#discussion_r171972767
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java ---
    @@ -1064,7 +1065,12 @@ else if (self.getCurrentAndNextConfigVoters().contains(n.sid)) {
                             break;
                         }
                     } else {
    -                    LOG.warn(""Ignoring notification from non-cluster member "" + n.sid);
    +                    if (!self.getCurrentAndNextConfigVoters().contains(n.leader)) {
    +                        LOG.warn(""Ignoring notification for non-cluster member sid {} from sid {}"", n.leader, n.sid);
    +                    }
    +                    if (!self.getCurrentAndNextConfigVoters().contains(n.sid)) {
    +                        LOG.warn(""Ignoring notification from non-cluster member sid {}"", n.sid);
    --- End diff --
    
    nit: lets say ""quorum"" instead of ""cluster""
;;;","02/Mar/18 21:58;githubbot;Github user afine commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/476#discussion_r171964902
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java ---
    @@ -1064,7 +1065,12 @@ else if (self.getCurrentAndNextConfigVoters().contains(n.sid)) {
                             break;
                         }
                     } else {
    -                    LOG.warn(""Ignoring notification from non-cluster member "" + n.sid);
    +                    if (!self.getCurrentAndNextConfigVoters().contains(n.leader)) {
    +                        LOG.warn(""Ignoring notification for non-cluster member sid {} from sid {}"", n.leader, n.sid);
    +                    }
    +                    if (!self.getCurrentAndNextConfigVoters().contains(n.sid)) {
    +                        LOG.warn(""Ignoring notification from non-cluster member sid {}"", n.sid);
    --- End diff --
    
    lets log which member was voted for
;;;","28/Mar/18 10:12;githubbot;Github user maoling commented on the issue:

    https://github.com/apache/zookeeper/pull/476
  
    @enixon can we move on ?
;;;","10/Apr/18 17:12;githubbot;Github user enixon commented on the issue:

    https://github.com/apache/zookeeper/pull/476
  
    @maoling I was about 2/3 done with cleaning up this diff when I got dragged into different projects. Thanks for the ping, I'll try to update here this week.
;;;","13/Apr/18 07:04;githubbot;Github user enixon commented on the issue:

    https://github.com/apache/zookeeper/pull/476
  
    Made all changes requested in comments, I can alter the pull requests for the other ZooKeeper branches once we reach agreement on this one.
;;;","17/Apr/18 04:53;githubbot;Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/476
  
    @enixon testLeaderOutOfView deterministically fails for me both locally and on Jenkins. Please take a look.
;;;","17/Apr/18 15:17;githubbot;Github user enixon commented on the issue:

    https://github.com/apache/zookeeper/pull/476
  
    Tests passing again.
    
    This is what can happen when you use a different logging config and your tests rely on scraping the logs.  :(
;;;","17/Apr/18 15:49;githubbot;Github user eribeiro commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/476#discussion_r182127687
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java ---
    @@ -927,10 +927,11 @@ public Vote lookForLeader() throws InterruptedException {
                                 tmpTimeOut : maxNotificationInterval);
                         LOG.info(""Notification time out: "" + notTimeout);
                     } 
    -                else if (self.getCurrentAndNextConfigVoters().contains(n.sid)) {
    +                else if (self.getCurrentAndNextConfigVoters().contains(n.sid) &&
    --- End diff --
    
    As this PR modifies this line and add similar ones, wouldn't be the case of creating a private method with a meaningful name like below?
    ```
    private boolean configVotersContains(long sid) {
        return self.getCurrentAndNextConfigVoters().contains(sid);
    }
    ```
    
    This makes this line and the lines below more readable, imho.
;;;","17/Apr/18 18:06;githubbot;Github user enixon commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/476#discussion_r182175483
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java ---
    @@ -927,10 +927,11 @@ public Vote lookForLeader() throws InterruptedException {
                                 tmpTimeOut : maxNotificationInterval);
                         LOG.info(""Notification time out: "" + notTimeout);
                     } 
    -                else if (self.getCurrentAndNextConfigVoters().contains(n.sid)) {
    +                else if (self.getCurrentAndNextConfigVoters().contains(n.sid) &&
    --- End diff --
    
    There are five uses of `getCurrentAndNextConfigVoters().contains` in the class, seems reasonable to make it a method.
;;;","18/Apr/18 05:56;githubbot;Github user enixon commented on the issue:

    https://github.com/apache/zookeeper/pull/476
  
    What's the build failure on this commit?
;;;","18/Apr/18 06:30;githubbot;Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/476
  
    @enixon this: https://issues.apache.org/jira/browse/INFRA-16349
;;;","30/Apr/18 04:35;hanm;Issue resolved by pull request 476
[https://github.com/apache/zookeeper/pull/476];;;","30/Apr/18 04:35;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/476
;;;","30/Apr/18 04:45;hanm;I've committed this to 3.5 and master. Thanks for the patch [~nixon]. Is the patch also applicable to 3.4? I assume this happens only in 3.5+ with dynamic reconfiguration. ;;;","30/Apr/18 06:29;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #6 (See [https://builds.apache.org/job/ZooKeeper-trunk/6/])
ZOOKEEPER-2988: NPE triggered if server receives a vote for a server … (hanm: rev 2022766ec907f63b1b43fc5455e9e7761cd332f6)
* (edit) src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java
* (edit) src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java
;;;","30/Apr/18 18:33;enixon;[~hanm] thanks for merging it to 3.5 too, I'll shut down that second pr. This bug is applicable to 3.4 as well - imo it's a worse danger on that branch since its easy for configuration files to be stale. I'll fix up pr 478 for the 3.4 branch to reflect the comments I got on pr 476 so it can be ready for review.;;;","30/Apr/18 18:35;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1655//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1655//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1655//console

This message is automatically generated.;;;","30/Apr/18 20:31;githubbot;Github user enixon commented on the issue:

    https://github.com/apache/zookeeper/pull/477
  
    Change merged to branch-3.5 with https://github.com/apache/zookeeper/pull/476, closing this PR as redundant. 
;;;","30/Apr/18 20:31;githubbot;Github user enixon closed the pull request at:

    https://github.com/apache/zookeeper/pull/477
;;;","30/Apr/18 21:21;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1656//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1656//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1656//console

This message is automatically generated.;;;","01/May/18 19:41;githubbot;Github user enixon commented on the issue:

    https://github.com/apache/zookeeper/pull/478
  
    The only failure report out of Jenkins is ""Test org.apache.zookeeper.test.FollowerResyncConcurrencyTest FAILED (crashed)"". I'm unable to repro any issue with that test on my branch locally, is there a good way to re-run the test?
;;;","02/May/18 04:19;githubbot;Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/478
  
    @enixon ""FollowerResyncConcurrencyTest "" is a known flaky test (and the error in this case is infrastructure issues - the JVM abnormally exit). I tested your patch using a Jenkins job and everything looks good. Committed, please close this pull request.
    
    >> is there a good way to re-run the test
    
    P.S. to kick off the pre-commit build bot, you can close the pull request and reopen it.
;;;","02/May/18 04:20;hanm;{quote}This bug is applicable to 3.4 as well - imo it's a worse danger on that branch since its easy for configuration files to be stale.
{quote}
Make sense. Just committed the patch for branch-3.4, and updated the Jira fixed version to include 3.4.;;;","02/May/18 06:10;githubbot;Github user enixon commented on the issue:

    https://github.com/apache/zookeeper/pull/478
  
    Thanks, @hanm !
;;;","02/May/18 06:10;githubbot;Github user enixon closed the pull request at:

    https://github.com/apache/zookeeper/pull/478
;;;",,,,,,,,,,,,,,,,,,,,,
fix potential null pointer exception when deleting node,ZOOKEEPER-2978,13137864,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,,achimbab,achimbab,12/Feb/18 13:57,20/Feb/18 23:35,29/Jun/25 13:34,20/Feb/18 22:38,3.4.11,,,,,,,,,,,,,,,,,,,,,,,,3.4.12,3.5.4,3.6.0,,,java client,,,,,0,,,"At line 518, 'existWatches.remove(clientPath)' is null because watches for clientPath is already removed.

https://github.com/apache/zookeeper/pull/461/commits/a6044af23ae1096a8c5305633320fa139cf730b2

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,9223372036854775807,,,,,Tue Feb 20 23:35:21 UTC 2018,,,,,,,,,,"0|i3q2lb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Feb/18 22:06;githubbot;Github user afine commented on the issue:

    https://github.com/apache/zookeeper/pull/461
  
    @achimbab Thanks for the patch.
    
    I'm wondering if you ran into this bug while running ZooKeeper? This code is pretty old and should never actually be executed (for reasons described here: https://github.com/apache/zookeeper/pull/461/files#diff-e08c1cfd3802a0c3156847175ab8e24bR514). 
    
    I would be happy to merge in this fix but please rename the JIRA and the pull request to something more descriptive (as I do not have permissions to change the name of a Pull Request). Something like ""fix potential null pointer exception when deleting node"".
;;;","17/Feb/18 10:39;githubbot;Github user achimbab commented on the issue:

    https://github.com/apache/zookeeper/pull/461
  
    @afine 
    No, I didn't run into this bug.
    I'm renamed the JIRA, the pull request and the commit message.
    Thank you.
;;;","20/Feb/18 22:38;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/461
;;;","20/Feb/18 22:38;abrahamfine;Issue resolved by pull request 461
[https://github.com/apache/zookeeper/pull/461];;;","20/Feb/18 23:35;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3733 (See [https://builds.apache.org/job/ZooKeeper-trunk/3733/])
ZOOKEEPER-2978: fix potential null pointer exception when deleting node (afine: rev f0b67b6e49acec5f022bee25e08f82a29572c97a)
* (edit) src/java/main/org/apache/zookeeper/ZooKeeper.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""Unreasonable length"" exception ",ZOOKEEPER-2973,13135021,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,wanggang_123,wanggang_123,31/Jan/18 08:45,06/Jan/21 10:38,29/Jun/25 13:34,,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,"I am running a three node ZooKeeper cluster. At 2018-01-28 17:56:30,leader node has error log:

2018-01-28 17:56:30 [UTC:20180128T175630+0800]|ERROR||LearnerHandler-/118.123.180.23:44836hread|Coordination > Unexpected exception causing shutdown while sock still open (LearnerHandler.java:633)
java.io.IOException: Unreasonable length = 1885430131
 at org.apache.jute.BinaryInputArchive.readBuffer(BinaryInputArchive.java:95)
 at org.apache.zookeeper.server.quorum.QuorumPacket.deserialize(QuorumPacket.java:85)
 at org.apache.jute.BinaryInputArchive.readRecord(BinaryInputArchive.java:103)
 at org.apache.zookeeper.server.quorum.LearnerHandler.run(LearnerHandler.java:546)
2018-01-28 17:56:30 [UTC:20180128T175630+0800]|WARN ||LearnerHandler-/118.123.180.23:44836hread|Coordination > ******* GOODBYE /118.123.180.23:44836 ******** (LearnerHandler.java:646)
2018-01-28 17:56:30 [UTC:20180128T175630+0800]|INFO ||ProcessThread(sid:2 cport:-1):hread|Coordination > Got user-level KeeperException when processing sessionid:0x16138593ad43cf9 type:delete cxid:0x5 zxid:0xc104b59e9 txntype:-1 reqpath:n/a Error Path:/VSP/Leader/syncScore-0/_c_9101a3d6-f431-4792-b71d-a493e938895d-latch-0000093037 Error:KeeperErrorCode = NoNode for /VSP/Leader/syncScore-0/_c_9101a3d6-f431-4792-b71d-a493e938895d-latch-0000093037 (PrepRequestProcessor.java:645)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Jan 06 10:38:47 UTC 2021,,,,,,,,,,"0|i3pl2n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Jan/18 10:03;wuyiyun;I met this problem too, while i use open ssl capability on zookeeper server and zookeeper client. while i close ssl capability and will not cause this problem.

you can modify source of BinaryInputArchive like below and find what

public String readString(String tag) throws IOException {
 int len = in.readInt();
 if (len == -1) return null; 
 
 checkLength(len);
 byte b[] = new byte[len];
 in.readFully(b); 
 String tobeReturnString = new String(b, ""UTF8"");
 LOG.info(""####################Just readString String's lengh=""+len+"" and this string is:""+tobeReturnString);
 
 return tobeReturnString;
 }
 
 static public final int maxBuffer = Integer.getInteger(""jute.maxbuffer"", 0xfffff);

public byte[] readBuffer(String tag) throws IOException {
 int len = readInt(tag);
 if (len == -1) return null;
 checkLength(len);
 byte[] arr = new byte[len];
 in.readFully(arr); 
 String tobeReturnString = new String(arr, ""UTF8"");
 LOG.info(""####################Just readBuffer String's lengh=""+len+"" and this string is:""+tobeReturnString);
 return arr;
 };;;","31/Jan/18 10:18;wanggang_123;你好，我这边的zookeeper，是偶现shutdown，你遇到的也是吗？

这个问题的触发条件是什么啊？如何能够复现？;;;","01/Feb/18 01:01;wuyiyun;Me too!. I met OutOfMemory error cause zookeeper shutdown. but you can add crontab task to restart zookeeper to resolve this issue. 

Of course, you should insure that zookeeper client jar has same version with zookeeper server firstly.;;;","02/Feb/18 07:17;beeflyme; I met OutOfMemory error cause zookeeper shutdown. and restart not ok.

   1.   Maybe the client write too much too the ZooKeeper, which bigger than the  jute.maxbuffer

  

https://issues.apache.org/jira/browse/ZOOKEEPER-2101    Transaction larger than max buffer of jute makes zookeeper unavailable

 ;;;","02/Feb/18 07:59;wuyiyun;Yes, that is one reason and easy to resolve. But i know that even if i send  length of data just no more than one hundred byte, once enabled ssl capability, several hours later, just zookeeper leader node will get this exception.

 I met OutOfMemory error cause zookeeper shutdown. and restart not ok.

   1.   Maybe the client write too much too the ZooKeeper, which bigger than the  jute.maxbuffer;;;","16/Jun/19 11:07;eolivelli;Is there any reproducer for this issue ?
Is this issue still valid on 3.5 (or current 3.6.0-SNAPSHOT) ?
;;;","06/Jan/21 10:38;ztzg;Same question as [~eolivelli] above.  Downgrading from blocker.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
C API Log Callback Lacks Context,ZOOKEEPER-2969,13132316,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,tgockel,tgockel,19/Jan/18 23:38,20/Jan/18 00:02,29/Jun/25 13:34,,3.5.2,3.5.3,3.6.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,"I have two zhandle_ts connected to two different ZK ensembles. Differentiating between log messages of the two is quite difficult, as the callback only gives you the message, with no reasonable way to grab connection that created it (the address of the handle is in the log message, but parsing this value seems rather error-prone). It would be nice if the log callback gave me the handle.
  

I attached a patch for a potential fix...it adds a few functions without breaking backwards compatibility:

 

{{typedef void (*log_callback_ext_fn)(const zhandle_t *zh,}}
 {{    const void *log_context, ZooLogLevel level, const char *message);}}

{{ZOOAPI void zoo_get_log_callback_ext(const zhandle_t *zh,}}
 {{    log_callback_ext_fn *callback, const void **context);}}

{{ZOOAPI void zoo_set_log_callback_ext(zhandle_t *zh,}}
 {{    log_callback_ext_fn callback, const void *context);}}

{{ZOOAPI zhandle_t *zookeeper_init3(const char *host, watcher_fn fn,}}
 {{  int recv_timeout, const clientid_t *clientid, void *context, int flags,}}
 {{  log_callback_ext_fn log_callback, const void *log_callback_context);}}

 

The fallback ordering is changed to: log_callback_ext_fn -> log_callback_fn -> global stream.

Let me know if this is completely crazy.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jan/18 23:28;tgockel;c_log_callback_ext.patch;https://issues.apache.org/jira/secure/attachment/12906905/c_log_callback_ext.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sat Jan 20 00:02:51 UTC 2018,,,,,,,,,,"0|i3p4zj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Jan/18 00:02;tgockel;Might also be worth noting I uploaded the change to GitHub https://github.com/tgockel/zookeeper/tree/ZOOKEEPER-2969/c-log-callback-ext;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""Conf"" command returns dataDir and dataLogDir opposingly",ZOOKEEPER-2964,13129166,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,,xuqihong,xuqihong,08/Jan/18 06:51,04/Oct/19 14:55,29/Jun/25 13:34,19/Jan/18 00:13,3.5.3,3.6.0,,,,,,,,,,,,,,,,,,,,,,,3.5.4,3.6.0,,,,server,,,,,0,,,"I foung a bug that ""conf"" command would return dataDir and dataLogDir opposingly.

This bug only exists in versions newer than 3.5. I only found dumpConf in [ZookeeperServer.java|https://github.com/apache/zookeeper/blob/master/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java#L188] prints these two paths opposingly. Unlike ZOOKEEPER-2960, the actual paths are not affected and server function is ok.

I made a small patch to fix this bug. Any review is appreciated.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jan/18 07:00;xuqihong;ZOOKEEPER-2964.patch;https://issues.apache.org/jira/secure/attachment/12905035/ZOOKEEPER-2964.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Jan 19 00:33:39 UTC 2018,,,,,,,,,,"0|i3omfr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Jan/18 00:07;phunt;[~fournc] [~abrahamfine] is this related to the issue you recently resolved against 3.4.11?;;;","18/Jan/18 01:22;abrahamfine;[~andor] can you confirm?;;;","18/Jan/18 05:07;andor;[~phunt] [~abrahamfine]

No, the issue is similar, but it's completely unrelated. This one is caused by:

https://issues.apache.org/jira/browse/ZOOKEEPER-1423

It only applies to master and branch-3.5 branches, on branch-3.4 the conf command is right.

The attached patch fixes it.

[~xuqihong] are u happy to create github pull request?;;;","18/Jan/18 07:56;githubbot;GitHub user qihongxu opened a pull request:

    https://github.com/apache/zookeeper/pull/449

    ZOOKEEPER-2964: ""Conf"" command returns dataDir and dataLogDir opposingly

    See [https://issues.apache.org/jira/browse/ZOOKEEPER-2964](url) for details.
    
    The bug affects versions newer than 3.5. According to Andor Molnar‘s [review](https://issues.apache.org/jira/browse/ZOOKEEPER-2964?focusedCommentId=16330018&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16330018) this patch can be applied to master and branch-3.5 branches.
    
    Thanks all for reviewing this issue.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/qihongxu/zookeeper ZOOKEEPER-2964

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/449.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #449
    
----
commit d1b8824fe41dafeb2547b9497b62edd140fa320f
Author: Qihong Xu <qihongxu@...>
Date:   2018-01-18T07:34:01Z

    dataDir and dataLogDir are printed opposingly

----
;;;","19/Jan/18 00:12;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/449
;;;","19/Jan/18 00:13;phunt;Issue resolved by pull request 449
[https://github.com/apache/zookeeper/pull/449];;;","19/Jan/18 00:33;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3697 (See [https://builds.apache.org/job/ZooKeeper-trunk/3697/])
ZOOKEEPER-2964: Conf"" command returns dataDir and dataLogDir opposingly (phunt: rev 78708a8587841ccdcb3d07f33d3114e0c8cfc380)
* (edit) src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicate Keys in log4j.properties config files,ZOOKEEPER-2936,13117018,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,,harisekhon,harisekhon,08/Nov/17 15:51,02/Mar/18 22:35,29/Jun/25 13:34,02/Mar/18 22:13,3.4.8,3.5.3,3.6.0,,,,,,,,,,,,,,,,,,,,,,3.4.12,3.5.4,3.6.0,,,contrib,other,,,,0,,,"Recent versions of ZooKeeper have introduced the following duplicate keys in to the contrib log4j.properties files.

In this file:
{code}
./zookeeper-3.4.8/contrib/rest/conf/log4j.properties
{code}
and this file:
{code}
./zookeeper-3.4.8/src/contrib/rest/conf/log4j.properties
{code}

the following duplicate keys are found:

{code}
log4j.appender.ROLLINGFILE.layout=org.apache.log4j.PatternLayout
log4j.appender.ROLLINGFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n
{code}

This was discovered because I've written file validators for most major formats which recurse all my github repos and this was failing my integration tests when pulling ZooKeeper source code. I actually added --exclude and --ignore-duplicate-keys switches to {code}validate_ini.py{code} to work around this and fix my builds for now but just remembered to raise this to you guys.

The validator tools if you're interested can be found at:

https://github.com/harisekhon/pytools

Cheers

Hari",Apache ZooKeeper source tarball,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Mar 02 22:35:00 UTC 2018,,,,,,,,,,"0|i3mjtj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Feb/18 23:40;githubbot;GitHub user asutosh936 opened a pull request:

    https://github.com/apache/zookeeper/pull/473

    ZOOKEEPER-2936 - Removed duplicate code

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/asutosh936/zookeeper master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/473.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #473
    
----
commit a02ef3db8d18cc738a1a3e24eafcaa0b5379d297
Author: asutosh936 <asutosh.pandya@...>
Date:   2018-02-25T23:40:14Z

    ZOOKEEPER-2936 - Removed duplicate code

----
;;;","25/Feb/18 23:53;asutosh_pandya;[~harisekhon]

 

Have created pull request for above issue: [https://github.com/apache/zookeeper/pull/473.]

I am trying to attach the patch as well but unable to do that, also am not able to assign the issue to myself. Let me know if I need to send a patch through other digital medium.

Best Regards,

Asutosh

 ;;;","28/Feb/18 03:20;githubbot;Github user asutosh936 commented on the issue:

    https://github.com/apache/zookeeper/pull/473
  
    Can someone please review and merge this PR.
;;;","01/Mar/18 01:25;githubbot;Github user asutosh936 commented on the issue:

    https://github.com/apache/zookeeper/pull/473
  
    @anmolnar - Thanks for the Review.
    
    The issue is about having duplicate keys for ROLLINGFILE layout and conversion pattern. The fix is to remove the duplicate keys from the file. As rightly said there is no reason of commenting the code, instead deleting it. Please review.
;;;","02/Mar/18 02:45;githubbot;Github user asutosh936 commented on the issue:

    https://github.com/apache/zookeeper/pull/473
  
    @anmolnar - Could You or someone from Your team please merge this PR?
;;;","02/Mar/18 04:41;githubbot;Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/473
  
    @afine please take a look, I think this is ready to commit. thanks.
;;;","02/Mar/18 22:12;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/473
;;;","02/Mar/18 22:13;abrahamfine;Issue resolved by pull request 473
[https://github.com/apache/zookeeper/pull/473];;;","02/Mar/18 22:14;githubbot;Github user afine commented on the issue:

    https://github.com/apache/zookeeper/pull/473
  
    Thanks @asutosh936!
;;;","02/Mar/18 22:35;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3747 (See [https://builds.apache.org/job/ZooKeeper-trunk/3747/])
ZOOKEEPER-2936: Removed duplicate code (afine: rev ecb1162ec7f381963fb3263c7971a85fc35b27c8)
* (edit) src/contrib/rest/conf/log4j.properties
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The comment of the variable matchSyncs in class CommitProcessor has a mistake.,ZOOKEEPER-2923,13111270,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,jiangjiafu,jiangjiafu,jiangjiafu,23/Oct/17 02:25,15/Nov/17 22:32,29/Jun/25 13:34,15/Nov/17 21:48,3.4.10,3.5.3,,,,,,,,,,,,,,,,,,,,,,,3.4.12,3.5.4,3.6.0,,,quorum,,,,,0,,,"The comment of the  variable matchSyncs in class CommitProcessor says:


{code:java}
    /**
     * This flag indicates whether we need to wait for a response to come back from the
     * leader or we just let the sync operation flow through like a read. The flag will
     * be true if the CommitProcessor is in a Leader pipeline.
     */
    boolean matchSyncs;
{code}

I search the source code and find that matchSyncs will be false if  the CommitProcessor is in a Leader pipeline, and it will be true if the CommitProcessor  is in a Follower pipeline.
Therefore I think the comment should be modified to match the code.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,Reviewed,,,,Wed Nov 15 22:32:22 UTC 2017,,,,,,,,,,"0|i3lkfj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Oct/17 10:07;githubbot;GitHub user JiangJiafu opened a pull request:

    https://github.com/apache/zookeeper/pull/408

    ZOOKEEPER-2923

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/JiangJiafu/zookeeper ZOOKEEPER-2923

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/408.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #408
    
----
commit b6eb491d7dd1bd8a4db93813bb62c6abf4efe31e
Author: Jiafu Jiang <jiangjiafu1989@gmail.com>
Date:   2017-10-26T10:05:05Z

    ZOOKEEPER-2923

----
;;;","15/Nov/17 21:47;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/408
;;;","15/Nov/17 21:48;phunt;+1 - thanks Jiafu!;;;","15/Nov/17 22:32;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3610 (See [https://builds.apache.org/job/ZooKeeper-trunk/3610/])
ZOOKEEPER-2923: The comment of the variable matchSyncs in class (phunt: rev 0fe7a09ab57c73c3a5c91e68a889f600c0739136)
* (edit) src/java/main/org/apache/zookeeper/server/quorum/CommitProcessor.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
compiler warning using java 9,ZOOKEEPER-2914,13107006,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,andor,phunt,phunt,04/Oct/17 17:41,08/Oct/17 12:24,29/Jun/25 13:34,07/Oct/17 19:25,3.4.11,3.5.4,3.6.0,,,,,,,,,,,,,,,,,,,,,,3.4.11,3.5.4,3.6.0,,,build,,,,,0,newbie,,"There are a number of warnings that crop up on branch 3.4/3.5/trunk when compiling ""ant clean compile-test"" using java 9.

Perhaps someone can verify/fix any warning across the jdks that we support (jdk6/7/8/9) and 9 in particular since it's just reached GA.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sun Oct 08 12:24:40 UTC 2017,,,,,,,,,,"0|i3kvm7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Oct/17 18:59;githubbot;GitHub user dolphy17 opened a pull request:

    https://github.com/apache/zookeeper/pull/392

    ZOOKEEPER-2914 compiler warning using java 9

    Replaced deprecated methods (Class.newInstance()) and removed redundant cast

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/dolphy17/zookeeper ZOOKEEPER-2914

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/392.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #392
    
----
commit b2d400bc094afead646a56ab3edadfa5166f13ad
Author: Andor Molnar <andor@cloudera.com>
Date:   2017-10-05T18:57:18Z

    Replaced Class.newInstance() methods (deprecated in Java 9) with Constructor.newInstance()

----
;;;","05/Oct/17 20:57;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1084//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1084//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1084//console

This message is automatically generated.;;;","06/Oct/17 00:11;githubbot;Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/392
  
    Thanks @dolphy17 - I will look at this, but I already noticed that it's not applying to branch-3.4 (it does apply cleanly to branch-3.5 and trunk) - can you submit a separate pull request for branch-3.4?
;;;","06/Oct/17 16:48;githubbot;GitHub user dolphy17 opened a pull request:

    https://github.com/apache/zookeeper/pull/393

    ZOOKEEPER-2914: Clear or suppress Java 9 compiler warning messages

    It was a little bit trickier than trunk, but I've tried to do my best to remove almost all warnings.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/dolphy17/zookeeper ZOOKEEPER-2914-3.4

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/393.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #393
    
----
commit 3b9bec4aab65deeecf1844a13c21c92ab84b7054
Author: Andor Molnar <andor@cloudera.com>
Date:   2017-10-06T16:45:53Z

    ZOOKEEPER-2914: Clear or suppress Java 9 compiler warning messages

----
;;;","06/Oct/17 16:50;githubbot;Github user dolphy17 commented on the issue:

    https://github.com/apache/zookeeper/pull/392
  
    Thanks for looking into @phunt 
    #393 has been created for branch-3.4 (a little bit trickier than trunk), please a take a look also.
;;;","06/Oct/17 17:24;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 10 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1085//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1085//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1085//console

This message is automatically generated.;;;","07/Oct/17 19:21;githubbot;Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/393
  
    Thanks @dolphy17 . In future please try to base on a branch as close to the current head of the release branch as possible (helps in testing/signoff). Also this is not the default branch for the repo so you'll need to close manually.
;;;","07/Oct/17 19:24;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/392
;;;","07/Oct/17 19:25;phunt;Issue resolved by pull request 392
[https://github.com/apache/zookeeper/pull/392];;;","07/Oct/17 19:26;githubbot;Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/392
  
    Thanks @dolphy17 ! Committed to trunk/branch3.5 (separate PR for branch-3.4 also committed)
;;;","07/Oct/17 20:05;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3566 (See [https://builds.apache.org/job/ZooKeeper-trunk/3566/])
ZOOKEEPER-2914: compiler warning using java 9 (phunt: rev fb10c2b54698c8aab4477670bb0d6f7fe99c5c43)
* (edit) src/java/main/org/apache/zookeeper/jmx/ManagedUtil.java
* (edit) src/java/main/org/apache/zookeeper/server/NIOServerCnxn.java
* (edit) src/java/main/org/apache/zookeeper/server/ServerCnxnFactory.java
* (edit) src/java/main/org/apache/zookeeper/server/auth/ProviderRegistry.java
;;;","08/Oct/17 11:51;githubbot;Github user dolphy17 closed the pull request at:

    https://github.com/apache/zookeeper/pull/393
;;;","08/Oct/17 11:51;githubbot;GitHub user dolphy17 reopened a pull request:

    https://github.com/apache/zookeeper/pull/393

    ZOOKEEPER-2914: Clear or suppress Java 9 compiler warning messages

    It was a little bit trickier than trunk, but I've tried to do my best to remove almost all warnings.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/dolphy17/zookeeper ZOOKEEPER-2914-3.4

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/393.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #393
    
----
commit 3b9bec4aab65deeecf1844a13c21c92ab84b7054
Author: Andor Molnar <andor@cloudera.com>
Date:   2017-10-06T16:45:53Z

    ZOOKEEPER-2914: Clear or suppress Java 9 compiler warning messages

----
;;;","08/Oct/17 12:07;githubbot;Github user dolphy17 closed the pull request at:

    https://github.com/apache/zookeeper/pull/393
;;;","08/Oct/17 12:09;githubbot;Github user dolphy17 commented on the issue:

    https://github.com/apache/zookeeper/pull/393
  
    Sure. I might have forgotten to fast forward branch-3.4 before patching it if that's what you mean.
    Thanks @phunt .
;;;","08/Oct/17 12:24;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 10 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1092//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1092//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1092//console

This message is automatically generated.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
downconfig downloads empty file as folder,ZOOKEEPER-2863,13092520,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,,igiguere,igiguere,04/Aug/17 16:31,04/Aug/17 17:53,29/Jun/25 13:34,04/Aug/17 17:53,3.4.10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,"When downloading a config (ex: a Solr config) from Zookeeper 3.4.10, if a file is empty, it is downloaded as a folder (on Windows, at least).

A Zookeeper browser (Eclipse: Zookeeper Explorer) shows the file as a file, however, in ZK.

Noticed because we keep an empty synonyms.txt file in the Solr config provided with our product, in case a client would want to use it.

The workaround is simple, if the file allows comments: just add a comment, so it is not empty.",Windows 7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Aug 04 17:53:56 UTC 2017,,,,,,,,,,"0|i3ifin:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Aug/17 17:53;igiguere;Sorry for the spam.  Command downconfig is from Solr's zkCli
https://cwiki.apache.org/confluence/display/solr/Command+Line+Utilities

I created this ticket instead, if anyone notices the same issue : SOLR-11198;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"fatjar invalid, contains incomplete signature",ZOOKEEPER-2854,13089525,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,fragfutter,fragfutter,24/Jul/17 13:08,20/May/18 01:08,29/Jun/25 13:34,,3.4.10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,contrib-fatjar,,,,,2,,,"The fatjar in 3.4.10 contains signature parts (META-INF/BCKEY.DSA and META-INF/BCKEY.SF). As a result it is not runnable

Exception in thread ""main"" java.lang.SecurityException: Invalid signature file digest for Manifest main attributes

deleting these from the jar solves the issue.
{{zip -d contrib/fatjar/*-fatjar.jar 'META-INF/*.SF' 'META-INF/*.DSA'}}

As far as i know a jar is signed all or nothing.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sun May 20 01:08:22 UTC 2018,,,,,,,,,,"0|i3hxin:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/May/18 10:41;dawinter;The signature is still invalid. Any update?;;;","20/May/18 01:08;phunt;I don't believe anyone has submitting a patch for this. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Getting this error in ZK server logs : shutdown Leader! reason: Not sufficient followers synced, only synced with sids",ZOOKEEPER-2848,13088404,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Not A Bug,hanm,cdprashanth,cdprashanth,19/Jul/17 13:48,01/Jun/18 22:03,29/Jun/25 13:34,01/Jun/18 22:03,3.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,server,,,,,0,configuration,,"Hi
I am seeing below error in ZK logs :
 ""Unexpected exception causing shutdown while sock still open java.io.EOFException""
and then  ZK server shuts down with ""shutdown Leader! reason: Not sufficient followers synced, only synced with sids: "" error.

I am using zookeeper-3.5.1-alpha version.
it is ensemble of 2 servers
Could you please help me resolve this issue
Thanks
 
config
{code:java}

initLimit=10
syncLimit=5
maxClientCnxns=0
tickTime=2000
quorumListenOnAllIPs=true
dataDir=/var/run/zookeeper/conf/default
admin.enableServer=false
standaloneEnabled=false

{code}

zookeeper server logs 
{code:java}

114829 2017-06-22 11:24:18,182 [myid:2147483652] - INFO  [ProcessThread(sid:2147483652 cport:-1)::PrepRequestProcessor@649] - Processed session termination for sessionid:                  0x40000007cef003d
114830 2017-06-22 11:24:18,182 [myid:2147483652] - INFO  [NIOWorkerThread-8:MBeanRegistry@119] - Unregister MBean [org.apache.ZooKeeperService:name0=ReplicatedServer_id2147483652,         name1=replica.2147483652,name2=Leader,name3=Connections,name4=128.0.0.5,name5=0x40000007cef003d]
114831 2017-06-22 11:24:18,183 [myid:2147483652] - INFO  [NIOWorkerThread-8:NIOServerCnxn@606] - Closed socket connection for client /128.0.0.5:34651 which had sessionid                   0x40000007cef003d
114832 2017-06-22 11:24:18,421 [myid:2147483652] - ERROR [LearnerHandler-/128.0.0.5:33610:LearnerHandler@604] - Unexpected exception causing shutdown while sock still open
114833 java.io.EOFException
114834     at java.io.DataInputStream.readInt(DataInputStream.java:403)
114835     at org.apache.jute.BinaryInputArchive.readInt(BinaryInputArchive.java:63)
114836     at org.apache.zookeeper.server.quorum.QuorumPacket.deserialize(QuorumPacket.java:83)
114837     at org.apache.jute.BinaryInputArchive.readRecord(BinaryInputArchive.java:99)
114838     at org.apache.zookeeper.server.quorum.LearnerHandler.run(LearnerHandler.java:515)
114839 2017-06-22 11:24:18,422 [myid:2147483652] - WARN  [LearnerHandler-/128.0.0.5:33610:LearnerHandler@619] - ******* GOODBYE /128.0.0.5:33610 ********
114840 2017-06-22 11:24:18,422 [myid:2147483652] - INFO  [NIOServerCxnFactory.AcceptThread:/0.0.0.0:61808:NIOServerCnxnFactory$AcceptThread@296] - Accepted socket connection from /        128.0.0.4:42854
114841 2017-06-22 11:24:18,422 [myid:2147483652] - INFO  [NIOWorkerThread-4:ZooKeeperServer@969] - Client attempting to renew session 0x40000007cef0001 at /128.0.0.4:42854
114842 2017-06-22 11:24:18,422 [myid:2147483652] - INFO  [NIOWorkerThread-4:ZooKeeperServer@678] - Established session 0x40000007cef0001 with negotiated timeout 20000 for client /         128.0.0.4:42854
114843 2017-06-22 11:24:18,423 [myid:2147483652] - INFO  [NIOServerCxnFactory.AcceptThread:/0.0.0.0:61808:NIOServerCnxnFactory$AcceptThread@296] - Accepted socket connection from /        128.0.0.4:42862
114844 2017-06-22 11:24:18,423 [myid:2147483652] - INFO  [NIOServerCxnFactory.AcceptThread:/0.0.0.0:61808:NIOSe
 
{code}

 
 After some time ..

{code:java}
 
114851 2017-06-22 11:24:18,423 [myid:2147483652] - INFO  [NIOWorkerThread-12:ZooKeeperServer@678] - Established session 0x40000007cef0003 with negotiated timeout 20000 for client /        128.0.0.4:42866
114852 2017-06-22 11:24:19,001 [myid:2147483652] - INFO  [NIOServerCxnFactory.AcceptThread:/0.0.0.0:61808:NIOServerCnxnFactory$AcceptThread@296] - Accepted socket connection from /        128.0.0.4:42892
114853 2017-06-22 11:24:19,001 [myid:2147483652] - INFO  [NIOWorkerThread-13:ZooKeeperServer@964] - Client attempting to establish new session at /128.0.0.4:42892
114854 2017-06-22 11:24:19,211 [myid:2147483652] - INFO  [SessionTracker:ZooKeeperServer@384] - Expiring session 0x40000007cef016c, timeout of 20000ms exceeded
114855 2017-06-22 11:24:19,211 [myid:2147483652] - INFO  [SessionTracker:QuorumZooKeeperServer@132] - Submitting global closeSession request for session 0x40000007cef016c
114856 2017-06-22 11:24:19,211 [myid:2147483652] - INFO  [SessionTracker:ZooKeeperServer@384] - Expiring session 0x40000007cef016d, timeout of 20000ms exceeded
114857 2017-06-22 11:24:19,211 [myid:2147483652] - INFO  [ProcessThread(sid:2147483652 cport:-1)::PrepRequestProcessor@649] - Processed session termination for sessionid:                  0x40000007cef016c
114858 2017-06-22 11:24:19,211 [myid:2147483652] - INFO  [SessionTracker:QuorumZooKeeperServer@132] - Submitting global closeSession request for session 0x40000007cef016d
114859 2017-06-22 11:24:19,211 [myid:2147483652] - INFO  [ProcessThread(sid:2147483652 cport:-1)::PrepRequestProcessor@649] - Processed session termination for sessionid:                  0x40000007cef016d
114860 2017-06-22 11:24:19,579 [myid:2147483652] - INFO  [QuorumPeer[myid=2147483652](plain=/0:0:0:0:0:0:0:0:61808)(secure=disabled):Leader@613] - Shutting down
114861 2017-06-22 11:24:19,579 [myid:2147483652] - INFO  [QuorumPeer[myid=2147483652](plain=/0:0:0:0:0:0:0:0:61808)(secure=disabled):Leader@619] - Shutdown called
114862 java.lang.Exception: shutdown Leader! reason: Not sufficient followers synced, only synced with sids: [ [2147483652] ]
114863     at org.apache.zookeeper.server.quorum.Leader.shutdown(Leader.java:619)
114864     at org.apache.zookeeper.server.quorum.Leader.lead(Leader.java:590)
114865     at org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:1077)
114866 2017-06-22 11:24:19,579 [myid:2147483652] - INFO  [QuorumPeer[myid=2147483652](plain=/0:0:0:0:0:0:0:0:61808)(secure=disabled):MBeanRegistry@119] - Unregister MBean [org.            apache.ZooKeeperService:name0=ReplicatedServer_id2147483652,name1=replica.2147483652,name2=Leader,name3=Connections,name4=128.0.0.4,name5=0x40000007cef006b]
114867 2017-06-22 11:24:19,579 [myid:2147483652] - INFO  [LearnerCnxAcceptor-0.0.0.0/0.0.0.0:61809:Leader$LearnerCnxAcceptor@373] - exception while shutting down acceptor: java.net.       SocketException: Socket closed
114868 2017-06-22 11:24:19,581 [myid:2147483652] - INFO  [QuorumPeer[myid=2147483652](plain=/0:0:0:0:0:0:0:0:61808)(secure=disabled):NIOServerCnxn@606] - Closed socket connection          for client /128.0.0.4:41674 which had sessionid 0x40000007cef006b

{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Jun 01 22:03:50 UTC 2018,,,,,,,,,,"0|i3hqm7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Jun/18 22:02;hanm;The log indicates that your leader can't talk with follower. It's not unusual, as it totally depends on your network condition and also your configuration. An immediate action to try is to increase the tickTime and syncLimit. 

Unless there is more evidence, I don't think this is a bug but more like a configuration issue.;;;","01/Jun/18 22:03;hanm;Feel free to reopen the Jira with more evidence if this is a bug.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
race-condition when shutting down NIOServerCnxnFactory yields CancelledKeyException,ZOOKEEPER-2838,13084710,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,paulmillar,paulmillar,05/Jul/17 08:18,05/Jul/17 08:18,29/Jun/25 13:34,,3.4.10,3.4.6,3.4.7,3.4.8,3.4.9,3.5.0,3.5.1,3.5.2,3.5.3,,,,,,,,,,,,,,,,,,,,,server,,,,,0,,,"The problem stems from closing the ServerSocketChannel before stopping the thread(s) working with the corresponding Selector.  Closing the ServerSocketChannel will invalidate any SelectionKey objects that have been declared.  This is equivalent to calling cancel on the SelectionKey.  Therefore, after the ServerSocketChannel's close method is called, it is possible that any thread working with a SelectionKey will experience CancelledKeyException.

I noticed the problem with ZooKeeper v3.4.6, which resulted in the following stack-trace:

{quote}
04 Jul 2017 15:54:15 (zookeeper) [] Ignoring unexpected runtime exception
java.nio.channels.CancelledKeyException: null
	at sun.nio.ch.SelectionKeyImpl.ensureValid(SelectionKeyImpl.java:73) ~[na:1.8.0_131]
	at sun.nio.ch.SelectionKeyImpl.readyOps(SelectionKeyImpl.java:87) ~[na:1.8.0_131]
	at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:187) ~[zookeeper-3.4.6.jar:3.4.6-1569965]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_131]
{quote}

From manually inspecting the source code, I see the problem is present in all currently released versions of ZooKeeper.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2017-07-05 08:18:46.0,,,,,,,,,,"0|i3h3x3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong `ObjectName` about `MBeanServer` in JMX module,ZOOKEEPER-2822,13082768,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,benedict jin,benedict jin,benedict jin,27/Jun/17 09:40,20/May/19 17:51,29/Jun/25 13:34,27/Nov/18 08:59,3.5.3,,,,,,,,,,,,,,,,,,,,,,,,3.5.5,3.6.0,,,,jmx,,,,,0,pull-request-available,,"The wrong `ObjectName` about `MBeanServer` in JMX module, should `log4j:hierarchy=default` rather than `log4j:hiearchy=default`.",,"Github user asdf2014 closed the pull request at:

    https://github.com/apache/zookeeper/pull/294
;18/Nov/18 02:57;githubbot;600","GitHub user asdf2014 reopened a pull request:

    https://github.com/apache/zookeeper/pull/294

    ZOOKEEPER-2822: Wrong `ObjectName` about `MBeanServer` in JMX module

    The wrong `ObjectName` about `MBeanServer` in JMX module, should `log4j:hierarchy=default` rather than `log4j:hiearchy=default`.


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/asdf2014/zookeeper ZOOKEEPER-2822

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/294.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #294
    
----
commit 82da83a7176bbdd73dedb6fc3d96dac706cefad3
Author: asdf2014 <benedictjin2016@...>
Date:   2018-11-18T02:43:32Z

    ZOOKEEPER-2822: Wrong `ObjectName` about `MBeanServer` in JMX module

----
;18/Nov/18 02:57;githubbot;600","Github user eolivelli commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/294#discussion_r234430242
  
    --- Diff: zookeeper-server/src/main/java/org/apache/zookeeper/jmx/ManagedUtil.java ---
    @@ -71,7 +71,7 @@ public static void registerLog4jMBeans() throws JMException {
                     // org.apache.log4j.jmx.HierarchyDynamicMBean hdm = new org.apache.log4j.jmx.HierarchyDynamicMBean();
                     Object hdm = Class.forName(""org.apache.log4j.jmx.HierarchyDynamicMBean"").getDeclaredConstructor().newInstance();
     
    -                ObjectName mbo = new ObjectName(""log4j:hiearchy=default"");
    +                ObjectName mbo = new ObjectName(""log4j:hierarchy=default"");
    --- End diff --
    
    Is change may have an impact on integrated systems.
    Maybe we could make this name configurable so that people will be able to revert the name.
    This change can be only in master (3.6.0) as it is a public configuration/API change
;18/Nov/18 06:13;githubbot;600","Github user asdf2014 commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/294#discussion_r234446570
  
    --- Diff: zookeeper-server/src/main/java/org/apache/zookeeper/jmx/ManagedUtil.java ---
    @@ -71,7 +71,7 @@ public static void registerLog4jMBeans() throws JMException {
                     // org.apache.log4j.jmx.HierarchyDynamicMBean hdm = new org.apache.log4j.jmx.HierarchyDynamicMBean();
                     Object hdm = Class.forName(""org.apache.log4j.jmx.HierarchyDynamicMBean"").getDeclaredConstructor().newInstance();
     
    -                ObjectName mbo = new ObjectName(""log4j:hiearchy=default"");
    +                ObjectName mbo = new ObjectName(""log4j:hierarchy=default"");
    --- End diff --
    
    Hi, @eolivelli . Thanks for your reviewing. Indeed, turning it into a configurable one would be very helpful in upgrading an integrated system. So, let's be clear, should we add a new JVM option or add a new environment variable to the operating system?
;18/Nov/18 14:15;githubbot;600","Github user eolivelli commented on the issue:

    https://github.com/apache/zookeeper/pull/294
  
    I would go for a system property
;18/Nov/18 16:02;githubbot;600","Github user asdf2014 commented on the issue:

    https://github.com/apache/zookeeper/pull/294
  
    @eolivelli Yep, I agree with you.
;19/Nov/18 02:06;githubbot;600","Github user eolivelli commented on the issue:

    https://github.com/apache/zookeeper/pull/294
  
    We should also add the property to the docs
;20/Nov/18 07:49;githubbot;600","Github user asdf2014 commented on the issue:

    https://github.com/apache/zookeeper/pull/294
  
    @eolivelli Thanks for your comment. I will describe this variable in `zookeeperJMX.md`.
;20/Nov/18 10:56;githubbot;600","Github user asdf2014 commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/294#discussion_r234959406
  
    --- Diff: zookeeper-server/src/main/java/org/apache/zookeeper/jmx/ManagedUtil.java ---
    @@ -69,9 +69,13 @@ public static void registerLog4jMBeans() throws JMException {
                 try {
                     // Create and Register the top level Log4J MBean
                     // org.apache.log4j.jmx.HierarchyDynamicMBean hdm = new org.apache.log4j.jmx.HierarchyDynamicMBean();
    -                Object hdm = Class.forName(""org.apache.log4j.jmx.HierarchyDynamicMBean"").getDeclaredConstructor().newInstance();
    +                Object hdm = Class.forName(""org.apache.log4j.jmx.HierarchyDynamicMBean"").getConstructor().newInstance();
     
    -                ObjectName mbo = new ObjectName(""log4j:hiearchy=default"");
    +                String mbean = System.getenv(""zookeeper.jmx.log4j.mbean"");
    --- End diff --
    
    > I would go for a system property
    
    FYI, `System.getenv()` is for Operating System environment variables, whereas `System.getProperty()` is for JVM arguments which are passed as `-DpropName=value` to Java application launcher.
    
    So, maybe use `getenv()` would be more reasonable.
;20/Nov/18 11:07;githubbot;600","Github user eolivelli commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/294#discussion_r234984710
  
    --- Diff: zookeeper-server/src/main/java/org/apache/zookeeper/jmx/ManagedUtil.java ---
    @@ -69,9 +69,13 @@ public static void registerLog4jMBeans() throws JMException {
                 try {
                     // Create and Register the top level Log4J MBean
                     // org.apache.log4j.jmx.HierarchyDynamicMBean hdm = new org.apache.log4j.jmx.HierarchyDynamicMBean();
    -                Object hdm = Class.forName(""org.apache.log4j.jmx.HierarchyDynamicMBean"").getDeclaredConstructor().newInstance();
    +                Object hdm = Class.forName(""org.apache.log4j.jmx.HierarchyDynamicMBean"").getConstructor().newInstance();
     
    -                ObjectName mbo = new ObjectName(""log4j:hiearchy=default"");
    +                String mbean = System.getenv(""zookeeper.jmx.log4j.mbean"");
    --- End diff --
    
    As far as I know in ZK it is common to use System Properties and not environment variables.
    
    I think that the launcher for the server process is setting as system property every configuration parameter.
    
    Do you have any example of usages of getEnv in ZooKeeper ?
;20/Nov/18 12:36;githubbot;600","Github user asdf2014 commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/294#discussion_r234997204
  
    --- Diff: zookeeper-server/src/main/java/org/apache/zookeeper/jmx/ManagedUtil.java ---
    @@ -69,9 +69,13 @@ public static void registerLog4jMBeans() throws JMException {
                 try {
                     // Create and Register the top level Log4J MBean
                     // org.apache.log4j.jmx.HierarchyDynamicMBean hdm = new org.apache.log4j.jmx.HierarchyDynamicMBean();
    -                Object hdm = Class.forName(""org.apache.log4j.jmx.HierarchyDynamicMBean"").getDeclaredConstructor().newInstance();
    +                Object hdm = Class.forName(""org.apache.log4j.jmx.HierarchyDynamicMBean"").getConstructor().newInstance();
     
    -                ObjectName mbo = new ObjectName(""log4j:hiearchy=default"");
    +                String mbean = System.getenv(""zookeeper.jmx.log4j.mbean"");
    --- End diff --
    
    @eolivelli Okay, I will modify it.
;20/Nov/18 13:17;githubbot;600","Github user asdf2014 commented on the issue:

    https://github.com/apache/zookeeper/pull/294
  
    @eolivelli @anmolnar Thanks for your approval.
;22/Nov/18 05:56;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/294
  
    retest this please
;22/Nov/18 16:26;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/294
  
    retest this please
;23/Nov/18 10:49;githubbot;600","Github user asdf2014 commented on the issue:

    https://github.com/apache/zookeeper/pull/294
  
    Hi, @anmolnar @eolivelli . Is there anything I need to do before we merge this PR?
;27/Nov/18 03:47;githubbot;600","Github user eolivelli commented on the issue:

    https://github.com/apache/zookeeper/pull/294
  
    @anmolnar green lights from CI
    
    This is a trivial patch, do you need another committer ?
;27/Nov/18 06:42;githubbot;600","Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/294
;27/Nov/18 08:58;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/294
  
    Committed to master and 3.5 branches. Thanks @asdf2014 !
;27/Nov/18 08:59;githubbot;600","Github user asdf2014 commented on the issue:

    https://github.com/apache/zookeeper/pull/294
  
    You are welcome.
;27/Nov/18 10:46;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,86400,75000,11400,13%,86400,75000,11400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Nov 27 12:40:37 UTC 2018,,,,,,,,,,"0|i3gryv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Jun/17 09:42;githubbot;GitHub user asdf2014 opened a pull request:

    https://github.com/apache/zookeeper/pull/294

    ZOOKEEPER-2822: Wrong `ObjectName` about `MBeanServer` in JMX module

    The wrong `ObjectName` about `MBeanServer` in JMX module, should `log4j:hierarchy=default` rather than `log4j:hiearchy=default`.


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/asdf2014/zookeeper ZOOKEEPER-2822

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/294.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #294
    
----
commit 8654cc05d309b34f84a3a62929e5021e07223524
Author: asdf2014 <1571805553@qq.com>
Date:   2017-06-27T09:41:40Z

    ZOOKEEPER-2822: Wrong `ObjectName` about `MBeanServer` in JMX module

----
;;;","27/Jun/17 10:02;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/826//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/826//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/826//console

This message is automatically generated.;;;","27/Nov/18 08:59;andor;Issue resolved by pull request 294
[https://github.com/apache/zookeeper/pull/294];;;","27/Nov/18 12:13;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #123 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/123/])
ZOOKEEPER-2822: Wrong `ObjectName` about `MBeanServer` in JMX module (andor: rev 91c6cb253c98a5c792314b1c7998ab5b939dddad)
* (edit) zookeeper-docs/src/main/resources/markdown/zookeeperJMX.md
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/jmx/ManagedUtil.java
;;;","27/Nov/18 12:40;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #285 (See [https://builds.apache.org/job/ZooKeeper-trunk/285/])
ZOOKEEPER-2822: Wrong `ObjectName` about `MBeanServer` in JMX module (andor: rev 91c6cb253c98a5c792314b1c7998ab5b939dddad)
* (edit) zookeeper-docs/src/main/resources/markdown/zookeeperJMX.md
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/jmx/ManagedUtil.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignore space after comma in connection string,ZOOKEEPER-2814,13081359,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,nikbhi15,vilo,vilo,21/Jun/17 09:00,30/Jan/19 16:23,29/Jun/25 13:34,,3.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,pull-request-available,,"I'm using the following connection string:

{{10.0.0.179:2181,<space>10.0.0.176:2181}}

However, I get:

{{java.net.UnknownHostException: 10.0.0.176: Name or service not known
at java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
at java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:928)
at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1323)
at java.net.InetAddress.getAllByName0(InetAddress.java:1276)
at java.net.InetAddress.getAllByName(InetAddress.java:1192)
at java.net.InetAddress.getAllByName(InetAddress.java:1126)
at org.apache.zookeeper.client.StaticHostProvider.<init>(StaticHostProvider.java:61)
at org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:445)
at ...
...}}

The problem was the space after the comma. I suggest to either make the space optional or produce error on it, as this is a real pain to spot. Using the space also makes the connect string more readable. Spaces are not allowed in domain names.
",,"anmolnar commented on pull request #371: ZOOKEEPER-2814: Ignore space after comma in connection string
URL: https://github.com/apache/zookeeper/pull/371
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Jan/19 16:23;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Oct 13 23:26:36 UTC 2017,,,,,,,,,,"0|i3gjan:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Aug/17 11:24;nikbhi;Spaces are not allowed in the domain space. So, would it be good idea to trim the spaces and use the address or throw exception that IP address/host name of server can not contain space? According to me, its better to throw the exception rather than trimming spaces of provided IP address. ;;;","22/Aug/17 18:39;nikbhi15;Please assign this to me. ;;;","22/Aug/17 20:27;eribeiro;Hi [~nikbhi15],

FYI, the trim of the host string seems to be fixed on branch-3.5 and master, doesn't it? See https://github.com/apache/zookeeper/blob/branch-3.5/src/java/main/org/apache/zookeeper/common/StringUtils.java#L37 

While it is not fixed on branch-3.4 yet: https://github.com/apache/zookeeper/blob/branch-3.4/src/java/main/org/apache/zookeeper/client/ConnectStringParser.java#L65

I suggest that you add a method to check the host string with spaces after (and before) the comma.;;;","23/Aug/17 17:44;githubbot;GitHub user nikhilbhide opened a pull request:

    https://github.com/apache/zookeeper/pull/343

    ZOOKEEPER-2814: Ignore space after comma in connection string

    Proposed changes:
    - StringUtils.java
       - New class org.apache.zookeeper.common.StringUtils to be added
       - Logic to split trim the spaces to be added in split method
    
    - ConnectStringParser
      - Instead of using String#split, use StringUtils#split 


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/apache/zookeeper master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/343.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #343
    
----
commit d2a5192d9ee2e52e50f3c943790ce4b09eaab820
Author: Rakesh Radhakrishnan <rakeshr@apache.org>
Date:   2015-05-20T07:29:50Z

    ZOOKEEPER-2156: If JAVA_HOME is not set zk startup and fetching status command execution result misleads user (J.Andreina via rakeshr)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1680471 13f79535-47bb-0310-9956-ffa450edef68

commit 111d60b6253e3e2911a6ff525f0af792e7793ce5
Author: Rakesh Radhakrishnan <rakeshr@apache.org>
Date:   2015-05-22T05:24:39Z

    ZOOKEEPER-2191: Continue supporting prior Ant versions that don't implement the threads attribute for the JUnit task (Chris Nauroth via rakeshr)
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1680994 13f79535-47bb-0310-9956-ffa450edef68

commit 3a7a240ef7381edf15925045e9f94408177e51cd
Author: Hongchao Deng <hdeng@apache.org>
Date:   2015-05-29T17:45:53Z

    ZOOKEEPER-2187: remove duplicated code between CreateRequest{,2}
    (Raul Gutierrez Segales via hdeng)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1682521 13f79535-47bb-0310-9956-ffa450edef68

commit fe63c1c4fdbfce201e193cd8723488d9a40dc498
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-05-29T19:48:23Z

    ZOOKEEPER-2179: Typo in Watcher.java (Archana T via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1682539 13f79535-47bb-0310-9956-ffa450edef68

commit 63884670328f09a3814db54cb4644d683822e4d4
Author: Hongchao Deng <hdeng@apache.org>
Date:   2015-05-29T21:46:49Z

    ZOOKEEPER-2189: QuorumCnxManager: use BufferedOutputStream for initial msg
    (Raul Gutierrez Segales via hdeng)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1682558 13f79535-47bb-0310-9956-ffa450edef68

commit daf766aa74c0e2f584b1a30f33f946e4ac282e3a
Author: Hongchao Deng <hdeng@apache.org>
Date:   2015-05-30T16:39:30Z

    ZOOKEEPER-2189: QuorumCnxManager: use BufferedOutputStream for initial msg
    (Raul Gutierrez Segales via hdeng)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1682623 13f79535-47bb-0310-9956-ffa450edef68

commit 891b12d004842e6ea09509765eaa2a18eca727c4
Author: Michi Mutsuzaki <michim@apache.org>
Date:   2015-05-31T09:21:07Z

    ZOOKEEPER-2198 Set default test.junit.threads to 1 (Chris Nauroth via michim)
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1682701 13f79535-47bb-0310-9956-ffa450edef68

commit b0141aa40e44cc747d7899a2a038a3bbe19e67a7
Author: Michi Mutsuzaki <michim@apache.org>
Date:   2015-06-01T06:45:11Z

    ZOOKEEPER-2178 Native client fails compilation on Windows. (Chris Nauroth via michim)
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1682823 13f79535-47bb-0310-9956-ffa450edef68

commit 7f52bebb90ff2d61a2428013771ce0df09890876
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-02T05:21:26Z

    ZOOKEEPER-2197 non-ascii character in FinalRequestProcessor.java
    
    To be able to use utf-8 in .java source files we now use utf-8
    encoding to build them (Michi Mutsuzaki via rgs).
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1683042 13f79535-47bb-0310-9956-ffa450edef68

commit ea500b8911223fb36555b12c391adc9a20c9e28d
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-02T19:17:09Z

    ZOOKEEPER-2096: C client builds with incorrect error codes in VisualStudio 2010+
    (Vitaly Stakhovsky via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1683163 13f79535-47bb-0310-9956-ffa450edef68

commit 9f89dd30187a48e39556b6305246d835b54e00ae
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-04T16:26:06Z

    ZOOKEEPER-2194: Let DataNode.getChildren() return an unmodifiable view of its
    children set (Hitoshi Mitake via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1683587 13f79535-47bb-0310-9956-ffa450edef68

commit feb90fabcab3a14b075eb56f2618e6483acfebfb
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-04T17:37:26Z

    ZOOKEEPER-2204: LearnerSnapshotThrottlerTest.testHighContentionWithTimeout
    fails occasionally (Donny Nadolny via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1683602 13f79535-47bb-0310-9956-ffa450edef68

commit 78b84f3ae01ca477fb94404c78bf3a098b0fcba4
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-04T17:51:16Z

    ZOOKEEPER-2163: Introduce new ZNode type: container
    (Jordan Zimmerman via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1683605 13f79535-47bb-0310-9956-ffa450edef68

commit ee7ff36dcbbd3ea1dac690c7fe15891ac6fc87e2
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-05T18:38:41Z

    ZOOKEEPER-2205: Log type of unexpected quorum packet in learner handler loop
    (Hitoshi Mitake via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1683833 13f79535-47bb-0310-9956-ffa450edef68

commit 5847d0d15ffc2f13d513b189d73125e98700e850
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-05T18:51:44Z

    ZOOKEEPER-2206: Add missing packet types to LearnerHandler.packetToString()
    (Hitoshi Mitake via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1683842 13f79535-47bb-0310-9956-ffa450edef68

commit b90a32fa1518c4f6c46d5c7d25cda4937a4f496f
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-05T19:15:36Z

    ZOOKEEPER-2207: Enhance error logs with LearnerHandler.packetToString()
    (Hitoshi Mitake via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1683848 13f79535-47bb-0310-9956-ffa450edef68

commit ec3ee9469aeff60d65de38fa91bf4e6ca9f6a28a
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-05T19:25:41Z

    ZOOKEEPER-2208: Log type of unexpected quorum packet in observer loop
    (Akihiro Suda via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1683850 13f79535-47bb-0310-9956-ffa450edef68

commit bedcfed45550b59d088e556ce463e1fdcba3242b
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-05T19:28:23Z

    ZOOKEEPER-2208: Log type of unexpected quorum packet in observer loop
    (update CHANGES.txt) (Akihiro Suda via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1683851 13f79535-47bb-0310-9956-ffa450edef68

commit 71dd96a232cb590e90601fde4bfafcd4eef1f82a
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-06T01:48:52Z

    ZOOKEEPER-2201: Network issues can cause cluster to hang due to near-deadlock
    (Donny Nadolny via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1683878 13f79535-47bb-0310-9956-ffa450edef68

commit 9bee4674c015a71785daeb7a6da93676a3450699
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-11T18:09:19Z

    ZOOKEEPER-2213: Empty path in Set crashes server and prevents restart
    (Hongchao Deng via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1684956 13f79535-47bb-0310-9956-ffa450edef68

commit b58a0621fb0f3495d7c010308d2822f245a56a00
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-12T21:02:55Z

    ZOOKEEPER-2214: Findbugs warning: LearnerHandler.packetToString Dead
    store to local variable (Hongchao Deng via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1685167 13f79535-47bb-0310-9956-ffa450edef68

commit 2d94a794d33a27567b37b772c08316277ee4e547
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-13T00:42:49Z

    ZOOKEEPER-706: Large numbers of watches can cause session re-establishment to fail
    (Chris Thunes via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1685200 13f79535-47bb-0310-9956-ffa450edef68

commit 6a2f5e3e76f85e7aeba72f94397315bec96ea4f1
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-15T23:05:25Z

    ZOOKEEPER-2212: distributed race condition related to QV version
    (Akihiro Suda via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1685685 13f79535-47bb-0310-9956-ffa450edef68

commit 61df2ce2aeda8df79fa3f33c07cac23b9f6b1ca3
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-18T19:23:18Z

    ZOOKEEPER-2185: Run server with -XX:+HeapDumpOnOutOfMemoryError and
    -XX:OnOutOfMemoryError='kill %p' (Chris Nauroth via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1686296 13f79535-47bb-0310-9956-ffa450edef68

commit b9c65eb6be6959639eb691642d60a88960888b49
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-22T00:18:57Z

    ZOOKEEPER-2210: clock_gettime is not available in OS X
    (Michi Mutsuzaki via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1686767 13f79535-47bb-0310-9956-ffa450edef68

commit c520e1e826d88955db7637a33cd4f20c20c0bd7a
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-27T00:03:30Z

    ZOOKEEPER-2193: reconfig command completes even if parameter is wrong obviously
    (Yasuhito Fukuda via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1687876 13f79535-47bb-0310-9956-ffa450edef68

commit 352022265deb93110b7370e0fc2df6809985a60a
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-28T19:09:49Z

    ZOOKEEPER-2140: NettyServerCnxn and NIOServerCnxn code should be improved
    (Arshad Mohammad via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1688041 13f79535-47bb-0310-9956-ffa450edef68

commit a61b4e1b528cb4c70627e9f9295b34bb05a79303
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-30T18:50:11Z

    ZOOKEEPER-2221: Zookeeper JettyAdminServer server should start on configured IP
    (Surendra Singh Lilhore via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1688505 13f79535-47bb-0310-9956-ffa450edef68

commit 9a9d587861606884cca5b4a532078f925b50e40c
Author: Rakesh Radhakrishnan <rakeshr@apache.org>
Date:   2015-07-05T04:05:33Z

    ZOOKEEPER-2224: Four letter command hangs when network is slow (Arshad Mohammad via rakeshr)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1689211 13f79535-47bb-0310-9956-ffa450edef68

commit 3c9c66ac68e430a435b6bd02a9ab5cde03f31e11
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-07-07T05:11:49Z

    ZOOKEEPER-2223: support method-level JUnit testcase
    (Akihiro Suda via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1689571 13f79535-47bb-0310-9956-ffa450edef68

----
;;;","23/Aug/17 17:50;githubbot;Github user nikhilbhide closed the pull request at:

    https://github.com/apache/zookeeper/pull/343
;;;","23/Aug/17 17:51;githubbot;Github user nikhilbhide commented on the issue:

    https://github.com/apache/zookeeper/pull/343
  
    Reopening pull request #343
;;;","23/Aug/17 17:51;githubbot;GitHub user nikhilbhide reopened a pull request:

    https://github.com/apache/zookeeper/pull/343

    ZOOKEEPER-2814: Ignore space after comma in connection string

    Proposed changes:
    - StringUtils.java
       - New class org.apache.zookeeper.common.StringUtils to be added
       - Logic to split trim the spaces to be added in split method
    
    - ConnectStringParser.java
      - Instead of using String#split, use StringUtils#split 


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/apache/zookeeper master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/343.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #343
    
----
commit d2a5192d9ee2e52e50f3c943790ce4b09eaab820
Author: Rakesh Radhakrishnan <rakeshr@apache.org>
Date:   2015-05-20T07:29:50Z

    ZOOKEEPER-2156: If JAVA_HOME is not set zk startup and fetching status command execution result misleads user (J.Andreina via rakeshr)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1680471 13f79535-47bb-0310-9956-ffa450edef68

commit 111d60b6253e3e2911a6ff525f0af792e7793ce5
Author: Rakesh Radhakrishnan <rakeshr@apache.org>
Date:   2015-05-22T05:24:39Z

    ZOOKEEPER-2191: Continue supporting prior Ant versions that don't implement the threads attribute for the JUnit task (Chris Nauroth via rakeshr)
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1680994 13f79535-47bb-0310-9956-ffa450edef68

commit 3a7a240ef7381edf15925045e9f94408177e51cd
Author: Hongchao Deng <hdeng@apache.org>
Date:   2015-05-29T17:45:53Z

    ZOOKEEPER-2187: remove duplicated code between CreateRequest{,2}
    (Raul Gutierrez Segales via hdeng)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1682521 13f79535-47bb-0310-9956-ffa450edef68

commit fe63c1c4fdbfce201e193cd8723488d9a40dc498
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-05-29T19:48:23Z

    ZOOKEEPER-2179: Typo in Watcher.java (Archana T via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1682539 13f79535-47bb-0310-9956-ffa450edef68

commit 63884670328f09a3814db54cb4644d683822e4d4
Author: Hongchao Deng <hdeng@apache.org>
Date:   2015-05-29T21:46:49Z

    ZOOKEEPER-2189: QuorumCnxManager: use BufferedOutputStream for initial msg
    (Raul Gutierrez Segales via hdeng)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1682558 13f79535-47bb-0310-9956-ffa450edef68

commit daf766aa74c0e2f584b1a30f33f946e4ac282e3a
Author: Hongchao Deng <hdeng@apache.org>
Date:   2015-05-30T16:39:30Z

    ZOOKEEPER-2189: QuorumCnxManager: use BufferedOutputStream for initial msg
    (Raul Gutierrez Segales via hdeng)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1682623 13f79535-47bb-0310-9956-ffa450edef68

commit 891b12d004842e6ea09509765eaa2a18eca727c4
Author: Michi Mutsuzaki <michim@apache.org>
Date:   2015-05-31T09:21:07Z

    ZOOKEEPER-2198 Set default test.junit.threads to 1 (Chris Nauroth via michim)
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1682701 13f79535-47bb-0310-9956-ffa450edef68

commit b0141aa40e44cc747d7899a2a038a3bbe19e67a7
Author: Michi Mutsuzaki <michim@apache.org>
Date:   2015-06-01T06:45:11Z

    ZOOKEEPER-2178 Native client fails compilation on Windows. (Chris Nauroth via michim)
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1682823 13f79535-47bb-0310-9956-ffa450edef68

commit 7f52bebb90ff2d61a2428013771ce0df09890876
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-02T05:21:26Z

    ZOOKEEPER-2197 non-ascii character in FinalRequestProcessor.java
    
    To be able to use utf-8 in .java source files we now use utf-8
    encoding to build them (Michi Mutsuzaki via rgs).
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1683042 13f79535-47bb-0310-9956-ffa450edef68

commit ea500b8911223fb36555b12c391adc9a20c9e28d
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-02T19:17:09Z

    ZOOKEEPER-2096: C client builds with incorrect error codes in VisualStudio 2010+
    (Vitaly Stakhovsky via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1683163 13f79535-47bb-0310-9956-ffa450edef68

commit 9f89dd30187a48e39556b6305246d835b54e00ae
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-04T16:26:06Z

    ZOOKEEPER-2194: Let DataNode.getChildren() return an unmodifiable view of its
    children set (Hitoshi Mitake via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1683587 13f79535-47bb-0310-9956-ffa450edef68

commit feb90fabcab3a14b075eb56f2618e6483acfebfb
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-04T17:37:26Z

    ZOOKEEPER-2204: LearnerSnapshotThrottlerTest.testHighContentionWithTimeout
    fails occasionally (Donny Nadolny via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1683602 13f79535-47bb-0310-9956-ffa450edef68

commit 78b84f3ae01ca477fb94404c78bf3a098b0fcba4
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-04T17:51:16Z

    ZOOKEEPER-2163: Introduce new ZNode type: container
    (Jordan Zimmerman via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1683605 13f79535-47bb-0310-9956-ffa450edef68

commit ee7ff36dcbbd3ea1dac690c7fe15891ac6fc87e2
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-05T18:38:41Z

    ZOOKEEPER-2205: Log type of unexpected quorum packet in learner handler loop
    (Hitoshi Mitake via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1683833 13f79535-47bb-0310-9956-ffa450edef68

commit 5847d0d15ffc2f13d513b189d73125e98700e850
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-05T18:51:44Z

    ZOOKEEPER-2206: Add missing packet types to LearnerHandler.packetToString()
    (Hitoshi Mitake via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1683842 13f79535-47bb-0310-9956-ffa450edef68

commit b90a32fa1518c4f6c46d5c7d25cda4937a4f496f
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-05T19:15:36Z

    ZOOKEEPER-2207: Enhance error logs with LearnerHandler.packetToString()
    (Hitoshi Mitake via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1683848 13f79535-47bb-0310-9956-ffa450edef68

commit ec3ee9469aeff60d65de38fa91bf4e6ca9f6a28a
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-05T19:25:41Z

    ZOOKEEPER-2208: Log type of unexpected quorum packet in observer loop
    (Akihiro Suda via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1683850 13f79535-47bb-0310-9956-ffa450edef68

commit bedcfed45550b59d088e556ce463e1fdcba3242b
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-05T19:28:23Z

    ZOOKEEPER-2208: Log type of unexpected quorum packet in observer loop
    (update CHANGES.txt) (Akihiro Suda via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1683851 13f79535-47bb-0310-9956-ffa450edef68

commit 71dd96a232cb590e90601fde4bfafcd4eef1f82a
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-06T01:48:52Z

    ZOOKEEPER-2201: Network issues can cause cluster to hang due to near-deadlock
    (Donny Nadolny via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1683878 13f79535-47bb-0310-9956-ffa450edef68

commit 9bee4674c015a71785daeb7a6da93676a3450699
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-11T18:09:19Z

    ZOOKEEPER-2213: Empty path in Set crashes server and prevents restart
    (Hongchao Deng via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1684956 13f79535-47bb-0310-9956-ffa450edef68

commit b58a0621fb0f3495d7c010308d2822f245a56a00
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-12T21:02:55Z

    ZOOKEEPER-2214: Findbugs warning: LearnerHandler.packetToString Dead
    store to local variable (Hongchao Deng via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1685167 13f79535-47bb-0310-9956-ffa450edef68

commit 2d94a794d33a27567b37b772c08316277ee4e547
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-13T00:42:49Z

    ZOOKEEPER-706: Large numbers of watches can cause session re-establishment to fail
    (Chris Thunes via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1685200 13f79535-47bb-0310-9956-ffa450edef68

commit 6a2f5e3e76f85e7aeba72f94397315bec96ea4f1
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-15T23:05:25Z

    ZOOKEEPER-2212: distributed race condition related to QV version
    (Akihiro Suda via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1685685 13f79535-47bb-0310-9956-ffa450edef68

commit 61df2ce2aeda8df79fa3f33c07cac23b9f6b1ca3
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-18T19:23:18Z

    ZOOKEEPER-2185: Run server with -XX:+HeapDumpOnOutOfMemoryError and
    -XX:OnOutOfMemoryError='kill %p' (Chris Nauroth via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1686296 13f79535-47bb-0310-9956-ffa450edef68

commit b9c65eb6be6959639eb691642d60a88960888b49
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-22T00:18:57Z

    ZOOKEEPER-2210: clock_gettime is not available in OS X
    (Michi Mutsuzaki via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1686767 13f79535-47bb-0310-9956-ffa450edef68

commit c520e1e826d88955db7637a33cd4f20c20c0bd7a
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-27T00:03:30Z

    ZOOKEEPER-2193: reconfig command completes even if parameter is wrong obviously
    (Yasuhito Fukuda via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1687876 13f79535-47bb-0310-9956-ffa450edef68

commit 352022265deb93110b7370e0fc2df6809985a60a
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-28T19:09:49Z

    ZOOKEEPER-2140: NettyServerCnxn and NIOServerCnxn code should be improved
    (Arshad Mohammad via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1688041 13f79535-47bb-0310-9956-ffa450edef68

commit a61b4e1b528cb4c70627e9f9295b34bb05a79303
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-06-30T18:50:11Z

    ZOOKEEPER-2221: Zookeeper JettyAdminServer server should start on configured IP
    (Surendra Singh Lilhore via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1688505 13f79535-47bb-0310-9956-ffa450edef68

commit 9a9d587861606884cca5b4a532078f925b50e40c
Author: Rakesh Radhakrishnan <rakeshr@apache.org>
Date:   2015-07-05T04:05:33Z

    ZOOKEEPER-2224: Four letter command hangs when network is slow (Arshad Mohammad via rakeshr)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1689211 13f79535-47bb-0310-9956-ffa450edef68

commit 3c9c66ac68e430a435b6bd02a9ab5cde03f31e11
Author: Raúl Gutiérrez Segalés <rgs@apache.org>
Date:   2015-07-07T05:11:49Z

    ZOOKEEPER-2223: support method-level JUnit testcase
    (Akihiro Suda via rgs)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1689571 13f79535-47bb-0310-9956-ffa450edef68

----
;;;","23/Aug/17 17:51;githubbot;Github user nikhilbhide commented on the issue:

    https://github.com/apache/zookeeper/pull/343
  
    Closing pull request #343 as there seems to be a conflict.
;;;","23/Aug/17 17:51;githubbot;Github user nikhilbhide closed the pull request at:

    https://github.com/apache/zookeeper/pull/343
;;;","24/Aug/17 11:32;nikbhi15;Hi Admin,
As per the guidelines, I forked out new branch, made the changes and opened a new pull request.
[https://github.com/apache/zookeeper/pull/345]
Build was passed successfully, but I can not check in the changes. Can you please review the changes and give me write access so that I can commit the changes to Zookeeper- branch 3.4 and close this issue.
;;;","24/Aug/17 16:53;hanm;Thanks for working on this.

bq. give me write access so that I can commit the changes to Zookeeper- branch 3.4 and close this issue.

This is not the way Apache works. Please read contributor guidelines at https://community.apache.org/contributors/. tldr: only committers have access to source repo.;;;","24/Aug/17 17:09;nikbhi15;Thanks [~hanm] for the update.
Can you please let me know steps to check-in the changes?;;;","11/Sep/17 13:31;githubbot;GitHub user nikhilbhide opened a pull request:

    https://github.com/apache/zookeeper/pull/368

    ZOOKEEPER-2814: Ignore space after comma in connection string

    Ported ZOOKEEPER-2814 from master to branch 3.4.
    
    Added files 
     src/java/main/org/apache/zookeeper/common/StringUtils.java
    src/java/test/org/apache/zookeeper/test/StringUtilTest.java
    
    Modified Files:
    src/java/main/org/apache/zookeeper/client/ConnectStringParser.java
    src/java/test/org/apache/zookeeper/test/ConnectStringParserTest.java


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/nikhilbhide/zookeeper ZOOKEEPER-2814

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/368.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #368
    
----
commit 11da57df94c95b52a97b7c039e1ba042ebac8ed7
Author: Nikhil Bhide <nikhilbhide15@gmail.com>
Date:   2017-09-11T13:14:29Z

    ZOOKEEPER-2814: Ignore space after comma in connection string
    
    Added logic to trim host connection string for ZOOKEEPER-2814: Ignore space after comma in connection string
    Port ZOOKEEPER-2814 from master

commit 3f210394e989507282d1e42fb9f3e35512d314e8
Author: Nikhil Bhide <nikhilbhide15@gmail.com>
Date:   2017-09-11T13:19:44Z

    Zookeeper 2814: ignore space after comma in connection string
    
    Port Zookeeper 2814 from master to branch - 3.4
    Created StringUtils.java

commit 7da1c0786f7ca7aabe73f53f818db97d82e701e1
Author: Nikhil Bhide <nikhilbhide15@gmail.com>
Date:   2017-09-11T13:22:26Z

    ZOOKEEPER-2814: Ignore space after comma in connection string
    
    Port ZOOKEEPER-2814 from master to branch-3.4
    Added code to test split logic implemented in StringUtils.java

commit 1629f64f58c7787bb993162e5c9b8565b4d45c64
Author: Nikhil Bhide <nikhilbhide15@gmail.com>
Date:   2017-09-11T13:26:08Z

    ZOOKEEPER-2814: Ignore space after comma in connection string
    
    Port ZOOKEEPER-2814 from master to branch-3.4
    Added test to verify the logic added to remove the spaces provided in connection string

----
;;;","11/Sep/17 15:15;githubbot;Github user nikhilbhide closed the pull request at:

    https://github.com/apache/zookeeper/pull/368
;;;","11/Sep/17 15:17;githubbot;GitHub user nikhilbhide opened a pull request:

    https://github.com/apache/zookeeper/pull/369

    ZOOKEEPER-2814: Ignore space after comma in connection string

    Ported ZOOKEEPER-2814 from master to branch 3.4.
    
    Added files
    src/java/main/org/apache/zookeeper/common/StringUtils.java
    src/java/test/org/apache/zookeeper/test/StringUtilTest.java
    
    Modified Files:
    src/java/main/org/apache/zookeeper/client/ConnectStringParser.java
    src/java/test/org/apache/zookeeper/test/ConnectStringParserTest.java

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/nikhilbhide/zookeeper ZOOKEEPER-2814

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/369.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #369
    
----
commit 6503f12e144bc6b0652f7adf558bdc28c984e6c0
Author: Flavio Paiva Junqueira <fpj@apache.org>
Date:   2013-11-15T18:12:07Z

    ZOOKEEPER-1786. ZooKeeper data model documentation is incorrect
      (Niraj Tolia via fpj)
    
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1542356 13f79535-47bb-0310-9956-ffa450edef68

commit a452d791cff92d65937142c3475a9894264376f6
Author: Flavio Paiva Junqueira <fpj@apache.org>
Date:   2013-11-16T10:06:19Z

    ZOOKEEPER-1808. Add version to FLE notifications for 3.4 branch (fpj)
    
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1542489 13f79535-47bb-0310-9956-ffa450edef68

commit b770aeb0c8bcb28a9b653b1dc0edac623c75b509
Author: Flavio Paiva Junqueira <fpj@apache.org>
Date:   2013-11-17T11:42:22Z

    ZOOKEEPER-1597. Windows build failing (michim via fpj)
    
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1542710 13f79535-47bb-0310-9956-ffa450edef68

commit 7f069c0e084a74f6de661267b828ff3fde30bd11
Author: Flavio Paiva Junqueira <fpj@apache.org>
Date:   2013-11-23T18:21:38Z

    ZOOKEEPER-1817. Fix don't care for b3.4 (fpj)
    
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1544858 13f79535-47bb-0310-9956-ffa450edef68

commit c62f2ffa7b9fb026004f66d788ebf1e293d2fdf8
Author: Flavio Paiva Junqueira <fpj@apache.org>
Date:   2013-11-26T23:43:29Z

    ZOOKEEPER-1653. zookeeper fails to start because of inconsistent epoch (michim via fpj)
    
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1545883 13f79535-47bb-0310-9956-ffa450edef68

commit 605c8d1b0db0baa57582bb39229c80bfec832ae3
Author: Flavio Paiva Junqueira <fpj@apache.org>
Date:   2013-11-27T23:23:11Z

    ZOOKEEPER-1821. very ugly warning when compiling load_gen.c (german blanco via fpj)
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1546231 13f79535-47bb-0310-9956-ffa450edef68

commit a1cdea63de42ed1eaba224570ad0304c224b21c1
Author: Michi Mutsuzaki <michim@apache.org>
Date:   2013-12-04T04:20:53Z

    ZOOKEEPER-1632. fix memory leaks in cli_st (fpj via michim)
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1547703 13f79535-47bb-0310-9956-ffa450edef68

commit f23b85bde1bf53b284a85a8ec6c6251cd63e9feb
Author: Flavio Paiva Junqueira <fpj@apache.org>
Date:   2013-12-07T10:17:54Z

    ZOOKEEPER-1459. Standalone ZooKeeperServer is not closing 
      the transaction log files on shutdown (Rakesh R via fpj)
    
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1548826 13f79535-47bb-0310-9956-ffa450edef68

commit 4822626f958742baf98303fd9cdfcb51ce95cb46
Author: Michi Mutsuzaki <michim@apache.org>
Date:   2013-12-10T20:43:22Z

    ZOOKEEPER-1019. zkfuse doesn't list dependency on boost in README (Raul Gutierrez Segales via michim)
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1549963 13f79535-47bb-0310-9956-ffa450edef68

commit b666d3bccc2e8a0851c4b68024a4c3ac2d97713c
Author: Michi Mutsuzaki <michim@apache.org>
Date:   2013-12-11T00:12:53Z

    ZOOKEEPER-1834. Catch IOException in FileTxnLog (fpj via michim)
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1550006 13f79535-47bb-0310-9956-ffa450edef68

commit 63b1f92102877757815eec5e0866b7a143868e2d
Author: Camille Fournier <camille@apache.org>
Date:   2013-12-11T18:31:05Z

    ZOOKEEPER-1382. Zookeeper server holds onto dead/expired session ids in the watch data structures
      (Germán Blanco and Michael Morello via camille)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1550220 13f79535-47bb-0310-9956-ffa450edef68

commit fc22886f0c12c0b28780dc29a10c334d1221d9b9
Author: Michi Mutsuzaki <michim@apache.org>
Date:   2013-12-14T08:36:46Z

    ZOOKEEPER-1715. Upgrade netty version (Sean Bridges via michim)
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1550902 13f79535-47bb-0310-9956-ffa450edef68

commit ec70dd2c43bc1d780a480487fe4437cb95d01e65
Author: Flavio Paiva Junqueira <fpj@apache.org>
Date:   2013-12-14T11:23:24Z

    ZOOKEEPER-1837. Fix JMXEnv checks (potential race conditions) (Germán Blanco via fpj)
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1550923 13f79535-47bb-0310-9956-ffa450edef68

commit 7e1c76814a267d52c4392c7c181e116b3eb31233
Author: Michi Mutsuzaki <michim@apache.org>
Date:   2013-12-16T04:20:40Z

    ZOOKEEPER-1839. Deadlock in NettyServerCnxn (Rakesh R via michim)
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1551112 13f79535-47bb-0310-9956-ffa450edef68

commit a6dec3afdae22bafd8e8fd3c56b258b2a3bbabe8
Author: Patrick D. Hunt <phunt@apache.org>
Date:   2013-12-16T06:27:56Z

    ZOOKEEPER-1622. session ids will be negative in the year 2022 (Eric Newton via phunt)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1551118 13f79535-47bb-0310-9956-ffa450edef68

commit 5dd0361a5db1e2a5f998344c8abdd0751988eba1
Author: Michi Mutsuzaki <michim@apache.org>
Date:   2013-12-16T21:49:50Z

    ZOOKEEPER-1756. zookeeper_interest() in C client can return a timeval of 0 (Eric Lindvall via michim)
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1551367 13f79535-47bb-0310-9956-ffa450edef68

commit 6c483a2d67d4aee937e0f4873e4b410b7008e703
Author: Patrick D. Hunt <phunt@apache.org>
Date:   2013-12-17T16:57:03Z

    ZOOKEEPER-1388. Client side 'PathValidation' is missing for the multi-transaction api. (Rakesh R via marshallm, phunt)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1551625 13f79535-47bb-0310-9956-ffa450edef68

commit 54eefdb4fc57e18f28bbb520e4abb163de2f936a
Author: Flavio Paiva Junqueira <fpj@apache.org>
Date:   2013-12-18T13:05:31Z

    ZOOKEEPER-1841. problem in QuorumTest (Germán via fpj)
    
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1551930 13f79535-47bb-0310-9956-ffa450edef68

commit 5420ead4bb71dfa83f09c4cce72fa72e649eac62
Author: Flavio Paiva Junqueira <fpj@apache.org>
Date:   2013-12-18T15:48:19Z

    ZOOKEEPER-1733. FLETest#testLE is flaky on windows boxes 
      (michim via fpj)
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1551985 13f79535-47bb-0310-9956-ffa450edef68

commit 058185d6359393e3898acd745f341f1799b276ce
Author: Flavio Paiva Junqueira <fpj@apache.org>
Date:   2013-12-18T15:52:16Z

    ZOOKEEPER-1733. FLETest#testLE is flaky on windows boxes
      (michim, Jeffrey Zhong via fpj)
    
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1551987 13f79535-47bb-0310-9956-ffa450edef68

commit 7b272f5d5e4d1c170bc72c9b79a462517c06d6d4
Author: Flavio Paiva Junqueira <fpj@apache.org>
Date:   2013-12-19T22:36:08Z

    ZOOKEEPER-1849. Need to properly tear down tests in various 
      cases (Germán via fpj)
    
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1552447 13f79535-47bb-0310-9956-ffa450edef68

commit 05bc123a83d0e355f703001c78b3a54988c678e4
Author: Patrick D. Hunt <phunt@apache.org>
Date:   2013-12-20T01:29:22Z

    ZOOKEEPER-1430. add maven deploy support to the build (Giridharan Kesavan via phunt)
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1552470 13f79535-47bb-0310-9956-ffa450edef68

commit 7fc3de3a05c9ace88b0e6b914750b2712f43f7c0
Author: Flavio Paiva Junqueira <fpj@apache.org>
Date:   2013-12-27T13:29:08Z

    ZOOKEEPER-1179. NettyServerCnxn does not properly close 
      socket on 4 letter word requests (Rakesh R, Germán Blanco 
      via fpj)
    
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1553672 13f79535-47bb-0310-9956-ffa450edef68

commit 80ef32504a46387e051ca9b58e1b5b58b387b358
Author: Flavio Paiva Junqueira <fpj@apache.org>
Date:   2013-12-27T16:50:46Z

    ZOOKEEPER-1179. NettyServerCnxn does not properly close socket on 4 letter word requests. (Rakesh R, Germán Blanco via fpj)
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1553694 13f79535-47bb-0310-9956-ffa450edef68

commit 68a0f7315d59f4a8090b3a08bb8dab8453bb2fe9
Author: Flavio Paiva Junqueira <fpj@apache.org>
Date:   2014-01-03T00:23:23Z

    ZOOKEEPER-1852. ServerCnxnFactory instance is not properly cleanedup (Rakesh R via fpj)
    
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1554979 13f79535-47bb-0310-9956-ffa450edef68

commit 89448077733a8d025734b79346e403cbcdaa9cea
Author: Flavio Paiva Junqueira <fpj@apache.org>
Date:   2014-01-03T00:44:27Z

    ZOOKEEPER-1852. ServerCnxnFactory instance is not properly cleanedup (Rakesh R via fpj)
    
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1554983 13f79535-47bb-0310-9956-ffa450edef68

commit ca8d611d2db1234bfc0a3f64f2a2a8a15021c8a3
Author: Michi Mutsuzaki <michim@apache.org>
Date:   2014-01-09T19:22:57Z

    ZOOKEEPER-1414. QuorumPeerMainTest.testQuorum, testBadPackets are failing intermittently (Rakesh R via michim)
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1556926 13f79535-47bb-0310-9956-ffa450edef68

commit a6528185040b0f782c3d59650b694cf478e01b6a
Author: Michi Mutsuzaki <michim@apache.org>
Date:   2014-01-09T21:03:16Z

    ZOOKEEPER-1057. zookeeper c-client, connection to offline server fails to successfully fallback to second zk host (Germán Blanco via michim)
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1556949 13f79535-47bb-0310-9956-ffa450edef68

commit 19e4b850e48cbe8f100ab23cada9f2ea0a05d2be
Author: Michi Mutsuzaki <michim@apache.org>
Date:   2014-01-09T23:01:19Z

    ZOOKEEPER-1857. PrepRequestProcessotTest doesn't shutdown ZooKeeper server (Germán Blanco via michim)
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1556977 13f79535-47bb-0310-9956-ffa450edef68

commit 9436a70a24d62d38afea2692d2413bd935981b83
Author: Flavio Paiva Junqueira <fpj@apache.org>
Date:   2014-01-12T21:36:17Z

    ZOOKEEPER-1238. when the linger time was changed for NIO the patch missed 
    Netty (Skye Wanderman-Milne via fpj)
    
    
    git-svn-id: https://svn.apache.org/repos/asf/zookeeper/branches/branch-3.4@1557614 13f79535-47bb-0310-9956-ffa450edef68

----
;;;","11/Sep/17 15:17;githubbot;Github user nikhilbhide closed the pull request at:

    https://github.com/apache/zookeeper/pull/369
;;;","11/Sep/17 15:18;githubbot;GitHub user nikhilbhide opened a pull request:

    https://github.com/apache/zookeeper/pull/370

    Ported ZOOKEEPER-2814 from master to branch 3.4.  Added files src/java/main/org/apache/zookeeper/common/StringUtils.java src/java/test/org/apache/zookeeper/test/StringUtilTest.java  Modified Files: src/java/main/org/apache/zookeeper/client/ConnectStringParser.java src/java/test/org/apache/zookeeper/test/ConnectStringParserTest.java

    Ported ZOOKEEPER-2814 from master to branch 3.4.
    
    Added files
    src/java/main/org/apache/zookeeper/common/StringUtils.java
    src/java/test/org/apache/zookeeper/test/StringUtilTest.java
    
    Modified Files:
    src/java/main/org/apache/zookeeper/client/ConnectStringParser.java
    src/java/test/org/apache/zookeeper/test/ConnectStringParserTest.java

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/nikhilbhide/zookeeper ZOOKEEPER-2814

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/370.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #370
    
----
commit 11da57df94c95b52a97b7c039e1ba042ebac8ed7
Author: Nikhil Bhide <nikhilbhide15@gmail.com>
Date:   2017-09-11T13:14:29Z

    ZOOKEEPER-2814: Ignore space after comma in connection string
    
    Added logic to trim host connection string for ZOOKEEPER-2814: Ignore space after comma in connection string
    Port ZOOKEEPER-2814 from master

commit 3f210394e989507282d1e42fb9f3e35512d314e8
Author: Nikhil Bhide <nikhilbhide15@gmail.com>
Date:   2017-09-11T13:19:44Z

    Zookeeper 2814: ignore space after comma in connection string
    
    Port Zookeeper 2814 from master to branch - 3.4
    Created StringUtils.java

commit 7da1c0786f7ca7aabe73f53f818db97d82e701e1
Author: Nikhil Bhide <nikhilbhide15@gmail.com>
Date:   2017-09-11T13:22:26Z

    ZOOKEEPER-2814: Ignore space after comma in connection string
    
    Port ZOOKEEPER-2814 from master to branch-3.4
    Added code to test split logic implemented in StringUtils.java

commit 1629f64f58c7787bb993162e5c9b8565b4d45c64
Author: Nikhil Bhide <nikhilbhide15@gmail.com>
Date:   2017-09-11T13:26:08Z

    ZOOKEEPER-2814: Ignore space after comma in connection string
    
    Port ZOOKEEPER-2814 from master to branch-3.4
    Added test to verify the logic added to remove the spaces provided in connection string

commit d5ed52d86e5717ccf984c18d9cbb44a2cf92c01a
Author: Nikhil Bhide <nikhilbhide15@gmail.com>
Date:   2017-09-11T15:15:34Z

    ZOOKEEPER-2814: Ignore space after comma in connection string
    
    Ported ZOOKEEPER-2814 from master to 3.4

commit f9c40c41f727a6c2d82b59a7eff2d0d9d0b7fba2
Author: Nikhil Bhide <nikhilbhide15@gmail.com>
Date:   2017-09-11T15:16:58Z

    ZOOKEEPER-2814: Ignore space after comma in connection string

----
;;;","11/Sep/17 15:34;githubbot;Github user nikhilbhide closed the pull request at:

    https://github.com/apache/zookeeper/pull/370
;;;","11/Sep/17 15:57;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 5 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1017//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1017//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1017//console

This message is automatically generated.;;;","11/Sep/17 16:33;githubbot;GitHub user nikhilbhide opened a pull request:

    https://github.com/apache/zookeeper/pull/371

    ZOOKEEPER-2814: Ignore space after comma in connection string

    Ported ZOOKEEPER-2814 from master to branch 3.4.
    
    Added files
    src/java/main/org/apache/zookeeper/common/StringUtils.java
    src/java/test/org/apache/zookeeper/test/StringUtilTest.java
    
    Modified Files:
    src/java/main/org/apache/zookeeper/client/ConnectStringParser.java
    src/java/test/org/apache/zookeeper/test/ConnectStringParserTest.java

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/nikhilbhide/zookeeper ZOOKEEPER-2814

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/371.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #371
    
----
commit 11da57df94c95b52a97b7c039e1ba042ebac8ed7
Author: Nikhil Bhide <nikhilbhide15@gmail.com>
Date:   2017-09-11T13:14:29Z

    ZOOKEEPER-2814: Ignore space after comma in connection string
    
    Added logic to trim host connection string for ZOOKEEPER-2814: Ignore space after comma in connection string
    Port ZOOKEEPER-2814 from master

commit 3f210394e989507282d1e42fb9f3e35512d314e8
Author: Nikhil Bhide <nikhilbhide15@gmail.com>
Date:   2017-09-11T13:19:44Z

    Zookeeper 2814: ignore space after comma in connection string
    
    Port Zookeeper 2814 from master to branch - 3.4
    Created StringUtils.java

commit 7da1c0786f7ca7aabe73f53f818db97d82e701e1
Author: Nikhil Bhide <nikhilbhide15@gmail.com>
Date:   2017-09-11T13:22:26Z

    ZOOKEEPER-2814: Ignore space after comma in connection string
    
    Port ZOOKEEPER-2814 from master to branch-3.4
    Added code to test split logic implemented in StringUtils.java

commit 1629f64f58c7787bb993162e5c9b8565b4d45c64
Author: Nikhil Bhide <nikhilbhide15@gmail.com>
Date:   2017-09-11T13:26:08Z

    ZOOKEEPER-2814: Ignore space after comma in connection string
    
    Port ZOOKEEPER-2814 from master to branch-3.4
    Added test to verify the logic added to remove the spaces provided in connection string

commit d5ed52d86e5717ccf984c18d9cbb44a2cf92c01a
Author: Nikhil Bhide <nikhilbhide15@gmail.com>
Date:   2017-09-11T15:15:34Z

    ZOOKEEPER-2814: Ignore space after comma in connection string
    
    Ported ZOOKEEPER-2814 from master to 3.4

commit f9c40c41f727a6c2d82b59a7eff2d0d9d0b7fba2
Author: Nikhil Bhide <nikhilbhide15@gmail.com>
Date:   2017-09-11T15:16:58Z

    ZOOKEEPER-2814: Ignore space after comma in connection string

----
;;;","11/Sep/17 17:12;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 5 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1018//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1018//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1018//console

This message is automatically generated.;;;","12/Oct/17 18:13;githubbot;Github user mfenes commented on the issue:

    https://github.com/apache/zookeeper/pull/371
  
    Regex implementation would be shorter to ignore the spaces and empty strings as
    ```
    connectString.replaceAll(""\\s"", """").replaceAll("",+"", "","").split("","") 
    ```
    does the same thing as the new StringUtils.split(String value, String separator) implementation in this PR.
;;;","13/Oct/17 11:56;githubbot;Github user dolphy17 commented on the issue:

    https://github.com/apache/zookeeper/pull/371
  
    I prefer the regex solution too as @mfenes did.
;;;","13/Oct/17 23:26;phunt;The expectation has always been that the user will format the string properly. I believe we should provide an error that allows the user to rectify, rather than ignoring. That just makes our lives harder in the future.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failure tight loop in acceptor,ZOOKEEPER-2813,13080750,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,paulmillar,paulmillar,19/Jun/17 08:54,19/Jun/17 08:54,29/Jun/25 13:34,,3.4.8,,,,,,,,,,,,,,,,,,,,,,,,3.5.0,,,,,server,,,,,0,,,"A failure during accepting an incoming connection results in the acceptor thread being caught in a tight-loop.  For example:

{noformat}
13 Jun 2017 15:31:39 (zookeeper) [] Ignoring unexpected runtime exception
java.lang.NullPointerException: null
	at org.apache.zookeeper.server.ZooKeeperServer.processConnectRequest(ZooKeeperServer.java:864) ~[zookeeper-3.4.8.jar:3.4.8--1]
	at org.apache.zookeeper.server.NIOServerCnxn.readConnectRequest(NIOServerCnxn.java:418) ~[zookeeper-3.4.8.jar:3.4.8--1]
	at org.apache.zookeeper.server.NIOServerCnxn.readPayload(NIOServerCnxn.java:198) ~[zookeeper-3.4.8.jar:3.4.8--1]
	at org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:244) ~[zookeeper-3.4.8.jar:3.4.8--1]
	at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:203) ~[zookeeper-3.4.8.jar:3.4.8--1]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_131]
13 Jun 2017 15:31:39 (zookeeper) [] Ignoring unexpected runtime exception
java.lang.NullPointerException: null
	at org.apache.zookeeper.server.ZooKeeperServer.createSession(ZooKeeperServer.java:569) ~[zookeeper-3.4.8.jar:3.4.8--1]
	at org.apache.zookeeper.server.ZooKeeperServer.processConnectRequest(ZooKeeperServer.java:902) ~[zookeeper-3.4.8.jar:3.4.8--1]
	at org.apache.zookeeper.server.NIOServerCnxn.readConnectRequest(NIOServerCnxn.java:418) ~[zookeeper-3.4.8.jar:3.4.8--1]
	at org.apache.zookeeper.server.NIOServerCnxn.readPayload(NIOServerCnxn.java:198) ~[zookeeper-3.4.8.jar:3.4.8--1]
	at org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:244) ~[zookeeper-3.4.8.jar:3.4.8--1]
	at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:203) ~[zookeeper-3.4.8.jar:3.4.8--1]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_131]
13 Jun 2017 15:31:40 (zookeeper) [] Ignoring unexpected runtime exception
java.lang.NullPointerException: null
	at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:185) ~[zookeeper-3.4.8.jar:3.4.8--1]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_131]
13 Jun 2017 15:31:40 (zookeeper) [] Ignoring unexpected runtime exception
java.lang.NullPointerException: null
	at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:185) ~[zookeeper-3.4.8.jar:3.4.8--1]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_131]
13 Jun 2017 15:31:40 (zookeeper) [] Ignoring unexpected runtime exception
java.lang.NullPointerException: null
	at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:185) ~[zookeeper-3.4.8.jar:3.4.8--1]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_131]
{noformat}

The first stack-trace is due to ZOOKEEPER-2810, the second is due to ZOOKEEPER-2812. 

The other stack-traces (NPE from NIOServerCnxnFactory.java:185) are never-ending, as the service has been caught in a tight-loop.

The reason is that the NIOServerCnxnFactory class fails to guarantee that `selected` variable is clearer, so the SelectionKey that triggered the bugs remains ""live"".  However, since there are no incoming connections, the call to `accept()` returns null, triggering the NPE.

It appears this problem is fixed with 3.5.0 (with commit 6302d7a7).   If back-porting this patch is too invasive, another solution might be to place the `selected.clear()` statement inside the finally-clause of the try-statement.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2017-06-19 08:54:40.0,,,,,,,,,,"0|i3gfjj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Racy implicit SessionTracker creation,ZOOKEEPER-2812,13080731,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,paulmillar,paulmillar,19/Jun/17 07:51,19/Jun/17 07:51,29/Jun/25 13:34,,3.4.8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,server,,,,,0,,,"As with ZOOKEEPER-2810, NIOServerCnxnFactory#startup current starts the acceptor thread before initialising the ZooKeeperServer object.  This leads to a race-condition between any incoming connection and the thread initialising the ZooKeeperServer.

If the incoming connection wins the race then the thread processing this connection will see an uninitialised SessionTracker object, resulting in the following NPE being thrown:

{noformat}
java.lang.NullPointerException: null
	at org.apache.zookeeper.server.ZooKeeperServer.createSession(ZooKeeperServer.java:569) ~[zookeeper-3.4.8.jar:3.4.8--1]
	at org.apache.zookeeper.server.ZooKeeperServer.processConnectRequest(ZooKeeperServer.java:902) ~[zookeeper-3.4.8.jar:3.4.8--1]
	at org.apache.zookeeper.server.NIOServerCnxn.readConnectRequest(NIOServerCnxn.java:418) ~[zookeeper-3.4.8.jar:3.4.8--1]
	at org.apache.zookeeper.server.NIOServerCnxn.readPayload(NIOServerCnxn.java:198) ~[zookeeper-3.4.8.jar:3.4.8--1]
	at org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:244) ~[zookeeper-3.4.8.jar:3.4.8--1]
	at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:203) ~[zookeeper-3.4.8.jar:3.4.8--1]
{noformat}

Again, as with ZOOKEEPER-2810, the naive fix (starting the acceptor thread last in NIOServerCnxnFactory#startup method) may fix this issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2017-06-19 07:51:38.0,,,,,,,,,,"0|i3gffb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PurgeTxnLog#validateAndGetFile: return tag has no arguments.,ZOOKEEPER-2811,13080676,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,hanm,hanm,hanm,18/Jun/17 22:36,13/Jul/17 02:59,29/Jun/25 13:34,06/Jul/17 16:53,3.4.10,,,,,,,,,,,,,,,,,,,,,,,,3.4.11,,,,,documentation,,,,,0,newbie,,"The Java doc of PurgeTxnLog#validateAndGetFile is missing the value of its return tag, which causes -1 in the JavaDoc category of pre-commit build:

{noformat}
  [javadoc] /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build/src/java/main/org/apache/zookeeper/server/PurgeTxnLog.java:214: warning - @return tag has no arguments.
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Jul 06 16:55:11 UTC 2017,,,,,,,,,,"0|i3gf33:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Jul/17 04:01;githubbot;GitHub user hanm opened a pull request:

    https://github.com/apache/zookeeper/pull/305

    ZOOKEEPER-2811: PurgeTxnLog#validateAndGetFile: return tag has no argument.

    With this fix branch-3.4 pre-commit should generate a green build when all unit tests pass.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/hanm/zookeeper ZOOKEEPER-2811

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/305.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #305
    
----
commit 7e7d6f9eda2c75de68bc10f0fd67ae2e56c0511d
Author: Michael Han <hanm@apache.org>
Date:   2017-07-06T03:47:49Z

    ZOOKEEPER-2811: PurgeTxnLog#validateAndGetFile: return tag has no arguments.

----
;;;","06/Jul/17 04:36;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/862//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/862//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/862//console

This message is automatically generated.;;;","06/Jul/17 16:53;hanm;Issue resolved by pull request 305
[https://github.com/apache/zookeeper/pull/305];;;","06/Jul/17 16:55;githubbot;Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/305
  
    Merging and closing the PR. 
;;;","06/Jul/17 16:55;githubbot;Github user hanm closed the pull request at:

    https://github.com/apache/zookeeper/pull/305
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Racy implicit ZKDatabase creation,ZOOKEEPER-2810,13080408,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,paulmillar,paulmillar,16/Jun/17 13:24,16/Jun/17 13:24,29/Jun/25 13:34,,3.4.8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,server,,,,,0,,,"The NIOServerCnxnFactory#startup method first starts the acceptor thread and then initialises the ZooKeeperServer instance.  In particular, the call to ZooKeeperServer#startdata method creates the ZKDatabase if it does not already exist.

This creates a race-condition: if the acceptor thread accepts an incoming connection before the ZKDatabase is established then there is a NullPointerException:

{noformat}
java.lang.NullPointerException: null
	at org.apache.zookeeper.server.ZooKeeperServer.processConnectRequest(ZooKeeperServer.java:864) ~[zookeeper-3.4.8.jar:3.4.8--1]
	at org.apache.zookeeper.server.NIOServerCnxn.readConnectRequest(NIOServerCnxn.java:418) ~[zookeeper-3.4.8.jar:3.4.8--1]
	at org.apache.zookeeper.server.NIOServerCnxn.readPayload(NIOServerCnxn.java:198) ~[zookeeper-3.4.8.jar:3.4.8--1]
	at org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:244) ~[zookeeper-3.4.8.jar:3.4.8--1]
	at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:203) ~[zookeeper-3.4.8.jar:3.4.8--1]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_131]
{noformat}

The same problem appears to be present in release-3.5 and master branches.

The naive fix would be to start the acceptor thread last in NIOServerCnxnFactory#startup, but I can't say whether this would cause any other problems.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2017-06-16 13:24:18.0,,,,,,,,,,"0|i3gdfr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unnecessary stack-trace in server when the client disconnect unexpectedly,ZOOKEEPER-2809,13080394,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,mfenes,paulmillar,paulmillar,16/Jun/17 11:07,04/Oct/17 21:51,29/Jun/25 13:34,11/Sep/17 22:08,3.4.8,,,,,,,,,,,,,,,,,,,,,,,,3.4.11,,,,,server,,,,,0,,,"In ZK 3.4.x, if the client disconnects unexpectedly then the server logs this with a stack-trace (see src/java/main/org/apache/zookeeper/server/NIOServerCnxn.java:356).

This is unfortunate as we are using an embedded ZK server in our project (in a test environment) and we consider all stack-traces as bugs.

I noticed that ZK 3.5 and later no longer log a stack-trace.  This change is due to commit 6206b495 (in branch-3.5), which adds ZOOKEEPER-1504 and seems to fix this issue almost as a side-effect; a similar change in master has the same effect.

I was wondering if the change in how EndOfStreamException is logged (i.e., logging the message without a stack-trace) could be back-ported to 3.4 branch, so could be included in the next 3.4 release.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Oct 04 21:51:24 UTC 2017,,,,,,,,,,"0|i3gdcn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Sep/17 12:02;githubbot;GitHub user mfenes opened a pull request:

    https://github.com/apache/zookeeper/pull/355

    ZOOKEEPER-2809: Unnecessary stack-trace in server when the client dis…

    Unnecessary stack-trace in server when the client disconnects unexpectedly.
    
    Backport from master, branch-3.5 to branch-3.4. Removes unnecessary stack traces from the catch blocks of method doIO in NIOServerCnxn. For EndOfStreamException stack trace is replaced with logging only the message and also contains the removal of stack traces for exceptions CancelledKeyException and IOException as per commit 6206b495 referenced in the ticket.
    This change is necessary as there are projects which consider all stack traces as bugs. 
    For CancelledKeyException and IOException developers are still able to see stack traces at log level Debug.
    This change is in sync with master and branch-3.5.


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/mfenes/zookeeper ZOOKEEPER-2809

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/355.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #355
    
----
commit 81cd3cc42d85371bd24e427bedab1740695be819
Author: Mark Fenes <mfenes@cloudera.com>
Date:   2017-08-31T12:11:09Z

    ZOOKEEPER-2809: Unnecessary stack-trace in server when the client disconnect unexpectedly

----
;;;","01/Sep/17 13:02;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/987//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/987//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/987//console

This message is automatically generated.;;;","01/Sep/17 21:04;githubbot;Github user afine commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/355#discussion_r136665164
  
    --- Diff: src/java/main/org/apache/zookeeper/server/NIOServerCnxn.java ---
    @@ -374,14 +373,12 @@ void doIO(SelectionKey k) throws InterruptedException {
                 // expecting close to log session closure
                 close();
             } catch (EndOfStreamException e) {
    -            LOG.warn(""caught end of stream exception"",e); // tell user why
    -
    +            LOG.warn(e.getMessage());
    --- End diff --
    
    Do we want to log the whole stack trace if debug is enabled here?
;;;","05/Sep/17 14:34;githubbot;Github user mfenes commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/355#discussion_r137005402
  
    --- Diff: src/java/main/org/apache/zookeeper/server/NIOServerCnxn.java ---
    @@ -374,14 +373,12 @@ void doIO(SelectionKey k) throws InterruptedException {
                 // expecting close to log session closure
                 close();
             } catch (EndOfStreamException e) {
    -            LOG.warn(""caught end of stream exception"",e); // tell user why
    -
    +            LOG.warn(e.getMessage());
    --- End diff --
    
    Yes, it would make sense to log the stack trace at debug level for EndOfStreamException too, so that we don't get less information in the log after this change is applied. The reason why I did not include it first, was to keep this change a pure backport from master and branch-3.5 to branch-3.4 as the original change does not include this additional logging statement. I've added it now, but probably then we should also add it to master as well if we wish to keep it.
;;;","06/Sep/17 14:33;githubbot;Github user mfenes closed the pull request at:

    https://github.com/apache/zookeeper/pull/355
;;;","06/Sep/17 14:33;githubbot;GitHub user mfenes reopened a pull request:

    https://github.com/apache/zookeeper/pull/355

    ZOOKEEPER-2809: Unnecessary stack-trace in server when the client dis…

    Unnecessary stack-trace in server when the client disconnects unexpectedly.
    
    Backport from master, branch-3.5 to branch-3.4. Removes unnecessary stack traces from the catch blocks of method doIO in NIOServerCnxn. For EndOfStreamException stack trace is replaced with logging only the message and also contains the removal of stack traces for exceptions CancelledKeyException and IOException as per commit 6206b495 referenced in the ticket.
    This change is necessary as there are projects which consider all stack traces as bugs. 
    For CancelledKeyException and IOException developers are still able to see stack traces at log level Debug.
    This change is in sync with master and branch-3.5.


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/mfenes/zookeeper ZOOKEEPER-2809

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/355.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #355
    
----

----
;;;","06/Sep/17 14:39;githubbot;Github user mfenes closed the pull request at:

    https://github.com/apache/zookeeper/pull/355
;;;","06/Sep/17 14:40;githubbot;GitHub user mfenes reopened a pull request:

    https://github.com/apache/zookeeper/pull/355

    ZOOKEEPER-2809: Unnecessary stack-trace in server when the client dis…

    Unnecessary stack-trace in server when the client disconnects unexpectedly.
    
    Backport from master, branch-3.5 to branch-3.4. Removes unnecessary stack traces from the catch blocks of method doIO in NIOServerCnxn. For EndOfStreamException stack trace is replaced with logging only the message and also contains the removal of stack traces for exceptions CancelledKeyException and IOException as per commit 6206b495 referenced in the ticket.
    This change is necessary as there are projects which consider all stack traces as bugs. 
    For CancelledKeyException and IOException developers are still able to see stack traces at log level Debug.
    This change is in sync with master and branch-3.5.


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/mfenes/zookeeper ZOOKEEPER-2809

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/355.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #355
    
----

----
;;;","06/Sep/17 15:15;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1001//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1001//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1001//console

This message is automatically generated.;;;","11/Sep/17 22:08;hanm;Issue resolved by pull request 355
[https://github.com/apache/zookeeper/pull/355];;;","11/Sep/17 22:11;githubbot;Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/355
  
    Committed to 3.4: 34665cd5bdbcb6aaeecb6b204028ef1ffab9f2d8
    
    @mfenes Please close this pull request.
;;;","04/Oct/17 21:51;githubbot;Github user mfenes closed the pull request at:

    https://github.com/apache/zookeeper/pull/355
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"By default, only srvr four-letter word is on the whitelist, while documentation says all are",ZOOKEEPER-2764,13065043,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Not A Bug,,ABchmn,ABchmn,19/Apr/17 09:54,18/May/17 03:43,29/Jun/25 13:34,20/Apr/17 08:10,3.5.3,,,,,,,,,,,,,,,,,,,,,,,,3.5.3,,,,,,,,,,0,,,"Using the same Vagrant provisioning script as for 3.5.2-alpha, suddenly all monitoring tools told me that the ZK instance was unavailable or had an error. Investigating further, the instance was fine as a follower, but the response to telnet ""ruok"" was actually ""ruok ... is not in the whitelist"".
Is this a new default not reflected in the documentation yet? It says since 3.4.10 there's a whitelist option, but all commands are by default on it (same as 4lw.commands.whitelist=*).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Apr 20 08:10:21 UTC 2017,,,,,,,,,,"0|i3dswv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Apr/17 15:28;hanm;3.5.3-beta has all four letter words disabled except srvr, please refer to the doc here:
http://zookeeper.apache.org/doc/r3.5.3-beta/zookeeperAdmin.html
{noformat}
4lw.commands.whitelist
(Java system property: zookeeper.4lw.commands.whitelist)

New in 3.5.3: A list of comma separated Four Letter Words commands that user wants to use. A valid Four Letter Words command must be put in this list else ZooKeeper server will not enable the command. By default the whitelist only contains ""srvr"" command which zkServer.sh uses. The rest of four letter word commands are disabled by default.

Here's an example of the configuration that enables stat, ruok, conf, and isro command while disabling the rest of Four Letter Words command:

                4lw.commands.whitelist=stat, ruok, conf, isro
              
If you really need enable all four letter word commands by default, you can use the asterisk option so you don't have to include every command one by one in the list. As an example, this will enable all four letter word commands:

                4lw.commands.whitelist=*
              
{noformat}

bq. It says since 3.4.10 there's a whitelist option, but all commands are by default on it (same as 4lw.commands.whitelist=*).

As previously mentioned the document has up to date content wrt the white list. May I know where you find in 3.5.3-beta that all commands are by default on? 

On a side note, you can try Jetty admin server interface or JMX for monitoring server health instead of using 4lw.;;;","20/Apr/17 08:10;ABchmn;The pointer to the current version's documentation was helpful, I was checking the old version's documentation.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Utils.toCsvBuffer() omits leading 0 for bytes < 0x10,ZOOKEEPER-2763,13064994,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Won't Fix,weitang,bberg,bberg,19/Apr/17 06:34,08/Aug/19 17:13,29/Jun/25 13:34,08/Aug/19 17:13,3.5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,jute,,,,,0,pull-request-available,,"org.apache.jute.Utils.toCsvBuffer(), which converts a byte array to a string containing the hex representation of that byte array, omits the leading zero for any byte less than 0x10, due to its use of Integer.toHexString, which has the same behavior.

https://github.com/apache/zookeeper/blob/master/src/java/main/org/apache/jute/Utils.java#L234

One consequence of this is that the hex strings printed by ClientCnxn.Packet.toString(), used in the debug logging for ClientCnxn.readResponse(), cannot be parsed to determine the result of a Zookeeper request from client debug logs.

Utils.toXmlBuffer() appears to have the same issue.
{code}",,"anmolnar commented on issue #238: ZOOKEEPER-2763: Utils.toCsvBuffer() omits leading 0 for bytes < 0x10
URL: https://github.com/apache/zookeeper/pull/238#issuecomment-459526312
 
 
   @alburthoffman Are u still willing to work on this patch?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jan/19 22:11;githubbot;600","anmolnar commented on issue #238: ZOOKEEPER-2763: Utils.toCsvBuffer() omits leading 0 for bytes < 0x10
URL: https://github.com/apache/zookeeper/pull/238#issuecomment-519603167
 
 
   Outdated.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Aug/19 16:59;githubbot;600","anmolnar commented on pull request #238: ZOOKEEPER-2763: Utils.toCsvBuffer() omits leading 0 for bytes < 0x10
URL: https://github.com/apache/zookeeper/pull/238
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Aug/19 16:59;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,9223372036854775807,,,,,Wed Aug 16 05:34:28 UTC 2017,,,,,,,,,,"0|i3dsmf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Apr/17 06:49;bberg;This also appears to be broken for any bytes with negative value, in which case it prints the full eight-digit int equivalent. For example, the byte array \{0x10, 0x05, -0x20\} serializes to #105ffffffe0, rather than the expected #1005e0;;;","19/Apr/17 09:26;bberg;One possible fix:

{code}
    static String toCSVBuffer(byte barr[]) {
        if (barr == null || barr.length == 0) {
            return """";
        }
        StringBuilder sb = new StringBuilder(barr.length + 1);
        sb.append('#');
        for(int idx = 0; idx < barr.length; idx++) {
            String hex = Integer.toHexString(barr[idx] & 0xff);
            if (hex.length() == 1) {
                sb.append('0');
            }
            sb.append(hex);
        }
        return sb.toString();
    }
{code};;;","19/Apr/17 13:22;weitang;this one will also fix the negative case:
{code:borderStyle=solid}
            if (hex.length() == 1) {
                sb.append('0');
            } else if (hex.length() > 2) {
            	sb.append(hex.substring(hex.length() - 2));
            }
            sb.append(hex);
{code}


;;;","19/Apr/17 13:30;weitang;Brandon Berg, I'm a big fan for zookeeper, and would like to contribute my time to it. 

after reading HowToContribute doc, still a little confused.

I think one PR in https://github.com/apache/zookeeper would be enough, right? or I have to get assigned tickets first?;;;","19/Apr/17 15:21;hanm;[~weitang] A pull request is enough. It takes a while to get an issue assign to new contributor because only a handful of people has JIRA admin permission. So if you are interested on contributing you can start working right away.

[~rakeshr] Can you add Alburt to JIRA contributor list?;;;","19/Apr/17 17:24;rakeshr;bq. Can you add Alburt to JIRA contributor list?
Done. [~weitang], please create a PR with the fix. All the best!;;;","19/Apr/17 18:11;bberg;[~weitang]: Note that the ""& 0xff"" in the fix I suggested handles the negative case by masking off any bits outside of the least significant byte. There's no need to check for hex.length() > 2, because Integer.toHexString(barr[idx] & 0xff) will never return a string longer than two characters.

I don't actually know anything about the process for submitting fixes; submitting this bug report is the only interaction I've ever had with the project so far.;;;","20/Apr/17 00:46;weitang;Thx Guys for helping me on this. this is awksome.

[~bberg] you are correct. 0xff can handle negative case correctly.
You still want me to submit PR to fix toCSVBuffer and toXMLBuffer?

Also these two methods are almost the same, kinda of duplicate.
Any strong reason that we keep them in this way? because same issue will require two changes.....

Regards;;;","20/Apr/17 05:49;bberg;I just noticed that this is a duplicate of ZOOKEEPER-1716. There's a better-performing fix suggested there, but it seems the assignee abandoned it over a year ago after it caused some unit tests to fail (possibly because the unit tests were expecting the wrong result, but I don't know because the test results have long since been deleted). I would suggest using that fix (the NIBBLE_TO_HEX one, not the String.format one) instead of mine. Note also that the initial allocation of the StringBuffer is incorrect. The size should be 2 * barr.length + 1, not barr.length + 1. This is fine functionally, but leads to an unnecessary reallocation when the initial buffer is filled.

You could make a generic version of the function that takes a ""prefix"" String argument, like:

{code}
private static String toHexString(String prefix, byte[] barr) {
    if (barr == null || barr.length == 0) {
        return """"; // Or should it return the prefix? Current behavior is not to, but we've already identified multiple problems with the current behavior.
    }
    StringBuilder sb = new StringBuilder(2 * barr.length + prefix.length());
    sb.append(prefix);
    for(int idx = 0; idx < barr.length; idx++) {
        byte b = barr[idx];
        sb.append(NIBBLE_TO_HEX[b&0x0f]);
        sb.append(NIBBLE_TO_HEX[(b&0xf0)>>4]);
    }
    return sb.toString();
}

public static String toCSVBuffer(byte[] barr) {
    return toHexString(""#"", barr);
}

public static String toXMLBuffer(byte[] barr) {
    return toHexString("""", barr);
}
{code}

Also, it may be better to close this bug as duplicate and submit a fix for the original bug. I don't really know what the procedure is. [~chelin], are you still around? Do you remember what happened with ZOOKEEPER-1716?;;;","20/Apr/17 06:14;weitang;agreed. the patch for ZOOKEEPER-1716 works for this issue. this one should be closed if ZOOKEEPER-1716 was resolved.;;;","20/Apr/17 18:46;chelin;The patch is available I do not believe it has been merged though.;;;","21/Apr/17 00:19;weitang;[~chelin] Thx for confirm. Since ur patch is only for toCsvBuffer. I will submit another pull request for toXMLBuffer() today.;;;","24/Apr/17 06:08;githubbot;GitHub user alburthoffman opened a pull request:

    https://github.com/apache/zookeeper/pull/238

    ZOOKEEPER-2763: Utils.toCsvBuffer() omits leading 0 for bytes < 0x10

    1. fix toCsvBuffer() and toXMLBuffer()
    2. reduce duplicate code

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/alburthoffman/zookeeper ZOOKEEPER_2763

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/238.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #238
    
----
commit a1461e47e89878f8772b2136f1f2ff978b1f6f4b
Author: wtang3 <wtang3@ebay.com>
Date:   2017-04-24T05:46:57Z

    fix https://issues.apache.org/jira/browse/ZOOKEEPER-2763

----
;;;","24/Apr/17 06:09;weitang;PR: https://github.com/apache/zookeeper/pull/238;;;","24/Apr/17 07:04;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/588//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/588//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/588//console

This message is automatically generated.;;;","24/Apr/17 07:08;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/589//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/589//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/589//console

This message is automatically generated.;;;","24/Apr/17 07:15;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/590//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/590//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/590//console

This message is automatically generated.;;;","24/Apr/17 08:00;bberg;Not a reviewer, so I don't think I have a say here, but just to give my opinion: This mostly looks good, but I'm not a huge fan of the way the '#' is added via String concatenation. This reallocates another potentially very large buffer and copies the whole hex string just to prepend a single hash character. The approach I suggested in my last comment (passing a prefix in as an argument to toHexString()) avoids the reallocation and copy by allocating space for it in the original StringBuilder.

Granted, AFAIK this is only used in debug logging, and the whole thing is network IO bounded, so maybe it doesn't really matter anyway, but it's an easy fix that gives a free performance improvement.;;;","25/Apr/17 20:11;githubbot;Github user afine commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/238#discussion_r113297764
  
    --- Diff: src/java/main/org/apache/jute/Utils.java ---
    @@ -190,19 +190,32 @@ static String fromCSVString(String s) throws IOException {
         }
         
         /**
    +     * convert byte array to a string in hex format
          * 
    -     * @param s 
    -     * @return 
    +     * @param barr
    +     * @return
          */
    -    static String toXMLBuffer(byte barr[]) {
    --- End diff --
    
    Great catch @alburthoffman
    
    Just wondering if there is anything wrong with java's built in XML tooling here. Using the example from the JIRA:
    `javax.xml.bind.DatatypeConverter.printHexBinary(new byte[] {0x10, 0x05, -0x20})` => ""1005E0""
;;;","26/Apr/17 03:04;githubbot;Github user alburthoffman commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/238#discussion_r113356883
  
    --- Diff: src/java/main/org/apache/jute/Utils.java ---
    @@ -190,19 +190,32 @@ static String fromCSVString(String s) throws IOException {
         }
         
         /**
    +     * convert byte array to a string in hex format
          * 
    -     * @param s 
    -     * @return 
    +     * @param barr
    +     * @return
          */
    -    static String toXMLBuffer(byte barr[]) {
    --- End diff --
    
    you are right. printHexBinary works exactly as same as toHexString.
    I will change it to use printHexBinary and add test cases.
    
    Thx for ur suggestion
;;;","26/Apr/17 03:05;weitang;afine is right about javax.xml.bind.DatatypeConverter.printHexBinary,

so I'm going to update my PR to use javax.xml.bind.DatatypeConverter.printHexBinary.
since dont need to implement our own method.;;;","26/Apr/17 03:24;weitang;Change is done.

[~bberg] agreed with u about the StringBuffer thing. this is one thing I'm not sure about. Because what I'm thinking is to make toHexString simple, which means it just convert bytes array to string. and for the prefix string, it should be done with another method, like padString?

because it's easier to understand and toHexString can be used in other places later or replaced by DatatypeConverter.printHexBinary....

But it does have performance issue implicitly. 

So I dont know actually....

Regards;;;","26/Apr/17 04:13;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/631//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/631//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/631//console

This message is automatically generated.;;;","26/Apr/17 04:36;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/632//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/632//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/632//console

This message is automatically generated.;;;","26/Apr/17 04:36;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/633//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/633//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/633//console

This message is automatically generated.;;;","26/Apr/17 06:44;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/634//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/634//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/634//console

This message is automatically generated.;;;","26/Apr/17 07:44;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/635//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/635//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/635//console

This message is automatically generated.;;;","28/Apr/17 08:39;weitang;avoid DatatypeConverter because JAXB has to been initialized at some point, otherwise it will throw NullPointerException.

In utils class, initialize JAXB is too heavy, so let's make it simple....;;;","28/Apr/17 08:41;githubbot;Github user alburthoffman commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/238#discussion_r113880584
  
    --- Diff: src/java/main/org/apache/jute/Utils.java ---
    @@ -190,19 +190,32 @@ static String fromCSVString(String s) throws IOException {
         }
         
         /**
    +     * convert byte array to a string in hex format
          * 
    -     * @param s 
    -     * @return 
    +     * @param barr
    +     * @return
          */
    -    static String toXMLBuffer(byte barr[]) {
    --- End diff --
    
    @afine found the reason why not use DatatypeConverter:
    JAXB Providers are required to call the setDatatypeConverter api at some point before the first marshal or unmarshal operation (perhaps during the call to JAXBContext.newInstance). This step is necessary to configure the converter that should be used to perform the print and parse functionality.
    
    In utils class, initialize JAXB is too heavy, so let's make it simple....
;;;","28/Apr/17 08:57;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/657//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/657//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/657//console

This message is automatically generated.;;;","28/Apr/17 20:17;githubbot;Github user afine commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/238#discussion_r114011352
  
    --- Diff: src/java/main/org/apache/jute/Utils.java ---
    @@ -190,19 +190,32 @@ static String fromCSVString(String s) throws IOException {
         }
         
         /**
    +     * convert byte array to a string in hex format
          * 
    -     * @param s 
    -     * @return 
    +     * @param barr
    +     * @return
          */
    -    static String toXMLBuffer(byte barr[]) {
    --- End diff --
    
    Are you sure about that? I know next to nothing about JAXB so I can definitely be wrong, but I was able to drop `DatatypeConverter.printHexBinary` in place and have everything just work. Digging through the implementation and DatatypeConverter instantiation happening behind the scenes everything looked reasonable. Can you link me to something that shows what I am missing?
    
    Thanks
;;;","19/May/17 07:32;githubbot;Github user alburthoffman commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/238#discussion_r117419956
  
    --- Diff: src/java/main/org/apache/jute/Utils.java ---
    @@ -190,19 +190,32 @@ static String fromCSVString(String s) throws IOException {
         }
         
         /**
    +     * convert byte array to a string in hex format
          * 
    -     * @param s 
    -     * @return 
    +     * @param barr
    +     * @return
          */
    -    static String toXMLBuffer(byte barr[]) {
    --- End diff --
    
    I'm not able to dig into Zookeeper internal to find the root cause.
    but this link would help:
    http://stackoverflow.com/questions/12498256/why-the-npe-using-static-method-of-datatypeconverter
    https://developer.ibm.com/answers/questions/200553/jaxb-datatypeconverter-throws-nullpointerexception.html

;;;","19/May/17 17:56;githubbot;Github user afine commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/238#discussion_r117538863
  
    --- Diff: src/java/main/org/apache/jute/Utils.java ---
    @@ -190,19 +190,32 @@ static String fromCSVString(String s) throws IOException {
         }
         
         /**
    +     * convert byte array to a string in hex format
          * 
    -     * @param s 
    -     * @return 
    +     * @param barr
    +     * @return
          */
    -    static String toXMLBuffer(byte barr[]) {
    --- End diff --
    
    I went through the links that you provided. Would you mind including the version of the JVM that you are running? According to https://issues.apache.org/jira/browse/CAMEL-4893 the issue I think you are running into was fixed in JDK's greater than 1.7.0_02.
    
    It would also be great if you could include a stack trace of the issue you are running into.
;;;","19/May/17 18:43;githubbot;Github user eribeiro commented on the issue:

    https://github.com/apache/zookeeper/pull/238
  
    @alburthoffman @afine Hey guys, did you notice that the body of `bufEquals` method could be replaced by  `return Arrays.equals(onearray, twoarray);`? 
    
    In fact, the current implementation of `bufEquals` is almost a clone of `Arrays.equals`
;;;","19/May/17 18:51;githubbot;Github user eribeiro commented on the issue:

    https://github.com/apache/zookeeper/pull/238
  
    Also, loops like the one below:
    ```
            for (int idx = 0; idx < s.length(); idx++) {
              char ch = s.charAt(idx);
    ```
    could be simplified to  `for (char ch : s.toCharArray()) {` in some **very specific methods that don't increment the counter inside the loop**.
    

;;;","23/May/17 01:09;githubbot;Github user alburthoffman commented on the issue:

    https://github.com/apache/zookeeper/pull/238
  
    @eribeiro you are correct. foreach loop is more readable. 
    
    But for bufEquals, it should be in another commit(code refractor?). cause this PR is for  ZOOKEEPER-2763
    
    let's make it simple. 
;;;","23/May/17 01:28;githubbot;Github user eribeiro commented on the issue:

    https://github.com/apache/zookeeper/pull/238
  
    Totally agree. It is worth another jira, for sure. :)
;;;","23/May/17 15:16;githubbot;Github user chelin commented on the issue:

    https://github.com/apache/zookeeper/pull/238
  
    Regarding 
    > for (char ch : s.toCharArray())
    
    The difference is that toCharArray() results in a copy of the intrinsic array, leading to increased memory usage
;;;","06/Jun/17 03:24;githubbot;Github user alburthoffman commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/238#discussion_r120258026
  
    --- Diff: src/java/main/org/apache/jute/Utils.java ---
    @@ -190,19 +190,32 @@ static String fromCSVString(String s) throws IOException {
         }
         
         /**
    +     * convert byte array to a string in hex format
          * 
    -     * @param s 
    -     * @return 
    +     * @param barr
    +     * @return
          */
    -    static String toXMLBuffer(byte barr[]) {
    --- End diff --
    
    @afine I belive it's the testing environment, because the tests for datatypeconverter will fail. here is what I found from their jenkins job console:
    java version ""1.7.0_80""
    Java(TM) SE Runtime Environment (build 1.7.0_80-b15)
    Java HotSpot(TM) 64-Bit Server VM (build 24.80-b11, mixed mode) 
;;;","06/Jun/17 21:02;githubbot;Github user afine commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/238#discussion_r120479760
  
    --- Diff: src/java/main/org/apache/jute/Utils.java ---
    @@ -190,19 +190,32 @@ static String fromCSVString(String s) throws IOException {
         }
         
         /**
    +     * convert byte array to a string in hex format
          * 
    -     * @param s 
    -     * @return 
    +     * @param barr
    +     * @return
          */
    -    static String toXMLBuffer(byte barr[]) {
    --- End diff --
    
    Hi @alburthoffman -
    
    I have been trying to reproduce the issue that you described. A stack trace would be helpful here. Do you know exactly which test was failing for you (as I don't think the logs for any relevant jenkins job still exists)? I was able to get the whole test suite to pass with `DatatypeConverter.printHexBinary`. 
    
    Although, if I do not add null check I can get `testJuteToString` to fail. 
    
    ```
    java.lang.NullPointerException
    	at javax.xml.bind.DatatypeConverterImpl.printHexBinary(DatatypeConverterImpl.java:479)
    	at javax.xml.bind.DatatypeConverter.printHexBinary(DatatypeConverter.java:626)
    	at org.apache.jute.Utils.toHexString(Utils.java:203)
    	at org.apache.jute.Utils.toCSVBuffer(Utils.java:242)
    	at org.apache.jute.CsvOutputArchive.writeBuffer(CsvOutputArchive.java:100)
    	at org.apache.zookeeper.proto.SetDataRequest.toString(SetDataRequest.java:77)
    	at org.apache.zookeeper.server.ToStringTest.testJuteToString(ToStringTest.java:36)
    ```
    
    I was able to remedy this with a null check before the javax call. 
    
    ```
        private static String toHexString(byte barr[]) {
            if (barr == null) {
                return """";
            }
            return javax.xml.bind.DatatypeConverter.printHexBinary(barr);
        }
    ```
    
    Thanks for your patience on this.
    
    Abe
;;;","05/Jul/17 09:04;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/859//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/859//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/859//console

This message is automatically generated.;;;","16/Aug/17 05:34;githubbot;Github user alburthoffman commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/238#discussion_r133361758
  
    --- Diff: src/java/main/org/apache/jute/Utils.java ---
    @@ -190,19 +190,32 @@ static String fromCSVString(String s) throws IOException {
         }
         
         /**
    +     * convert byte array to a string in hex format
          * 
    -     * @param s 
    -     * @return 
    +     * @param barr
    +     * @return
          */
    -    static String toXMLBuffer(byte barr[]) {
    --- End diff --
    
    @afine I changed the code to use DatatypeConverter.printHexBinary(barr). but the tests keep failing. 
    I take a look at the failures. it's very wired, because should be caused by this change.
    
    Also I got different test cases failure in local and in hadoop jenkins report. 
    
    Not sure how to trigger hadoop jenkins job to run tests, so no way to paste it here.
;;;",,,,,,,,,,,,
Incorrect path crashes zkCli,ZOOKEEPER-2757,13064157,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,abrahamfine,fpj,fpj,14/Apr/17 21:58,26/May/17 23:44,29/Jun/25 13:34,26/May/17 22:52,3.5.3,,,,,,,,,,,,,,,,,,,,,,,,3.5.4,3.6.0,,,,,,,,,0,,,"If I try {{delete test}} without the leading /, then the CLI crashes with this exception:

{noformat}
Exception in thread ""main"" java.lang.IllegalArgumentException: Path must start with / character
	at org.apache.zookeeper.common.PathUtils.validatePath(PathUtils.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:1659)
	at org.apache.zookeeper.cli.DeleteCommand.exec(DeleteCommand.java:83)
	at org.apache.zookeeper.ZooKeeperMain.processZKCmd(ZooKeeperMain.java:655)
	at org.apache.zookeeper.ZooKeeperMain.processCmd(ZooKeeperMain.java:586)
	at org.apache.zookeeper.ZooKeeperMain.executeLine(ZooKeeperMain.java:370)
	at org.apache.zookeeper.ZooKeeperMain.run(ZooKeeperMain.java:330)
	at org.apache.zookeeper.ZooKeeperMain.main(ZooKeeperMain.java:292)
{noformat}

It should really fail the operation rather than crash the CLI.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri May 26 23:44:14 UTC 2017,,,,,,,,,,"0|i3dngf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Apr/17 21:56;githubbot;GitHub user afine opened a pull request:

    https://github.com/apache/zookeeper/pull/240

    ZOOKEEPER-2757: Incorrect path crashes zkCli

    This issue is caused by us relying on `IllegalArgumentException` in `PathUtils#validatePath`. `IllegalArgumentException` is an unchecked exception and we never catch it within each individual *Command.java, so it bubbles up and killed the CLI. 
    
    Given that throwing `IllegalArgumentException` is part of ZooKeeper's API, I believe that unfortunately we can not change this behavior at this time. This patch catches `IllegalArgumentException` and wraps it, so the CLI prints an error but does not quit. I believe I handled all of the relevant commands, please check to make sure I am not missing one.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/afine/zookeeper ZOOKEEPER-2757

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/240.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #240
    
----
commit 46dce3f1c5c219b72e4e046c0bb42c1201d44238
Author: Abraham Fine <afine@apache.org>
Date:   2017-04-24T21:47:29Z

    ZOOKEEPER-2757: Incorrect path crashes zkCli

----
;;;","25/Apr/17 02:48;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/602//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/602//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/602//console

This message is automatically generated.;;;","18/May/17 23:28;githubbot;Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/240
  
    How about catch the IllegalArgumentException at ZooKeeperMain.processCmd and directly print the exception message? This way we don't need to make change to individual command.
;;;","19/May/17 05:53;githubbot;Github user afine commented on the issue:

    https://github.com/apache/zookeeper/pull/240
  
    @hanm I'm not sure that we should always assume that an IllegalArgumentException will only be thrown when a path is invalid. Since IllegalArgumentException does not need to be caught, it will be difficult for us to tell if we are masking IllegalArgumentExceptions thrown for other reasons. So we should minimize the code surrounded by `try { } catch(IllegalArgumentException e) {}` We cannot catch them within the methods of ZooKeeper.java so I think catching them at the ""Command"" level is the best we can do.
    
    IllegalArgumentException is a RuntimeException, which should represent a ""programming problem"" (http://docs.oracle.com/javase/tutorial/essential/exceptions/runtime.html). 
    >Runtime exceptions represent problems that are the result of a programming problem, and as such, the API client code cannot reasonably be expected to recover from them or to handle them in any way. 
    
    So if it does pop up for reasons other than a bad path, we should certainly bubble it up and kill the CLI.
    
    We abuse IllegalArgumentException all over ZK, I believe we should change this exception type in 3.6.
    
     
;;;","24/May/17 04:59;githubbot;Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/240
  
    Agree with what you said, Abe, in a generic context : ) - for CLI use cases though I am wondering why we should crash even in cases as you mentioned ""So if it does pop up for reasons other than a bad path"" - in such case should we always print the error message and not crashing the CLI? Would that be more helpful for user experience comparing to crash and leave no ideas to users what went wrong? Basically my point is that I don't any use case where the CLI's state is so bad that it can't recover from an unchecked exception so it has to be killed. 
    
    Other than this patch looks good to me. One nit - a new compiler waring is introduced.
;;;","24/May/17 06:17;githubbot;Github user afine commented on the issue:

    https://github.com/apache/zookeeper/pull/240
  
    @hanm I don't think it is ever safe to make assumptions about the state of the process after a bug/""programming problem"" has been encountered. So I think its better to exit the process.
    
    I fixed the compiler warning.
;;;","24/May/17 06:18;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/741//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/741//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/741//console

This message is automatically generated.;;;","26/May/17 22:52;hanm;Issue resolved by pull request 240
[https://github.com/apache/zookeeper/pull/240];;;","26/May/17 22:53;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/240
;;;","26/May/17 23:36;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3403 (See [https://builds.apache.org/job/ZooKeeper-trunk/3403/])
ZOOKEEPER-2757: Incorrect path crashes zkCli (hanm: rev b0b194533c08c8a111497e853668f751b28ae4e9)
* (edit) src/java/main/org/apache/zookeeper/cli/DelQuotaCommand.java
* (edit) src/java/main/org/apache/zookeeper/cli/CreateCommand.java
* (add) src/java/main/org/apache/zookeeper/cli/MalformedPathException.java
* (edit) src/java/main/org/apache/zookeeper/cli/LsCommand.java
* (edit) src/java/main/org/apache/zookeeper/cli/StatCommand.java
* (edit) src/java/main/org/apache/zookeeper/cli/SyncCommand.java
* (edit) src/java/main/org/apache/zookeeper/cli/GetAclCommand.java
* (edit) src/java/main/org/apache/zookeeper/cli/DeleteCommand.java
* (edit) src/java/main/org/apache/zookeeper/cli/SetCommand.java
* (edit) src/java/main/org/apache/zookeeper/cli/Ls2Command.java
* (edit) src/java/main/org/apache/zookeeper/cli/SetAclCommand.java
* (edit) src/java/main/org/apache/zookeeper/cli/ListQuotaCommand.java
* (edit) src/java/main/org/apache/zookeeper/cli/RemoveWatchesCommand.java
* (edit) src/java/main/org/apache/zookeeper/cli/DeleteAllCommand.java
* (edit) src/java/main/org/apache/zookeeper/cli/SetQuotaCommand.java
* (edit) src/java/main/org/apache/zookeeper/cli/GetCommand.java
;;;","26/May/17 23:44;githubbot;Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/240
  
    @afine looks like one test (org.apache.zookeeper.ZooKeeperTest.testCreateNodeWithoutData) is broken because of this patch. please check upstream build, should be pretty trivial to fix. Wondering why the pre-commit build does not catch this test.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TracelogFile not being created.,ZOOKEEPER-2708,13048156,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,aesquivel,aesquivel,03/Mar/17 19:59,03/Mar/17 19:59,29/Jun/25 13:34,,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,"We are configuring Zookeeper with log4j to create a tracelog file separated from the zookeeper.log.

We have test using the following java properties:

call %JAVA% ""-DrequestTraceFile"" ""-Dzookeeper.log.dir=%ZOO_LOG_DIR%"" ""-Dzookeeper.root.logger=%ZOO_LOG4J_PROP%"" -cp ""%CLASSPATH%"" %ZOOMAIN% ""%ZOOCFG%"" %*


Is there a way to set this in a separate file?
If not, can this be included in the zookeeper.log content?

Please let us know if there is a way.
",Windows 10 64bit,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2017-03-03 19:59:30.0,,,,,,,,,,"0|i3axnz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
recreateSocketAddresses may recreate the unreachable IP address,ZOOKEEPER-2691,13042035,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,jiangjiafu,jiangjiafu,jiangjiafu,10/Feb/17 11:08,20/Jun/17 16:11,29/Jun/25 13:34,26/May/17 22:29,3.4.10,3.4.11,3.4.8,3.4.9,3.5.0,3.5.1,3.5.2,,,,,,,,,,,,,,,,,,3.4.11,,,,,,,,,,0,,,"The QuorumPeer$QuorumServer.recreateSocketAddress()  is used to resolved the hostname to a new IP address(InetAddress) when any exception happens to the socket. It will be very useful when a hostname can be resolved to more than one IP address.
But the problem is Java API InetAddress.getByName(String hostname) will always return the first IP address when the hostname can be resolved to more than one IP address, and the first IP address may be unreachable forever. For example, if a machine has two network interfaces: eth0, eth1, say eth0 has ip1, eth1 has ip2, the relationship between hostname and the IP addresses is set in /etc/hosts. When I ""close"" the eth0 by command ""ifdown eth0"", the InetAddress.getByName(String hostname)  will still return ip1, which is unreachable forever.

So I think it will be better to check the IP address by InetAddress.isReachable(long) and choose the reachable IP address. 


I have modified the ZooKeeper source code, and test the new code in my own environment, and it can work very well when I turn down some network interfaces using ""ifdown"" command.

The original code is:
{code:title=QuorumPeer.java|borderStyle=solid}
        public void recreateSocketAddresses() {
            InetAddress address = null;
            try {
                address = InetAddress.getByName(this.hostname);
                LOG.info(""Resolved hostname: {} to address: {}"", this.hostname, address);
                this.addr = new InetSocketAddress(address, this.port);
                if (this.electionPort > 0){
                    this.electionAddr = new InetSocketAddress(address, this.electionPort);
                }
            } catch (UnknownHostException ex) {
                LOG.warn(""Failed to resolve address: {}"", this.hostname, ex);
                // Have we succeeded in the past?
                if (this.addr != null) {
                    // Yes, previously the lookup succeeded. Leave things as they are
                    return;
                }
                // The hostname has never resolved. Create our InetSocketAddress(es) as unresolved
                this.addr = InetSocketAddress.createUnresolved(this.hostname, this.port);
                if (this.electionPort > 0){
                    this.electionAddr = InetSocketAddress.createUnresolved(this.hostname,
                                                                           this.electionPort);
                }
            }
        }
{code}

After my modification:
{code:title=QuorumPeer.java|borderStyle=solid}
        public void recreateSocketAddresses() {
            InetAddress address = null;
            try {
                address = getReachableAddress(this.hostname);
                LOG.info(""Resolved hostname: {} to address: {}"", this.hostname, address);
                this.addr = new InetSocketAddress(address, this.port);
                if (this.electionPort > 0){
                    this.electionAddr = new InetSocketAddress(address, this.electionPort);
                }
            } catch (UnknownHostException ex) {
                LOG.warn(""Failed to resolve address: {}"", this.hostname, ex);
                // Have we succeeded in the past?
                if (this.addr != null) {
                    // Yes, previously the lookup succeeded. Leave things as they are
                    return;
                }
                // The hostname has never resolved. Create our InetSocketAddress(es) as unresolved
                this.addr = InetSocketAddress.createUnresolved(this.hostname, this.port);
                if (this.electionPort > 0){
                    this.electionAddr = InetSocketAddress.createUnresolved(this.hostname,
                                                                           this.electionPort);
                }
            }
        }

        public InetAddress getReachableAddress(String hostname) throws UnknownHostException {
            InetAddress[] addresses = InetAddress.getAllByName(hostname);
            for (InetAddress a : addresses) {
                try {
                    if (a.isReachable(5000)) {
                        return a;
                    } 
                } catch (IOException e) {
                    LOG.warn(""IP address {} is unreachable"", a);
                }
            }
            // All the IP address is unreachable, just return the first one.
            return addresses[0];
        }
{code}","Centos6.5
Java8
ZooKeeper3.4.8",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Jun 20 16:11:36 UTC 2017,,,,,,,,,,"0|i39wjz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Feb/17 23:24;hanm;Thank you for reporting this issue, [~jiangjiafu]. Would you like to submit a pull request to address this issue? The guideline of contribution is documented as https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute.;;;","13/Feb/17 11:51;githubbot;GitHub user JiangJiafu opened a pull request:

    https://github.com/apache/zookeeper/pull/173

    ZOOKEEPER-2691: recreateSocketAddresses may recreate the unreachable …

    …IP address

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/JiangJiafu/zookeeper ZOOKEEPER-2691

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/173.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #173
    
----
commit 489cec9b78b21a2a241eeab18ddfb968758b2e67
Author: JiangJiafu <jiangjiafu1989@gmail.com>
Date:   2017-02-13T11:36:44Z

    ZOOKEEPER-2691: recreateSocketAddresses may recreate the unreachable IP address

----
;;;","13/Feb/17 20:46;githubbot;Github user hanm commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/173#discussion_r100893741
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java ---
    @@ -159,7 +159,7 @@ public QuorumServer(long id, String hostname,
             public void recreateSocketAddresses() {
                 InetAddress address = null;
                 try {
    -                address = InetAddress.getByName(this.hostname);
    +                address = getReachableAddress(this.hostname, 2000);
    --- End diff --
    
    Instead of hardcoding 2000 here, we can have a constant variable represent the timeout value at the beginning of QuorumPeer.java. [QuorumCnxManager](https://github.com/apache/zookeeper/blob/master/src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java) is a good example on how it uses constants.
;;;","14/Feb/17 01:13;githubbot;Github user JiangJiafu commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/173#discussion_r100940145
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java ---
    @@ -159,7 +159,7 @@ public QuorumServer(long id, String hostname,
             public void recreateSocketAddresses() {
                 InetAddress address = null;
                 try {
    -                address = InetAddress.getByName(this.hostname);
    +                address = getReachableAddress(this.hostname, 2000);
    --- End diff --
    
    Thanks for your advices, I will send another pull request later.
;;;","14/Feb/17 06:54;githubbot;Github user JiangJiafu commented on the issue:

    https://github.com/apache/zookeeper/pull/173
  
    I have modified the source code according to your advise, please review the code. @hanm 
;;;","14/Feb/17 22:54;githubbot;Github user afine commented on the issue:

    https://github.com/apache/zookeeper/pull/173
  
    on the surface this pr reminds me of ZOOKEEPER-2184, wondering if some of the logic can be shared?  we seem to be solving the same problem of dns resolutions not giving the ""best"" answers in more than one place.
;;;","15/Feb/17 01:24;githubbot;Github user JiangJiafu commented on the issue:

    https://github.com/apache/zookeeper/pull/173
  
    @afine , I have tried a sample solution, which should modify only one ZooKeeper source file(if you don't need to pass all the original unittest). You can review the change here: https://github.com/apache/zookeeper/pull/173/files
    
    I have read the ZOOKEEPER-2184, and I don't think we meet the exactly same problem, because it seems like that ZooKeeper client related code should be modified to fix the ZOOKEEPER-2184, but only ZooKeeper server side code should be modifiied to fix this problem.
    By the way, ZOOKEEPER-2184 problem is fixed in version 3.5.3, 3.4.11 accroding to the jira record.
;;;","16/Feb/17 00:25;githubbot;Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/173
  
    Thanks for updates, @JiangJiafu. 
    
    Patch looks good, and I agree that this patch is solving a different problem than ZOOKEEPER-2184. I'll give a few more days in case anyone has addition feedback before merging this in.
;;;","16/Feb/17 23:55;githubbot;Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/173
  
    >> on the surface this pr reminds me of ZOOKEEPER-2184, wondering if some of the logic can be shared?
    
    I had a chat with @afine offline again about this and I think Abe had a good point of view of both problems at a higher level - they are not resolving exact same problem but there is an opportunity that we could do some refactoring and code sharing regarding effectively map between usable IP and host names. This improvement could be done later though given the current many things in flight status to reduce the risk of this PR being stale...
;;;","16/Feb/17 23:56;githubbot;Github user afine commented on the issue:

    https://github.com/apache/zookeeper/pull/173
  
    sure, one is on the client and one is on the server but I do not think that means the problem is inherently different. 
    
    I think it would be fair to say that both pr's revolve around what to do when the answer we select from dns is not one that we could use (they both revolve around calls to `InetAddress.getAllByName`). This patch description is framed in a way where we are assuming there is a list of possible ip addresses for some hostname and we just need to find one that is working. Nevertheless, this patch should work when the address the hostname resolves to changes entirely. 
    
    Likewise, ZOOKEEPER-2184 should handle the ""first record doesn't work"" issue you are solving here. 
    
    I think it may be valuable to have some shared code that effectively deals with mapping ip addresses to hostnames. 
    
    After an offline discussion with @hanm we concluded that this may be good to look into after both 2691 and 2184 are merged in.

;;;","16/Feb/17 23:59;githubbot;Github user afine commented on the issue:

    https://github.com/apache/zookeeper/pull/173
  
    nit: would this change be worth documenting?
    
    Otherwise, +1.
;;;","17/Feb/17 01:30;githubbot;Github user JiangJiafu commented on the issue:

    https://github.com/apache/zookeeper/pull/173
  
    Hi, @hanm , do you mean that you will merge ZOOKEEPER-2691 and ZOOKEEPER-2184 to solve the problem later? If so, may I ask will the problem be solved in version zokkeper 3.4.10? 
;;;","17/Feb/17 16:31;githubbot;Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/173
  
    @JiangJiafu What I meant is we can solve the problem (sharing code between this issue and ZOOKEEPER-2181) later, after both issues are merged in. We can make things progress by doing one step at a time.
    
    Regarding your question of 3.4.10, are you intended to have this patch being part of the incoming 3.4.10 release?
;;;","17/Feb/17 21:05;githubbot;Github user eribeiro commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/173#discussion_r101846854
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java ---
    @@ -113,13 +113,21 @@ private QuorumServer(long id, InetSocketAddress addr,
                 this.id = id;
                 this.addr = addr;
                 this.electionAddr = electionAddr;
    +            String checkIPReachableValue = System.getProperty(""zookeeper.checkIPTimeout"");
    --- End diff --
    
    I think we can improve this naming game just a little bit. Why not call this variable `ipTimeout`? And `checkIPReachableTO` as `ipReachableTimeout` or `reachableIPTimeout`? 
;;;","17/Feb/17 21:05;githubbot;Github user eribeiro commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/173#discussion_r101843855
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java ---
    @@ -113,13 +113,21 @@ private QuorumServer(long id, InetSocketAddress addr,
                 this.id = id;
                 this.addr = addr;
                 this.electionAddr = electionAddr;
    +            String checkIPReachableValue = System.getProperty(""zookeeper.checkIPTimeout"");
    +            if(checkIPReachableValue != null){
    +                this.checkIPReachableTO = Integer.parseInt(checkIPReachableValue);
    +            }    
             }
     
             // VisibleForTesting
             public QuorumServer(long id, InetSocketAddress addr) {
                 this.id = id;
                 this.addr = addr;
                 this.electionAddr = null;
    +            String checkIPReachableValue = System.getProperty(""zookeeper.checkIPTimeout"");
    +            if(checkIPReachableValue != null){
    --- End diff --
    
    nit: space between if and (
;;;","17/Feb/17 21:05;githubbot;Github user eribeiro commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/173#discussion_r101843864
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java ---
    @@ -113,13 +113,21 @@ private QuorumServer(long id, InetSocketAddress addr,
                 this.id = id;
                 this.addr = addr;
                 this.electionAddr = electionAddr;
    +            String checkIPReachableValue = System.getProperty(""zookeeper.checkIPTimeout"");
    +            if(checkIPReachableValue != null){
    --- End diff --
    
    nit: space between if and (
;;;","17/Feb/17 21:05;githubbot;Github user eribeiro commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/173#discussion_r101843810
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java ---
    @@ -128,24 +136,32 @@ private QuorumServer(long id, InetSocketAddress addr,
                 this.addr = addr;
                 this.electionAddr = electionAddr;
                 this.type = type;
    +            String checkIPReachableValue = System.getProperty(""zookeeper.checkIPTimeout"");
    +            if(checkIPReachableValue != null){
    --- End diff --
    
    nit: space between if and (
;;;","17/Feb/17 21:05;githubbot;Github user eribeiro commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/173#discussion_r101845264
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java ---
    @@ -181,6 +197,33 @@ public void recreateSocketAddresses() {
                 }
             }
     
    +        /**
    +         * Resolve the hostname to IP addresses, and find one reachable address.
    +         *
    +         * @param hostname the name of the host
    +         * @param timeout the time, in millseconds, before {@link InetAddress#isReachable}
    +         *                aborts
    +         * @return a reachable IP address. If no such IP address can be found,
    +         *         just return the first IP address of the hostname.
    +         *
    +         * @exception UnknownHostException
    +         */
    +        public InetAddress getReachableAddress(String hostname, int timeout) 
    +                throws UnknownHostException {
    +            InetAddress[] addresses = InetAddress.getAllByName(hostname);
    +            for (InetAddress a : addresses) {
    +                try {
    +                    if (a.isReachable(timeout)) {
    --- End diff --
    
    My main problem with this PR is that call to `isReachable(timeout)` for two reasons: 
    
    1) the most important one: `isReachable(timeout)` seems unreliable so there are plenty cases where it returns false even tough the node is reachable or vice-versa! https://bugs.openjdk.java.net/browse/JDK-8159410 (google ""InetAddress.isReachable not working"" or ""InetAddress.isReachable unreliable"" to see further cases).
    
    2) This timeout can add an arbitrary delay until a reachable node can be tested.
    
    IDK what a good compromise would be for both points above (leaving as it is today could work, so no problem, even tough I am a bit concerned), but maybe we could use a solution similar to ZOOKEEPER-2184 and return the next address in the array (using `next = ++next % addresses.length` to prevent out of bound exceptions).
    

;;;","17/Feb/17 21:05;githubbot;Github user eribeiro commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/173#discussion_r101843611
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java ---
    @@ -194,6 +237,12 @@ public void recreateSocketAddresses() {
             public long id;
             
             public LearnerType type = LearnerType.PARTICIPANT;
    +
    +        /**
    +         * the time, in millseconds, before {@link InetAddress#isReachable} aborts
    --- End diff --
    
    typo: miliseconds.
;;;","17/Feb/17 21:05;githubbot;Github user eribeiro commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/173#discussion_r101843694
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java ---
    @@ -128,24 +136,32 @@ private QuorumServer(long id, InetSocketAddress addr,
                 this.addr = addr;
                 this.electionAddr = electionAddr;
                 this.type = type;
    +            String checkIPReachableValue = System.getProperty(""zookeeper.checkIPTimeout"");
    +            if(checkIPReachableValue != null){
    +                this.checkIPReachableTO = Integer.parseInt(checkIPReachableValue);
    +            }    
             }
             
             public QuorumServer(long id, String hostname,
                                 Integer port, Integer electionPort,
                                 LearnerType type) {
    -	        this.id = id;
    -	        this.hostname=hostname;
    -	        if (port!=null){
    +	    this.id = id;
    +	    this.hostname=hostname;
    +	    if (port!=null){
                     this.port=port;
    -	        }
    -	        if (electionPort!=null){
    +	    }
    +	    if (electionPort!=null){
                     this.electionPort=electionPort;
    -	        }
    -	        if (type!=null){
    +	    }
    +	    if (type!=null){
                     this.type = type;
    -	        }
    -	        this.recreateSocketAddresses();
     	    }
    +            String checkIPReachableValue = System.getProperty(""zookeeper.checkIPTimeout"");
    +            if(checkIPReachableValue != null){
    --- End diff --
    
    nit: space between `if` and `(`
;;;","18/Feb/17 02:38;githubbot;Github user JiangJiafu commented on the issue:

    https://github.com/apache/zookeeper/pull/173
  
    @eribeiro Thank you for your review.

;;;","19/Feb/17 01:05;githubbot;Github user JiangJiafu commented on the issue:

    https://github.com/apache/zookeeper/pull/173
  
    @hanm Yes, I hope this PR can be solved in 3.4.10~ Since 3.5.X is still in alpha state now.

;;;","19/Feb/17 07:01;githubbot;Github user rakeshadr commented on the issue:

    https://github.com/apache/zookeeper/pull/173
  
    Thanks a lot @JiangJiafu for the effort in driving this.
    
     I'm not sure whether this is a blocker for 3.4.10 release. Is it good if we just release 3.4.10 without this and make it a blocker for 3.4.11 and 3.5.3-alpha? Also, we could set a time frame for 3.5.3-alpha release and mark this to beta version, later.
;;;","19/Feb/17 07:11;githubbot;Github user JiangJiafu commented on the issue:

    https://github.com/apache/zookeeper/pull/173
  
    @rakeshadr Thank you for your respond.
    If you have decided how to fix this problem, please let me know. 
;;;","19/Feb/17 13:12;githubbot;Github user rakeshadr commented on the issue:

    https://github.com/apache/zookeeper/pull/173
  
    I'm really sorry, I didn't get much time on this work. I could see very good discussions about this and I'm thinking you all are reaching to a pretty good solution. My previous comment was to converge the 3.4.10 release discussions and filter out tasks if it is not really important now.
;;;","19/Feb/17 13:32;githubbot;Github user eribeiro commented on the issue:

    https://github.com/apache/zookeeper/pull/173
  
    @jiangjiafu glad to help. :) Thanks for driving this change. Great work.
;;;","26/Feb/17 21:00;githubbot;Github user eribeiro commented on the issue:

    https://github.com/apache/zookeeper/pull/173
  
    @JiangJiafu @rakeshadr @hanm @fpj Guys, does my considerations on this comment https://github.com/apache/zookeeper/pull/173#discussion_r101845264 make any sense? Probably it's just me being paranoid and/or playing devil's advocate, but I would love to hear your opinions.
    
    Thanks!
;;;","11/May/17 01:42;githubbot;Github user JiangJiafu commented on the issue:

    https://github.com/apache/zookeeper/pull/173
  
    @hanm Hi, May I ask when will this problem be fixed? And will it be fixed on 3.4.X(stable) version? Thanks.
;;;","11/May/17 11:44;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 90 new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/677//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/677//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/677//console

This message is automatically generated.;;;","11/May/17 20:55;githubbot;Github user hanm commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/173#discussion_r116099795
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java ---
    @@ -181,6 +197,33 @@ public void recreateSocketAddresses() {
                 }
             }
     
    +        /**
    +         * Resolve the hostname to IP addresses, and find one reachable address.
    +         *
    +         * @param hostname the name of the host
    +         * @param timeout the time, in millseconds, before {@link InetAddress#isReachable}
    +         *                aborts
    +         * @return a reachable IP address. If no such IP address can be found,
    +         *         just return the first IP address of the hostname.
    +         *
    +         * @exception UnknownHostException
    +         */
    +        public InetAddress getReachableAddress(String hostname, int timeout) 
    +                throws UnknownHostException {
    +            InetAddress[] addresses = InetAddress.getAllByName(hostname);
    +            for (InetAddress a : addresses) {
    +                try {
    +                    if (a.isReachable(timeout)) {
    --- End diff --
    
    I think this is a valid concern. On top of this, I think we should make sure user can resort to old behavior if needed. With this patch the `isReachable` will be called in any case, regardless of the property 'zookeeper.ipReachableTimeout' is defined or not. How about something like this:
    
    if (zookeeper.ipReachableTimeout is not defined) {
     address = InetAddress.getByName(this.hostname);
    } else {
    address = getReachableAddress(this.hostname, ipReachableTimeout);
    }
;;;","11/May/17 20:57;githubbot;Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/173
  
    @JiangJiafu Apologize for lagging on code review. I think this patch still needs a little bit work to get it merged:
    
    * Provide a way to use old address creation function by checking the sys property (See my comment in code.).
    * Documentation (see Abe's comment)
    * Typo (see Edward's comment)
;;;","12/May/17 01:06;githubbot;Github user JiangJiafu commented on the issue:

    https://github.com/apache/zookeeper/pull/173
  
    Eh, sorry for asking this question, but how to update the documentation? Should I modify the html files in docs directory?
;;;","12/May/17 03:38;githubbot;Github user JiangJiafu commented on the issue:

    https://github.com/apache/zookeeper/pull/173
  
    @hanm Hi, I have modified the code according to your advices except the second one:
    ""Documentation (see Abe's comment)""

;;;","12/May/17 04:26;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 90 new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/678//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/678//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/678//console

This message is automatically generated.;;;","12/May/17 05:26;githubbot;Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/173
  
    I'll review later, but a quick answer to your question on how to update doc: no don't modify the html directly. Instead only modify the source of the docs. The sources are in folder src/docs/src/documentation/content/xdocs . In addition it would be good to verify your doc change locally by compiling the doc source with apache forrest (https://forrest.apache.org/). But please don't include the compiled documents (the html and pdf files) as part of the patch - you only need to change the source of the documents. You can check commit history of src/docs/src/documentation/content/xdocs and learn by example, should be pretty straightforward..

;;;","12/May/17 09:51;githubbot;Github user JiangJiafu commented on the issue:

    https://github.com/apache/zookeeper/pull/173
  
    @hanm I have changed the document, please review the code and document, thank you.
;;;","12/May/17 10:23;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 90 new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/679//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/679//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/679//console

This message is automatically generated.;;;","12/May/17 10:24;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 90 new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/680//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/680//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/680//console

This message is automatically generated.;;;","16/May/17 16:55;githubbot;Github user hanm commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/173#discussion_r116798516
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java ---
    @@ -198,6 +246,12 @@ public void recreateSocketAddresses() {
             public long id;
             
             public LearnerType type = LearnerType.PARTICIPANT;
    +
    +        /**
    +         * the time, in milliseconds, before {@link InetAddress#isReachable} aborts
    +         * in {@link #getReachableAddress}.
    +         */
    +        private int ipReachableTimeout = 0;
    --- End diff --
    
    I think we can remove this. This will also remove the four copies of exact same initialization code fragment that you use to initialize the value. We can get the sys property and parse the value inside recreateSocketAddress directly.
;;;","16/May/17 16:58;githubbot;Github user hanm commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/173#discussion_r116799126
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java ---
    @@ -117,13 +117,21 @@ private QuorumServer(long id, InetSocketAddress addr,
                 this.id = id;
                 this.addr = addr;
                 this.electionAddr = electionAddr;
    +            String ipReachableValue = System.getProperty(""zookeeper.ipReachableTimeout"");
    --- End diff --
    
    This code is duplicated four times, not good :) - you can pull this into a dedicated function instead. Also make sure to add try catch around the parseInt to prevent crash against illegal input values. 
;;;","17/May/17 08:22;githubbot;Github user JiangJiafu commented on the issue:

    https://github.com/apache/zookeeper/pull/173
  
    Please have a look to the new code, thank you.
;;;","17/May/17 08:43;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 90 new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/695//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/695//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/695//console

This message is automatically generated.;;;","17/May/17 09:03;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 90 new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/696//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/696//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/696//console

This message is automatically generated.;;;","21/May/17 08:08;jiangjiafu;Can this patch be merged?;;;","24/May/17 04:25;githubbot;Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/173
  
    Thanks for updates, @JiangJiafu. Patch looks good to me, will merge soon.
;;;","26/May/17 22:29;hanm;Issue resolved by pull request 173
[https://github.com/apache/zookeeper/pull/173];;;","26/May/17 22:31;hanm;[~phunt], [~rakeshr], please add JiangJiafu to contributor list and assign this JIRA to him.;;;","26/May/17 22:32;githubbot;Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/173
  
    PR merged, please close this @JiangJiafu 
;;;","27/May/17 05:31;githubbot;Github user JiangJiafu closed the pull request at:

    https://github.com/apache/zookeeper/pull/173
;;;","19/Jun/17 21:32;githubbot;Github user bensherman commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/173#discussion_r120952370
  
    --- Diff: src/docs/src/documentation/content/xdocs/zookeeperAdmin.xml ---
    @@ -1076,6 +1076,26 @@ server.3=zoo3:2888:3888</programlisting>
                 </listitem>
               </varlistentry>
     
    +          <varlistentry>
    +            <term>zookeeper.ipReachableTimeout</term>
    --- End diff --
    
    Looks like there is a small problem with this as I add my change to documentation. 
    Shouldn't this say
    `            <term>ipReachableTimeout</term>
    `
    zookeeper is added by the system property setter, but isn't required (and won't work) if it is actually in the config file.

;;;","20/Jun/17 16:11;githubbot;Github user hanm commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/173#discussion_r123022889
  
    --- Diff: src/docs/src/documentation/content/xdocs/zookeeperAdmin.xml ---
    @@ -1076,6 +1076,26 @@ server.3=zoo3:2888:3888</programlisting>
                 </listitem>
               </varlistentry>
     
    +          <varlistentry>
    +            <term>zookeeper.ipReachableTimeout</term>
    --- End diff --
    
    Thanks @bensherman for pointing this out. Fixed in commit 677b5ccb7ce214eee750fda70eba3643d8c7a6c0.
;;;",,,
Update documentation source for ZOOKEEPER-2574,ZOOKEEPER-2690,13041818,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,mfenes,hanm,hanm,09/Feb/17 19:34,17/Nov/17 10:59,29/Jun/25 13:34,15/Nov/17 20:29,3.4.9,3.5.2,,,,,,,,,,,,,,,,,,,,,,,3.4.12,3.5.4,3.6.0,,,documentation,,,,,0,newbie,,"In ZOOKEEPER-2574, the documentation change (https://github.com/apache/zookeeper/pull/111/) was done directly on the generated document files instead of on the document source. This JIRA is created to track the work of porting the doc change on the doc source so the change of the doc will not get lost between releases.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,Reviewed,,,,Fri Nov 17 10:59:37 UTC 2017,,,,,,,,,,"0|i39v7r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Oct/17 14:30;githubbot;GitHub user mfenes opened a pull request:

    https://github.com/apache/zookeeper/pull/404

    ZOOKEEPER-2690: Update documentation source for ZOOKEEPER-2574

    ZOOKEEPER-2690: Update documentation source for ZOOKEEPER-2574
    
    Added the documentation changes from PR https://github.com/apache/zookeeper/pull/111/ to the source (zookeeperAdmin.xml) and generated the new version of the html and pdf documents.
    
    Note: I have not updated the 2nd paragraph from ZOOKEEPER-2574 as change ""ZOOKEEPER-2349: Update documentation for snapCount"" has a more recent version of that part of the text. (ZOOKEEPER-2349 was committed on Sep 11, 2017 while ZOOKEEPER-2574 was committed on Jan 23, 2017.)


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/mfenes/zookeeper ZOOKEEPER-2690

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/404.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #404
    
----
commit 0cb321966a0e53d29809ad91f1f9d9f354f99db2
Author: Mark Fenes <mfenes@cloudera.com>
Date:   2017-10-18T21:47:44Z

    ZOOKEEPER-2690: Update documentation source for ZOOKEEPER-2574
    
    Change-Id: I1bab70d91913d36f83efef755729640b7459e2e5

commit 87c53567f5f967fa97daef3cbc4f369af36a4aa3
Author: Mark Fenes <mfenes@cloudera.com>
Date:   2017-10-25T13:29:55Z

    ZOOKEEPER-2690: Update documentation source for ZOOKEEPER-2574
    
    Generated documents
    
    Change-Id: I712f3f5f6ed3dbb41c9e69cac260f3c3047a651d

----
;;;","25/Oct/17 14:33;githubbot;GitHub user mfenes opened a pull request:

    https://github.com/apache/zookeeper/pull/405

    ZOOKEEPER-2690: Update documentation source for ZOOKEEPER-2574

    ZOOKEEPER-2690: Update documentation source for ZOOKEEPER-2574
    
    Added the documentation changes from PR https://github.com/apache/zookeeper/pull/111/ to the source (zookeeperAdmin.xml) and generated the new version of the html and pdf documents.
    
    Note: I have not updated the 2nd paragraph from ZOOKEEPER-2574 as change ""ZOOKEEPER-2349: Update documentation for snapCount"" has a more recent version of that part of the text. (ZOOKEEPER-2349 was committed on Sep 11, 2017 while ZOOKEEPER-2574 was committed on Jan 23, 2017.)


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/mfenes/zookeeper ZOOKEEPER-2690_3.4

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/405.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #405
    
----
commit ada588bf16ea99d6fa39f6f7d61d883c437b2cc7
Author: Mark Fenes <mfenes@cloudera.com>
Date:   2017-10-18T23:54:34Z

    ZOOKEEPER-2690: Update documentation source for ZOOKEEPER-2574
    
    Change-Id: Id24b00dae078c1e9fee63add69a8ea700c157175

commit a7678f5671d64f6c68fc4d6127ddd21a9bb72ec8
Author: Mark Fenes <mfenes@cloudera.com>
Date:   2017-10-25T13:38:10Z

    ZOOKEEPER-2690: Update documentation source for ZOOKEEPER-2574
    
    Generated documents
    
    Change-Id: Icb12ab528f9f6fb062c5cfd4f57a8129504e69ee

----
;;;","25/Oct/17 14:41;githubbot;GitHub user mfenes opened a pull request:

    https://github.com/apache/zookeeper/pull/406

    ZOOKEEPER-2690: Update documentation source for ZOOKEEPER-2574

    ZOOKEEPER-2690: Update documentation source for ZOOKEEPER-2574
    
    Added the documentation changes from PR #111 to the source (zookeeperAdmin.xml) and generated the new version of the html and pdf documents.
    
    Note: I have not updated the 2nd paragraph from ZOOKEEPER-2574 as change ""ZOOKEEPER-2349: Update documentation for snapCount"" has a more recent version of that part of the text. (ZOOKEEPER-2349 was committed on Sep 11, 2017 while ZOOKEEPER-2574 was committed on Jan 23, 2017.)


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/mfenes/zookeeper ZOOKEEPER-2690_master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/406.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #406
    
----
commit b152f04d7fdc97e65fef1a6f62fe72758778b3bf
Author: Mark Fenes <mfenes@cloudera.com>
Date:   2017-10-19T20:42:29Z

    ZOOKEEPER-2690: Update documentation source for ZOOKEEPER-2574
    
    Change-Id: I99f450beda806598bb004cb8d3b0ec11e82ae588

commit ba933658c440b1e33f42389a8d3ac7e496640ff9
Author: Mark Fenes <mfenes@cloudera.com>
Date:   2017-10-25T13:48:49Z

    ZOOKEEPER-2690: Update documentation source for ZOOKEEPER-2574
    
    Generated documents
    
    Change-Id: I33ff0ef2410fead9755e3623b4f349f57b9f8121

----
;;;","25/Oct/17 15:40;githubbot;Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/404
  
    This change looks good to me.
;;;","15/Nov/17 20:11;phunt;Thanks Mark. This looks good to me. +1.

for future reference: only the src/docs directory needs to be updated. It's up to the committer to ensure that the generated files are updated (in docs toplevel). See item 7 here  https://cwiki.apache.org/confluence/display/ZOOKEEPER/Committing+changes
I've also updated the how to contribute docs to reflect: https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute;;;","15/Nov/17 20:21;githubbot;Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/405
  
    Mark please close this as I've committed the change (not default branch).
;;;","15/Nov/17 20:25;githubbot;Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/404
  
    Thanks Mark, it's been committed, please close this (not the default branch).
;;;","15/Nov/17 20:28;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/406
;;;","15/Nov/17 20:29;githubbot;Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/406
  
    Thanks Mark!
;;;","15/Nov/17 21:28;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3609 (See [https://builds.apache.org/job/ZooKeeper-trunk/3609/])
ZOOKEEPER-2690: Update documentation source for ZOOKEEPER-2574 (phunt: rev efeebd0a1ba7f6be3b4ffe262ab4045656bb1eb3)
* (edit) docs/index.pdf
* (edit) docs/zookeeperOver.pdf
* (edit) docs/zookeeperStarted.pdf
* (edit) docs/linkmap.pdf
* (edit) docs/zookeeperJMX.pdf
* (edit) docs/zookeeperHierarchicalQuorums.pdf
* (edit) src/docs/src/documentation/content/xdocs/zookeeperAdmin.xml
* (edit) docs/javaExample.pdf
* (edit) docs/zookeeperProgrammers.pdf
* (edit) docs/zookeeperTutorial.pdf
* (edit) docs/zookeeperObservers.pdf
* (edit) docs/zookeeperAdmin.html
* (edit) docs/zookeeperReconfig.pdf
* (edit) docs/zookeeperInternals.pdf
* (edit) docs/zookeeperQuotas.pdf
* (edit) docs/recipes.pdf
* (edit) docs/zookeeperAdmin.pdf
;;;","17/Nov/17 10:59;githubbot;Github user mfenes closed the pull request at:

    https://github.com/apache/zookeeper/pull/405
;;;","17/Nov/17 10:59;githubbot;Github user mfenes closed the pull request at:

    https://github.com/apache/zookeeper/pull/404
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zkServer.sh creates PID file in the folder data?/ instead of data/,ZOOKEEPER-2625,13017215,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,ABchmn,ABchmn,02/Nov/16 12:59,19/Feb/19 21:58,29/Jun/25 13:34,,3.5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,scripts,,,,,0,build,pull-request-available,"I provision a vagrant vm that installs zookeeper into /home/vagrant/zk and adjusts all owner and read/write rights.
With the vagrant user, I start zookeeper as bin/zkServer.sh start /vagrant/data/zoo.cfg
However, the folder data? (or data^M) gets created with the PID inside, instead of putting it into the data folder, which contains the version-2 folder.
Since I'm using the official start scripts, I'm at a loss.
Also, the data? folder comes with root:root ownership, which is strange, as zKServer.sh is executed from the vagrant user.",Linux vagrant-ubuntu-trusty-32 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:49:53 UTC 2016 i686 i686 i686 GNU/Linux,"anmolnar commented on pull request #105: Fix ZOOKEEPER-2625: Introduce explicit end-of-line setting for shell scripts
URL: https://github.com/apache/zookeeper/pull/105
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Jan/19 13:08;githubbot;600","ArneBachmann commented on issue #105: Fix ZOOKEEPER-2625: Introduce explicit end-of-line setting for shell scripts
URL: https://github.com/apache/zookeeper/pull/105#issuecomment-459269221
 
 
   Has it been merged or at least reviewed? I cannot see any action here.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jan/19 09:06;githubbot;600","anmolnar commented on issue #105: Fix ZOOKEEPER-2625: Introduce explicit end-of-line setting for shell scripts
URL: https://github.com/apache/zookeeper/pull/105#issuecomment-459279119
 
 
   @ArneBachmann It hasn't been updated for more than 2 years.
   You can re-open and rebase it in order to get it reviewed.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jan/19 09:38;githubbot;600","ArneBachmann commented on issue #105: Fix ZOOKEEPER-2625: Introduce explicit end-of-line setting for shell scripts
URL: https://github.com/apache/zookeeper/pull/105#issuecomment-459298838
 
 
   Well I did that 2 years ago and nothing happened. Why do it again?
   I did my part to help the project when I found something.
   I consider myself motivated and enthusiastic but not stupid.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jan/19 10:43;githubbot;600","anmolnar commented on issue #105: Fix ZOOKEEPER-2625: Introduce explicit end-of-line setting for shell scripts
URL: https://github.com/apache/zookeeper/pull/105#issuecomment-459329875
 
 
   @ArneBachmann I'm sorry about your bad experiences in the past. I didn't work on the project 2 years ago, so not sure about what could have happened. In that time, as far as I'm concerned, patches were only accepted by Jira attachments. Perhaps the community was reluctant to review patches, maybe committers were too busy to focus on the project. I dunno, but sorry about that anyway. 
   
   However ZooKeeper community is still appreciate your (and everybody's) contribution and has become surprisingly vibrant again in the last couple of months. I encourage you to give it another try, but at the same time I understand your emotions and leaving us is completely understandable. 
   
   Currently I'm working on cleaning up old PRs which haven't been addressed for more than half a year, but that shouldn't stop anybody from rebasing it and asking for another round of review.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jan/19 12:40;githubbot;600","ArneBachmann commented on pull request #801: Fix ZOOKEEPER-2625: Introduce explicit end-of-line setting for shell scripts
URL: https://github.com/apache/zookeeper/pull/801
 
 
   New attempt of PR #105:
   I added a `.gitattributes` file into the `bin/` folder with the startup scripts.
   It seems the official build servers build the ZK packages on a Windows machine (?), because even the Bash Shell scripts have CRLF line endings (extracted from the downloaded archive, not from a Git checkout), which caused bug ZK-2625, as reported by me.
   Since I don't have a build server myself and would build under Linux, I cannot check if this PR fixes the bug, please review.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Feb/19 21:24;githubbot;600","tamaashu commented on pull request #801: Fix ZOOKEEPER-2625: Introduce explicit end-of-line setting for shell scripts
URL: https://github.com/apache/zookeeper/pull/801#discussion_r253795508
 
 

 ##########
 File path: bin/.gitattributes
 ##########
 @@ -0,0 +1 @@
+*.sh eol=lf
 
 Review comment:
   I think we should not have `lf` here, but `auto`.
   We still support windows to build ZooKeeper, we should be able to edit shell files there too.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Feb/19 09:57;githubbot;600","ArneBachmann commented on pull request #801: Fix ZOOKEEPER-2625: Introduce explicit end-of-line setting for shell scripts
URL: https://github.com/apache/zookeeper/pull/801#discussion_r258247554
 
 

 ##########
 File path: bin/.gitattributes
 ##########
 @@ -0,0 +1 @@
+*.sh eol=lf
 
 Review comment:
   I don't think that's the issue here, but when I rechecked today, the line endings in the archive seem to match the respective OS's conventions. Probably the issue is gone, nobody else complained anyway.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Feb/19 21:58;githubbot;600","ArneBachmann commented on pull request #801: Fix ZOOKEEPER-2625: Introduce explicit end-of-line setting for shell scripts
URL: https://github.com/apache/zookeeper/pull/801
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Feb/19 21:58;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,5400,,,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sat Nov 12 20:48:12 UTC 2016,,,,,,,,,,"0|i35q67:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Nov/16 13:39;fpj;Thanks for reporting this issue, [~ABchmn]. Do you want to give it a shot at patching the script?;;;","02/Nov/16 15:19;ABchmn;Sorry, I have no idea where the problem is coming from, that's why I seek help here.. What character is ^M in Linux? Why does the script not write into data/ instead? The script looks fine syntactically, although I have the feeling that many environment variables are not defined that it relies on.;;;","08/Nov/16 15:19;ABchmn;I found the issue. As I suspected, the reason for data? is actually a data^M which translates into a \r character.

The following code executed in the bin/ folder resolved the issue:
perl -p -i -e ""s/\r//g"" *.sh

This converts line endings from Windows mode into Linux mode, which one would expect to find in the zk.tar.gz anyway.
I'm not sure if I should create a pull request or patch, as this seems to be more of a problem with the developer's build chain, rather a simple code fix.

If anybody is interested, I can zip my Vagrant code that sets up distributed zookeeper instances inside Virtualbox containers (which may be a bad practice, as there is only ephemeral disk storage).;;;","12/Nov/16 20:48;githubbot;GitHub user ArneBachmann opened a pull request:

    https://github.com/apache/zookeeper/pull/105

    Fix ZOOKEEPER-2625: Introduce explicit end-of-line setting for shell scripts

    I added a .gitattributes file into the bin/ folder with the startup scripts.
    It seems the official build servers build the ZK packages on a Windows machine (?), because even the Bash Shell scripts have CRLF line endings (extracted from the downloaded archive, not from a git checkout), which caused bug ZK-2625, as reported by me.
    Since I don't have a build server myself and would build under Linux, I cannot check if this PR fixes the bug, please advise.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ArneBachmann/zookeeper master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/105.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #105
    
----
commit 6b58447a5da859736cb019ff1c4e41d9dcb5bbe1
Author: Arne Bachmann <arne.bachmann@gmx.de>
Date:   2016-11-12T20:32:27Z

    Introduce explicit end-of-line setting for shell scripts.

----
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
correct a few spelling typos,ZOOKEEPER-2617,13013079,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,tmancill,tmancill,tmancill,18/Oct/16 05:14,18/May/17 03:50,29/Jun/25 13:34,14/Feb/17 02:45,3.4.9,,,,,,,,,,,,,,,,,,,,,,,,3.4.10,3.5.3,3.6.0,,,,,,,,0,newbie,patch,"While working on the Debian packaging of ZooKeeper, some misspellings were detected in the source that affect the documentation, logging, and program output.

There is a PR against github containing the patch here:  https://github.com/apache/zookeeper/pull/87",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Oct/16 06:12;tmancill;JIRA-ZOOKEEPER-2617.patch;https://issues.apache.org/jira/secure/attachment/12833893/JIRA-ZOOKEEPER-2617.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,9223372036854775807,,,,,Tue Feb 14 03:15:18 UTC 2017,,,,,,,,,,"0|i350on:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Oct/16 06:12;tmancill;This patch is licensed under the Apache License 2.0 (http://www.apache.org/licenses/LICENSE-2.0);;;","22/Oct/16 23:41;hanm;+1, patch LGTM. Thanks [~tmancill]!;;;","24/Oct/16 10:26;eribeiro;+1, thanks for the patch! :);;;","10/Nov/16 17:18;githubbot;Github user eribeiro commented on the issue:

    https://github.com/apache/zookeeper/pull/87
  
    Hi @fpj, could we have this PR merged? :) 
    
    Thanks!
    
    PS: It is target at branch-3.4, but would be cool if we could also apply it to branch-3.5 and master. 
;;;","27/Jan/17 17:39;githubbot;Github user eribeiro commented on the issue:

    https://github.com/apache/zookeeper/pull/87
  
    Hi @rakeshadr, this is another possible candidate for 3.4.10 release, in my humble opinion. Flávio gave his blessing and the branch doesn't conflict with branch-3.4. 
    
    PS: I didn't cherry-pick this into branch-3.5 and master so I don't know if it has any conflicts with those branches, but it would be nice to have it ported to them too. 
    
    Cheers!
;;;","06/Feb/17 04:47;githubbot;Github user rakeshadr commented on the issue:

    https://github.com/apache/zookeeper/pull/87
  
    @eribeiro sure, I will consider this to 3.4.10. Thanks @tmancill for the contribution. Sorry for the delay in looking at this jira, could you please create separate PR for {{master}} branch as the current PR_87 is not applying to {{branch-3.5}} and {{master}}.
;;;","13/Feb/17 10:12;githubbot;Github user rakeshadr commented on the issue:

    https://github.com/apache/zookeeper/pull/87
  
    I'm merging this to branch-3.4.
    Could you provide another PR for master/branch3.5 as this has minor conflicts and not applying properly. Thanks!
;;;","13/Feb/17 10:16;githubbot;Github user rakeshadr commented on the issue:

    https://github.com/apache/zookeeper/pull/87
  
    Please close this PR as this is merged, thanks!
;;;","13/Feb/17 10:22;rakeshr;Committed to branch-3.4: https://git-wip-us.apache.org/repos/asf?p=zookeeper.git;a=commit;h=e51dbeb47fbb7131ca96c58caa479f53c0b8633c

Hi [~tmancill], [~eribeiro], I'm keeping the jira open as the changes not merged to {{branch-3.5}}, {{master}} due to conflicts and needed separate PR.;;;","13/Feb/17 15:59;githubbot;GitHub user eribeiro opened a pull request:

    https://github.com/apache/zookeeper/pull/174

    ZOOKEEPER-2617: correct a few spelling typos

    Hi - this PR contains corrections for some spelling typos.  Most of them appear in comments, but a few appear in documentation and program output.  Thank you for considering it.
    
    Author: tony mancill <tmancill@debian.org>
    
    Reviewers: Flavio Junqueira <fpj@apache.org>, Edward Ribeiro <edward.ribeiro@gmail.com>, Rakesh Radhakrishnan <rakeshr@apache.org>
    
    Closes #87 from tmancill/tmancill/spelling-typos

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/eribeiro/zookeeper ZOOKEEPER-2617

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/174.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #174
    
----
commit 46567680a79d41ac6b944ccb156f65b77641116f
Author: Edward Ribeiro <edward.ribeiro@gmail.com>
Date:   2017-02-13T15:57:36Z

    ZOOKEEPER-2617: correct a few spelling typos
    Hi - this PR contains corrections for some spelling typos.  Most of them appear in comments, but a few appear in documentation and program output.  Thank you for considering it.
    
    Author: tony mancill <tmancill@debian.org>
    
    Reviewers: Flavio Junqueira <fpj@apache.org>, Edward Ribeiro <edward.ribeiro@gmail.com>, Rakesh Radhakrishnan <rakeshr@apache.org>
    
    Closes #87 from tmancill/tmancill/spelling-typos

----
;;;","13/Feb/17 16:06;githubbot;Github user eribeiro commented on the issue:

    https://github.com/apache/zookeeper/pull/174
  
    Hi @rakeshadr, I have updated the PR for branch-3.5 and master. There's one less changed file wrt branch-3.4
    
    https://github.com/apache/zookeeper/commit/e51dbeb47fbb7131ca96c58caa479f53c0b8633c#diff-ac85b9390e5afd860a3697a5930bc3ad 
;;;","13/Feb/17 16:10;githubbot;Github user eribeiro commented on the issue:

    https://github.com/apache/zookeeper/pull/174
  
    As far as I can infer, the current Jenkins errors (below) is because `ant` was compiled on JDK8 and run on JDK7. 
    
        Exception in thread ""main"" java.lang.UnsupportedClassVersionError: org/apache/tools/ant/launch/Launcher : Unsupported major.minor version 52.0
;;;","14/Feb/17 02:44;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/87
;;;","14/Feb/17 02:44;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/174
;;;","14/Feb/17 02:45;rakeshr;Issue resolved by pull request 174
[https://github.com/apache/zookeeper/pull/174];;;","14/Feb/17 03:15;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3279 (See [https://builds.apache.org/job/ZooKeeper-trunk/3279/])
ZOOKEEPER-2617: correct a few spelling typos (rakeshr: rev 15e3f7fccc770783786e8097f7a6618509bfee0f)
* (edit) src/contrib/zktreeutil/src/ZkAdaptor.h
* (edit) src/java/main/org/apache/zookeeper/server/ZooKeeperThread.java
* (edit) src/contrib/zktreeutil/src/ZkAdaptor.cc
* (edit) src/docs/src/documentation/conf/cli.xconf
* (edit) src/contrib/zkpython/src/c/pyzk_docstrings.h
* (edit) src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/manager/ZooInspectorManagerImpl.java
* (edit) src/java/main/org/apache/zookeeper/server/DatadirCleanupManager.java
* (edit) src/contrib/zktreeutil/src/ZkTreeUtil.cc
* (edit) src/contrib/zkpython/src/c/zookeeper.c
* (edit) src/java/test/org/apache/zookeeper/server/PurgeTxnTest.java
* (edit) src/c/include/zookeeper.h
* (edit) src/docs/src/documentation/content/xdocs/zookeeperProgrammers.xml
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Snapshot generation fills up disk space due to high volume of requests.,ZOOKEEPER-2605,13008670,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Not A Problem,,joewang,joewang,29/Sep/16 18:55,29/Sep/16 19:20,29/Jun/25 13:34,29/Sep/16 19:20,3.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,"Not sure if it's a bug, or just a consequence of a design decision.

Recently we had an issue where faulty clients were issuing create requests at an abnormally high rate, which caused zookeeper to generate more snapshots than our cron job could clean up. This filled up the disk on our zookeeper hosts and brought the cluster down.

Is there a reason why Zookeeper uses a write-ahead log instead only flushing successful transactions to disk? If only successful transactions are flushed and counted towards snapCount, then even if a client is spamming requests to create a node that already exists, it wouldn't cause a flood of snapshots to be persisted to disk.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Sep 29 19:20:27 UTC 2016,,,,,,,,,,"0|i349mf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Sep/16 19:20;fpj;We use the txn log for durability and the updates to the zk database are written synchronously to the log before we respond to the client. Using a txn log is efficient because we only append to the log and write sequentially to the file. Snapshots are written to disk asynchronously, and are only used to speed up recovery. The ""source of truth"" for the state of a server is the txn log.

In your case, you just need to provision and configure your system accordingly. You could, for example, reduce the frequency of snapshotting with the {{snapCount}} parameter. You also need to make sure you have enough free space. If the device is shared, it is possible that other applications are filling it up.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Init script restart command broken on Debian Jessie,ZOOKEEPER-2603,13007529,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,nihn90,nihn90,26/Sep/16 10:48,26/Sep/16 10:48,29/Jun/25 13:34,,3.4.6,3.4.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,"Hello,

When you try to restart zookeeper via {{service zookeepr restart}} it ends in state:
{noformat}
root@m1:/etc/systemd# service zookeeper status
● zookeeper.service - LSB: Apache ZooKeeper server
   Loaded: loaded (/etc/init.d/zookeeper)
   Active: active (exited) since Mon 2016-09-26 10:38:47 UTC; 58s ago
  Process: 55495 ExecStop=/etc/init.d/zookeeper stop (code=exited, status=0/SUCCESS)
  Process: 55504 ExecStart=/etc/init.d/zookeeper start (code=exited, status=0/SUCCESS)
{noformat}

After that {{service zookeeper start}} won't work. Only way is to do {{service zookeeper stop}} and then {{start}} or {{service zookeepr --full-restart}} (which does basically the same).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2016-09-26 10:48:43.0,,,,,,,,,,"0|i342kv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Using one client able to access the znode with localhost but fails from another client when IP ACL is set for znode using 127.0.0.1,ZOOKEEPER-2583,13004908,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,rakeshsingh,rakeshsingh,rakeshsingh,14/Sep/16 14:30,23/Sep/16 05:04,29/Jun/25 13:34,,3.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,server,,,,,0,,,"Using one client able to access the znode with localhost but fails from another client when IP ACL is set for znode using 127.0.0.1


Start zookeeper in cluster mode.

Client 1 :-

[zk: localhost:2181(CONNECTED) 11] create /ip_test hello
Created /ip_test
[zk: localhost:2181(CONNECTED) 12] setAcl /ip_test
ip_test    ip_test4   
[zk: localhost:2181(CONNECTED) 12] setAcl /ip_test ip:127.0.0.1:crdwa
[zk: localhost:2181(CONNECTED) 13] get /ip_test
hello
[zk: localhost:2181(CONNECTED) 14] set /ip_test hi
[zk: localhost:2181(CONNECTED) 15] 


Client 2 :-

[zk: localhost:2181(CONNECTED) 0] get /ip_test
Authentication is not valid : /ip_test
[zk: localhost:2181(CONNECTED) 1] getAcl /ip_test
'ip,'127.0.0.1
: cdrwa

[zk: localhost:2181(CONNECTED) 2] quit

now quit the client connection and connect again using 127.0.0.1 (like :- ./zkCli.sh -server 127.0.0.1:2181)

[zk: 127.0.0.1:2181(CONNECTED) 0] get /ip_test
hi",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2016-09-14 14:30:51.0,,,,,,,,,,"0|i33mg7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ErrorMessage is not correct when set IP acl and try to set again from another machine,ZOOKEEPER-2580,13004779,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,rakeshsingh,rakeshsingh,rakeshsingh,14/Sep/16 04:48,23/Sep/16 05:04,29/Jun/25 13:34,,3.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,java client,,,,,0,,,"set IP acl and try to set again from another machine:-

[zk: localhost:2181(CONNECTED) 11] setAcl /ip_test ip:10.18.101.80:crdwa
KeeperErrorCode = NoAuth for /ip_test",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Sep 22 09:07:56 UTC 2016,,,,,,,,,,"0|i33lnj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Sep/16 19:43;arshad.mohammad;This is not a problem.
Suppose you are at machine-1 and you set ACL crdwa for machine-2 then of course you have to log-in  from machine-2 to change the ACL
I think you are not machine-2 and trying to change the ACL. isn't it?;;;","21/Sep/16 05:08;rakeshsingh;[~arshad.mohammad] i think you are not trying to understand the problem before making your conclusion or comment. And any comment should not be just shake of comment. Here the problem is with error message and that to the user we can't give the error code as error message.;;;","22/Sep/16 06:55;arshad.mohammad;[~rakeshsingh], I thought you are taking about scenario based some critical issue, but yes, I was wrong you were talking message correction related trivial issue only. All the best for your message correction endeavor.;;;","22/Sep/16 09:07;rakeshsingh;[~arshad.mohammad] thanks..but i think you need to improve your english to understand the problem which will help to understand the problem at 1st level itself. Read this issue again.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zkEnv.sh does not set $ZOOCFG properly if already set ,ZOOKEEPER-2578,13004713,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,bjorn248@gmail.com,bjorn248@gmail.com,13/Sep/16 20:30,09/Oct/23 11:22,29/Jun/25 13:34,,3.2.0,3.2.1,3.2.2,3.3.0,3.3.1,3.3.2,3.3.3,3.3.4,3.3.5,3.3.6,3.4.0,3.4.1,3.4.10,3.4.2,3.4.3,3.4.4,3.4.5,3.4.6,3.4.7,3.4.8,3.4.9,3.5.0,3.5.1,3.5.2,,,,,,,,,,,0,,,"In bin/zkEnv.sh The ZOOCFG variable is duplicated over itself if already set. For example, in my use case it was being set in zookeeper-env.sh. The problem seems to arise from this line (line 61 on the master branch at the time of this submission): ZOOCFG=""$ZOOCFGDIR/$ZOOCFG"". This overwrites the value of ZOOCFG by appending the old value to the value of ZOOCFGDIR, which is problematic if it was already initialized as the absolute path to a file. The behavior of overwriting the value of the variable in this way seems to be specific to the case where ZOOCFG is not initialized. The final state of ZOOCFG seemingly is the absolute path to the zookeeper configuration file. This behavior assumes that it is the filename only, which is where the bug arises. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Sep/16 20:36;bjorn248@gmail.com;ZOOKEEPER-2578.patch;https://issues.apache.org/jira/secure/attachment/12828323/ZOOKEEPER-2578.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,9223372036854775807,,,,,Wed Sep 21 15:37:17 UTC 2016,,,,,,,,,,"0|i33l8v:",9223372036854775807,zkEnv no longer erroneously overwrites ZOOCFG,,,,,,,,,,,,,,,,,,,,"13/Sep/16 20:36;bjorn248@gmail.com;Proposal patch file for ZOOKEEPER-2578 bug report;;;","13/Sep/16 20:39;bjorn248@gmail.com;I was using Zookeeper 3.4.6 to test this and encountered it by using a zookeeper-env.sh that set the value of ZOOCFG to /opt/zookeeper/zookeeper-3.4.6/conf/zoo.cfg. The final value of ZOOCFG after zkEnv.sh was evaluated was /opt/zookeeper/zookeeper-3.4.6/conf//opt/zookeeper/zookeeper-3.4.6/conf/zoo.cfg. This led me to report this bug and propose the patch.;;;","13/Sep/16 20:41;bjorn248@gmail.com;I will await code review and further comments before submitting this as a patch.;;;","13/Sep/16 20:55;githubbot;GitHub user Bjorn248 opened a pull request:

    https://github.com/apache/zookeeper/pull/80

    ZOOKEEPER-2578: Fixed zkEnv.sh to not overwrite ZOOCFG with itself

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/Bjorn248/zookeeper ZOOKEEPER-2578

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/80.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #80
    
----
commit eb4c2b42278a75944011c19bf50b60b9d3efacf3
Author: Bjorn Stange <bjorn248@gmail.com>
Date:   2016-09-13T20:34:57Z

    ZOOKEEPER-2578: Fixed zkEnv.sh to not overwrite ZOOCFG with itself

----
;;;","18/Sep/16 22:15;phunt;Hi [~bjorn248@gmail.com] - perhaps I'm missing something but I believe the intent was for the user to provide (if they want to override either/both) ZOOCFGDIR and ZOOCFG. Where ZOOCFGDIR is the location of the cfg file, and ZOOCFG is the name of the config file at ZOOCFGDIR. As such the current logic seems right to me. What limitation/issue do you see with this? Other than the obvious - you might need to specify both ZOOCFGDIR and ZOOCFG rather than just specifying ZOOCFG as an absolute path, including the cfg file name.;;;","18/Sep/16 22:56;bjorn248@gmail.com;The issue is that ZOOCFG changes to become the absolute path to the config file and that is what the scripts expect it to be but it starts out (if left empty) as just the filename. I find that confusing because it has drastically different starting and ending states. Is it supposed to be the absolute path? Is it supposed to be the filename? 

Otherwise, I do see your point. I was trying to override the final state of ZOOCFG in zookeeper-env.sh and not the intermediate state, and doing what you suggest would indeed work. Perhaps using a third variable for the absolute path to the config file would reduce ambiguity here as well? I was just confused by the way this variable was being handled and thought I'd open a discussion around it.;;;","21/Sep/16 14:51;phunt;I agree it's not as clear as it could be - took me a bit to figure out what the script was trying to do in order to respond to this JIRA. I would say if you are interested to address then what you are saying would make sense - a third variable of some kind. Mainly we don't want to change the existing functionality, i.e. the changes should be b/w compat from a user perspective. I'd also recommend updating (adding) the comments in the file to be more clear (for the next person that comes along and has similar questions....). Thanks Bjorn!;;;","21/Sep/16 15:10;bjorn248@gmail.com;Thanks [~phunt], should I add some comments to the original code and submit a new patch? Now that I think of it, I don't think using a third variable would work because ZOOCFG is the variable that is directly referenced by other scripts both before and after this script is run.;;;","21/Sep/16 15:13;phunt;Yes, adding comments would be great. You should modify the original patch though, as it is not b/w compat (hopefully you can figure out a way around it that works for everyone, e.g. third variable if possible?);;;","21/Sep/16 15:22;githubbot;Github user Bjorn248 closed the pull request at:

    https://github.com/apache/zookeeper/pull/80
;;;","21/Sep/16 15:37;bjorn248@gmail.com;I can't seem to find any official documentation on actually setting ZOOCFG or any of the variables used by the init scripts for zookeeper. Perhaps that should be modified instead? I can imagine a section titled ""Using a non-default configuration filename"" or something along those lines.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/./// does not have the form scheme:id:perm and client is quit.,ZOOKEEPER-2575,13004217,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,chenyuyun-emc,Prabhunath,Prabhunath,12/Sep/16 05:34,23/Nov/16 09:41,29/Jun/25 13:34,,3.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,java client,,,,,0,,,"while creating node using command (random arguments like this).
create /  /./// or some wrong format it shows the message 
/./// does not have the form scheme:id:perm
with Exception in thread ""main"" org.apache.zookeeper.KeeperException$InvalidACLException: KeeperErrorCode=InvalidACL
.....

It should give the accurate message but it should not get closed or quit.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Nov 23 09:41:04 UTC 2016,,,,,,,,,,"0|i33i6n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Nov/16 09:37;chenyuyun-emc;can I work on this issue?;;;","23/Nov/16 06:10;chenyuyun-emc;hi  Prabhunath

I just run this command in my environment, the following is the output:

[zk: localhost:2181(CONNECTED) 2] create / /.///
Node already exists: /

I didn't see any error or excepetion.

Did I miss anything?  or what version of zookeeper you are using?;;;","23/Nov/16 06:47;fpj;The jira description says that the affected version is 3.3.3, which is fairly old. I can't think of any specific issue right now, but odds are that it has been fixed already. [~chenyuyun-emc] perhaps you can try with 3.3.3 to see if you can repro?;;;","23/Nov/16 06:52;Prabhunath;This is in 3.3.3 version .;;;","23/Nov/16 09:41;chenyuyun-emc;I just checked this on Zookeeper 3.3.3 and start the zookeeper server , then run cli command:

[zk: localhost:2181(CONNECTED) 2] create / /.///
2016-11-23 04:40:08,261 - INFO  [ProcessThread:-1:PrepRequestProcessor@407] - Got user-level KeeperException when processing sessionid:0x158908dd8c40000 type:create cxid:0x3 zxid:0xfffffffffffffffe txntype:unknown reqpath:n/a Error Path:/ Error:KeeperErrorCode = NodeExists for /
Node already exists: /
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Node created having name with space is not deleted with delete command,ZOOKEEPER-2568,13003547,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Information Provided,,Prabhunath,Prabhunath,08/Sep/16 11:18,13/Sep/16 02:19,29/Jun/25 13:34,08/Sep/16 22:36,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,java client,server,,,,0,,,"For Example : 
String myNode=""/MyNode""+new Date() ;
 connector.createNode(newNode, new Date().toString().getBytes());

and createNode is defined as:
public void createNode(String path, byte[] data) throws Exception
    {
        zk.create(path, data, Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
    }

if we delete the node from command
delete /MyNodeFri Aug 12 09:42:16 GMT+05:30 2016
 then we get exception saying 
Command failed:java.lang.NumberFormatException: for input string : ""Aug"" 

How to delete such node ? may rmr command can remove but why delete command not working ?",In java using ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,9223372036854775807,,,,,Tue Sep 13 02:19:23 UTC 2016,,,,,,,,,,"0|i33e1z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Sep/16 22:36;phunt;Surround the path in quotes:

{noformat}
[zk: localhost:2181(CONNECTED) 6] create ""/MyNodeFri Aug 12 09:42:16 GMT+05:30 2016""
Created /MyNodeFri Aug 12 09:42:16 GMT+05:30 2016
[zk: localhost:2181(CONNECTED) 7] ls /
[MyNodeFri Aug 12 09:42:16 GMT+05:30 2016, a, foo, zookeeper]
[zk: localhost:2181(CONNECTED) 8] delete ""/MyNodeFri Aug 12 09:42:16 GMT+05:30 2016""
[zk: localhost:2181(CONNECTED) 9] ls /
[a, foo, zookeeper]
[zk: localhost:2181(CONNECTED) 10]
{noformat}
;;;","11/Sep/16 04:55;Prabhunath;Ok just need to use updated version to use such command . Thank you!!
I would like to know if there is any documents for such kind of things;;;","13/Sep/16 02:19;phunt;I am not aware of any. If you'd like to submit a patch please do so. Thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
space should be truncated while reading password for keystore/truststore which is required to configure while SSL enabled,ZOOKEEPER-2566,13003526,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,athy360,athy360,08/Sep/16 09:51,08/Sep/16 22:37,29/Jun/25 13:34,,3.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,server,,,,,0,,,"space should be truncated while reading password for keystore/truststore which is required to configure while SSL enabled.
As of now if we configure the password with any heading/trailing space, the zookeeper server will fail to start.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-2521,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2016-09-08 09:51:36.0,,,,,,,,,,"0|i33dxb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
listquota <path> should display the quota even it is set on parent/child node,ZOOKEEPER-2565,13003513,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,chenyuyun-emc,rakeshsingh,rakeshsingh,08/Sep/16 09:29,26/May/19 06:47,29/Jun/25 13:34,,3.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,server,,,,,0,pull-request-available,,"listquota <path> should display the quota even it is set on parent/child node. As of now if we have a parent-child hierarchy for example n1->n2->n3 and quota is set for n2. If we try to get quota details on n1 and n3 using listquota, it says no quota set but if try to set the quota on those nodes it fails saying quota is already set on parent node...
So listquota should fetch the quota set on any node in hierarchy with exact path (on which quota is set) even though this api is called on any other node in that hierarchy.",,"maoling commented on pull request #942: ZOOKEEPER-2565:listquota <path> should display the quota even it is set on parent/child node
URL: https://github.com/apache/zookeeper/pull/942
 
 
   - this is still a work in the progress,Plz don't review before removing the WIP tag.
   - more details in the [ZOOKEEPER-2565](https://issues.apache.org/jira/browse/ZOOKEEPER-2565)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/May/19 13:07;githubbot;600","maoling commented on issue #942: ZOOKEEPER-2565:[WIP]---listquota <path> should display the quota even it is set on parent/child node
URL: https://github.com/apache/zookeeper/pull/942#issuecomment-495974415
 
 
   - ""**listquota <path> display the quota even it is set on parent/child node**"" is not a good way to solve this issue
   - we should handle this Exception to tell users that a specific parent/child node already had a quota and a complete path(from root to leaf node) can only be set one quota.
   - this fix is travial and will be done with ZOOKEEPER-2563([PR-936](https://github.com/apache/zookeeper/pull/936)) together, because in that path we will do a refactor for the `setquota `
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/May/19 06:47;githubbot;600","maoling commented on issue #942: ZOOKEEPER-2565:[WIP]---listquota <path> should display the quota even it is set on parent/child node
URL: https://github.com/apache/zookeeper/pull/942#issuecomment-495974415
 
 
   - ""**listquota <path> display the quota even it is set on parent/child node**"" is not a good way to solve this issue
   - we should handle this Exception to tell users that a specific parent/child node already had a quota and a complete path(from root to leaf node) can only be set one quota.
   - this fix is travial and will be done with ZOOKEEPER-2563([PR-936](https://github.com/apache/zookeeper/pull/936)) together, because in that path we will do a refactor for the `setquota `
   - Let me close this PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/May/19 06:47;githubbot;600","maoling commented on pull request #942: ZOOKEEPER-2565:[WIP]---listquota <path> should display the quota even it is set on parent/child node
URL: https://github.com/apache/zookeeper/pull/942
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/May/19 06:47;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Jan 03 23:45:34 UTC 2017,,,,,,,,,,"0|i33duf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Nov/16 08:44;chenyuyun-emc;can I work on this issue? ;;;","18/Nov/16 11:40;eribeiro;Sure! :) Make sure you open a Github Pull Request with the same title as the issue you are working on.

Further instructions here: https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute;;;","21/Nov/16 09:34;fpj;[~chenyuyun-emc] I have added you to the list of contributors and assigned this jira to you.;;;","21/Nov/16 09:36;chenyuyun-emc;ok, thx;;;","03/Jan/17 23:09;githubbot;GitHub user hanm opened a pull request:

    https://github.com/apache/zookeeper/pull/140

    ZOOKEEPER-2565: Fix ServerConfigTest#testValidArguments test case.

    ServerConfig.getDataDir returns type String in branch-3.4 but return type File in branch-3.5 and master. So we need to deal with this difference accordingly in our test.
    
    This PR is intended to be merged in master, branch-3.5, and branch-3.4.
    
    @rakeshadr PTAL


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/hanm/zookeeper ZOOKEEPER-2565

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/140.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #140
    
----
commit 48f099c5419ff526934a7c7ff7c0d89ced970e09
Author: Michael Han <hanm@apache.org>
Date:   2017-01-03T22:29:39Z

    ZOOKEEPER-2565: Fix ServerConfigTest#testValidArguments test case failures for both branch-3.4 and branch-3.5, master.
    ServerConfig.getDataDir returns type String in branch-3.4 but return type File in branch-3.5 and master. So we need to deal with this difference accordingly in our test.

----
;;;","03/Jan/17 23:29;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/182//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/182//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/182//console

This message is automatically generated.;;;","03/Jan/17 23:45;hanm;Please ignore this PR - it's supposed to target ZOOKEEPER-2656 instead of this issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No message is prompted when trying to delete quota with different quota option,ZOOKEEPER-2564,13003472,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,rakeshsingh,rakeshsingh,rakeshsingh,08/Sep/16 06:57,28/May/19 10:09,29/Jun/25 13:34,,3.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,server,,,,,0,,,"No message is prompted when trying to delete quota with different quota option.

Steps to reproduce:-
1. Start zookeeper in cluster mode 
2. Create some node and set quota like
setquota -n 10 /test
3. Now try to delete as below:-
delquota -b /test

Here no message/exception is prompted. We should prompt message like 
""Byte Quota does not exist for /test""
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue May 28 10:09:40 UTC 2019,,,,,,,,,,"0|i33dlb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Nov/16 07:17;chenyuyun-emc;hi Rakesh Kumar Singh

I fixed this issue today, this is my first time to contribute to the open source project, It seems I can't submit the patch, could you help me on this?  very hope you can give me a help at the beginning.;;;","18/Nov/16 07:27;hanm;[~chenyuyun-emc] You can send a pull request through git, please check out [this page|https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute] (section Pull requests via github). 

;;;","18/Nov/16 07:35;chenyuyun-emc;hi Michael Han

I can't attach the patch on this jira, ;;;","28/May/19 10:09;maoling;very trival.

No message is prompted is also ok for me.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Potential memory leak in recordio.c,ZOOKEEPER-2558,13003073,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,hanm,hanm,hanm,06/Sep/16 22:57,31/Mar/17 09:01,29/Jun/25 13:34,08/Sep/16 02:59,3.4.9,3.5.2,,,,,,,,,,,,,,,,,,,,,,,3.4.10,3.5.3,3.6.0,,,c client,,,,,0,,,"We have code like this in {{create_buffer_iarchive}} and {{create_buffer_oarchive}}:

{code}
    struct iarchive *ia = malloc(sizeof(*ia));
    struct buff_struct *buff = malloc(sizeof(struct buff_struct));
    if (!ia) return 0;
    if (!buff) {
        free(ia);
        return 0;
    }
{code}

If first malloc failed but second succeeds, then the memory allocated with second malloc will not get freed when the function returned. One could argue that if first malloc failed the second will also fail (i.e. when system run out of memory), but I could also see the possibility of the opposite (the first malloc failed because heap fragmentation but the second succeeds).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Sep/16 22:58;hanm;ZOOKEEPER-2558.patch;https://issues.apache.org/jira/secure/attachment/12827267/ZOOKEEPER-2558.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,Reviewed,,,,Thu Sep 08 16:47:50 UTC 2016,,,,,,,,,,"0|i33b4n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Sep/16 22:58;hanm;Not a big deal here, but good to stick to better practice. Attach a patch.;;;","06/Sep/16 23:55;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12827267/ZOOKEEPER-2558.patch
  against trunk revision 1757584.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3394//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3394//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3394//console

This message is automatically generated.;;;","08/Sep/16 02:59;phunt;committed to 3.4.10, 3.5.3, 3.6.0. Thanks Michael!;;;","08/Sep/16 03:36;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3067 (See [https://builds.apache.org/job/ZooKeeper-trunk/3067/])
ZOOKEEPER-2558: Potential memory leak in recordio.c (Michael Han via phunt) (phunt: [http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1759735])
* (edit) trunk/CHANGES.txt
* (edit) trunk/src/c/src/recordio.c
;;;","08/Sep/16 16:47;hanm;Thanks Pat for reviewing and committing the patch!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"peerType remains as ""observer"" in zoo.cfg even though we change the node from observer to participant runtime",ZOOKEEPER-2556,13002881,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,rakeshsingh,rakeshsingh,rakeshsingh,06/Sep/16 10:43,03/Nov/16 16:48,29/Jun/25 13:34,03/Nov/16 15:41,3.5.1,3.5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,server,,,,,0,,,"peerType remains as ""observer"" in zoo.cfg even though we change the node from observer to participant runtime

Steps to reproduce:-
1. Start zookeeper in cluster with one node as observer by configuring 
peerType=observer in zoo.cfg and server.2=10.18.219.50:2888:3888:observer;2181
2. Start the cluster
3. start a client and change the node from observer to participant, the configuration related to peertype remained same though other things like clientport got from zoo.cfg

>reconfig -remove 2 -add 2=10.18.219.50:2888:3888:participant;2181

We should either remove this parameter or update with correct node type at run time",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Oct/16 08:22;rakeshsingh;ZOOKEEPER-2556.patch;https://issues.apache.org/jira/secure/attachment/12835288/ZOOKEEPER-2556.patch","26/Oct/16 07:39;rakeshsingh;ZOOKEEPER-2556.patch;https://issues.apache.org/jira/secure/attachment/12835282/ZOOKEEPER-2556.patch","06/Oct/16 06:51;rakeshsingh;ZOOKEEPER-2556.patch;https://issues.apache.org/jira/secure/attachment/12831901/ZOOKEEPER-2556.patch",,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Nov 03 16:48:36 UTC 2016,,,,,,,,,,"0|i339xz:",9223372036854775807,Committed. Thanks again Rakesh!,,,,,,,,,,,,,,,,,,,,"23/Sep/16 05:49;shralex;Thanks for reporting this! Removing this from static config seems like a one-line change in editStaticConfig (QuorumPeerConfig.java). There's a bunch of parameters that are already being removed, so you can just add it there.;;;","23/Sep/16 06:03;rakeshsingh;[~shralex]Thanks for feedback. ;;;","28/Sep/16 04:50;rakeshsingh;[~shralex] Do i need to add testcase for this change.?;;;","28/Sep/16 04:56;shralex;I think so, but take a look at testReconfigRemoveClientFromStatic in src/java/test/org/apache/zookeeper/server/quorum/ReconfigLegacyTest.java
I think its pretty close to what you need. Maybe just change and rename that test
to include all the parameters removed from static config.;;;","28/Sep/16 05:15;rakeshsingh;Thank you [~shralex] :);;;","06/Oct/16 06:52;rakeshsingh;pls review;;;","06/Oct/16 07:19;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12831901/ZOOKEEPER-2556.patch
  against trunk revision 8d0154bcc21e58b6166eb5e360f72ce37699e072.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3465//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3465//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3465//console

This message is automatically generated.;;;","17/Oct/16 05:10;rakeshsingh;Pls review and commit if looks fine.;;;","25/Oct/16 05:39;shralex;Hi, thanks for the patch! I have only one suggestion.
Instead of a new separate test for peerType, perhaps you could add a few more lines to one of the existing tests. Looking at this again perhaps the best one would be testConfigFileBackwardCompatibility() where it already checks that ""server."" and ""clientPort"" are being removed, you could add that ""peerType"" is also being removed.

Alex;;;","26/Oct/16 07:40;rakeshsingh;Thanks for feedback, changed based on feedback.;;;","26/Oct/16 07:56;shralex;looks good, but I think the check that peerType is not in cfg shouldn't be in the inner loop.;;;","26/Oct/16 08:06;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12835282/ZOOKEEPER-2556.patch
  against trunk revision f6349d16fcd5f04b560095417fd2a1813ac3e855.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3500//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3500//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3500//console

This message is automatically generated.;;;","26/Oct/16 08:22;rakeshsingh;Thanks. Changes are done.;;;","26/Oct/16 08:44;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12835288/ZOOKEEPER-2556.patch
  against trunk revision f6349d16fcd5f04b560095417fd2a1813ac3e855.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3501//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3501//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3501//console

This message is automatically generated.;;;","26/Oct/16 22:00;shralex;+1

[~hanm], [~breed], would you guys be able to commit this ? I still need to learn the new git procedure :);;;","26/Oct/16 23:37;hanm;[~shralex] I don't have write access :-) Also one suggestion - given that we have git merge script integrated in the repo maybe [~rakeshsingh] should create a PR for ZOOKEEPER-2556 and then a committer can merge the PR. The benefit of committing through PR is the contributors get their credit in commit history, i.e. see [this|https://github.com/apache/zookeeper/commit/f6349d16fcd5f04b560095417fd2a1813ac3e855]. ;;;","03/Nov/16 15:42;shralex;Committed. Thanks again Rakesh!;;;","03/Nov/16 16:48;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3142 (See [https://builds.apache.org/job/ZooKeeper-trunk/3142/])
ZOOKEEPER-2556: peerType not removed from static config file (Rakesh (shralex: rev bcb07a09b06c91243ed244f04a71b8daf629e286)
* (edit) src/java/test/org/apache/zookeeper/server/quorum/ReconfigLegacyTest.java
* (edit) src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerTestBase.java
* (edit) src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FollowerResyncConcurrencyTest failed in ZooKeeper 3.3.3,ZOOKEEPER-2550,13002667,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,yinkang,yinkang,05/Sep/16 06:05,06/Jan/21 10:37,29/Jun/25 13:34,,3.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,leaderElection,quorum,server,tests,,0,test,," I'm studying on the Test of ZooKeeper 3.3.3 but got a test failure when I run  _testResyncBySnapThenDiffAfterFollowerCrashes_ in _FollowerResyncConcurrencyTest.java_.

{quote}
2016-09-05 13:57:35,072 - INFO  [main:QuorumBase@307] - FINISHED testResyncBySnapThenDiffAfterFollowerCrashes

java.util.concurrent.TimeoutException: Did not connect

	at org.apache.zookeeper.test.ClientBase$CountdownWatcher.waitForConnected(ClientBase.java:119)
	at org.apache.zookeeper.test.FollowerResyncConcurrencyTest.testResyncBySnapThenDiffAfterFollowerCrashes(FollowerResyncConcurrencyTest.java:95)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at junit.framework.TestCase.runTest(TestCase.java:168)
	at junit.framework.TestCase.runBare(TestCase.java:134)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:157)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:119)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:42)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:234)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
{quote}

Which happened in _FollowerResyncConcurrencyTest.java_ at line 92.

{quote}
        index = (index == 1) ? 2 : 1;
        qu.shutdown(index);
        final ZooKeeper zk3 = new DisconnectableZooKeeper(""127.0.0.1:"" + qu.getPeer(3).peer.getClientPort(), 1000,watcher3);
        {color:red}watcher3.waitForConnected(CONNECTION_TIMEOUT);{color}
        zk3.create(""/mybar"", null, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.EPHEMERAL_SEQUENTIAL);
{quote}

I checked the Log Message, and I guess it is probably because of the following ERROR (marked as blue):

{quote}
2016-09-05 13:56:54,928 - INFO  [main-SendThread():ClientCnxn$SendThread@1041] - Opening socket connection to server /127.0.0.1:11237
2016-09-05 13:56:54,930 - INFO  [main-SendThread(127.0.0.1:11237):ClientCnxn$SendThread@949] - Socket connection established to 127.0.0.1/127.0.0.1:11237, initiating session
2016-09-05 13:56:54,930 - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11237:NIOServerCnxn$Factory@251] - Accepted socket connection from /127.0.0.1:33566
2016-09-05 13:56:54,957 - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11237:NIOServerCnxn@777] - Client attempting to establish new session at /127.0.0.1:33566
 {color:blue}
2016-09-05 13:56:55,000 - INFO  [SyncThread:3:FileTxnLog@197] - Creating new log file: log.100000001
2016-09-05 13:56:55,000 - WARN  [QuorumPeer:/0:0:0:0:0:0:0:0:11235:Follower@116] - Got zxid 0x100000001 expected 0x1
2016-09-05 13:56:55,000 - INFO  [SyncThread:2:FileTxnLog@197] - Creating new log file: log.100000001
2016-09-05 13:56:55,078 - ERROR [CommitProcessor:3:CommitProcessor@146] - Unexpected exception causing CommitProcessor to exit
java.lang.AssertionError
	at org.apache.zookeeper.jmx.MBeanRegistry.register(MBeanRegistry.java:66)
	at org.apache.zookeeper.server.NIOServerCnxn.finishSessionInit(NIOServerCnxn.java:1552)
	at org.apache.zookeeper.server.FinalRequestProcessor.processRequest(FinalRequestProcessor.java:183)
	at org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor.processRequest(Leader.java:540)
	at org.apache.zookeeper.server.quorum.CommitProcessor.run(CommitProcessor.java:73)
2016-09-05 13:56:55,078 - INFO  [CommitProcessor:3:CommitProcessor@148] - CommitProcessor exited loop!
{color}

2016-09-05 13:56:55,931 - INFO  [main-SendThread(127.0.0.1:11237):ClientCnxn$SendThread@1157] - Client session timed out, have not heard from server in 1001ms for sessionid 0x0, closing socket connection and attempting reconnect
2016-09-05 13:56:58,035 - INFO  [main-SendThread(127.0.0.1:11237):ClientCnxn$SendThread@1041] - Opening socket connection to server 127.0.0.1/127.0.0.1:11237
2016-09-05 13:56:58,036 - INFO  [main-SendThread(127.0.0.1:11237):ClientCnxn$SendThread@949] - Socket connection established to 127.0.0.1/127.0.0.1:11237, initiating session
{quote}

I'll very appreciate it if I can get some help from you genius people.
Thanks.
","Windows 10,
Java 1.8.0,
IDEA 2016.1.4,
JUnit 4.8.1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Jan 06 10:37:30 UTC 2021,,,,,,,,,,"0|i338mf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Sep/16 18:36;phunt;There were a couple of comments on the mailing list:

On Thu, Sep 1, 2016 at 9:35 AM, Michael Han <hanm@cloudera.com> wrote:
>
> Hi Kang,
>
> Have you checked https://issues.apache.org/jira/browse/ZOOKEEPER-1264 ?
> Could this be related to the errors you saw?


Also

On Sat, Sep 3, 2016 at 9:26 PM, Patrick Hunt <phunt@apache.org> wrote:
> Also there were a number of patches that went into 3.4+ in order to support
> newer versions of Java - given you are on 3.3 you will not be seeing the
> benefit of this.
;;;","08/Sep/16 05:35;yinkang;Thanks Patrick.
I have checked ZOOKEEPER-1264. But the reason that the _FollowerResyncConcurrencyTest_ failed in this issue is not the same as ZOOKEEPER-1264. It appears both in 3.3.3 and 3.4+ .
As I mentioned in the issue's description, the reason happened is _FollowerResyncConcurrencyTest.java_ at line 92.

{code:title=FollowerResyncConcurrencyTest.java|borderStyle=solid}
        QuorumUtil qu = new QuorumUtil(1);
        qu.startAll();
        CountdownWatcher watcher1 = new CountdownWatcher();
        CountdownWatcher watcher2 = new CountdownWatcher();
        CountdownWatcher watcher3 = new CountdownWatcher();

        int index = 1;
        while(qu.getPeer(index).peer.leader == null)
            index++;

        Leader leader = qu.getPeer(index).peer.leader;

        assertNotNull(leader);
        /*
         * Reusing the index variable to select a follower to connect to
         */
        index = (index == 1) ? 2 : 1;
        qu.shutdown(index);
        final ZooKeeper zk3 = new DisconnectableZooKeeper(""127.0.0.1:"" + qu.getPeer(3).peer.getClientPort(), 1000,watcher3);
        watcher3.waitForConnected(CONNECTION_TIMEOUT);  // Failed here
        zk3.create(""/mybar"", null, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.EPHEMERAL_SEQUENTIAL);
{code}

Hope I can describe the trace clearly:
(1) initialize 3 quorum peers and start all (peer 3 is the leader in my case)
(2) shutdown peer 1
(3) new a DisconnectableZooKeeper connect to peer 3' clientport with watcher3
(4) watcher3 wait for connected, but failed after CONNECTION_TIMEOUT

I'm confusing about the connect failed. After checked the log messages, I got the following logs that probably related:

{noformat}
2016-09-05 13:56:55,000 - INFO [SyncThread:3:FileTxnLog@197] - Creating new log file: log.100000001
2016-09-05 13:56:55,000 - WARN [QuorumPeer:/0:0:0:0:0:0:0:0:11235:Follower@116] - Got zxid 0x100000001 expected 0x1
2016-09-05 13:56:55,000 - INFO [SyncThread:2:FileTxnLog@197] - Creating new log file: log.100000001
2016-09-05 13:56:55,078 - ERROR [CommitProcessor:3:CommitProcessor@146] - Unexpected exception causing CommitProcessor to exit
java.lang.AssertionError
at org.apache.zookeeper.jmx.MBeanRegistry.register(MBeanRegistry.java:66)
at org.apache.zookeeper.server.NIOServerCnxn.finishSessionInit(NIOServerCnxn.java:1552)
at org.apache.zookeeper.server.FinalRequestProcessor.processRequest(FinalRequestProcessor.java:183)
at org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor.processRequest(Leader.java:540)
at org.apache.zookeeper.server.quorum.CommitProcessor.run(CommitProcessor.java:73)
2016-09-05 13:56:55,078 - INFO [CommitProcessor:3:CommitProcessor@148] - CommitProcessor exited loop!
{noformat};;;","06/Jan/21 10:37;ztzg;Is this still relevant? In any case, downgrading from blocker.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
""" unary operator expected"" message on the console while trying to get the zookeeper status",ZOOKEEPER-2544,13002247,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,rakeshsingh,rakeshsingh,02/Sep/16 05:45,08/Oct/17 16:41,29/Jun/25 13:34,,3.5.1,3.5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,server,,,,,0,,,"root@BLR1000010865:/home/Rakesh/Zookeeper/18_Aug/cluster/zookeeper-3.5.1-alpha/bin# ./zkServer.sh status
ZooKeeper JMX enabled by default
Using config: /home/Rakesh/Zookeeper/18_Aug/cluster/zookeeper-3.5.1-alpha/bin/../conf/zoo.cfg
./zkServer.sh: line 223: [: =: unary operator expected",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sun Oct 08 16:41:23 UTC 2017,,,,,,,,,,"0|i3361b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Oct/17 16:41;ivinpolosony;Hi [~rakeshkumarsingh]

Can you give me more details on the issue ? zoo.cfg Config file example would be great. 

Thanks;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When start zookeeper server by configuring the server details in dynamic configuration with passing the client port, wrong log info is logged",ZOOKEEPER-2540,13001195,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,rakeshsingh,rakeshsingh,rakeshsingh,30/Aug/16 05:16,23/Sep/16 05:09,29/Jun/25 13:34,,3.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,server,,,,,0,,,"When start zookeeper server by configuring the server details in dynamic configuration with passing the client port, wrong log info is logged:-

Configure the server details as below which contains client port as well and remove the client port from zoo.cfg (as it is duplicate) :-
server.1=10.18.101.80:2888:3888:participant;2181
server.2=10.18.219.50:2888:3888:participant;2181
server.3=10.18.221.194:2888:3888:participant;2181

Start the cluster, we can see message as 

2016-08-30 17:00:33,984 [myid:] - INFO  [main:QuorumPeerConfig@306] - clientPort is not set

which is not correct",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2016-08-30 05:16:09.0,,,,,,,,,,"0|i32zjz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Throwing nullpointerException when run the command ""config -c"" when client port is mentioned as separate and not like new style",ZOOKEEPER-2539,13000983,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,rakeshsingh,rakeshsingh,rakeshsingh,29/Aug/16 14:09,18/May/17 03:43,29/Jun/25 13:34,08/Sep/16 14:22,3.5.1,3.5.2,,,,,,,,,,,,,,,,,,,,,,,3.5.3,3.6.0,,,,java client,,,,,0,,,"Throwing nullpointerException when run the command ""config -c"" when client port is mentioned as separate and not like new style
1. Configure the zookeeper to start in cluster mode like below-

clientPort=2181

server.1=10.18.101.80:2888:3888
server.2=10.18.219.50:2888:3888
server.3=10.18.221.194:2888:3888

and not like below:-
server.1=10.18.101.80:2888:3888:participant;2181
server.2=10.18.219.50:2888:3888:participant;2181
server.3=10.18.221.194:2888:3888:participant;2181

2. Start the cluster and one client using >zkCli.sh
3. execute command ""config -c""
It is throwing nullpointerException:-


root@BLR1000010865:/home/Rakesh/Zookeeper/18_Aug/cluster/zookeeper-3.5.1-alpha/bin# ./zkCli.sh 
Connecting to localhost:2181
2016-08-29 21:45:19,558 [myid:] - INFO  [main:Environment@109] - Client environment:zookeeper.version=3.5.1-alpha--1, built on 08/18/2016 08:20 GMT
2016-08-29 21:45:19,561 [myid:] - INFO  [main:Environment@109] - Client environment:host.name=BLR1000010865
2016-08-29 21:45:19,562 [myid:] - INFO  [main:Environment@109] - Client environment:java.version=1.7.0_17
2016-08-29 21:45:19,564 [myid:] - INFO  [main:Environment@109] - Client environment:java.vendor=Oracle Corporation
2016-08-29 21:45:19,564 [myid:] - INFO  [main:Environment@109] - Client environment:java.home=/usr/lib/jvm/oracle_jdk7/jre
2016-08-29 21:45:19,564 [myid:] - INFO  [main:Environment@109] - Client environment:java.class.path=/home/Rakesh/Zookeeper/18_Aug/cluster/zookeeper-3.5.1-alpha/bin/../build/classes:/home/Rakesh/Zookeeper/18_Aug/cluster/zookeeper-3.5.1-alpha/bin/../build/lib/*.jar:/home/Rakesh/Zookeeper/18_Aug/cluster/zookeeper-3.5.1-alpha/bin/../lib/slf4j-log4j12-1.7.5.jar:/home/Rakesh/Zookeeper/18_Aug/cluster/zookeeper-3.5.1-alpha/bin/../lib/slf4j-api-1.7.5.jar:/home/Rakesh/Zookeeper/18_Aug/cluster/zookeeper-3.5.1-alpha/bin/../lib/servlet-api-2.5-20081211.jar:/home/Rakesh/Zookeeper/18_Aug/cluster/zookeeper-3.5.1-alpha/bin/../lib/netty-3.7.0.Final.jar:/home/Rakesh/Zookeeper/18_Aug/cluster/zookeeper-3.5.1-alpha/bin/../lib/log4j-1.2.16.jar:/home/Rakesh/Zookeeper/18_Aug/cluster/zookeeper-3.5.1-alpha/bin/../lib/jline-2.11.jar:/home/Rakesh/Zookeeper/18_Aug/cluster/zookeeper-3.5.1-alpha/bin/../lib/jetty-util-6.1.26.jar:/home/Rakesh/Zookeeper/18_Aug/cluster/zookeeper-3.5.1-alpha/bin/../lib/jetty-6.1.26.jar:/home/Rakesh/Zookeeper/18_Aug/cluster/zookeeper-3.5.1-alpha/bin/../lib/javacc.jar:/home/Rakesh/Zookeeper/18_Aug/cluster/zookeeper-3.5.1-alpha/bin/../lib/jackson-mapper-asl-1.9.11.jar:/home/Rakesh/Zookeeper/18_Aug/cluster/zookeeper-3.5.1-alpha/bin/../lib/jackson-core-asl-1.9.11.jar:/home/Rakesh/Zookeeper/18_Aug/cluster/zookeeper-3.5.1-alpha/bin/../lib/commons-cli-1.2.jar:/home/Rakesh/Zookeeper/18_Aug/cluster/zookeeper-3.5.1-alpha/bin/../lib/ant-eclipse-1.0-jvm1.2.jar:/home/Rakesh/Zookeeper/18_Aug/cluster/zookeeper-3.5.1-alpha/bin/../zookeeper-3.5.1-alpha.jar:/home/Rakesh/Zookeeper/18_Aug/cluster/zookeeper-3.5.1-alpha/bin/../src/java/lib/ant-eclipse-1.0-jvm1.2.jar:/home/Rakesh/Zookeeper/18_Aug/cluster/zookeeper-3.5.1-alpha/bin/../conf:
2016-08-29 21:45:19,564 [myid:] - INFO  [main:Environment@109] - Client environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib
2016-08-29 21:45:19,564 [myid:] - INFO  [main:Environment@109] - Client environment:java.io.tmpdir=/tmp
2016-08-29 21:45:19,564 [myid:] - INFO  [main:Environment@109] - Client environment:java.compiler=<NA>
2016-08-29 21:45:19,565 [myid:] - INFO  [main:Environment@109] - Client environment:os.name=Linux
2016-08-29 21:45:19,565 [myid:] - INFO  [main:Environment@109] - Client environment:os.arch=amd64
2016-08-29 21:45:19,565 [myid:] - INFO  [main:Environment@109] - Client environment:os.version=4.4.0-31-generic
2016-08-29 21:45:19,565 [myid:] - INFO  [main:Environment@109] - Client environment:user.name=root
2016-08-29 21:45:19,565 [myid:] - INFO  [main:Environment@109] - Client environment:user.home=/root
2016-08-29 21:45:19,565 [myid:] - INFO  [main:Environment@109] - Client environment:user.dir=/home/Rakesh/Zookeeper/18_Aug/cluster/zookeeper-3.5.1-alpha/bin
2016-08-29 21:45:19,565 [myid:] - INFO  [main:Environment@109] - Client environment:os.memory.free=114MB
2016-08-29 21:45:19,567 [myid:] - INFO  [main:Environment@109] - Client environment:os.memory.max=227MB
2016-08-29 21:45:19,568 [myid:] - INFO  [main:Environment@109] - Client environment:os.memory.total=119MB
2016-08-29 21:45:19,570 [myid:] - INFO  [main:ZooKeeper@716] - Initiating client connection, connectString=localhost:2181 sessionTimeout=30000 watcher=org.apache.zookeeper.ZooKeeperMain$MyWatcher@149ee0f1
Welcome to ZooKeeper!
2016-08-29 21:45:19,596 [myid:] - INFO  [main-SendThread(localhost:2181):ClientCnxn$SendThread@1138] - Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
2016-08-29 21:45:19,603 [myid:] - INFO  [main-SendThread(localhost:2181):ClientCnxn$SendThread@980] - Socket connection established, initiating session, client: /127.0.0.1:43574, server: localhost/127.0.0.1:2181
JLine support is enabled
2016-08-29 21:45:19,630 [myid:] - INFO  [main-SendThread(localhost:2181):ClientCnxn$SendThread@1400] - Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x20044a0c51d0000, negotiated timeout = 30000

WATCHER::

WatchedEvent state:SyncConnected type:None path:null
[zk: localhost:2181(CONNECTED) 0] 
[zk: localhost:2181(CONNECTED) 0] config -c
Exception in thread ""main"" java.lang.NullPointerException
	at org.apache.zookeeper.server.util.ConfigUtils.getClientConfigStr(ConfigUtils.java:56)
	at org.apache.zookeeper.cli.GetConfigCommand.exec(GetConfigCommand.java:64)
	at org.apache.zookeeper.ZooKeeperMain.processZKCmd(ZooKeeperMain.java:674)
	at org.apache.zookeeper.ZooKeeperMain.processCmd(ZooKeeperMain.java:577)
	at org.apache.zookeeper.ZooKeeperMain.executeLine(ZooKeeperMain.java:360)
	at org.apache.zookeeper.ZooKeeperMain.run(ZooKeeperMain.java:320)
	at org.apache.zookeeper.ZooKeeperMain.main(ZooKeeperMain.java:280)
root@BLR1000010865:/home/Rakesh/Zookeeper/18_Aug/cluster/zookeeper-3.5.1-alpha/bin# 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Sep/16 08:12;rakeshsingh;ConfigUtils.java.patch;https://issues.apache.org/jira/secure/attachment/12826787/ConfigUtils.java.patch","02/Sep/16 03:16;rakeshsingh;ConfigUtils.java.patch;https://issues.apache.org/jira/secure/attachment/12826760/ConfigUtils.java.patch","08/Sep/16 03:20;phunt;ZOOKEEPER-2539.patch;https://issues.apache.org/jira/secure/attachment/12827491/ZOOKEEPER-2539.patch",,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,Reviewed,,,,Thu Sep 08 15:34:43 UTC 2016,,,,,,,,,,"0|i32y8v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Sep/16 03:16;rakeshsingh;Providing patch for mentioned issue. Pls review and feedback.;;;","02/Sep/16 03:40;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12826760/ConfigUtils.java.patch
  against trunk revision 1757584.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3380//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3380//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3380//console

This message is automatically generated.;;;","02/Sep/16 03:57;breed;+1 looks good, just a formatting nit you need to indent the line after the if() and put it in {}'s since it is on a separate line.;;;","02/Sep/16 04:52;rakeshsingh;Thanks for feedback, will make the changes and upload the same.;;;","02/Sep/16 09:54;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12826787/ConfigUtils.java.patch
  against trunk revision 1757584.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3383//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3383//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3383//console

This message is automatically generated.;;;","08/Sep/16 03:20;phunt;Cleaned up the formatting a bit. Otherwise lgtm.;;;","08/Sep/16 03:22;phunt;Also renamed the patch - [~rakeshsingh] - please look at this document for details on patch submission
https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute
It's a minor thing, but correct naming of the patch (for example) helps committers when processing the queues. Thanks!;;;","08/Sep/16 03:45;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12827491/ZOOKEEPER-2539.patch
  against trunk revision 1759735.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3400//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3400//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3400//console

This message is automatically generated.;;;","08/Sep/16 04:26;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12827491/ZOOKEEPER-2539.patch
  against trunk revision 1759739.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3401//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3401//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3401//console

This message is automatically generated.;;;","08/Sep/16 05:42;rakeshsingh;Thank you for feedback !!!;;;","08/Sep/16 14:22;phunt;committed to 3.5.3 and trunk. Thanks Rakesh!;;;","08/Sep/16 15:34;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3069 (See [https://builds.apache.org/job/ZooKeeper-trunk/3069/])
ZOOKEEPER-2539: Throwing nullpointerException when run the command config -c"" when client port is mentioned as separate and not like new style (Rakesh Kumar Singh via phunt) (phunt: [http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1759835])
* (edit) trunk/CHANGES.txt
* (edit) trunk/src/java/main/org/apache/zookeeper/server/util/ConfigUtils.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Close the zkCli using ""close"" command and then connect using ""connect"" then provide some invalid input, it closing the channel and connecting again",ZOOKEEPER-2533,12999959,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,rakeshsingh,rakeshsingh,rakeshsingh,25/Aug/16 09:16,23/Sep/16 05:10,29/Jun/25 13:34,,3.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,java client,,,,,0,,,"Close the zkCli using ""close"" command and then connect using ""connect"" then provide some invalid input, it closing the channel and connecting again

Steps to reproduce:-
1. Connect the Zookeeper server using zkCli
2. close the connection using ""close""
3. Connect again using ""connect host""
4. Once connected, input space "" "" and hit enter
It is closing the channel and establishing again.
Console log is as below:-

[zk: localhost:2181(CONNECTED) 5] close
2016-08-25 16:59:04,854 [myid:] - INFO  [main:ClientCnxnSocketNetty@201] - channel is told closing
2016-08-25 16:59:04,855 [myid:] - INFO  [main:ZooKeeper@1110] - Session: 0x101a00305cc0008 closed
[zk: localhost:2181(CLOSED) 6] 2016-08-25 16:59:04,855 [myid:] - INFO  [main-EventThread:ClientCnxn$EventThread@542] - EventThread shut down for session: 0x101a00305cc0008
2016-08-25 16:59:04,856 [myid:] - INFO  [New I/O worker #1:ClientCnxnSocketNetty$ZKClientHandler@377] - channel is disconnected: [id: 0xd9735868, /0:0:0:0:0:0:0:1:44595 :> localhost/0:0:0:0:0:0:0:1:2181]
2016-08-25 16:59:04,856 [myid:] - INFO  [New I/O worker #1:ClientCnxnSocketNetty@201] - channel is told closing
connect 10.18.101.80
2016-08-25 16:59:14,410 [myid:] - INFO  [main:ZooKeeper@716] - Initiating client connection, connectString=10.18.101.80 sessionTimeout=30000 watcher=org.apache.zookeeper.ZooKeeperMain$MyWatcher@19c50523
[zk: 10.18.101.80(CONNECTING) 7] 2016-08-25 16:59:14,417 [myid:] - INFO  [main-SendThread(10.18.101.80:2181):ClientCnxn$SendThread@1138] - Opening socket connection to server 10.18.101.80/10.18.101.80:2181. Will not attempt to authenticate using SASL (unknown error)
2016-08-25 16:59:14,426 [myid:] - INFO  [main-SendThread(10.18.101.80:2181):ClientCnxnSocketNetty$ZKClientPipelineFactory@363] - SSL handler added for channel: null
2016-08-25 16:59:14,428 [myid:] - INFO  [New I/O worker #10:ClientCnxn$SendThread@980] - Socket connection established, initiating session, client: /10.18.101.80:58871, server: 10.18.101.80/10.18.101.80:2181
2016-08-25 16:59:14,428 [myid:] - INFO  [New I/O worker #10:ClientCnxnSocketNetty$1@146] - channel is connected: [id: 0xa8f6b724, /10.18.101.80:58871 => 10.18.101.80/10.18.101.80:2181]
2016-08-25 16:59:14,473 [myid:] - INFO  [New I/O worker #10:ClientCnxn$SendThread@1400] - Session establishment complete on server 10.18.101.80/10.18.101.80:2181, sessionid = 0x101a00305cc0009, negotiated timeout = 30000

WATCHER::

WatchedEvent state:SyncConnected type:None path:null",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2016-08-25 09:16:18.0,,,,,,,,,,"0|i32rxr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zkCli throwing nullpointerException instead it should provide help when invalid input is entered,ZOOKEEPER-2532,12999956,Bug,Patch Available,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,rakeshsingh,rakeshsingh,rakeshsingh,25/Aug/16 09:11,15/Jun/23 21:09,29/Jun/25 13:34,,3.5.1,3.5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,java client,,,,,1,patch,,"1. a) Connect to zookeeper using zkCli
 b) just input space and then hit enter

2. a) Connect to zookeeper using zkCli and hit enter it will come as connected 
 b) just input space and then hit enter

Console log is as below:-
[zk: localhost:2181(CONNECTING) 0] 2016-08-25 16:54:48,143 [myid:] - INFO  [main-SendThread(localhost:2181):ClientCnxnSocketNetty$ZKClientPipelineFactory@363] - SSL handler added for channel: null
2016-08-25 16:54:48,175 [myid:] - INFO  [main-SendThread(localhost:2181):ClientCnxn$SendThread@980] - Socket connection established, initiating session, client: /0:0:0:0:0:0:0:1:44592, server: localhost/0:0:0:0:0:0:0:1:2181
2016-08-25 16:54:48,178 [myid:] - INFO  [main-SendThread(localhost:2181):ClientCnxnSocketNetty$1@146] - channel is connected: [id: 0xd03f4226, /0:0:0:0:0:0:0:1:44592 => localhost/0:0:0:0:0:0:0:1:2181]
2016-08-25 16:54:48,288 [myid:] - INFO  [New I/O worker #1:ClientCnxn$SendThread@1400] - Session establishment complete on server localhost/0:0:0:0:0:0:0:1:2181, sessionid = 0x101a00305cc0005, negotiated timeout = 30000

WATCHER::

WatchedEvent state:SyncConnected type:None path:null
   
Exception in thread ""main"" java.lang.NullPointerException
	at org.apache.zookeeper.ZooKeeperMain$MyCommandOptions.getArgArray(ZooKeeperMain.java:171)
	at org.apache.zookeeper.ZooKeeperMain.processZKCmd(ZooKeeperMain.java:613)
	at org.apache.zookeeper.ZooKeeperMain.processCmd(ZooKeeperMain.java:577)
	at org.apache.zookeeper.ZooKeeperMain.executeLine(ZooKeeperMain.java:360)
	at org.apache.zookeeper.ZooKeeperMain.run(ZooKeeperMain.java:320)
	at org.apache.zookeeper.ZooKeeperMain.main(ZooKeeperMain.java:280)



----------------------------------------
After connection is established, input space and hit enter


[zk: localhost:2181(CONNECTING) 0] 2016-08-25 16:56:22,445 [myid:] - INFO  [main-SendThread(localhost:2181):ClientCnxnSocketNetty$ZKClientPipelineFactory@363] - SSL handler added for channel: null
2016-08-25 16:56:22,481 [myid:] - INFO  [main-SendThread(localhost:2181):ClientCnxn$SendThread@980] - Socket connection established, initiating session, client: /0:0:0:0:0:0:0:1:44594, server: localhost/0:0:0:0:0:0:0:1:2181
2016-08-25 16:56:22,484 [myid:] - INFO  [main-SendThread(localhost:2181):ClientCnxnSocketNetty$1@146] - channel is connected: [id: 0xe6d3a461, /0:0:0:0:0:0:0:1:44594 => localhost/0:0:0:0:0:0:0:1:2181]
2016-08-25 16:56:22,597 [myid:] - INFO  [New I/O worker #1:ClientCnxn$SendThread@1400] - Session establishment complete on server localhost/0:0:0:0:0:0:0:1:2181, sessionid = 0x101a00305cc0007, negotiated timeout = 30000

WATCHER::

WatchedEvent state:SyncConnected type:None path:null

[zk: localhost:2181(CONNECTED) 0]  
Exception in thread ""main"" java.lang.NullPointerException
	at org.apache.zookeeper.ZooKeeperMain$MyCommandOptions.getArgArray(ZooKeeperMain.java:171)
	at org.apache.zookeeper.ZooKeeperMain.processZKCmd(ZooKeeperMain.java:613)
	at org.apache.zookeeper.ZooKeeperMain.processCmd(ZooKeeperMain.java:577)
	at org.apache.zookeeper.ZooKeeperMain.executeLine(ZooKeeperMain.java:360)
	at org.apache.zookeeper.ZooKeeperMain.run(ZooKeeperMain.java:320)
	at org.apache.zookeeper.ZooKeeperMain.main(ZooKeeperMain.java:280)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Sep/16 15:38;rakeshsingh;ZOOKEEPER-2532.patch;https://issues.apache.org/jira/secure/attachment/12830349/ZOOKEEPER-2532.patch","12/Sep/16 13:50;rakeshsingh;ZOOKEEPER-2532.patch;https://issues.apache.org/jira/secure/attachment/12828044/ZOOKEEPER-2532.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Sep 26 16:01:36 UTC 2016,,,,,,,,,,"0|i32rx3:",9223372036854775807,submitting the patch again,,,,,,,,,,,,,,,,,,,,"14/Sep/16 17:24;rakeshsingh;Pls review. Not sure why CI is not running on this submit.;;;","14/Sep/16 18:37;fpj;Resubmitting to trigger QA.;;;","15/Sep/16 13:29;rakeshsingh;Still QA being not triggered..;;;","15/Sep/16 17:11;fpj;Yeah, it is weird, there are other jobs being executed, though:

https://builds.apache.org/view/All/job/PreCommit-ZOOKEEPER-Build/

I'm not sure what's going on. Does anyone else have a clue?;;;","17/Sep/16 17:43;hanm;It is weird indeed. Tried trigger QA bot a couple of times through cancel/submit not working either.
Not sure if it works to trigger the job directly in Jenkins.;;;","26/Sep/16 15:39;rakeshsingh;submitting the patch again;;;","26/Sep/16 16:01;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12830349/ZOOKEEPER-2532.patch
  against trunk revision ec20c5434cc8a334b3fd25e27d26dccf4793c8f3.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3453//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3453//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3453//console

This message is automatically generated.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Throwing Exception at zookeeper server side whenever client is closing the connection,ZOOKEEPER-2525,12999160,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,rakeshsingh,rakeshsingh,23/Aug/16 09:36,23/Aug/16 09:36,29/Jun/25 13:34,,3.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,server,,,,,1,,,"Throwing Exception at zookeeper server side whenever client is closing the connection

2016-08-17 20:38:09,030 [myid:] - WARN [New I/O worker #4:ClientCnxnSocketNetty$ZKClientHandler@432] - Exception caught: [id: 0xbb7a218d, /0:0:0:0:0:0:0:1:41679 :> localhost/0:0:0:0:0:0:0:1:2181] EXCEPTION: java.nio.channels.ClosedChannelException
java.nio.channels.ClosedChannelException
at org.jboss.netty.handler.ssl.SslHandler$6.run(SslHandler.java:1580)
at org.jboss.netty.channel.socket.ChannelRunnableWrapper.run(ChannelRunnableWrapper.java:40)
at org.jboss.netty.channel.socket.nio.AbstractNioWorker.executeInIoThread(AbstractNioWorker.java:71)
at org.jboss.netty.channel.socket.nio.NioWorker.executeInIoThread(NioWorker.java:36)
at org.jboss.netty.channel.socket.nio.AbstractNioWorker.executeInIoThread(AbstractNioWorker.java:57)
at org.jboss.netty.channel.socket.nio.NioWorker.executeInIoThread(NioWorker.java:36)
at org.jboss.netty.channel.socket.nio.AbstractNioChannelSink.execute(AbstractNioChannelSink.java:34)
at org.jboss.netty.handler.ssl.SslHandler.channelClosed(SslHandler.java:1566)
at org.jboss.netty.channel.Channels.fireChannelClosed(Channels.java:468)
at org.jboss.netty.channel.socket.nio.AbstractNioWorker.close(AbstractNioWorker.java:376)
at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:93)
at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:109)
at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:312)
at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:90)
at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
at java.lang.Thread.run(Thread.java:745)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2016-08-23 09:36:56.0,,,,,,,,,,"0|i32n0n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No proper logging when zookeeper failed to start in ssl mode.,ZOOKEEPER-2523,12999157,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,rakeshsingh,rakeshsingh,23/Aug/16 09:33,23/Aug/16 09:33,29/Jun/25 13:34,,3.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,server,,,,,0,,,"Scenario1 :-

Configure zookeeper for all but configure wrong ssl password
Start the zookeeper server, it starts fine. No logs that zookeeper is not started in ssl mode though it has not started in ssl mode but normal mode.
Try to connect with client, it will failed to connect in ssl port or normal port (as client is started in ssl mode)
Scenario 2:-

Configure the ssl port as 0 and start the server
The log level is in info saying not binding ..",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2016-08-23 09:33:35.0,,,,,,,,,,"0|i32mzz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Need to document that default ""secureClientPort"" for Client will be 2181 and not ""clientPort"" when starting in SSL enable mode",ZOOKEEPER-2522,12999151,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,rakeshsingh,rakeshsingh,23/Aug/16 09:12,23/Aug/16 09:12,29/Jun/25 13:34,,3.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,By default we configure the clientPort as 2181 in zookeeper and secureClientPort as 3181 in SSL enable zookeeper. But when start the corresponding client (which is in ssl enabled mode) fails to connect because it is trying to connect 2181 in secure mode.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2016-08-23 09:12:32.0,,,,,,,,,,"0|i32myn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
space should be truncated while reading password for keystore/truststore which is required to configure while SSL enabled,ZOOKEEPER-2521,12999115,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,rakeshsingh,rakeshsingh,23/Aug/16 06:49,03/Feb/22 08:50,29/Jun/25 13:34,,3.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,server,,,,,0,,,"space should be truncated while reading password for keystore/truststore which is required to configure while SSL enabled.
As of now if we configure the password with any heading/trailing space, the zookeeper server will fail to start.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-2566,,,,,,,,,,,,,,,,,,"20/Sep/16 13:07;eribeiro;ZOOKEEPER-2521.2.patch;https://issues.apache.org/jira/secure/attachment/12829387/ZOOKEEPER-2521.2.patch","09/Sep/16 23:29;eribeiro;ZOOKEEPER-2521.patch;https://issues.apache.org/jira/secure/attachment/12827859/ZOOKEEPER-2521.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Oct 26 10:09:03 UTC 2016,,,,,,,,,,"0|i32mqn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Sep/16 23:29;eribeiro;Patch attached, [~rakeshsingh].;;;","10/Sep/16 00:06;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12827859/ZOOKEEPER-2521.patch
  against trunk revision 1759917.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3407//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3407//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3407//console

This message is automatically generated.;;;","15/Sep/16 22:24;abrahamfine;Not sure if we should be doing this, since we are essentially restricting the keystores/truststores to those that have a password that does not end in a space (which as far as I can tell is possible). At least, I think this should be documented.;;;","19/Sep/16 14:57;eribeiro;Yep, makes sense. Thanks for pointing out!

Particularly, I think passwords with spaces at beginning/end can lead to the all sorts of headaches during maintenance and operation. Like the one that _probably_ motivated this issue. But I am fine about *_discarding_* this patch/issue. Would like to hear from the committers and users (/cc [~arshad.mohammad]).

+1 about documenting this restriction if we apply this patch.;;;","19/Sep/16 19:55;arshad.mohammad;as [~abrahamfine] already said, It is quite possible that a password may start with white space or end with white space.
Also, space truncating should be done in the cases where we are sure about the values like paths, true, false, integer values etc.
I think in this case truncating the space is not required at all.;;;","19/Sep/16 20:14;eribeiro;Fair enough. That's ok to you, [~rakeshsingh]?;;;","20/Sep/16 05:57;rakeshsingh;Leading and trailing spaces could be trouble for people who are loose with copy and paste and ll be little difficult to figure out why authentication is failing. Otherwise ok with documenting.;;;","20/Sep/16 07:26;fpj;I want to ask around to get a sense of whether trimming whitespaces is common in other systems. 

One comment about the patch is that the test is simply throwing an exception instead of failing explicitly. Say we have a regression and the verification of the password with additional spaces fails. The test failure will be due to an exception rather than an {{Assert.fail}}. I'd rather have us explicitly failing the test in the case we get an exception.;;;","20/Sep/16 07:31;fpj;Another thing: this issue does not affect the 3.4 branch? is it really only for the 3.5 and master?;;;","20/Sep/16 08:56;rakeshsingh;This is related to SSL configuration and we have SSL support from 3.5 onwards.;;;","20/Sep/16 12:52;eribeiro;+100 about asking around what is common in other systems.

I will refactor the tests cases to use {{Assert.fail}} in case of an exception. Thanks for review it!;;;","20/Sep/16 14:12;fpj;I thought some more about this, and I'm leaning more towards not making this change. If I understand correctly, not trimming doesn't cause any security issue (doesn't open up a new vulnerability). If the server isn't starting and we are not telling clearly to the user that it is because the password is invalid, then perhaps this is what we should fix, no?;;;","20/Sep/16 14:53;eribeiro;Yup, agree.

Currently the error message bubble up is:

{quote}
org.apache.zookeeper.common.X509Exception$KeyManagerException: java.io.IOException: Keystore was tampered with, or password was incorrect
{quote}

Isn't that enough?;;;","20/Sep/16 15:15;fpj;The message seems fine to me with a couple of caveats:

# I'm not sure why we are suggesting that the password has been tampered with. The password is simply not the right one, no?
# {{IOException}} is a bit odd as an exception type. login failure or invalid password seem to be more appropriate.

Perhaps [~rakeshkumarsingh] has some insight that we are missing. ;;;","20/Sep/16 15:25;eribeiro;Oh, exception and the message come from standard java API:

https://docs.oracle.com/javase/7/docs/api/java/security/KeyStore.html#load(java.io.InputStream,%20char[])

It cannot figured out if the keyStore is corrupted or the password is incorrect. Same for the odd {{IOException}}. I guess the rationale was because keyStore is a file so it cannot read the file for the reasons I alluded. Even so, odd.;;;","20/Sep/16 16:01;fpj;In this case, there isn't anything we can do. I think the message is clear enough.;;;","21/Sep/16 03:58;rakeshsingh;Agree with Edward Ribeiro;;;","21/Sep/16 08:35;fpj;for the record, what precisely are we agreeing upon, that we don't need to do anything here?;;;","26/Oct/16 10:09;rakeshsingh;Should we update the document regarding this..?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
C client calculates invalid time interval for pings et al,ZOOKEEPER-2516,12997994,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,Hadriel,Hadriel,17/Aug/16 18:43,24/Aug/16 22:27,29/Jun/25 13:34,,3.4.0,3.4.8,3.5.0,3.5.1,3.6.0,,,,,,,,,,,,,,,,,,,,,,,,,c client,,,,,0,,,"The C-client has a function called {{calculate_interval()}} in {{zookeeper.c}}, whose purpose is to determine the number of milliseconds difference between a start and end time. 

Unfortunately its logic is invalid, if the number of microseconds of the end time happens to be less than the number of microseconds of the start time - which it will be about half the time, since the end time could be in the next second interval. Such a case would yield a very big negative number, making the function return an invalid value.

Instead of re-creating the wheel, the {{calculate_interval()}} should use the {{timersub()}} function from {{time.h}} if it's available - if it's not #define'd, then #define it. (it's a macro, and the source code for it is readily available)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-1626,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Aug 24 22:27:00 UTC 2016,,,,,,,,,,"0|i32ftj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Aug/16 20:49;agrasso;Can you provide an example input for which {{calculate_interval()}} returns the wrong value?;;;","17/Aug/16 22:24;Hadriel;Nope, you're right - it's not in {{calculate_interval()}} - I thought it was because I was getting negative ping response numbers in our logs, a lot. But it looks like it's just a minor issue instead: it's in {{zookeeper_process()}} right before the debug log for {{""Got ping response in %d ms""}}. It calls {{gettimeofday(&now, 0);}} instead of {{get_system_time(&now);}}, which on our linux systems results in a different value (making the interval become negative because the 'now' is a smaller value than the last_ping time). So it results in printing negative values for ping response times in logs, but not a problem for actually generating pings.

Sorry for the false alarm.
;;;","24/Aug/16 22:25;phunt;Thanks for the report [~Hadriel] - if you believe there is something there to address please do submit a patch. Regards.;;;","24/Aug/16 22:27;phunt;Also see ZOOKEEPER-1626 - there seems to be quite a bit of discussion on that JIRA wrt this type of change.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
gethostname return error before Win32WSAStartup on windows.,ZOOKEEPER-2492,12993120,Bug,Patch Available,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,,spooky000,spooky000,spooky000,28/Jul/16 02:09,15/Jun/23 21:09,29/Jun/25 13:34,,3.5.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,"gethostname return error before Win32WSAStartup on windows.

in log_env function.
gethostname(buf, sizeof(buf));
LOG_INFO(LOGCALLBACK(zh), ""Client environment:host.name=%s"", buf);

buf will be uninitialized buffer.
",windows,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jul/16 10:23;spooky000;ZOOKEEPER-2492.patch;https://issues.apache.org/jira/secure/attachment/12820929/ZOOKEEPER-2492.patch","29/Jul/16 00:51;spooky000;ZOOKEEPER-2492.patch;https://issues.apache.org/jira/secure/attachment/12820845/ZOOKEEPER-2492.patch","28/Jul/16 02:10;spooky000;ZOOKEEPER-2492.patch;https://issues.apache.org/jira/secure/attachment/12820623/ZOOKEEPER-2492.patch",,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu May 10 20:42:28 UTC 2018,,,,,,,,,,"0|i31lr3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Jul/16 07:31;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12820623/ZOOKEEPER-2492.patch
  against trunk revision 1754188.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3294//console

This message is automatically generated.;;;","29/Jul/16 01:19;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12820845/ZOOKEEPER-2492.patch
  against trunk revision 1754188.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3302//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3302//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3302//console

This message is automatically generated.;;;","29/Jul/16 04:21;hanm;LGTM - note the indentation seems a little bit off:

{code}
		// Set log callback before calling into log_env
		zh->log_callback = log_callback;
		log_env(zh);
	
	    LOG_INFO(LOGCALLBACK(zh), ""Initiating client connection, host=%s sessionTimeout=%d watcher=%p""	1103	    LOG_INFO(LOGCALLBACK(zh), ""Initiating client connection, host=%s sessionTimeout=%d watcher=%p""
{code};;;","29/Jul/16 10:23;spooky000;fix the indentation.;;;","10/May/18 20:42;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12820929/ZOOKEEPER-2492.patch
  against trunk revision 2fa315b7d0ed65828479fcdcc9e76ca8552fba4a.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3667//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3667//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3667//console

This message is automatically generated.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
C client build error in vs 2015 ,ZOOKEEPER-2491,12993119,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Duplicate,andschwa,spooky000,spooky000,28/Jul/16 01:59,19/Dec/19 23:01,29/Jun/25 13:34,27/Jul/17 22:03,3.5.2,,,,,,,,,,,,,,,,,,,,,,,,3.5.4,,,,,c client,,,,,0,,,"Visual Studio 2015  supports snprintf.
#define snprintf _snprintf throw error.
",windows vs 2015,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-2841,,,,"29/Jul/16 10:32;spooky000;ZOOKEEPER-2491.patch;https://issues.apache.org/jira/secure/attachment/12820930/ZOOKEEPER-2491.patch","29/Jul/16 00:50;spooky000;ZOOKEEPER-2491.patch;https://issues.apache.org/jira/secure/attachment/12820844/ZOOKEEPER-2491.patch","28/Jul/16 02:00;spooky000;ZOOKEEPER-2491.patch;https://issues.apache.org/jira/secure/attachment/12820621/ZOOKEEPER-2491.patch",,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Jul 27 22:00:01 UTC 2017,,,,,,,,,,"0|i31lqv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Jul/16 07:32;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12820621/ZOOKEEPER-2491.patch
  against trunk revision 1754188.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3296//console

This message is automatically generated.;;;","28/Jul/16 16:18;hanm;[~spooky000] I've seen a couple of your patches can't be applied. It might because your patches were not generated properly. Please checkout https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute for reference on generating a patch (in particular if you are using git make sure use '--no-prefix' option).;;;","29/Jul/16 01:16;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12820844/ZOOKEEPER-2491.patch
  against trunk revision 1754188.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3303//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3303//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3303//console

This message is automatically generated.;;;","29/Jul/16 04:46;hanm;LGTM.
One suggestion, we might want to emulate snprintf() instead of using _snprintf() for MSVC prior to 15, because _snprintf() doesn't zero-terminate the buffer. Something like what libuv is doing:
https://github.com/libuv/libuv/blob/9e7568ea7b2b9375be6563c9fb5e795c9753287e/test/task.h#L187-L209;;;","29/Jul/16 10:32;spooky000;copied from libuv.;;;","29/Jul/16 10:41;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12820930/ZOOKEEPER-2491.patch
  against trunk revision 1754188.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3307//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3307//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3307//console

This message is automatically generated.;;;","01/Aug/16 05:20;spooky000;I think ""-1 core tests"" is not releated my patch.
;;;","16/Aug/16 18:14;cnauroth;bq. copied from libuv.

If this code is a straight-up copy of libuv code, then we are required to acknowledge that project and its license in our NOTICE.txt file.

https://github.com/libuv/libuv/blob/v1.x/LICENSE;;;","24/Aug/16 22:57;phunt;[~cnauroth] - lubuv is not an apache license. From what I read in the linked file

""The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.""

perhaps we can just have a separate source file (.h) that includes that comment section in it's entirety?

fwiw also says ""substantial portions of the Software"", does a single utility method meet that bar? (regardless I'm hoping we can use the approach I suggest earlier in this comment);;;","24/Aug/16 22:59;phunt;Cancelling while the IP issue is being discussed. Some change will be necessary to address that.;;;","25/Aug/16 00:03;hanm;I think we can possibly review and commit the version 2 patch (timestamp 28/Jul/16). This JIRA is essentially fix a regression caused by new version of MSVC and simulating snprintf is not a regression as the problem was there before... so we can probably use another JIRA to track that issue? On that topic, instead of making a complete copy of code from libUV we could write our own safer version of snprintf for lower version of MSVC.. would that be a better approach to get into the license issue?;;;","25/Aug/16 00:13;phunt;bq. better approach to get into the license issue

I think either is fine as long as we follow the license, if we go that way.;;;","28/Aug/16 20:18;cnauroth;bq. perhaps we can just have a separate source file (.h) that includes that comment section in it's entirety?

This might be a good idea anyway for code organization, but I don't think it removes the requirement to update the NOTICE file.

bq. fwiw also says ""substantial portions of the Software"", does a single utility method meet that bar?

In other projects, we have followed this rule even for a small utility method like this.

bq. On that topic, instead of making a complete copy of code from libUV we could write our own safer version of snprintf for lower version of MSVC.. would that be a better approach to get into the license issue?

This is my preferred option.  It's a small enough amount of code that I'd favor writing our own version of it.

I should qualify this by saying that I don't consider myself an expert on licensing requirements.  I'm speaking from the viewpoint of past experience on other projects, not authoritative interpretation of the rules.  If anyone would prefer to dig deeper into it, there is more information here:

http://www.apache.org/dev/licensing-howto.html

If there are still points of confusion, then general@incubator.apache.org is a good place to get advice on licensing issues.;;;","26/Jul/17 18:27;andschwa;[~hanm] I believe we can close this issue; I fixed it in my patch that's upstream now for 3.5+;;;","27/Jul/17 22:00;hanm;[~andschwa] 
There are two issues described in this JIRA actually - one is MSVC 15 finally implemented C99 complaint snprintf so we don't need define that in header, this is fixed by your patch. The other is how to deal with the fact that prior to MSVC 15 _snprintf does not add null terminator at end of buffer, and this discussion somehow got involved with legal / license issue. I think it's OK to close the JIRA, and let its scope only covers what the JIRA title describes. For the _snprintf MSVC complaint issue, if it turns out to be an issue we can create a separate JIRA to track it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Exhibitor and zookeeper, Cannot open channel to x at election address",ZOOKEEPER-2480,12990724,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Not A Problem,,keremyzc,keremyzc,19/Jul/16 11:11,19/Jul/16 15:45,29/Jun/25 13:34,19/Jul/16 15:45,3.4.8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,quorum,,,,,0,,,"We have 5 node ensemble setup in our tst environment and we are seeing the error below on two of the nodes. We have 3 nodes on the first data centre and 2 nodes on the second data centre and all of them are managed by exhbitor.

The problem is that the nodes from the same data centres cannot talk to the leader node on the same data centre but can talk to the other nodes without any issue. 

If I bounce the leader node to force another node to get elected then the other nodes that are on the same data centre start throwing the below exception.

I'm sure the problem is with the dns name resolution but I would like to understand how zookeeper resolves these dns names and what might be the issue here so I can go back to our unix team and get this fixed.


{code}
2016-07-19 10:48:54,711 [myid:4] - WARN  [WorkerSender[myid=4]:QuorumCnxManager@400] - Cannot open channel to 5 at election address server1.dns.name/192.168.1.3:4882
java.net.ConnectException: Connection refused
        at java.net.PlainSocketImpl.socketConnect(Native Method)
        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
        at java.net.Socket.connect(Socket.java:589)
        at org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(QuorumCnxManager.java:381)
        at org.apache.zookeeper.server.quorum.QuorumCnxManager.toSend(QuorumCnxManager.java:354)
        at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.process(Fast       LeaderElection.java:452)
        at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.run(FastLead       erElection.java:433)
        at java.lang.Thread.run(Thread.java:745)

{code}



{code:title=zoo.cfg|borderStyle=solid}
#Auto-generated by Exhibitor - Fri Jul 15 11:30:52 BST 2016
#Fri Jul 15 11:30:52 BST 2016
server.2=server2.dns.name\:4881\:4882\:observer
autopurge.purgeInterval=4
server.1=server1.dns.name\:4881\:4882
initLimit=50
syncLimit=2
clientPort=4880
tickTime=2001
server.5=server5.dns.name\:4881\:4882
dataDir=/opt/app/datafabric/data/zookeeper
server.4=server4.dns.name\:4881\:4882
dataLogDir=/path/to/datalogdir
server.3=server3.dns.name\:4881\:4882
~
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Jul 19 14:54:13 UTC 2016,,,,,,,,,,"0|i316yv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Jul/16 14:54;keremyzc;so I've took the code that opens a connection from the zookeeper source code and executed on our servers.

From server 2 to 3 which are on the same data centre, we don't see any issues.
{code:title=SocketMain.java}
Opening channel to server
All good: server3.dns.name/23.175.15.52:4882
{code}

but from server 2 to 1 which are on a different data centre, we get the bellow exception.

{code:title=SocketMain.java}
Cannot open channel to at election address server1.dns.name/192.168.4.4:4882=>java.net.ConnectException: Connection refused
{code}

I don't think this is really a zookeeper bug but I appreciate any pointers.

By the way, I don't get this issue if I use the same code to connect to one of our application servers on a different port.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ServerConfig#parse(String[])  ignores tickTime,ZOOKEEPER-2470,12987697,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,eribeiro,shralex,shralex,08/Jul/16 04:59,31/Mar/17 09:01,29/Jun/25 13:34,22/Dec/16 03:12,3.4.7,3.5.1,,,,,,,,,,,,,,,,,,,,,,,3.4.10,3.5.3,3.6.0,,,server,,,,,0,,,"Based on bug report from ykgarfield:

ServerConfig#parse(String[]) method has the following code:

    public void parse(String[] args) {
        ...
        if (args.length == 3) {
                tickTime = Integer.parseInt(args[2]);
        }
        if (args.length == 4) {
                maxClientCnxns = Integer.parseInt(args[3]);
        }
    }
    ```

So if args.length == 4 tickTime isn't parsed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-2656,,,,,,,"08/Jul/16 05:37;shralex;ZOOKEEPER-2470.patch;https://issues.apache.org/jira/secure/attachment/12816772/ZOOKEEPER-2470.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Dec 23 04:24:46 UTC 2016,,,,,,,,,,"0|i30osn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Jul/16 05:21;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12816769/ZOOKEEPER-2470.patch
  against trunk revision 1750739.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3264//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3264//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3264//console

This message is automatically generated.;;;","08/Jul/16 05:37;shralex;Failed test passes locally for me, and doesn't even invoke the affected function. Attaching again to see if this was something transient.;;;","08/Jul/16 05:59;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12816772/ZOOKEEPER-2470.patch
  against trunk revision 1750739.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3265//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3265//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3265//console

This message is automatically generated.;;;","09/Aug/16 08:41;arshad.mohammad;[~shralex], The fix looks good to me. Can you write a simple test case to test the scenario. My be you can include bellow test in the patch.
{code}
package org.apache.zookeeper.server;
import static org.junit.Assert.assertEquals;
import org.junit.Test;
public class ServerConfigTest {
    @Test
    public void testParseStringArray() {
        ServerConfig config = new ServerConfig();
        long tickTime = 2000;
        String[] args = new String[] { ""123"", ""dataDir"", Long.toString(tickTime), ""60"" };
        config.parse(args);
        assertEquals(tickTime, config.tickTime);
    }
}
{code};;;","10/Nov/16 20:29;eribeiro;Hey [~shralex], it would be really cool if we got this patch patch merged. :) Would you mind to open a Github PR with your patch and maybe close the https://github.com/apache/zookeeper/pull/74 (it was the original solution as you pointed out at ZOOKEEPER-2472, but the PR looks fishy...)

Cheers!;;;","10/Nov/16 20:58;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12816772/ZOOKEEPER-2470.patch
  against trunk revision 440e0923dd9e3be533a196fdd6ada960860ca7f6.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 19 new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3531//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3531//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3531//console

This message is automatically generated.;;;","14/Dec/16 19:31;githubbot;GitHub user eribeiro opened a pull request:

    https://github.com/apache/zookeeper/pull/125

    ZOOKEEPER-2470: ServerConfig#parse(String[]) ignores tickTime

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/eribeiro/zookeeper ZOOKEEPER-2470

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/125.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #125
    
----
commit 6d4545704b1f13788a5785e6ab190714c3b6d333
Author: Edward Ribeiro <edward.ribeiro@gmail.com>
Date:   2016-12-14T19:23:07Z

    ZOOKEEPER-2470: ServerConfig#parse(String[]) ignores tickTime

----
;;;","14/Dec/16 19:35;eribeiro;I had an email chat with @shralex and he said I could get this issue to push forward. Even though the issue is *quite trivial*, I've got in touch with him because it would be really important to have this bug fixed for 3.4, 3.5 and master branches asap.
;;;","15/Dec/16 01:19;githubbot;Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/125
  
    patch looks good, it would be great if there is also a test (though the fix is pretty obvious..).
;;;","15/Dec/16 01:27;githubbot;Github user eribeiro commented on the issue:

    https://github.com/apache/zookeeper/pull/125
  
    +1, the fix is quite trivial, but I am gonna add an unit test to guard against regressions, for example. 
;;;","15/Dec/16 18:17;githubbot;Github user eribeiro commented on the issue:

    https://github.com/apache/zookeeper/pull/125
  
    @hanm Added a couple of tests to (hopefully) guard against regressions. :+1: 
;;;","15/Dec/16 19:10;githubbot;Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/125
  
    +1. @rakeshadr please take a look and merge if this looks good to you.
;;;","15/Dec/16 19:17;githubbot;Github user eribeiro commented on the issue:

    https://github.com/apache/zookeeper/pull/125
  
    @hanm @rakeshadr Just a reminder: this patch will need to be applied to branch-3.5 and master too. The `zk-merge-pr.py` allows to do this, but a cherry-pick of this PR commit also does the work.
;;;","22/Dec/16 03:11;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/125
;;;","22/Dec/16 03:12;hanm;Issue resolved by pull request 125
[https://github.com/apache/zookeeper/pull/125];;;","22/Dec/16 03:17;hanm;Patch landed on master / branch-3.4 / branch-3.5. Thanks [~eribeiro] for driving this!;;;","22/Dec/16 03:28;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3206 (See [https://builds.apache.org/job/ZooKeeper-trunk/3206/])
ZOOKEEPER-2470: ServerConfig#parse(String[]) ignores tickTime (hanm: rev ef0a8ae686c100f1dc71d7526af962c635696466)
* (edit) src/java/main/org/apache/zookeeper/server/ServerConfig.java
* (add) src/java/test/org/apache/zookeeper/ServerConfigTest.java
;;;","23/Dec/16 04:24;rakeshr;{{ServerConfigTest#testValidArguments}} test case is failing, I've created ZOOKEEPER-2656 to fix the same.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException when redo Command is passed negative value,ZOOKEEPER-2467,12987367,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,rakeshsingh,joshi.shankar,joshi.shankar,07/Jul/16 02:51,31/Mar/17 09:01,29/Jun/25 13:34,16/Oct/16 13:18,3.4.8,3.5.1,3.5.2,,,,,,,,,,,,,,,,,,,,,,3.4.10,3.5.3,3.6.0,,,java client,,,,,0,,,"When negative value of argument is passed to redo command .

[zk: localhost:2181(CONNECTED) 0] redo -1
Exception in thread ""main"" java.lang.NullPointerException
        at java.util.StringTokenizer.<init>(Unknown Source)
        at java.util.StringTokenizer.<init>(Unknown Source)
        at org.apache.zookeeper.ZooKeeperMain$MyCommandOptions.parseCommand(ZooKeeperMain.java:227)
        at org.apache.zookeeper.ZooKeeperMain.processZKCmd(ZooKeeperMain.java:645)
        at org.apache.zookeeper.ZooKeeperMain.processCmd(ZooKeeperMain.java:588)
        at org.apache.zookeeper.ZooKeeperMain.executeLine(ZooKeeperMain.java:360)
        at org.apache.zookeeper.ZooKeeperMain.run(ZooKeeperMain.java:323)
        at org.apache.zookeeper.ZooKeeperMain.main(ZooKeeperMain.java:282)","Linux , windows",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-2587,,,,,,,,,,,,,,"01/Aug/16 16:05;joshi.shankar;ZOOKEEPER-2467-1.patch;https://issues.apache.org/jira/secure/attachment/12821348/ZOOKEEPER-2467-1.patch","16/Oct/16 13:21;rakeshr;ZOOKEEPER-2467-br3-4.patch;https://issues.apache.org/jira/secure/attachment/12833641/ZOOKEEPER-2467-br3-4.patch","01/Aug/16 16:32;joshi.shankar;ZOOKEEPER-2467-final.patch;https://issues.apache.org/jira/secure/attachment/12821354/ZOOKEEPER-2467-final.patch","16/Oct/16 13:06;rakeshr;ZOOKEEPER-2467.patch;https://issues.apache.org/jira/secure/attachment/12833640/ZOOKEEPER-2467.patch","14/Oct/16 06:40;rakeshsingh;ZOOKEEPER-2467.patch;https://issues.apache.org/jira/secure/attachment/12833310/ZOOKEEPER-2467.patch","06/Oct/16 11:11;rakeshsingh;ZOOKEEPER-2467.patch;https://issues.apache.org/jira/secure/attachment/12831939/ZOOKEEPER-2467.patch","01/Aug/16 10:22;joshi.shankar;ZOOKEEPER-2467.patch;https://issues.apache.org/jira/secure/attachment/12821299/ZOOKEEPER-2467.patch","10/Jul/16 09:49;joshi.shankar;ZOOKEEPER-2467.patch;https://issues.apache.org/jira/secure/attachment/12817025/ZOOKEEPER-2467.patch",,,8.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sun Oct 16 13:47:36 UTC 2016,,,,,,,,,,"0|i30ms7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Jul/16 02:54;joshi.shankar;will provide patch for this.;;;","11/Jul/16 04:49;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12817025/ZOOKEEPER-2467.patch
  against trunk revision 1750739.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3269//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3269//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3269//console

This message is automatically generated.;;;","01/Aug/16 10:29;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12821299/ZOOKEEPER-2467.patch
  against trunk revision 1754582.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3313//console

This message is automatically generated.;;;","01/Aug/16 10:35;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12821299/ZOOKEEPER-2467.patch
  against trunk revision 1754582.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3314//console

This message is automatically generated.;;;","01/Aug/16 10:37;fpj;Thanks [~joshi.shankar], the change makes sense. I'm wondering if in the test case would be better to try/catch any exception that comes across and fail the test rather than let the exception bubble up.;;;","01/Aug/16 10:40;joshi.shankar;will do it.. Thanks :);;;","01/Aug/16 16:09;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12821348/ZOOKEEPER-2467-1.patch
  against trunk revision 1754582.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3316//console

This message is automatically generated.;;;","01/Aug/16 16:58;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12821354/ZOOKEEPER-2467-final.patch
  against trunk revision 1754582.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3317//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3317//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3317//console

This message is automatically generated.;;;","01/Aug/16 19:55;fpj;Thanks for the updated patch, [~joshi.shankar]. I have a few comments, though:

# The format seems to be broken, the try/catch block doesn't have the right indentation.
# {{testCliCommandsNotEchoingUsage}} is not the best method to include this test. We aren't testing whether redo is echoing usage, but instead that it isn't throwing an NPE with negative values. One suggestion is to have a test case called {{testRedoNegativeCmdNumber}} in the same class and add the redo test there.
# The test cases in the {{ZooKeeperTest}} class throw {{Exception}} so it is actually better that we do it to follow the pattern here. We should still fail in the case it throws an exception, but instead of swallowing it, I suggest we rethrow. 
# We might consider adding an implementation of {{RedoCommand}} that extends {{CliCommand}} to be able to check the output, like in {{testSortedLs()}}.

Here is roughly how it should look like:

{noformat}
   @Test
    public void testRedoNegativeCmdNumber() throws Exception {
       try {
           String cmd = ""redo -1"";
           zkMain.executeLine(cmd);
           // check that the output matches
           ...
       } (Exception e) {
           fail(""Failed to excute redo command with negative number"");
           throw e;
       }
    }
{noformat}  ;;;","01/Aug/16 19:55;fpj;Canceling to sort out comments and suggestions.;;;","06/Oct/16 11:11;rakeshsingh;Pls review;;;","06/Oct/16 11:36;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12831939/ZOOKEEPER-2467.patch
  against trunk revision 8d0154bcc21e58b6166eb5e360f72ce37699e072.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3467//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3467//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3467//console

This message is automatically generated.;;;","06/Oct/16 11:38;rakeshr;Thanks [~rakeshsingh] for your interest and taking this ahead. Would you mind reading [Flavio's comments|https://issues.apache.org/jira/browse/ZOOKEEPER-2467?focusedCommentId=15402711&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15402711] and addressing the same.;;;","06/Oct/16 12:27;rakeshsingh;Thanks Joshi for this issue, as i had offline discussion with you i am taking this issue forward for complete.;;;","07/Oct/16 05:45;rakeshsingh;[~rakeshr] i have covered 3 suggestions mentioned by Flavio Junqueira but i feel 4th point is not valid. As redo command is not any specific (separate) command but calling other commands and hence it calls the corresponding exec() implementation and we may not be able to define any sepefic exec() implementation for redo command.;;;","07/Oct/16 05:48;rakeshsingh;Hi [~fpj], i have covered 3 suggestions mentioned by you but i think 4th point may not be valid. As redo command is not any specific (separate) command but calling other commands and hence it calls the corresponding exec() implementation and we may not be able to define any sepefic exec() implementation for redo command. Pls input your feedback. Thanks;;;","08/Oct/16 12:52;fpj;bq. //ZOOKEEPER-2587/ZOOKEEPER-2467 : Not handled negative scenario for redo command

Refer only to ZOOKEEPER-2467, please. Also, say instead something like ""Testing negative number for redo command"".

bq. catch(Exception e)

Don't catch an exception generically, only the one you're testing for and let the others bubble up if any.

Indentation and formating in general are broken, please review it.;;;","09/Oct/16 02:57;rakeshr;Like [~fpj] mentioned earlier, it is good to assert the output/error message. One idea is to redirect the err stream something similar to {{ZooKeeperTest#testCliCommandsNotEchoingUsage}}.

How about something like,
{code}

    // ZOOKEEPER-2467 : Testing negative number for redo command
    @Test
    public void testCliCommandHandleNegativeScenarioForRedoCmd()
            throws Exception {
        final ZooKeeper zk = createClient();
        ZooKeeperMain zkMain = new ZooKeeperMain(zk);
        String cmd1 = ""redo -1"";

        // setup redirect out/err streams to get System.in/err, use this
        // judiciously!
        final PrintStream systemErr = System.err; // get current err
        final ByteArrayOutputStream errContent = new ByteArrayOutputStream();
        System.setErr(new PrintStream(errContent));
        try {
            zkMain.executeLine(cmd1);
            Assert.assertEquals(""Command index out of range"",
                    errContent.toString().trim());
        } finally {
            // revert redirect of out/err streams - important step!
            System.setErr(systemErr);
        }
    }
{code};;;","14/Oct/16 06:40;rakeshsingh;Uploading patch. Pls review and submit if fine.;;;","14/Oct/16 06:40;rakeshsingh;Thanks Rakesh.;;;","14/Oct/16 07:10;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12833310/ZOOKEEPER-2467.patch
  against trunk revision f78061aafb19b102c37cb6d744ec6258d5f5b66e.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3490//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3490//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3490//console

This message is automatically generated.;;;","14/Oct/16 14:42;rakeshr;Thanks [~rakeshkumarsingh]. +1, latest patch looks good to me.

I will wait one more day to see any comments from others and commit this during weekend.;;;","16/Oct/16 13:09;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12833640/ZOOKEEPER-2467.patch
  against trunk revision 422058c222a8a31ec7cfd4113fbdc036181f751d.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 4 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3491//console

This message is automatically generated.;;;","16/Oct/16 13:18;rakeshr;Thanks [~fpj] for the reviews.
Thanks [~rakeshsingh], [~joshi.shankar] for the contribution.

Branch 3.4: Committed git revision a601b032915e85a5f693e7ef247700fefb950a12.
Branch 3.5: Committed git revision 3cd87f06911c6fd806364bf46ae074e7c6096452.
Trunk: Committed git revision 422058c222a8a31ec7cfd4113fbdc036181f751d.
;;;","16/Oct/16 13:21;rakeshr;Attached committed patches to the jira. Following are the modifictions.

* Test case is renamed to {{testRedoWithNegativeCmdNumber}}
* Used {{System.setOut()}} in branch3-4 patch;;;","16/Oct/16 13:47;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3121 (See [https://builds.apache.org/job/ZooKeeper-trunk/3121/])
ZOOKEEPER-2467: NullPointerException when redo Command is passed (rakeshr: rev 422058c222a8a31ec7cfd4113fbdc036181f751d)
* (edit) CHANGES.txt
* (edit) src/java/main/org/apache/zookeeper/ZooKeeperMain.java
* (edit) src/java/test/org/apache/zookeeper/ZooKeeperTest.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Cannot compile on ARM: ""Error: bad instruction `lock xaddl""",ZOOKEEPER-2453,12983155,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,mthies,mthies,25/Jun/16 16:49,29/Jun/16 02:51,29/Jun/25 13:34,,3.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,c client,,,,,1,,,"It seems that this is a bug equivalent to the issue ZOOKEEPER-1374.

make[5]: Entering directory '/home/pi/Downloads/mesos-0.28.2/build/3rdparty/zookeeper-3.4.5/src/c'
if /bin/bash ./libtool --tag=CC --mode=compile gcc -DHAVE_CONFIG_H -I. -I. -I.  -I./include -I./tests -I./generated  -DTHREADED -g -O2 -D_GNU_SOURCE -MT libzkmt_la-mt_adaptor.lo -MD -MP -MF "".deps/libzkmt_la-mt_adaptor.Tpo"" -c -o libzkmt_la-mt_adaptor.lo `test -f 'src/mt_adaptor.c' || echo './'`src/mt_adaptor.c; \
then mv -f "".deps/libzkmt_la-mt_adaptor.Tpo"" "".deps/libzkmt_la-mt_adaptor.Plo""; else rm -f "".deps/libzkmt_la-mt_adaptor.Tpo""; exit 1; fi
 gcc -DHAVE_CONFIG_H -I. -I. -I. -I./include -I./tests -I./generated -DTHREADED -g -O2 -D_GNU_SOURCE -MT libzkmt_la-mt_adaptor.lo -MD -MP -MF .deps/libzkmt_la-mt_adaptor.Tpo -c src/mt_adaptor.c  -fPIC -DPIC -o libzkmt_la-mt_adaptor.o
/tmp/ccs0G1lb.s: Assembler messages:
/tmp/ccs0G1lb.s:1589: Error: bad instruction `lock xaddl r1,[r0]'
Makefile:743: recipe for target 'libzkmt_la-mt_adaptor.lo' failed","Jessie, Raspberry",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-1374,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Jun 29 02:51:29 UTC 2016,,,,,,,,,,"0|i303fr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Jun/16 08:37;fpj;[~mthies] it does look like it is related to ZOOKEEPER-1374, are you interested in providing a patch for this?;;;","29/Jun/16 00:27;rgs;[~mthies]: hmm, what compilers do we have to support? This could be useful:

https://gcc.gnu.org/onlinedocs/gcc-4.1.2/gcc/Atomic-Builtins.html;;;","29/Jun/16 02:51;hanm;Seems to me this is the same issue as in 1374, just replacing the asm in fetch_and_add with __sync_fetch_and_add would work. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
miss event when the leader stop,ZOOKEEPER-2435,12973780,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Not A Bug,,BourneHan,BourneHan,29/May/16 07:32,01/Jun/16 01:25,29/Jun/25 13:34,30/May/16 14:56,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,build,,,,,0,,,"Hi All, 

In my projects, I use three ZooKeeper server as an ensemble:
zk1 as a follower on 192.168.25.221,
zk2 as a follower on 192.168.25.222,
zk3 as the leader on 192.168.25.223.
My two programs using ZooKeepers C client run on 192.168.25.221 and 192.168.25.222.

When watched the ZOO_CONNECTED_STATE, my program will use the zookeeper to obtain a lock do the following:
1. Create a ZOO_EPHEMERAL | ZOO_SEQUENCE node under '/Lock/'.
2. Call getChildren( ) on the '/Lock/' node.
3. If the pathname created in step 1 has the lowest sequence number suffix, the program has the lock and do something,then release the lock simply delete the node created in step 1.
4. The program calls exists() with the watch flag set on the lowest sequence number node.
5. if exists( ) returns false, go to step 2. Otherwise, wait for a notification(ZOO_DELETED_EVENT) for the pathname from the previous step before going to step 2.

When I stop a follower such as zk1/zk2, everything is ok, my programs on 192.168.25.221 and 192.168.25.222 do its work orderly under the lock's control.

When I stop the leader such as zk3(I have restarted zk1/zk2), my program on 192.168.25.221 got the lock and release it normally, and my program on 192.168.25.222 detected existence of the node 
created by the program on 192.168.25.221, but keep waiting and can't receive the ZOO_DELETED_EVENT notification.

Does anyone else see the same problem？

PS:
1. The attachment is the log of the zookeeper on 192.168.25.221 and 192.168.25.222 when I stop the leader on 192.168.25.223
2. Actually I have other more programs using ZooKeepers C client run on 192.168.25.221, 192.168.25.222 and 192.168.25.223.
3. The system time on 192.168.25.221 is slower 1 minute and 33 seconds than 192.168.25.222 and 192.168.25.223. so when I stop the leader, it's 2016-05-28 22:33:34 on 192.168.25.221 and 2016-05-28 22:35:07 on 192.168.25.222. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/May/16 07:35;BourneHan;zookeeper---221.out;https://issues.apache.org/jira/secure/attachment/12806877/zookeeper---221.out","29/May/16 07:35;BourneHan;zookeeper---222.out;https://issues.apache.org/jira/secure/attachment/12806876/zookeeper---222.out",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Jun 01 01:25:55 UTC 2016,,,,,,,,,,"0|i2ynvj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/May/16 15:05;fpj;Hi [~BourneHan], It isn't entirely clear to me what your program is doing. Do you execute steps 1-5 upon every connected event? Can you make sure that 192.168.25.222 is actually watching the correct znode? You can use the zkCli to check the status of znodes.;;;","30/May/16 01:47;BourneHan;Hi Flavio,

 Do you execute steps 1-5 upon every connected event? 
 Yes. I used  zookeeper_init  to set watcher,  then when got a ZOO_SESSION_EVENT-ZOO_CONNECTED_STATE notification, my program will execute steps 1-5.

Can you make sure that 192.168.25.222 is actually watching the correct znode?
Yes, from the log of my program I can see 192.168.25.222 is actually watching the lowest sequence number znode created by 192.168.25.221.
Actually, I use the steps 1-5 to obtain a distributed lock somewhere else, and everything is ok.

You can use the zkCli to check the status of znodes.
From the zkCli, I can see: the lowest sequence number znode created by 192.168.25.221 have disappeared and the znode created by 192.168.25.222 exists.
;;;","30/May/16 14:56;BourneHan;From http://www.ngdata.com/so-you-want-to-be-a-zookeeper/, I got:
Each ZooKeeper handle (= ZooKeeper object instance) has one thread for dispatching the events to all the watchers.
One case to watch out for is not to do something which in itself might again wait for a ZooKeeper event. 

so this issue is not a bug, I close it.;;;","30/May/16 17:02;fpj;[~BourneHan] Thanks for reporting back. I understand that if you block the dispatcher thread, then you won't receive other events, but just to make sure I understand precisely what you're doing, you're blocking the default watcher upon receiving a sync connected event after the ensemble recovers from the leader crash?;;;","31/May/16 02:50;BourneHan;Hi Flavio,

you're blocking the default watcher upon receiving a sync connected event after the ensemble recovers from the leader crash?
yes. now I use a different thread to do the work upon receiving a sync connected event, and everything is ok.

I wonder why all the zookeeper Clients will receive a sync connected event after the ensemble recovers from the leader crash and just some zookeeper Clients will receive a sync connected event after the follower crash?

thank you.




;;;","31/May/16 08:41;fpj;bq. I wonder why all the zookeeper Clients will receive a sync connected event after the ensemble recovers from the leader crash and just some zookeeper Clients will receive a sync connected event after the follower crash?

When the leader crashes, the remaining followers will go into leader election and will drop the existing connections to clients. The idea there is that clients have a chance to go look for another server that is either leading or following rather than being stuck with a server that is looking for a leader. Consequently, a leader crash affects all clients. It is different when a follower crashes, since it only affects the clients that were connected to it. ;;;","01/Jun/16 01:25;BourneHan;OK, I got it, thank you very much!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IbmX509 KeyManager and TrustManager algorithm not supported,ZOOKEEPER-2429,12970401,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,jsaurav,sauravmanit,sauravmanit,17/May/16 15:19,03/Feb/22 08:50,29/Jun/25 13:34,,3.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,security,server,,,,0,,,"When connecting from a zookeeper client running in IBM WebSphere Application Server version 8.5.5, with SSL configured in ZooKeeper, the below mentioned exception is observed.

org.jboss.netty.channel.ChannelPipelineException: Failed to initialize a pipeline.
      at org.jboss.netty.bootstrap.ClientBootstrap.connect(ClientBootstrap.java:208)
      at org.jboss.netty.bootstrap.ClientBootstrap.connect(ClientBootstrap.java:182)
      at org.apache.zookeeper.ClientCnxnSocketNetty.connect(ClientCnxnSocketNetty.java:112)
      at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1130)
      at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1158)
Caused by: org.apache.zookeeper.common.X509Exception$SSLContextException: Failed to create KeyManager
      at org.apache.zookeeper.common.X509Util.createSSLContext(X509Util.java:75)
      at org.apache.zookeeper.ClientCnxnSocketNetty$ZKClientPipelineFactory.initSSL(ClientCnxnSocketNetty.java:358)
      at org.apache.zookeeper.ClientCnxnSocketNetty$ZKClientPipelineFactory.getPipeline(ClientCnxnSocketNetty.java:348)
      at org.jboss.netty.bootstrap.ClientBootstrap.connect(ClientBootstrap.java:206)
      ... 4 more
Caused by: org.apache.zookeeper.common.X509Exception$KeyManagerException: java.security.NoSuchAlgorithmException: SunX509 KeyManagerFactory not available
      at org.apache.zookeeper.common.X509Util.createKeyManager(X509Util.java:129)
      at org.apache.zookeeper.common.X509Util.createSSLContext(X509Util.java:73)
      ... 7 more
Caused by: java.security.NoSuchAlgorithmException: SunX509 KeyManagerFactory not available
      at sun.security.jca.GetInstance.getInstance(GetInstance.java:172)
      at javax.net.ssl.KeyManagerFactory.getInstance(KeyManagerFactory.java:9)
      at org.apache.zookeeper.common.X509Util.createKeyManager(X509Util.java:118)


Reason : IBM websphere uses its own jre and supports only IbmX509 keymanager algorithm which is causing an exception when trying to get an key manager instance using SunX509 which is not supported.
Currently KeyManager algorithm name  (SunX509) is hardcoded in the class X509Util.java.

Possible fix: Instead of having algorithm name hardcoded to SunX509 we can fall back to the default algorithm supported by the underlying jre.

Instead of having this -
KeyManagerFactory kmf = KeyManagerFactory.getInstance(""SunX509"");
TrustManagerFactory tmf = TrustManagerFactory.getInstance(""SunX509"");

can we have ?
KeyManagerFactory kmf = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());

TrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sat Jun 04 02:45:12 UTC 2016,,,,,,,,,,"0|i2y31r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/May/16 03:25;sauravmanit;Started working on this.
Making the KeyManager and TrustManager algorithm as a configurable property , which user can pass as the vm arguments.
In addition to the already existing properties

-Dzookeeper.ssl.keyStore.location
-Dzookeeper.ssl.keyStore.password
-Dzookeeper.ssl.trustStore.location
-Dzookeeper.ssl.trustStore.password

2 new properties can also be defined in the server startup script.
-Dzookeeper.ssl.keyManager.algorithm
-Dzookeeper.ssl.trustManager.algorithm

If the properties are missing then it will fallback to the default algorithm supported by underlying jre.;;;","26/May/16 18:20;cnauroth;Additional user-facing configuration for this might not be necessary, and it might push more operational complexity onto administrators.  FWIW, there is a bit of code in Hadoop that takes the approach of runtime detection of the IBM JRE, and then automatically toggles between the two algorithms.  See the [SSLFactory|https://github.com/apache/hadoop/blob/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ssl/SSLFactory.java#L71] and [PlatformName|https://github.com/apache/hadoop/blob/trunk/hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/util/PlatformName.java#L46-L50] classes.

A challenge we've had in the Hadoop community is that not many (none?) of the committers have access to the IBM JRE for verification of proposed patches.  Saurabh, if you can help on any testing efforts related to IBM JRE support, we would greatly appreciate that.;;;","01/Jun/16 21:25;phunt;I believe Eugene took much of the original implementation from Hadoop, so this makes sense to me (what Chris said).;;;","04/Jun/16 02:45;sauravmanit;Yeah , if some solution already exists for the same problem then there is no meaning in reinventing the wheel.

I had gone through the classes as you mentioned in the above comment and will take the same approach to fix it.

Thanks for pointing it out.

I will keep you posted once i test it.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/etc/zookeeper isn't used for ZOOCFGDIR,ZOOKEEPER-2406,12954404,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,elrod@vindicia.com,elrod@vindicia.com,29/Mar/16 19:35,29/Mar/16 19:35,29/Jun/25 13:34,,3.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,"The comment in zkEnv.sh indicates that /etc/zookeeper should be an option for the ZOOCFGDIR but the code beneath it does not look to see if it exists:

{noformat}
# We use ZOOCFGDIR if defined,                                                                                                                                                                
# otherwise we use /etc/zookeeper                                                                                                                                                             
# or the conf directory that is                                                                                                                                                               
# a sibling of this script's directory   


ZOOBINDIR=""${ZOOBINDIR:-/usr/bin}""
ZOOKEEPER_PREFIX=""${ZOOBINDIR}/..""

if [ ""x$ZOOCFGDIR"" = ""x"" ]
then
  if [ -e ""${ZOOKEEPER_PREFIX}/conf"" ]; then
    ZOOCFGDIR=""$ZOOBINDIR/../conf""
  else
    ZOOCFGDIR=""$ZOOBINDIR/../etc/zookeeper""
  fi
fi                                                                                                                                                     
{noformat}

Should this be something like:

{noformat}
if [ ""x$ZOOCFGDIR"" = ""x"" ]
then
  if [ -e ""/etc/zookeeper"" ]; then
    ZOOCFGDIR=""/etc/zookeeper""
  elif [ -e ""${ZOOKEEPER_PREFIX}/conf"" ]; then
    ZOOCFGDIR=""$ZOOBINDIR/../conf""
  else
    ZOOCFGDIR=""$ZOOBINDIR/../etc/zookeeper""
  fi
fi            
{noformat}

I am not sure if ZOOBINDIR/../etc/zookeeper is supposed to be an option or a typo but in the default setup ZOOBINDIR/../conf exists so even if it were changed to /etc/zookeeper it would never try to use it.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2016-03-29 19:35:54.0,,,,,,,,,,"0|i2vd2n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zkServer.sh status does not work if JMX Port is enabled,ZOOKEEPER-2371,12941421,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Not A Bug,,sdh,sdh,23/Feb/16 15:13,26/Feb/16 01:42,29/Jun/25 13:34,26/Feb/16 01:42,3.4.8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,scripts,,,,,0,,,"If I try to execute 'bin/zkServer.sh status' while having
'-Dcom.sun.management.jmxremote.port=9011' in $JVMFLAGS,
zookeeper quits with ""Error: Exception thrown by the agent : java.rmi.server.ExportException: Port already in use: 9011"".

EIther some other means of getting status should be used, or some way of not setting JMX variables in this case should be added.

Thanks","Linux Centos 6
Java 1.7",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Feb 26 01:42:58 UTC 2016,,,,,,,,,,"0|i2t7xj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Feb/16 01:42;sdh;Sorry that was due to setting -Dcom.sun.management.jmxremote.port manually in zookeeper-env.sh;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JAAS configuration section error is confusing,ZOOKEEPER-2365,12938362,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,,gsbiju,dgfitch,dgfitch,10/Feb/16 22:24,14/Feb/22 17:27,29/Jun/25 13:34,,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,java client,,,,,2,,,"I have zookeeper running normally just fine in a 3-server cluster.

Then I try to configure zookeeper to use Kerberos, following docs in the Solr wiki here: https://cwiki.apache.org/confluence/display/solr/Kerberos+Authentication+Plugin

I can't even get to the fun Kerberos errors. When I start with {{JVMFLAGS=""-Djava.security.auth.login.config=/opt/zookeeper/jaas-server.conf""}}

and this jaas-server.conf:

{code}
Server {
com.sun.security.auth.module.Krb5LoginModule required
useKeyTab=true
keyTab=/keytabs/vdev-solr-01.keytab
storeKey=true
doNotPrompt=true
useTicketCache=false
debug=true
principal=""HTTP/<snip>"";
}
{code}

I get this in the log:

{code}
2016-02-10 16:16:51,327 [myid:1] - ERROR [main:ServerCnxnFactory@195] - No JAAS configuration section named 'Server' was foundin '/opt/zookeeper/jaas-server.conf'.
2016-02-10 16:16:51,328 [myid:1] - ERROR [main:QuorumPeerMain@89] - Unexpected exception, exiting abnormally
java.io.IOException: No JAAS configuration section named 'Server' was foundin '/opt/zookeeper/jaas-server.conf'.
        at org.apache.zookeeper.server.ServerCnxnFactory.configureSaslLogin(ServerCnxnFactory.java:196)
        at org.apache.zookeeper.server.NIOServerCnxnFactory.configure(NIOServerCnxnFactory.java:87)
        at org.apache.zookeeper.server.quorum.QuorumPeerMain.runFromConfig(QuorumPeerMain.java:130)
        at org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:111)
        at org.apache.zookeeper.server.quorum.QuorumPeerMain.main(QuorumPeerMain.java:78)
{code}

(Note the ""foundin"" typo.)

I get the exact same error if the jaas-server.conf file exists, or does not.

So later I found that the Solr wiki was wrong and lost the double quotes around the keytab value. It would be nice if Zookeeper spewed a more useful message when it can't parse the configuration.",Ubuntu x86_64 openjdk-7-jre,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-2345,,,,,,,,,"23/Mar/16 00:46;gsbiju;ZOOKEEPER-2365-1.patch;https://issues.apache.org/jira/secure/attachment/12794907/ZOOKEEPER-2365-1.patch","01/Mar/16 04:33;gsbiju;ZOOKEEPER-2365.patch;https://issues.apache.org/jira/secure/attachment/12790657/ZOOKEEPER-2365.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Feb 14 17:27:48 UTC 2022,,,,,,,,,,"0|i2sp3r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Mar/16 04:33;gsbiju;Changes to add more error messages which can help with debugging JAAS file related issues.;;;","01/Mar/16 04:50;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12790657/ZOOKEEPER-2365.patch
  against trunk revision 1729259.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3054//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3054//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3054//console

This message is automatically generated.;;;","02/Mar/16 20:26;gsbiju;[~dgfitch] could you please review the changes and provide your feedback?;;;","02/Mar/16 20:37;dgfitch;Biju Nair: I'm a user of the project, not a developer, so I can't really do a review.

* It appears to output separate messages which distinguish if the file exists or not. That's good.
* The change loses the portion of code which checked `loginContextName` - I'm not sure if that was important or not. Bad?
* At the end of the function, I'm not sure why it's throwing a new exception entirely instead of wrapping the existing `securityException` with the custom message maybe.

Again, not a developer on this project or at all familiar with the codebase... hope this helps though.;;;","22/Mar/16 09:53;fpj;The last point [~danfitch] raised ins the most important for me, why are you not propagating the message in the original {{SecurityException}}?

I suspect that the reason we throw an IOException is that we have tried to make it common practice to propagate up IOException when there is any issues that involves IO (e.g., accessing a file), but it doesn't mean we should be swallowing the original error message.

[~gsbiju] could you please produce a new patch to address the comments? ;;;","22/Mar/16 10:01;fpj;Also, please have a look at ZOOKEEPER-2345. It is pretty much the same issue, but has more information.;;;","22/Mar/16 10:07;fpj;[~danfitch] We appreciate you taking your time to review and help, thanks!;;;","22/Mar/16 20:10;gsbiju;bq. why are you not propagating the message in the original SecurityException?

As you mentioned, left the current code as it is which throws a [new IOException|https://github.com/apache/zookeeper/blob/acf732eafbe0e64a0259418cc82bb3448c2f626c/src/java/main/org/apache/zookeeper/server/ServerCnxnFactory.java#L228-L229].

[~fpj] Thanks for the comments. Will submit a new patch ;;;","22/Mar/16 23:24;gsbiju;In the patch, the message from the original exception is being added to the start of the {{errorMessage}} before passing to the IOException.
{code}
...
String errorMessage = securityException.getMessage();
...
{code}
Was something else missed [~fpj]? Thx;;;","23/Mar/16 00:46;gsbiju;Attaching a new patch to address the review comments. [~fpj] [~danfitch] Let me know if any further changes are required.;;;","22/Jun/17 10:43;Andrey.Khashchin;You need to add double-quotes to your keyTab line in JAAS config:

keyTab=""/keytabs/vdev-solr-01.keytab""

Missing or wrong double-quotes cause java.io.IOException: No JAAS configuration section named 'Server' was foundin;;;","22/Jun/17 10:47;Andrey.Khashchin;You also missing semicolon in the end of JAAS config. It also causes java.io.IOException: No JAAS configuration section named 'Server' was foundin;;;","26/Feb/19 21:30;srikanthv;Hi [~gsbiju], are you actively working on this issue? ;;;","14/Feb/22 17:27;Judge;Sorry to be the necromancer here, commenting a ~3 year old report, but obviously, noone ever picked up work on this and it seems to be the same issue with recent versions.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bin/zkEnv.cmd needs quotes around %JAVA%,ZOOKEEPER-2341,12920569,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Duplicate,,kmortensen@basistech.com,kmortensen@basistech.com,09/Dec/15 22:13,09/Dec/15 22:24,29/Jun/25 13:34,09/Dec/15 22:24,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,"I just downloaded ZooKeeper 3.4.7 (wouldn't let me put that version in the ""Affects Version/s"" field) and it doesn't work out of the box on Windows 7, which is brutal for folks who don't understand.

It complains that you don't have JAVA_HOME set right if you have it set to a path with spaces e.g. C:\program files\java\blah will fail.

All the following need quotes around and %VARIABLE% expansions to deal with potential spaces in the path:

* bin/zkCli.cmd
* bin/zkEnv.cmd
* bin/zkServer.cmd
 
Should be a trivial fix.

Definition of Done:
zkCli.cmd, zkEnv.cmd and zkServer.cm work out of the box on Windows 7.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-2281,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Dec 09 22:24:04 UTC 2015,,,,,,,,,,"0|i2ponj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Dec/15 22:24;cnauroth;Hi [~kmortensen@basistech.com].  Thank you for the bug report.  We fixed this for the upcoming 3.5.2-alpha release.  This was tracked in issue ZOOKEEPER-2281.  However, we did not backport the fix to the 3.4 maintenance line.  I just reopened that issue so that we can consider it for ZooKeeper 3.4.8.  I'm going to resolve this one as a duplicate.  I recommend adding yourself as a watcher on ZOOKEEPER-2281 if you'd like further updates.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
comment does not match code logic,ZOOKEEPER-2316,12911065,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,panchaks,haitao-tony,haitao-tony,06/Nov/15 14:34,13/Jul/17 03:07,29/Jun/25 13:34,27/Apr/17 21:21,3.5.1,,,,,,,,,,,,,,,,,,,,,,,,3.5.4,3.6.0,,,,server,,,,,0,,,"when i read the code below, the comment is put in an incorrect,place.
"" // in order to be committed, a proposal must be accepted by a quorum ""
should be place on top of :
   if (!p.hasAllQuorums()) {
           return false;                 
        }

---------------------------------------------------------------------------------------          
3.5.1 Leader code  
// getting a quorum from all necessary configurations
        if (!p.hasAllQuorums()) {
           return false;                 
        }
        
        // commit proposals in order
        if (zxid != lastCommitted+1) {    
           LOG.warn(""Commiting zxid 0x"" + Long.toHexString(zxid)
                    + "" from "" + followerAddr + "" not first!"");
            LOG.warn(""First is ""
                    + (lastCommitted+1));
        }     
        
        // in order to be committed, a proposal must be accepted by a quorum              
        
        outstandingProposals.remove(zxid);
        ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Apr 27 22:19:40 UTC 2017,,,,,,,,,,"0|i2o293:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Apr/17 20:05;panchaks;Hi, Can you please assign this bug to me. I am wading into asf now and this may be a good first bug. Thanks;;;","10/Apr/17 20:32;hanm;[~panchaks] You can just send a pull request if you'd like to work on this. See https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute.

cc [~phunt], [~fpj], [~rgs] please add umesh to contributor list.;;;","11/Apr/17 19:09;githubbot;GitHub user upangit opened a pull request:

    https://github.com/apache/zookeeper/pull/223

    ZOOKEEPER-2316: comment does not match code logic

    Fixing ZOOKEEPER-2316.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/upangit/zookeeper ZOOKEEPER-2316

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/223.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #223
    
----
commit 7705e24a42dcca45291cdf272107d248ee28f356
Author: Umesh Panchaksharaiah <upanchak@yahoo.com>
Date:   2017-04-11T19:05:35Z

    ZOOKEEPER-2316: comment does not match code logic

----
;;;","11/Apr/17 19:28;panchaks;Hi, any chance the above update from GitHub Bot can be updated to remove my email address?
I have fixed my git config now.  The email address should be: upangit@users.noreply.github.com.
thanks;;;","11/Apr/17 19:34;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/533//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/533//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/533//console

This message is automatically generated.;;;","24/Apr/17 20:39;githubbot;Github user hanm commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/223#discussion_r113050394
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/Leader.java ---
    @@ -724,6 +724,8 @@ synchronized public boolean tryToCommit(Proposal p, long zxid, SocketAddress fol
            // concurrent reconfigs are allowed, this can happen.
            if (outstandingProposals.containsKey(zxid - 1)) return false;
            
    +       // in order to be committed, a proposal must be accepted by a quorum
    +       //
    --- End diff --
    
    This blank line can be removed.
;;;","24/Apr/17 22:04;githubbot;Github user afine commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/223#discussion_r113068086
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/Leader.java ---
    @@ -724,6 +724,8 @@ synchronized public boolean tryToCommit(Proposal p, long zxid, SocketAddress fol
            // concurrent reconfigs are allowed, this can happen.
            if (outstandingProposals.containsKey(zxid - 1)) return false;
            
    +       // in order to be committed, a proposal must be accepted by a quorum
    +       //
    --- End diff --
    
    @hanm I think the blank line may be fine, it provides separation from the idea on the next line so it doesn't read as a single sentence. 
;;;","24/Apr/17 22:10;githubbot;Github user hanm commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/223#discussion_r113069120
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/Leader.java ---
    @@ -724,6 +724,8 @@ synchronized public boolean tryToCommit(Proposal p, long zxid, SocketAddress fol
            // concurrent reconfigs are allowed, this can happen.
            if (outstandingProposals.containsKey(zxid - 1)) return false;
            
    +       // in order to be committed, a proposal must be accepted by a quorum
    +       //
    --- End diff --
    
    I would just use a period to do the separation. 
;;;","24/Apr/17 22:50;panchaks;Thanks for the review. I will do the change to add the period.
What is the acceptable method to do code changes in pull
requests. Do, I just do another commit in my branch or do
I need to squash the two commits?;;;","24/Apr/17 22:56;hanm;Do another commit is fine. We'll squash commits during merge time. You can also squash the commits (I usually do that to make the commit message looks more relevant and better), but that is not strictly required, up to you.;;;","25/Apr/17 06:04;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/610//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/610//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/610//console

This message is automatically generated.;;;","25/Apr/17 12:04;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/620//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/620//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/620//console

This message is automatically generated.;;;","25/Apr/17 18:04;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/630//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/630//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/630//console

This message is automatically generated.;;;","27/Apr/17 21:20;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/223
;;;","27/Apr/17 21:21;hanm;Issue resolved by pull request 223
[https://github.com/apache/zookeeper/pull/223];;;","27/Apr/17 22:19;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3368 (See [https://builds.apache.org/job/ZooKeeper-trunk/3368/])
ZOOKEEPER-2316: comment does not match code logic (hanm: rev f7281f30467bfecb679f3e3d436337dfd16c810a)
* (edit) src/java/main/org/apache/zookeeper/server/quorum/Leader.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Incorrect log level 'warn'  is resulting in clutering of logs, Suggest to demote it to DEBUG from WARN",ZOOKEEPER-2293,12904777,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,rabikumar.kc,pmanvi,pmanvi,14/Oct/15 07:56,01/Feb/20 17:19,29/Jun/25 13:34,,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,server,,,,,0,pull-request-available,,"In https://svn.apache.org/repos/asf/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java
If readOnly flag is not being sent it gets logged as warning. Since we have enabled warning, the server gets filled up with messages like

Btw, readonly is optional and introduced later (http://wiki.apache.org/hadoop/ZooKeeper/GSoCReadOnlyMode),

{code}
015-08-14T11:03:11+00:00 Connection request from old client /192.168.24.16:14479; will be dropped if server is in r-o mode
...
2015-08-14T11:21:56+00:00 Connection request from old client 
2015-08-14T11:18:40+00:00 Connection request from old client /192.168.24.14:12135; will be dropped if server is in r-o mode
2015-08-14T11:19:40+00:00 Connection request from old client /192.168.24.14:12310; will be dropped if server is in r-o mode
{code}

we are just forced to send read-only flag which is optional to avoid wrong logging level chosen by zookeeper.
{code}
       boolean readOnly = false;
        try {
            readOnly = bia.readBool(""readOnly"");
            cnxn.isOldClient = false;
        } catch (IOException e) {
            // this is ok -- just a packet from an old client which
            // doesn't contain readOnly field
            LOG.warn(""Connection request from old client ""
                    + cnxn.getRemoteSocketAddress()
                    + ""; will be dropped if server is in r-o mode"");
        }
{code}

Suggest to demote the same to DEBUG as its not intended to warn in anyway.

",,"ravowlga123 commented on pull request #1220: ZOOKEEPER-2293 Log warning msg once by adding flag
URL: https://github.com/apache/zookeeper/pull/1220
 
 
   As per ticket [ZOOKEEPER-2293](https://issues.apache.org/jira/browse/ZOOKEEPER-2293) we need to log warning message just once. For this, I have introduced a boolean flag as false then after logging the message it will be set to true.
   
   Please do let me know if made changes make sense and solves the ticket description as mentioned above.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Jan/20 16:21;githubbot;600","eolivelli commented on pull request #1220: ZOOKEEPER-2293 Log warning msg once by adding flag
URL: https://github.com/apache/zookeeper/pull/1220#discussion_r366523635
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java
 ##########
 @@ -1348,15 +1348,19 @@ public void processConnectRequest(ServerCnxn cnxn, ByteBuffer incomingBuffer)
         ServerMetrics.getMetrics().CONNECTION_REQUEST_COUNT.add(1);
 
         boolean readOnly = false;
+        boolean logWarning = false;
 
 Review comment:
   With **lpgWarning** I would expect a **true** value as initial value.
   With current approach I would name the variable as **warningLogged**
   
   Btw did you mean to declare the variable as a instance field?
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Jan/20 19:16;githubbot;600","ravowlga123 commented on pull request #1220: ZOOKEEPER-2293 Log warning msg once by adding flag
URL: https://github.com/apache/zookeeper/pull/1220#discussion_r367002795
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java
 ##########
 @@ -1348,15 +1348,19 @@ public void processConnectRequest(ServerCnxn cnxn, ByteBuffer incomingBuffer)
         ServerMetrics.getMetrics().CONNECTION_REQUEST_COUNT.add(1);
 
         boolean readOnly = false;
+        boolean logWarning = false;
 
 Review comment:
   Hey @eolivelli Thanks for your review. I have changed the variable name as per your suggestion. I didn't mean to declare variable as an instance field but do you think to declare it as an instance field makes more sense?? Please do let me know
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Jan/20 17:18;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sat Feb 01 17:19:06 UTC 2020,,,,,,,,,,"0|i2mzn3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Oct/15 08:20;fpj;[~pmanvi], I agree that it isn't ideal that it keeps spilling out these warnings, but I do think that the message is really a warning. Perhaps a better option is to leave it a warn level, but add a flag to let it write the warn only once.;;;","07/Jan/20 16:03;rabikumar.kc;Is this still necessary?? If yes then I will use the suggestion made by [~fpj] by keeping log at warning level and introduce a boolean flag which if not set will log the warning message then once the warning is logged set the flag to true.  ;;;","01/Feb/20 17:19;belugabehr;I'm not sure a single global boolean flag is appropriate here.  I think it should WARN for each source IP address that this client exists on.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LogFormatter and SnapshotFormatter does not handle FileNotFoundException gracefully,ZOOKEEPER-2284,12901103,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,maoling,arshad.mohammad,arshad.mohammad,28/Sep/15 18:27,20/May/19 17:51,29/Jun/25 13:34,22/Feb/19 09:45,3.5.0,,,,,,,,,,,,,,,,,,,,,,,,3.5.5,3.6.0,,,,,,,,,0,pull-request-available,,"{{LogFormatter}} and {{SnapshotFormatter}} does not handle FileNotFoundException gracefully. If file no exist then these classes propagate the exception to console.
{code}
Exception in thread ""main"" java.io.FileNotFoundException: log.1 (The system cannot find the file specified)
        at java.io.FileInputStream.open(Native Method)
        at java.io.FileInputStream.<init>(FileInputStream.java:146)
        at java.io.FileInputStream.<init>(FileInputStream.java:101)
        at org.apache.zookeeper.server.LogFormatter.main(LogFormatter.java:49)
{code}

 File existence should be validated and appropriate message should be displayed on console if file does not exist",,"GitHub user maoling opened a pull request:

    https://github.com/apache/zookeeper/pull/630

    ZOOKEEPER-2284:LogFormatter and SnapshotFormatter does not handle FileNotFoundException gracefully

    - More details in [ZOOKEEPER-2284](https://issues.apache.org/jira/browse/ZOOKEEPER-2284) .Thanks [arshad.mohammad](https://issues.apache.org/jira/secure/ViewProfile.jspa?name=arshad.mohammad) for original work! 

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/maoling/zookeeper ZOOKEEPER-2284

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/630.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #630
    
----
commit e41ddc261e4ee2d97cc26f5eda664e9abe849807
Author: maoling <maoling199210191@...>
Date:   2018-09-16T12:36:50Z

    ZOOKEEPER-2284:LogFormatter and SnapshotFormatter does not handle FileNotFoundException gracefully

----
;16/Sep/18 13:02;githubbot;600","Github user eolivelli commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/630#discussion_r218679868
  
    --- Diff: src/java/test/org/apache/zookeeper/ZKUtilTest.java ---
    @@ -0,0 +1,88 @@
    +/**
    + * Licensed to the Apache Software Foundation (ASF) under one
    + * or more contributor license agreements.  See the NOTICE file
    + * distributed with this work for additional information
    + * regarding copyright ownership.  The ASF licenses this file
    + * to you under the Apache License, Version 2.0 (the
    + * ""License""); you may not use this file except in compliance
    + * with the License.  You may obtain a copy of the License at
    + *
    + *     http://www.apache.org/licenses/LICENSE-2.0
    + *
    + * Unless required by applicable law or agreed to in writing, software
    + * distributed under the License is distributed on an ""AS IS"" BASIS,
    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    + * See the License for the specific language governing permissions and
    + * limitations under the License.
    + */
    +package org.apache.zookeeper;
    +
    +import static org.junit.Assert.assertEquals;
    +import static org.junit.Assert.assertNotNull;
    +import static org.junit.Assert.assertNull;
    +import static org.junit.Assume.assumeTrue;
    +
    +import java.io.File;
    +import java.io.IOException;
    +import java.util.UUID;
    +
    +import org.junit.BeforeClass;
    +import org.junit.Test;
    +
    +public class ZKUtilTest {
    +    private static final File testData = new File(System.getProperty(""test.data.dir"", ""build/test/data""));
    +
    +    @BeforeClass
    +    public static void init() {
    +        testData.mkdirs();
    +    }
    +
    +    @Test
    +    public void testValidateFileInput() throws IOException {
    +        File file = File.createTempFile(""test"", "".junit"", testData);
    +        file.deleteOnExit();
    +        String absolutePath = file.getAbsolutePath();
    +        String error = ZKUtil.validateFileInput(absolutePath);
    +        assertNull(error);
    +    }
    +
    +    @Test
    +    public void testValidateFileInputNotExist() {
    +        String fileName = UUID.randomUUID().toString();
    +        File file = new File(testData, fileName);
    +        String absolutePath = file.getAbsolutePath();
    +        String error = ZKUtil.validateFileInput(absolutePath);
    +        assertNotNull(error);
    +        String expectedMessage = ""File '"" + absolutePath + ""' does not exist."";
    +        assertEquals(expectedMessage, error);
    +    }
    +
    +    @Test
    +    public void testValidateFileInputDirectory() throws Exception {
    +        File file = File.createTempFile(""test"", "".junit"", testData);
    +        file.deleteOnExit();
    +        // delete file, as we need directory not file
    +        file.delete();
    +        file.mkdir();
    +        String absolutePath = file.getAbsolutePath();
    +        String error = ZKUtil.validateFileInput(absolutePath);
    +        assertNotNull(error);
    +        String expectedMessage = ""'"" + absolutePath + ""' is a direcory. it must be a file."";
    +        assertEquals(expectedMessage, error);
    +    }
    +
    +    @Test
    +    public void testUnreadableFileInput() throws Exception {
    +        //skip this test on Windows, coverage on Linux
    +        assumeTrue(!org.apache.zookeeper.Shell.WINDOWS);
    +        File file = File.createTempFile(""test"", "".junit"", testData);
    +        file.setReadable(false, false);
    +        file.deleteOnExit();
    --- End diff --
    
    Why not an explicit delete ?
;19/Sep/18 06:21;githubbot;600","Github user maoling commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/630#discussion_r219150200
  
    --- Diff: src/java/test/org/apache/zookeeper/ZKUtilTest.java ---
    @@ -0,0 +1,88 @@
    +/**
    + * Licensed to the Apache Software Foundation (ASF) under one
    + * or more contributor license agreements.  See the NOTICE file
    + * distributed with this work for additional information
    + * regarding copyright ownership.  The ASF licenses this file
    + * to you under the Apache License, Version 2.0 (the
    + * ""License""); you may not use this file except in compliance
    + * with the License.  You may obtain a copy of the License at
    + *
    + *     http://www.apache.org/licenses/LICENSE-2.0
    + *
    + * Unless required by applicable law or agreed to in writing, software
    + * distributed under the License is distributed on an ""AS IS"" BASIS,
    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    + * See the License for the specific language governing permissions and
    + * limitations under the License.
    + */
    +package org.apache.zookeeper;
    +
    +import static org.junit.Assert.assertEquals;
    +import static org.junit.Assert.assertNotNull;
    +import static org.junit.Assert.assertNull;
    +import static org.junit.Assume.assumeTrue;
    +
    +import java.io.File;
    +import java.io.IOException;
    +import java.util.UUID;
    +
    +import org.junit.BeforeClass;
    +import org.junit.Test;
    +
    +public class ZKUtilTest {
    +    private static final File testData = new File(System.getProperty(""test.data.dir"", ""build/test/data""));
    +
    +    @BeforeClass
    +    public static void init() {
    +        testData.mkdirs();
    +    }
    +
    +    @Test
    +    public void testValidateFileInput() throws IOException {
    +        File file = File.createTempFile(""test"", "".junit"", testData);
    +        file.deleteOnExit();
    +        String absolutePath = file.getAbsolutePath();
    +        String error = ZKUtil.validateFileInput(absolutePath);
    +        assertNull(error);
    +    }
    +
    +    @Test
    +    public void testValidateFileInputNotExist() {
    +        String fileName = UUID.randomUUID().toString();
    +        File file = new File(testData, fileName);
    +        String absolutePath = file.getAbsolutePath();
    +        String error = ZKUtil.validateFileInput(absolutePath);
    +        assertNotNull(error);
    +        String expectedMessage = ""File '"" + absolutePath + ""' does not exist."";
    +        assertEquals(expectedMessage, error);
    +    }
    +
    +    @Test
    +    public void testValidateFileInputDirectory() throws Exception {
    +        File file = File.createTempFile(""test"", "".junit"", testData);
    +        file.deleteOnExit();
    +        // delete file, as we need directory not file
    +        file.delete();
    +        file.mkdir();
    +        String absolutePath = file.getAbsolutePath();
    +        String error = ZKUtil.validateFileInput(absolutePath);
    +        assertNotNull(error);
    +        String expectedMessage = ""'"" + absolutePath + ""' is a direcory. it must be a file."";
    +        assertEquals(expectedMessage, error);
    +    }
    +
    +    @Test
    +    public void testUnreadableFileInput() throws Exception {
    +        //skip this test on Windows, coverage on Linux
    +        assumeTrue(!org.apache.zookeeper.Shell.WINDOWS);
    +        File file = File.createTempFile(""test"", "".junit"", testData);
    +        file.setReadable(false, false);
    +        file.deleteOnExit();
    --- End diff --
    
    @eolivelli 
    file.deleteOnExit() will delete the file after JVM exit.it is equivalent to file.delete() at the end.
    so we should not worry about this.
;20/Sep/18 12:51;githubbot;600","Github user eolivelli commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/630#discussion_r219151901
  
    --- Diff: src/java/test/org/apache/zookeeper/ZKUtilTest.java ---
    @@ -0,0 +1,88 @@
    +/**
    + * Licensed to the Apache Software Foundation (ASF) under one
    + * or more contributor license agreements.  See the NOTICE file
    + * distributed with this work for additional information
    + * regarding copyright ownership.  The ASF licenses this file
    + * to you under the Apache License, Version 2.0 (the
    + * ""License""); you may not use this file except in compliance
    + * with the License.  You may obtain a copy of the License at
    + *
    + *     http://www.apache.org/licenses/LICENSE-2.0
    + *
    + * Unless required by applicable law or agreed to in writing, software
    + * distributed under the License is distributed on an ""AS IS"" BASIS,
    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    + * See the License for the specific language governing permissions and
    + * limitations under the License.
    + */
    +package org.apache.zookeeper;
    +
    +import static org.junit.Assert.assertEquals;
    +import static org.junit.Assert.assertNotNull;
    +import static org.junit.Assert.assertNull;
    +import static org.junit.Assume.assumeTrue;
    +
    +import java.io.File;
    +import java.io.IOException;
    +import java.util.UUID;
    +
    +import org.junit.BeforeClass;
    +import org.junit.Test;
    +
    +public class ZKUtilTest {
    +    private static final File testData = new File(System.getProperty(""test.data.dir"", ""build/test/data""));
    +
    +    @BeforeClass
    +    public static void init() {
    +        testData.mkdirs();
    +    }
    +
    +    @Test
    +    public void testValidateFileInput() throws IOException {
    +        File file = File.createTempFile(""test"", "".junit"", testData);
    +        file.deleteOnExit();
    +        String absolutePath = file.getAbsolutePath();
    +        String error = ZKUtil.validateFileInput(absolutePath);
    +        assertNull(error);
    +    }
    +
    +    @Test
    +    public void testValidateFileInputNotExist() {
    +        String fileName = UUID.randomUUID().toString();
    +        File file = new File(testData, fileName);
    +        String absolutePath = file.getAbsolutePath();
    +        String error = ZKUtil.validateFileInput(absolutePath);
    +        assertNotNull(error);
    +        String expectedMessage = ""File '"" + absolutePath + ""' does not exist."";
    +        assertEquals(expectedMessage, error);
    +    }
    +
    +    @Test
    +    public void testValidateFileInputDirectory() throws Exception {
    +        File file = File.createTempFile(""test"", "".junit"", testData);
    +        file.deleteOnExit();
    +        // delete file, as we need directory not file
    +        file.delete();
    +        file.mkdir();
    +        String absolutePath = file.getAbsolutePath();
    +        String error = ZKUtil.validateFileInput(absolutePath);
    +        assertNotNull(error);
    +        String expectedMessage = ""'"" + absolutePath + ""' is a direcory. it must be a file."";
    +        assertEquals(expectedMessage, error);
    +    }
    +
    +    @Test
    +    public void testUnreadableFileInput() throws Exception {
    +        //skip this test on Windows, coverage on Linux
    +        assumeTrue(!org.apache.zookeeper.Shell.WINDOWS);
    +        File file = File.createTempFile(""test"", "".junit"", testData);
    +        file.setReadable(false, false);
    +        file.deleteOnExit();
    --- End diff --
    
    Personally I don't like  File#deleteOnExit because it is not clear when it will take effect, and it is clearer to have an explicit file.delete when the file is not needed anymore.
    
    In this case, for this simple test, I have no strong objection.
    
    The best solution would be to use JUnit TemporaryFolder Rule.
    

;20/Sep/18 12:56;githubbot;600","Github user dineshappavoo commented on the issue:

    https://github.com/apache/zookeeper/pull/630
  
    LGTM. 👍 
;20/Sep/18 20:02;githubbot;600","Github user eolivelli commented on the issue:

    https://github.com/apache/zookeeper/pull/630
  
    retest this please
;21/Sep/18 07:32;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/630
  
    Can one of the admins verify this patch?
;21/Sep/18 07:32;githubbot;600","Github user eolivelli commented on the issue:

    https://github.com/apache/zookeeper/pull/630
  
    retest this please
;21/Sep/18 07:36;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/630
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2218/

;21/Sep/18 07:56;githubbot;600","Github user maoling commented on the issue:

    https://github.com/apache/zookeeper/pull/630
  
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2218/ may be not related.
;21/Sep/18 08:10;githubbot;600","Github user maoling closed the pull request at:

    https://github.com/apache/zookeeper/pull/630
;21/Sep/18 08:10;githubbot;600","GitHub user maoling reopened a pull request:

    https://github.com/apache/zookeeper/pull/630

    ZOOKEEPER-2284:LogFormatter and SnapshotFormatter does not handle FileNotFoundException gracefully

    - More details in [ZOOKEEPER-2284](https://issues.apache.org/jira/browse/ZOOKEEPER-2284) .Thanks [arshad.mohammad](https://issues.apache.org/jira/secure/ViewProfile.jspa?name=arshad.mohammad) for original work! 

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/maoling/zookeeper ZOOKEEPER-2284

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/630.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #630
    
----
commit e41ddc261e4ee2d97cc26f5eda664e9abe849807
Author: maoling <maoling199210191@...>
Date:   2018-09-16T12:36:50Z

    ZOOKEEPER-2284:LogFormatter and SnapshotFormatter does not handle FileNotFoundException gracefully

----
;21/Sep/18 08:10;githubbot;600","Github user eolivelli commented on the issue:

    https://github.com/apache/zookeeper/pull/630
  
    Why did you close this one?
;21/Sep/18 08:10;githubbot;600","Github user eolivelli commented on the issue:

    https://github.com/apache/zookeeper/pull/630
  
    I am working with CI integration. Sorry for the confusion
;21/Sep/18 08:12;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/630
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2220/

;21/Sep/18 08:52;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/630
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2379/

;07/Oct/18 14:00;githubbot;600","maoling commented on issue #630: ZOOKEEPER-2284:LogFormatter and SnapshotFormatter does not handle FileNotFoundException gracefully
URL: https://github.com/apache/zookeeper/pull/630#issuecomment-452528548
 
 
   ping @lvfangmin @anmolnar 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Jan/19 01:35;githubbot;600","anmolnar commented on issue #630: ZOOKEEPER-2284:LogFormatter and SnapshotFormatter does not handle FileNotFoundException gracefully
URL: https://github.com/apache/zookeeper/pull/630#issuecomment-452650187
 
 
   Thanks for the heads-up @maoling .
   Please move the test file to `zookeeper-server/src/test/java/org/apache/zookeeper/common/`.
   We reverted the change to separate the common project, because the refactor wasn't possible.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Jan/19 10:36;githubbot;600","maoling commented on issue #630: ZOOKEEPER-2284:LogFormatter and SnapshotFormatter does not handle FileNotFoundException gracefully
URL: https://github.com/apache/zookeeper/pull/630#issuecomment-453884818
 
 
   ping @anmolnar 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Jan/19 01:35;githubbot;600","asfgit commented on pull request #630: ZOOKEEPER-2284:LogFormatter and SnapshotFormatter does not handle FileNotFoundException gracefully
URL: https://github.com/apache/zookeeper/pull/630
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Jan/19 18:43;githubbot;600","anmolnar commented on issue #630: ZOOKEEPER-2284:LogFormatter and SnapshotFormatter does not handle FileNotFoundException gracefully
URL: https://github.com/apache/zookeeper/pull/630#issuecomment-454115244
 
 
   Committed to master branch, but cannot be cherry-picked to 3.5
   Please create separate PR. Thanks @maoling !
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Jan/19 18:44;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,12600,,,0,12600,,,,,,,,,,,,,,,,,,,,,,"28/Sep/15 18:43;arshad.mohammad;ZOOKEEPER-2284-01.patch;https://issues.apache.org/jira/secure/attachment/12764068/ZOOKEEPER-2284-01.patch","29/Sep/15 13:02;arshad.mohammad;ZOOKEEPER-2284-02.patch;https://issues.apache.org/jira/secure/attachment/12764237/ZOOKEEPER-2284-02.patch","29/Sep/15 18:35;arshad.mohammad;ZOOKEEPER-2284-03.patch;https://issues.apache.org/jira/secure/attachment/12764293/ZOOKEEPER-2284-03.patch","29/Sep/15 19:30;arshad.mohammad;ZOOKEEPER-2284-04.patch;https://issues.apache.org/jira/secure/attachment/12764303/ZOOKEEPER-2284-04.patch",,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Jan 14 23:51:08 UTC 2019,,,,,,,,,,"0|i2mdcv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Sep/15 19:33;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12764068/ZOOKEEPER-2284-01.patch
  against trunk revision 1705482.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2894//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2894//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2894//console

This message is automatically generated.;;;","28/Sep/15 22:24;eribeiro;Thanks for the patch [~arshad.mohammad]! As you are doing a clean File treatment, would you mind to detect if the File is readable ({{file.canRead()}}) and/or is a file ({{file.isFile()}}), too? I think that particularly the read permissions can be quite handy in a production environment.;;;","29/Sep/15 13:02;arshad.mohammad;Thanks [~eribeiro] for your review comments. Handled the comments and submitting new patch ZOOKEEPER-2284-02.patch;;;","29/Sep/15 13:28;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12764237/ZOOKEEPER-2284-02.patch
  against trunk revision 1705794.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2900//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2900//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2900//console

This message is automatically generated.;;;","29/Sep/15 15:44;eribeiro;Wow, very nice addition of a helper class + unit test. Some minor observations:

1. We can use temporary files in {{testValidateInpuFile}}:

{code}
testValidateFileInput() throws IOException {
     File file = new File(testData, ""file.txt"");
     file.createNewFile();
{code}

can be rewritten as:
{code}
testValidateFileInput() throws IOException {
        File file = File.createTempFile(""file-"", ""txt"", testData);
        file.deleteOnExit();
{code}

2. We can add a unit test to check the readability of the file as:

{code}
testUnreadableFileInput() throws IOException {
        File file = File.createTempFile(""file-"", ""txt"", testData);
        file.setReadable(false, false);
        file.deleteOnExit();
{code}

*IMHO*, I would write {{validateFileInput}} method by throwing exceptions and returning void if everything is okay. Therefore, in the unit tests I would structure them as:

{code}
   try {
      validateFileInput(...)
      fail(""Should throw IOException"")
   }
   catch (IOException ie) {
         assertEquals(""File file-202.txt doesn't exists"", ie.getMessage());
   }
{code}

*But I am definitely okay with the current way they are, so up to you. :)*;;;","29/Sep/15 18:35;arshad.mohammad;Thanks once again [~eribeiro] for your suggestions. Submitting new patch ZOOKEEPER-2284-03.patch
# Handled as per your suggestions
# On windows, I find no way to create a file which even does not have read permission. 
So if I write test case as you suggested it would fail on windows. I think it is better to test this scenario manually.;;;","29/Sep/15 18:46;cnauroth;{quote}
On windows, I find no way to create a file which even does not have read permission.
So if I write test case as you suggested it would fail on windows.
{quote}

Yes, this is a persistent problem for tests in the Hadoop codebase too.  We have tests that try to simulate broken data directories by restricting permissions, but Windows has logic that the owner/creator of the file/directory always has access, regardless of the NTFS ACL entries present on the file.  I've searched many times for a solution, but I've never found a good way to get these kinds of tests to work correctly on Windows.

In Hadoop, we still write these kinds of tests, but we use JUnit's {{assumeTrue}} to skip the tests on Windows.  That way, at least we get the coverage on Linux.  It looks like we could do something similar here with {{assumeTrue(!org.apache.zookeeper.Shell.WINDOWS);}}.;;;","29/Sep/15 18:53;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12764293/ZOOKEEPER-2284-03.patch
  against trunk revision 1705794.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2903//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2903//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2903//console

This message is automatically generated.;;;","29/Sep/15 19:30;arshad.mohammad;Nice JUnit feature, Thanks [~cnauroth] for introducing me to this feature. 
Added new test suggested by [~eribeiro].;;;","29/Sep/15 19:56;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12764303/ZOOKEEPER-2284-04.patch
  against trunk revision 1705794.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2904//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2904//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2904//console

This message is automatically generated.;;;","21/Jun/16 22:50;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12764303/ZOOKEEPER-2284-04.patch
  against trunk revision 1748630.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3213//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3213//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3213//console

This message is automatically generated.;;;","11/Dec/16 14:58;fpj;[~cnauroth] how do you see the latest patch? shall we get this in? ;;;","11/Dec/16 15:24;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12764303/ZOOKEEPER-2284-04.patch
  against trunk revision 73d6bf5353586e49740f77291d1fd98b07f916cc.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3544//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3544//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3544//console

This message is automatically generated.;;;","30/Aug/18 08:38;maoling;[~arshad.mohammad]

Are you still working on this? If not,Can I pick it up?;;;","31/Aug/18 12:38;arshad.mohammad;Please take it. Assigned to you.;;;","31/Aug/18 12:41;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12764303/ZOOKEEPER-2284-04.patch
  against trunk revision 4d7b9e8f34775261fed517d232094f0247a4d3cf.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3702//console

This message is automatically generated.;;;","16/Sep/18 13:15;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2190//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2190//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2190//console

This message is automatically generated.;;;","21/Sep/18 08:49;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2219//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2219//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2219//console

This message is automatically generated.;;;","09/Jan/19 01:41;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12764303/ZOOKEEPER-2284-04.patch
  against trunk revision 46fc819622bf08cbd0781dea279aff734b492902.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3722//console

This message is automatically generated.;;;","14/Jan/19 21:28;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #350 (See [https://builds.apache.org/job/ZooKeeper-trunk/350/])
ZOOKEEPER-2284: LogFormatter and SnapshotFormatter does not handle (andor: rev d149b134049dc8527ba81a9546836942fcabc5b6)
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/LogFormatter.java
* (add) zookeeper-server/src/test/java/org/apache/zookeeper/ZKUtilTest.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/SnapshotFormatter.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/ZKUtil.java
;;;","14/Jan/19 23:51;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #187 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/187/])
ZOOKEEPER-2284: LogFormatter and SnapshotFormatter does not handle (andor: rev d149b134049dc8527ba81a9546836942fcabc5b6)
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/LogFormatter.java
* (add) zookeeper-server/src/test/java/org/apache/zookeeper/ZKUtilTest.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/SnapshotFormatter.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/ZKUtil.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multi operation failure  does not include path in KeeperException,ZOOKEEPER-2276,12864138,Bug,Patch Available,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,arshad.mohammad,neha.bathra,neha.bathra,15/Sep/15 05:54,15/Jun/23 21:09,29/Jun/25 13:34,,3.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,java client,,,,,1,,,"With normal create operation, the path of the failed node is displayed in KeeperException but this is not the case when create operation is through multi api

",Suse 11 SP3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-2496,ZOOKEEPER-3290,,,,,,,,,,,,,"15/Sep/15 07:05;arshad.mohammad;ZOOKEEPER-2276-01.patch;https://issues.apache.org/jira/secure/attachment/12755927/ZOOKEEPER-2276-01.patch","24/Sep/16 07:45;arshad.mohammad;ZOOKEEPER-2276-02.patch;https://issues.apache.org/jira/secure/attachment/12830178/ZOOKEEPER-2276-02.patch","27/Sep/16 12:10;kazuakibanzai;ZOOKEEPER-2276-03.patch;https://issues.apache.org/jira/secure/attachment/12830497/ZOOKEEPER-2276-03.patch","27/Sep/16 14:33;kazuakibanzai;ZOOKEEPER-2276-04.patch;https://issues.apache.org/jira/secure/attachment/12830506/ZOOKEEPER-2276-04.patch",,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Sep 27 15:21:28 UTC 2016,,,,,,,,,,"0|i2k6jr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Sep/15 06:24;arshad.mohammad;Thanks [~neha.bathra] for reporting this issue. I will soon provide a fix;;;","15/Sep/15 08:34;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12755927/ZOOKEEPER-2276-01.patch
  against trunk revision 1702378.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2876//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2876//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2876//console

This message is automatically generated.;;;","15/Sep/15 08:41;arshad.mohammad;no test failure, one test case is skipped which is not related to this patch;;;","05/Oct/15 05:01;arshad.mohammad;Hi [~neha.bathra], Can you please verify the fix and comment.;;;","21/Jun/16 22:35;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12755927/ZOOKEEPER-2276-01.patch
  against trunk revision 1748630.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    -1 javac.  The patch appears to cause tar ant target to fail.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3211//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3211//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3211//console

This message is automatically generated.;;;","24/Sep/16 07:45;arshad.mohammad;Async multi API does process the result and also it does not throw exception. Result is processed in the callback handler
I think the logic to find path of failed transaction should be written in the callback handler. So no changed with respect to async multip API.
submitting the res-based patch 
;;;","24/Sep/16 08:01;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12830178/ZOOKEEPER-2276-02.patch
  against trunk revision ec20c5434cc8a334b3fd25e27d26dccf4793c8f3.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3451//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3451//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3451//console

This message is automatically generated.;;;","27/Sep/16 12:25;kazuakibanzai;Thanks [~arshad.mohammad] for uploading the path.
I added a test for async multi and its fix to your patch.
Unfortunately, I couldn't fix this bug in the same place(the fix is in ClientCnxn.processEvent).
For future changes, I added a comment to ZooKeeper.multiInternal.;;;","27/Sep/16 12:31;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12830497/ZOOKEEPER-2276-03.patch
  against trunk revision ec20c5434cc8a334b3fd25e27d26dccf4793c8f3.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3455//console

This message is automatically generated.;;;","27/Sep/16 15:21;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12830506/ZOOKEEPER-2276-04.patch
  against trunk revision ec20c5434cc8a334b3fd25e27d26dccf4793c8f3.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3457//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3457//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3457//console

This message is automatically generated.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zookeeper build fails while doing configuration for cppunit test,ZOOKEEPER-2265,12861592,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Invalid,arshad.mohammad,arshad.mohammad,arshad.mohammad,03/Sep/15 14:32,07/Jan/21 11:09,29/Jun/25 13:34,07/Jan/21 11:09,3.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,build,,,,,0,,,"running  {color:red}ant tar{color}  gives following error
{code}
D:\gitHome\zookeeper-trunk\build.xml:1432: Execute failed: java.io.IOException: Cannot run program ""autoreconf"" (in directory ""D:\gitHome\zookeeper-trunk\src\c""):
{code}
This error is purely environment error and it can be fixed by installing appropriate software package. 
But does it really required to configure the cpp unit as  {color:red}ant tar{color} target flow does not run cppunit test cases. Then why to configure?
There should be no cppunit configurations for  {color:red}ant tar{color} target flow.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Sep/15 14:33;arshad.mohammad;ZOOKEEPER-2265-01.patch;https://issues.apache.org/jira/secure/attachment/12754001/ZOOKEEPER-2265-01.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Jan 07 11:09:42 UTC 2021,,,,,,,,,,"0|i2jr13:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Sep/15 15:28;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12754001/ZOOKEEPER-2265-01.patch
  against trunk revision 1698058.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2854//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2854//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2854//console

This message is automatically generated.;;;","06/Sep/15 17:58;rgs;Thanks for the patch [~arshad.mohammad], though -1.

Without create-cppunit-configure, package builders (i.e.: RPMs) wouldn't be able to build the C library from the tarball (i.e.: no configure script).

If anything, we could make ant tar fail with a more obvious message if you are missing autoreconf. But I think tarballs should always allow you to build the C library without having to install autoreconf... (that step definitely belongs to the building the tarball step).;;;","06/Sep/15 18:46;arshad.mohammad;Thanks [~rgs] for looking into this.
Can we add some flag like {{skip.cppunit.test}} to skip cppunit configuration and cppunit test execution.;;;","06/Sep/15 18:46;arshad.mohammad;Thanks [~rgs] for looking into this.
Can we add some flag like {{skip.cppunit.test}} to skip cppunit configuration and cppunit test execution.;;;","03/Mar/16 17:32;phunt;Cancelling the patch based on recent comments (need to use different approach);;;","07/Jan/21 11:09;arshad.mohammad;After moving to maven this issue is no more valid;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Zookeeper is not using specified JMX port in zkEnv.sh,ZOOKEEPER-2256,12857526,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,arshad.mohammad,arshad.mohammad,arshad.mohammad,20/Aug/15 12:57,21/Jul/16 20:18,29/Jun/25 13:34,06/Sep/15 17:51,3.5.0,,,,,,,,,,,,,,,,,,,,,,,,3.4.7,3.5.2,3.6.0,,,scripts,,,,,0,,,"Zookeeper is not using specified JMX port.
I put bellow entry in zkEnv.sh
{{export JMXPORT=12345}}
But zookeeper still uses random port for jmx.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Aug/15 13:14;arshad.mohammad;ZOOKEEPER-2256-01.patch;https://issues.apache.org/jira/secure/attachment/12751488/ZOOKEEPER-2256-01.patch","27/Aug/15 06:02;arshad.mohammad;ZOOKEEPER-2256-br_3_4-01.patch;https://issues.apache.org/jira/secure/attachment/12752666/ZOOKEEPER-2256-br_3_4-01.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sun Sep 06 17:50:55 UTC 2015,,,,,,,,,,"0|i2j5nj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Aug/15 13:00;arshad.mohammad;In {{zkServer.sh}}, JMXPORT environment variable is used before executing {{zkEnv.sh}} script.
Users are more likely to have their custom configuration in {{zoo.cfg}} or {{zkEnv.sh}}
It think it would be more appropriate if we can move JMX related configuration bellow {{zkEnv.sh}} execution point in {{zkServer.sh}};;;","20/Aug/15 14:00;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12751488/ZOOKEEPER-2256-01.patch
  against trunk revision 1694317.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2832//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2832//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2832//console

This message is automatically generated.;;;","26/Aug/15 13:38;arshad.mohammad;This patch has only shell script change, test case failures are not related to this patch;;;","27/Aug/15 04:17;rakeshr;Thanks [~arshad.mohammad] for the contribution. 

Committed to trunk: http://svn.apache.org/viewvc?view=revision&revision=1698058

Will commit to 3.5 branch once we reach an agreement on this [comment|https://issues.apache.org/jira/browse/ZOOKEEPER-2245?focusedCommentId=14708445&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14708445];;;","27/Aug/15 04:21;rakeshr;[~arshad.mohammad], it seems patch is not applying in 3.4 branch, could you provide another patch for this.;;;","27/Aug/15 04:37;hudson;SUCCESS: Integrated in ZooKeeper-trunk #2794 (See [https://builds.apache.org/job/ZooKeeper-trunk/2794/])
ZOOKEEPER-2256: Zookeeper is not using specified JMX port in zkEnv.sh(Arshad Mohammad via rakeshr) (rakeshr: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1698058)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/bin/zkServer.sh
;;;","27/Aug/15 06:04;arshad.mohammad;Uploaded ZOOKEEPER-2256-br_3_4-01.patch for branch-3.4;;;","27/Aug/15 06:10;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12752666/ZOOKEEPER-2256-br_3_4-01.patch
  against trunk revision 1698058.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2845//console

This message is automatically generated.;;;","06/Sep/15 17:50;rakeshr;Committed to br3.4 : http://svn.apache.org/viewvc?view=revision&revision=1701503
Committed to br3.5 : http://svn.apache.org/viewvc?view=revision&revision=1701504;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Random test case failure in org.apache.zookeeper.test.StaticHostProviderTest,ZOOKEEPER-2252,12857314,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,timothyjward,arshad.mohammad,arshad.mohammad,19/Aug/15 20:09,21/Jul/16 20:18,29/Jun/25 13:34,10/Dec/15 20:44,3.5.0,,,,,,,,,,,,,,,,,,,,,,,,3.5.2,3.6.0,,,,,,,,,0,,,"Test {{org.apache.zookeeper.test.StaticHostProviderTest.testTwoInvalidHostAddresses()}} fails randomly.

Refer bellow test ci buils:
https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2827/testReport/

https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2828/testReport/

https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2830/testReport/




",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-2337,,,,,,,,,,,,"20/Aug/15 01:30;suda;ZK-2252-try-repro-on-jenkins.patch;https://issues.apache.org/jira/secure/attachment/12751390/ZK-2252-try-repro-on-jenkins.patch","20/Aug/15 11:01;arshad.mohammad;ZOOKEEPER-2252-02.patch;https://issues.apache.org/jira/secure/attachment/12751466/ZOOKEEPER-2252-02.patch","24/Aug/15 03:33;suda;ZOOKEEPER-2252-03.patch;https://issues.apache.org/jira/secure/attachment/12751962/ZOOKEEPER-2252-03.patch","25/Aug/15 00:57;suda;ZOOKEEPER-2252-04.patch;https://issues.apache.org/jira/secure/attachment/12752117/ZOOKEEPER-2252-04.patch","10/Sep/15 13:39;arshad.mohammad;ZOOKEEPER-2252-05.patch;https://issues.apache.org/jira/secure/attachment/12755131/ZOOKEEPER-2252-05.patch","08/Dec/15 22:22;cnauroth;ZOOKEEPER-2252-06.patch;https://issues.apache.org/jira/secure/attachment/12776422/ZOOKEEPER-2252-06.patch",,,,,6.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,Reviewed,,,,Thu Dec 10 21:30:52 UTC 2015,,,,,,,,,,"0|i2j4cn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Aug/15 20:17;arshad.mohammad;Pre-commit check is  failing for most of the patches because of above test failures. ;;;","19/Aug/15 20:21;arshad.mohammad;{noformat}
2015-08-12 13:38:12,190 [myid:] - INFO  [main:ZKTestCase$1@55] - STARTING testTwoInvalidHostAddresses
2015-08-12 13:38:12,190 [myid:] - INFO  [main:JUnit4ZKTestRunner$LoggedInvokeMethod@77] - RUNNING TEST METHOD testTwoInvalidHostAddresses
2015-08-12 13:38:12,828 [myid:] - WARN  [main:StaticHostProvider@120] - No IP address found for server: a:2181
java.net.UnknownHostException: a
	at java.net.InetAddress.getAllByName0(InetAddress.java:1215)
	at java.net.InetAddress.getAllByName(InetAddress.java:1127)
	at java.net.InetAddress.getAllByName(InetAddress.java:1063)
	at org.apache.zookeeper.client.StaticHostProvider.resolveAndShuffle(StaticHostProvider.java:114)
	at org.apache.zookeeper.client.StaticHostProvider.<init>(StaticHostProvider.java:76)
	at org.apache.zookeeper.test.StaticHostProviderTest.testTwoInvalidHostAddresses(StaticHostProviderTest.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:79)
	at org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:19)
	at org.junit.rules.TestWatchman$1.evaluate(TestWatchman.java:53)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:38)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:532)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:1179)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:1030)
2015-08-12 13:38:12,832 [myid:] - INFO  [main:JUnit4ZKTestRunner$LoggedInvokeMethod@82] - Memory used 108654
2015-08-12 13:38:12,832 [myid:] - INFO  [main:JUnit4ZKTestRunner$LoggedInvokeMethod@87] - Number of threads 4
2015-08-12 13:38:12,832 [myid:] - INFO  [main:JUnit4ZKTestRunner$LoggedInvokeMethod@102] - FINISHED TEST METHOD testTwoInvalidHostAddresses
2015-08-12 13:38:12,832 [myid:] - INFO  [main:ZKTestCase$1@70] - FAILED testTwoInvalidHostAddresses
java.lang.AssertionError: Expected exception: java.lang.IllegalArgumentException
	at org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:32)
	at org.junit.rules.TestWatchman$1.evaluate(TestWatchman.java:53)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:38)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:532)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:1179)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:1030)
2015-08-12 13:38:12,833 [myid:] - INFO  [main:ZKTestCase$1@60] - FINISHED testTwoInvalidHostAddresses
{noformat};;;","19/Aug/15 20:28;arshad.mohammad;As per the logic test case expectation can be met only if java.net.UnknownHostException is thrown for both invalid host ""a"" and invalid host ""b"". But above test run log shows that UnknownHostException is thrown only for ""a"". 

If we can figure out how invalid host ""b"" some time becomes valid, may be we can find root cause.;;;","19/Aug/15 20:32;arshad.mohammad;any thoughts?;;;","20/Aug/15 01:30;suda;The test passes locally ({{ant -Dtestcase=StaticHostProviderTest -Dtest.method=testTwoInvalidHostAddresses -Dtest.output=yes test-core-java}}).

I attach this patch to the JIRA ticket so as to print some debug information on Jenkins.


Maybe misconfiguration of Jenkins host?


;;;","20/Aug/15 05:13;suda;I attached the patch 4 hours ago, but Jenkins seems not triggered.
How can we trigger Jenkins?
;;;","20/Aug/15 05:24;arshad.mohammad;It is not triggered because you have uploaded patch file but not submitted patch. I submitted your patch;;;","20/Aug/15 09:50;suda;Thank you, but still not triggered?
;;;","20/Aug/15 11:03;arshad.mohammad;Not sure why not triggering. let me give one more try, renamed and submitted the patch again;;;","23/Aug/15 16:26;rgs;Hmm, no idea why things got stuck. I've trigger rebuild of trunk and trunk-openjdk7:

https://builds.apache.org/view/All/job/ZooKeeper-trunk/2791/
https://builds.apache.org/view/All/job/ZooKeeper-trunk-openjdk7/907/

Lets see if that gets things going.

[~suda]: could you re-upload & re-submit the patch when (if?) the above builds finish? Thanks!;;;","24/Aug/15 03:33;suda;Sure.
Trial: ZOOKEEPER-2252-03.patch
;;;","24/Aug/15 16:43;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12751962/ZOOKEEPER-2252-03.patch
  against trunk revision 1697227.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2836//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2836//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2836//console

This message is automatically generated.;;;","25/Aug/15 00:57;suda;latest failure is due to OOME.
I'm trying again. (-04.patch)
;;;","25/Aug/15 03:21;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12752117/ZOOKEEPER-2252-04.patch
  against trunk revision 1697227.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2839//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2839//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2839//console

This message is automatically generated.;;;","10/Sep/15 13:34;arshad.mohammad;In one of our test environment this test case is failing because host name ""a"" is resolved to a valid host, as per the test case assumption host ""a"" is an invalid host. I think this is the reason everywhere for this test case failure.
So if we change the host name in test case from ""a"" to some thing which would really be an invalid host then the test will not fail.;;;","10/Sep/15 13:39;arshad.mohammad;changed the host name to invalidHost1 which i am quite sure will not resolved as an valid host.;;;","10/Sep/15 14:06;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12755131/ZOOKEEPER-2252-05.patch
  against trunk revision 1702163.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2870//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2870//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2870//console

This message is automatically generated.;;;","10/Sep/15 16:10;rgs;Thanks [~arshad.mohammad]. Are you still debugging this in CI or is that patch ready to be merged?;;;","10/Sep/15 17:20;arshad.mohammad;This patch is ready for merge.;;;","08/Dec/15 16:04;timothyjward;My reported issue ZOOKEEPER-2337 has been closed as a duplicate of this issue, but I notice that the proposed fix here uses another hostname that may or may not be valid on the machine doing the build.

I created a GitHub pull request here: https://github.com/apache/zookeeper/pull/48 which uses syntactically invalid hostnames. These can never be valid on any system, but still have the correct behaviour for the tests. This is much safer than trying to guess a syntactically valid hostname that isn't resolvable on any machine in the universe.;;;","08/Dec/15 16:08;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12755131/ZOOKEEPER-2252-05.patch
  against trunk revision 1718511.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    -1 release audit.  The applied patch generated 2 release audit warnings (more than the trunk's current 0 warnings).

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2984//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2984//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2984//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2984//console

This message is automatically generated.;;;","08/Dec/15 22:22;cnauroth;I'm attaching the version of the patch from the pull request as ZOOKEEPER-2252-06.patch, so that we can get a pre-commit run.  +1 for this version of the patch, pending successful pre-commit run.;;;","09/Dec/15 05:23;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12776422/ZOOKEEPER-2252-06.patch
  against trunk revision 1718758.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    -1 release audit.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2991//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2991//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2991//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2991//console

This message is automatically generated.;;;","09/Dec/15 23:10;cnauroth;The test failure was in TestReconfig.cc.  This has been a flaky test, so the failure is unrelated to this patch.

I don't understand why this reported a release audit warning.  The patch doesn't create any new files that need a license header applied.  The audit output file is missing from Jenkins.  This can't be related to the patch.  I ran the release audit check locally, and it was fine.

I will wait until Thursday, 12/10, to commit this, in case [~rgs] or any other committers would like to review.;;;","10/Dec/15 01:06;rgs;[~cnauroth]: lgtm, please apply. Thanks!;;;","10/Dec/15 20:44;cnauroth;I have committed this to trunk and branch-3.5  [~timothyjward], thank you for the patch.;;;","10/Dec/15 21:30;hudson;FAILURE: Integrated in ZooKeeper-trunk #2827 (See [https://builds.apache.org/job/ZooKeeper-trunk/2827/])
ZOOKEEPER-2252: Random test case failure in org.apache.zookeeper.test.StaticHostProviderTest (Timothy Ward via cnauroth) (cnauroth: [http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1719204])
* trunk/CHANGES.txt
* trunk/src/java/test/org/apache/zookeeper/test/StaticHostProviderTest.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Snapshot serialization race condition can lead to partial transaction and inoperable data node,ZOOKEEPER-2234,12845542,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,adammilnesmith,adammilnesmith,16/Jul/15 10:30,16/Jul/15 10:30,29/Jun/25 13:34,,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,"This issue can be reproduced by creating a node with a new ACL during data tree serialization after ACL cache serialization. When restoring from this snapshot without the tranlog, the state will include a node with no corresponding ACL in the ACL cache. This node will then be impossible to operate on as it will cause a MarshallingError.

If the tranlog is played over a server in this erroneous state, it does appear to correct itself. This bug means that to reliably restore from a snapshot, you must also have backed up the subsequent tranlog covering at least the transactions that were partially written to the snapshot.

Issue first described here:
http://mail-archives.apache.org/mod_mbox/zookeeper-user/201507.mbox/%3C0LzCmv-1YtgSd0Dqb-014Qqf@mrelayeu.kundenserver.de%3E

It also appears possible for a snapshot to be missing a session yet contain an ephemeral node created by that session; fortunately ZooKeeperServer.loadData() should clean these ephemerals up.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2015-07-16 10:30:17.0,,,,,,,,,,"0|i2hbw7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fsync.warningthresholdms in zoo.cfg not working,ZOOKEEPER-2195,12831639,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,gsbiju,davencool,davencool,21/May/15 07:27,21/Jul/16 20:18,29/Jun/25 13:34,20/Mar/16 18:37,3.4.6,3.5.0,,,,,,,,,,,,,,,,,,,,,,,3.4.9,3.5.2,3.6.0,,,quorum,,,,,0,,,"Config fsync.warningthresholdms in zoo.cfg does not work.
I find QuorumPeerConfig.parseProperties give fsync.warningthresholdms a prefix like ""zookeeper.fsync.warningthresholdms"".  But in class FileTxnLog where fsync.warningthresholdms is used, code is :Long.getLong(""fsync.warningthresholdms"", 1000),without prefix ""zookeeper."", therefore can not get fsync.warningthresholdms's value.

I wonder the speed of fsync, need this config to see whether the speed is good enough.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-2394,,,,,,,"16/Mar/16 22:24;gsbiju;ZOOKEEPER-2195-1.patch;https://issues.apache.org/jira/secure/attachment/12793870/ZOOKEEPER-2195-1.patch","17/Mar/16 10:48;gsbiju;ZOOKEEPER-2195-2.patch;https://issues.apache.org/jira/secure/attachment/12793958/ZOOKEEPER-2195-2.patch","05/Mar/16 12:09;gsbiju;ZOOKEEPER-2195-DOC.patch;https://issues.apache.org/jira/secure/attachment/12791621/ZOOKEEPER-2195-DOC.patch","04/Mar/16 20:54;dryabkov;ZOOKEEPER-2195.patch;https://issues.apache.org/jira/secure/attachment/12791531/ZOOKEEPER-2195.patch",,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,Reviewed,,,,Sun Mar 20 19:52:27 UTC 2016,,,,,,,,,,"0|i2f16f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Mar/16 23:44;gsbiju;[~davencool] Came across this issue while looking at options to set sync warning time. According to the current documentation and the QuorumPeerConfig.parseProperties """"fsync.warningthresholdms"" property can be set only as a Java system property. Let me know if you see that the code also allows users to set this property in zoo.cfg. Thanks. ;;;","04/Mar/16 20:54;dryabkov;Here is the patch for this bug. It is really just a syntax error fix in the property name.;;;","04/Mar/16 21:19;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12791531/ZOOKEEPER-2195.patch
  against trunk revision 1733525.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3085//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3085//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3085//console

This message is automatically generated.;;;","04/Mar/16 22:27;dryabkov;The Findbugs concern seems to be valid, but it is completely unrelated to my change. It is in ZooKeeper client code in org.apache.zookeeper.client.ZooKeeperSaslClient.

As for the tests, as I said when submitting the patch this is just a syntax error fix, and it is in the code which is difficult to have tests for (static filed with its value set by a static initializer) without some refactoring. Refactoring this code for the sake of testing the fix for the property name string value is possible for sure, but I felt like that'd be overkill.;;;","05/Mar/16 04:13;gsbiju;[~dryabkov] the current code is in line with what is specified in the documentation for [fsync.warningthresholdms|https://zookeeper.apache.org/doc/r3.4.2/zookeeperAdmin.html#sc_advancedConfiguration]. But your change sets the property name to the standard followed for system properties i.e. prefix with {{zookeeper}}. The change looks good to me, but will need a change to the documentation so that they are in sync.;;;","05/Mar/16 12:09;gsbiju;Attaching the patch to modify the documentation for this change.;;;","05/Mar/16 12:36;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12791621/ZOOKEEPER-2195-DOC.patch
  against trunk revision 1733679.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3089//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3089//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3089//console

This message is automatically generated.;;;","06/Mar/16 00:39;dryabkov;[~gsbiju] Looks fine to me, as long as you don't modify the config file property name (which I think you don't). The config file property names get ""zookeeper."" appended in front of them in http://svn.apache.org/repos/asf/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java, parseProperties() method and then set as system properties. Now with these two patches everything looks in sync to me.;;;","10/Mar/16 00:27;phunt;Good find. I like this change, but I do have one concern - it's not backward compatible. I realize the current state is broken for people who try to put it into the config, however it currently works as documented for folks that just set the java system property.

My request is: can you update the patch so that it works for either case (seems like it should be simple). Basically in the java code, if the z.f.w is set use that, if not fall back to f.w system property in case that is set.

Does that make sense?;;;","10/Mar/16 00:29;dryabkov;Sure. I'll look into this.;;;","16/Mar/16 22:26;gsbiju;[~dryabkov] [~phunt] attached a new patch. Please review.;;;","17/Mar/16 06:18;phunt;[~gsbiju] that looks right, but can we keep the static final by using a local variable instead of changing from final?;;;","17/Mar/16 10:52;gsbiju;[~phunt] updated patch attached.;;;","20/Mar/16 05:13;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12793958/ZOOKEEPER-2195-2.patch
  against trunk revision 1735836.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3113//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3113//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3113//console

This message is automatically generated.;;;","20/Mar/16 18:37;phunt;Committed to 3.4.9/3.5.2/trunk. Thanks all!;;;","20/Mar/16 19:52;hudson;SUCCESS: Integrated in ZooKeeper-trunk #2861 (See [https://builds.apache.org/job/ZooKeeper-trunk/2861/])
ZOOKEEPER-2195 fsync.warningthresholdms in zoo.cfg not working (Biju Nair via phunt) (phunt: [http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1735892])
* trunk/CHANGES.txt
* trunk/docs/index.pdf
* trunk/docs/javaExample.pdf
* trunk/docs/linkmap.pdf
* trunk/docs/recipes.pdf
* trunk/docs/releasenotes.pdf
* trunk/docs/zookeeperAdmin.html
* trunk/docs/zookeeperAdmin.pdf
* trunk/docs/zookeeperHierarchicalQuorums.pdf
* trunk/docs/zookeeperInternals.pdf
* trunk/docs/zookeeperJMX.pdf
* trunk/docs/zookeeperObservers.pdf
* trunk/docs/zookeeperOver.pdf
* trunk/docs/zookeeperProgrammers.pdf
* trunk/docs/zookeeperQuotas.pdf
* trunk/docs/zookeeperReconfig.pdf
* trunk/docs/zookeeperStarted.pdf
* trunk/docs/zookeeperTutorial.pdf
* trunk/src/docs/src/documentation/content/xdocs/zookeeperAdmin.xml
* trunk/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMX ObjectName is incorrect for observers,ZOOKEEPER-2142,12782167,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,eribeiro,karold,karold,16/Mar/15 10:30,21/Jul/16 20:18,29/Jun/25 13:34,31/Oct/15 22:22,3.4.6,3.5.1,,,,,,,,,,,,,,,,,,,,,,,3.4.7,3.5.2,3.6.0,,,,,,,,0,,,Observers show up in JMX as StandaloneServer rather than Observer.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Aug/15 14:03;eribeiro;ZOOKEEPER-2142;https://issues.apache.org/jira/secure/attachment/12752757/ZOOKEEPER-2142","15/Oct/15 22:37;eribeiro;ZOOKEEPER-2142.2.patch;https://issues.apache.org/jira/secure/attachment/12766908/ZOOKEEPER-2142.2.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Nov 04 10:25:12 UTC 2015,,,,,,,,,,"0|i26suf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Mar/15 23:49;fournc;Seems like a reasonable thing to fix if it is causing you issues, please submit a patch!;;;","27/Aug/15 14:03;eribeiro;Hi [~fournc] and [~karold], I am submitting a trivial patch to address this issue. I wish I had some embed unit tests, but it doesn't have one. :( See if this solves the issue, please. I tested it here on latest trunk and it worked.;;;","27/Aug/15 14:22;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12752757/ZOOKEEPER-2142
  against trunk revision 1698058.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2846//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2846//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2846//console

This message is automatically generated.;;;","18/Sep/15 22:03;eribeiro;Hi [~fournc], this patch doesn't have a test because the change was trivial. Do you think it is worth to add one? Please, let me know if it needs some change to be committed.

Cheers!;;;","15/Oct/15 22:00;fpj;I don't think this patch is right, you need to implement a getName call just like in FollowerBean and LeaderBean. Check those classes and just follow what is in there.;;;","15/Oct/15 22:14;eribeiro;Got it, thanks! Gonna do that.;;;","15/Oct/15 22:37;eribeiro;Hey, [~fpj], I am uploading a new version of the patch. **Please, let me know if it is okay.** I didn't include any test because the patch is trivial (even more so after my undo my cumbersome changes). Thanks.;;;","31/Oct/15 22:01;michim;Sorry I'm jumping in late. The original patch ZOOKEEPER-2142 looks fine to me because it adds a new constructor to pass the name as the parameter, so classes that extend from ZooKeeperServerBean shouldn't need to implement getName() method. I'd refactor other classes (LeaderBean, FollowerBean) to use the new constructor and pass their names as well (""Leader"" and ""Follower"") and get rid of getName() method from these classes.;;;","31/Oct/15 22:04;fpj;I'd rather do the refactoring in a different jira, this issue is only about the object name for observers.;;;","31/Oct/15 22:06;michim;Ok fair enough. Then I'm +1 on ZOOKEEPER-2142.2.patch. I'll check this in if you are ok with this patch as well.;;;","31/Oct/15 22:15;fpj;+1 for the latest patch... but I just realized that there is another issue, ObserverBean seems to be in the wrong package, it should be under server.quorum rather than just server, right?

[~eribeiro] feel free to create another jira for the refactoring if you are interested in doing it. And if you do, please make sure to move the bean to the right package.;;;","31/Oct/15 22:22;michim;trunk: http://svn.apache.org/viewvc?view=revision&revision=1711694
branch-3.5: http://svn.apache.org/viewvc?view=revision&revision=1711695
branch-3.4: http://svn.apache.org/viewvc?view=revision&revision=1711696;;;","31/Oct/15 22:51;hudson;FAILURE: Integrated in ZooKeeper-trunk #2805 (See [https://builds.apache.org/job/ZooKeeper-trunk/2805/])
ZOOKEEPER-2142: JMX ObjectName is incorrect for observers (Edward Ribeiro via michim) (michim: [http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1711694])
* trunk/CHANGES.txt
* trunk/src/java/main/org/apache/zookeeper/server/ObserverBean.java
;;;","04/Nov/15 10:25;eribeiro;Hi [~michim] and [~fpj], thanks a lot for the feedback, highly appreciated. I have just created ZOOKEEPER-2313 and assigned myself to it so that I can address your refactoring recommendations, that I promptly agree with.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Initialize command succeeds even though it didn't in case of permission errors on the data directory,ZOOKEEPER-2115,12772877,Bug,Patch Available,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,,gsbiju,mnarayan,mnarayan,06/Feb/15 00:44,15/Jun/23 21:09,29/Jun/25 13:34,,3.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,scripts,,,,,0,,,"while testing single user mode that the initialize command succeeds even though it didn't in case of permission errors on the data directory:
{code}
....
+ exec /usr/lib/zookeeper/bin/zkServer-initialize.sh --myid=1
mkdir: cannot create directory `/var/lib/zookeeper/version-2': Permission denied
mkdir: cannot create directory `/var/lib/zookeeper/version-2': Permission denied
/usr/lib/zookeeper/bin/zkServer-initialize.sh: line 112: /var/lib/zookeeper/myid: Permission denied
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Feb/15 19:28;mnarayan;ZOOKEEPER-2115-1.patch;https://issues.apache.org/jira/secure/attachment/12700846/ZOOKEEPER-2115-1.patch","01/Mar/16 00:29;gsbiju;ZOOKEEPER-2115-2.patch;https://issues.apache.org/jira/secure/attachment/12790623/ZOOKEEPER-2115-2.patch","05/Mar/16 04:00;gsbiju;ZOOKEEPER-2115-3.patch;https://issues.apache.org/jira/secure/attachment/12791598/ZOOKEEPER-2115-3.patch","15/Oct/15 21:46;fpj;ZOOKEEPER-2115.patch;https://issues.apache.org/jira/secure/attachment/12766888/ZOOKEEPER-2115.patch","06/Feb/15 00:50;mnarayan;ZOOKEEPER-2115.patch;https://issues.apache.org/jira/secure/attachment/12696923/ZOOKEEPER-2115.patch",,,,,,5.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sat Mar 05 04:21:35 UTC 2016,,,,,,,,,,"0|i259nj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Feb/15 00:52;mnarayan;Exiting with code 1, if attempt to create either of dataDir or dataLogDir fails.;;;","06/Feb/15 01:30;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12696923/ZOOKEEPER-2115.patch
  against trunk revision 1656167.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2514//console

This message is automatically generated.;;;","25/Feb/15 19:28;mnarayan;- Added Author tag.
- Tested manually that the patch has no side effects. Ran:
{noformat}
cd /usr/lib/zookeeper/bin
./zkServer-initialize.sh --force
{noformat}

There are no side effects of the patch apart from failing immediately after being unable to create the datadir or the datalogdir.;;;","25/Feb/15 19:31;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12700846/ZOOKEEPER-2115-1.patch
  against trunk revision 1662055.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2537//console

This message is automatically generated.;;;","15/Oct/15 21:45;fpj;Patch is stale, uploading a new one.;;;","15/Oct/15 22:04;cnauroth;I suggest validating the return codes of the {{rm}} and {{mkdir}} calls instead of adding a separate post-check.;;;","15/Oct/15 23:07;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12766888/ZOOKEEPER-2115.patch
  against trunk revision 1706631.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2920//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2920//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2920//console

This message is automatically generated.;;;","01/Mar/16 00:29;gsbiju;Updated patch for the latest comment.;;;","01/Mar/16 00:31;gsbiju;[~cnauroth], [~fpj] Hope this new patch helps with closing the issue. Could you please review.;;;","01/Mar/16 01:11;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12790623/ZOOKEEPER-2115-2.patch
  against trunk revision 1729259.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3053//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3053//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3053//console

This message is automatically generated.;;;","05/Mar/16 00:34;cnauroth;[~biju74], thank you for patch v2.

Right now, failures will write a message of ""insufficient permissions"".  However, it's possible that the commands failed for reasons unrelated to permissions, such as a general I/O error.  Could we go back to the more general ""could not do"" error messages that were in the first patch?

There is still a separate {{rm}} call for ""version-2"", which needs its own separate check of the exit code.

[~biju74] or [~mnarayan], are either of you interested in providing another revision of the patch?;;;","05/Mar/16 03:52;gsbiju;Updated patch with changes for review comments.;;;","05/Mar/16 04:01;gsbiju;[~cnauroth] attached new patch with the suggested changes. Thanks for your review.;;;","05/Mar/16 04:21;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12791598/ZOOKEEPER-2115-3.patch
  against trunk revision 1733679.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3086//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3086//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3086//console

This message is automatically generated.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typo in src/c/src/load_gen.c,ZOOKEEPER-2109,12770072,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,surendralilhore,ebourg,ebourg,26/Jan/15 12:29,16/Mar/15 11:24,29/Jun/25 13:34,16/Mar/15 05:28,3.5.0,,,,,,,,,,,,,,,,,,,,,,,,3.5.1,3.6.0,,,,,,,,,0,,,"There is a minor typo in {{src/c/src/load_gen.c}}, ""Succesfully"" should be spelled ""Successfully""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Feb/15 15:12;surendralilhore;ZOOKEEPER-2109.patch;https://issues.apache.org/jira/secure/attachment/12699480/ZOOKEEPER-2109.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Mar 16 11:24:05 UTC 2015,,,,,,,,,,"0|i24spb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Feb/15 15:12;surendralilhore;Attached patch, Please review.;;;","18/Feb/15 16:07;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12699480/ZOOKEEPER-2109.patch
  against trunk revision 1658888.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2520//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2520//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2520//console

This message is automatically generated.;;;","16/Mar/15 05:27;rakeshr;+1 simple fix. Thanks [~surendrasingh] for the patch;;;","16/Mar/15 05:28;rakeshr;Committed to trunk : http://svn.apache.org/viewvc?view=revision&revision=1666873
Committed to br3.5 : http://svn.apache.org/viewvc?view=revision&revision=1666874;;;","16/Mar/15 11:24;hudson;SUCCESS: Integrated in ZooKeeper-trunk #2631 (See [https://builds.apache.org/job/ZooKeeper-trunk/2631/])
ZOOKEEPER-2109 Typo in src/c/src/load_gen.c (surendra singh lilhore via rakeshr) (rakeshr: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1666873)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/c/src/load_gen.c
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Compilation error in ZkAdaptor.cc with GCC 4.7 or later,ZOOKEEPER-2108,12770070,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,,ebourg,ebourg,26/Jan/15 12:19,04/Aug/23 11:28,29/Jun/25 13:34,04/May/22 14:50,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,3.9.0,,,,,,,,,,1,pull-request-available,,"Hi,

Debian and Fedora have a patch fixing a compilation failure in ZkAdaptor.cc but it doesn't appear to be fixed in the upcoming version 3.5.0. This issue is similar to ZOOKEEPER-470 and ZOOKEEPER-1795.

The error is :
{code}
g++ -DHAVE_CONFIG_H -I. -I..   -D_FORTIFY_SOURCE=2 -I/home/ebourg/packaging/zookeeper/src/contrib/zktreeutil/../../c/include -I/home/ebourg/packaging/zookeeper/src/contrib/zktreeutil/../../c/generated -I../include -I/usr/local/include -I/usr/include -I/usr/include/libxml2 -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -MT ZkAdaptor.o -MD -MP -MF .deps/ZkAdaptor.Tpo -c -o ZkAdaptor.o ZkAdaptor.cc
ZkAdaptor.cc: In member function ‘void zktreeutil::ZooKeeperAdapter::reconnect()’:
ZkAdaptor.cc:220:21: error: ‘sleep’ was not declared in this scope
             sleep (1);
{code}

This is fixed by including unistd.h in ZkAdaptor.cc or  ZkAdaptor.h

The Debian patch:
https://sources.debian.net/src/zookeeper/3.4.5%2Bdfsg-2/debian/patches/ftbfs-gcc-4.7.diff/

and the Fedora patch:
http://pkgs.fedoraproject.org/cgit/zookeeper.git/tree/zookeeper-3.4.5-zktreeutil-gcc.patch
",,"eolivelli commented on PR #1870:
URL: https://github.com/apache/zookeeper/pull/1870#issuecomment-1115743768

   Note for the future: it is better to fix one problem per patch.
   Given that this project is in contrib and that the patch is still small I am okay with keeping it in the current form


;03/May/22 05:07;githubbot;600","eolivelli commented on PR #1870:
URL: https://github.com/apache/zookeeper/pull/1870#issuecomment-1115743852

   @ztzg @symat PTAL


;03/May/22 05:07;githubbot;600","mathew-manu commented on PR #1870:
URL: https://github.com/apache/zookeeper/pull/1870#issuecomment-1117367181

   Thanks @eolivelli @symat for the review and comments. 
   How do I retry the failed jenkins job? There are two server tests failed, unrelated to the patch.
   Can either of you merge the PR? I don't have the write access in the repo.


;04/May/22 14:15;githubbot;600","symat commented on PR #1870:
URL: https://github.com/apache/zookeeper/pull/1870#issuecomment-1117408735

   sure, I'll merge.
   (I'll try to retrigger the CI, but I don't consider this to be a blocker, the unit test failures are unrelated indeed) 


;04/May/22 14:43;githubbot;600","asfgit closed pull request #1870: zktreeutil: fixing multiple issues, adding ssl support. (ZOOKEEPER-2108, ZOOKEEPER-3908, ZOOKEEPER-4491)
URL: https://github.com/apache/zookeeper/pull/1870


;04/May/22 14:49;githubbot;600","symat commented on PR #1870:
URL: https://github.com/apache/zookeeper/pull/1870#issuecomment-1117421849

   merge is done, thanks @mathew-manu for your contribution!


;04/May/22 14:52;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed May 04 14:50:21 UTC 2022,,,,,,,,,,"0|i24sov:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Oct/19 15:02;rajsura;Yes, this still does exist in 3.5.5 branch too. Also, apart from that I am encountering additional issue as below:

 

I have used multiple versions of GCC and the issue exists in both the cases (gcc-4.8.5 and gcc-7.3.1).

I have followed the instructions given in README.txt. Also, due to restructuring in 3.5.5, I had to update ZOOKEEPER_PATH in configure.ac as below:
{code:java}
# Zookeeper C client
ZOOKEEPER_PATH=${BUILD_PATH}/../../zookeeper-client/zookeeper-client-c
{code}
I am encountering these errors during ""make"" phase:
{code:java}
$ make
make all-recursive
make[1]: Entering directory '/tmp/bar2/zookeeper-3.5.5-SNAPSHOT/zookeeper-contrib/zookeeper-contrib-zktreeutil'
Making all in src
make[2]: Entering directory '/tmp/bar2/zookeeper-3.5.5-SNAPSHOT/zookeeper-contrib/zookeeper-contrib-zktreeutil/src'
g++ -DHAVE_CONFIG_H -I. -I.. -I/tmp/bar2/zookeeper-3.5.5-SNAPSHOT/zookeeper-contrib/zookeeper-contrib-zktreeutil/../../zookeeper-client/zookeeper-client-c/include -I/tmp/bar2/zookeeper-3.5.5-SNAPSHOT/zookeeper-contrib/zookeeper-contri
b-zktreeutil/../../zookeeper-client/zookeeper-client-c/generated -I../include -I/usr/local/include -I/usr/include -I/usr/include/libxml2 -g -O2 -MT ZkAdaptor.o -MD -MP -MF .deps/ZkAdaptor.Tpo -c -o ZkAdaptor.o ZkAdaptor.cc
ZkAdaptor.cc: In member function ‘bool zktreeutil::ZooKeeperAdapter::createNode(const string&, const string&, int, bool)’:
ZkAdaptor.cc:276:18: error: ‘zoo_create’ was not declared in this scope
 rc = zoo_create( mp_zkHandle,
 ^~~~~~~~~~
ZkAdaptor.cc:276:18: note: suggested alternative: ‘zoo_create’
 rc = zoo_create( mp_zkHandle,
 ^~~~~~~~~~
 zoo_create
ZkAdaptor.cc: At global scope:
ZkAdaptor.cc:334:26: warning: dynamic exception specifications are deprecated in C++11 [-Wdeprecated]
 int version) throw(ZooKeeperException)
 ^~~~~
ZkAdaptor.cc: In member function ‘bool zktreeutil::ZooKeeperAdapter::deleteNode(const string&, bool, int)’:
ZkAdaptor.cc:344:18: error: ‘zoo_delete’ was not declared in this scope
 rc = zoo_delete( mp_zkHandle, path.c_str(), version );
 ^~~~~~~~~~
ZkAdaptor.cc:344:18: note: suggested alternative: ‘zoo_delete’
 rc = zoo_delete( mp_zkHandle, path.c_str(), version );
 ^~~~~~~~~~
 zoo_delete
ZkAdaptor.cc: At global scope:
ZkAdaptor.cc:383:77: warning: dynamic exception specifications are deprecated in C++11 [-Wdeprecated]
 vector< string > ZooKeeperAdapter::getNodeChildren (const string &path) throw (ZooKeeperException)
 ^~~~~
ZkAdaptor.cc: In member function ‘std::vector<std::basic_string<char> > zktreeutil::ZooKeeperAdapter::getNodeChildren(const string&)’:
ZkAdaptor.cc:395:18: error: ‘zoo_get_children’ was not declared in this scope
 rc = zoo_get_children( mp_zkHandle,
 ^~~~~~~~~~~~~~~~
ZkAdaptor.cc:395:18: note: suggested alternative: ‘zoo_get_children’
 rc = zoo_get_children( mp_zkHandle,
 ^~~~~~~~~~~~~~~~
 zoo_get_children
{code}
Its weird because, ""zookeeper.h"" is accessible and these are still defined in there.

Am I missing something here? Thanks!;;;","04/May/22 14:50;symat;Issue resolved by pull request 1870
[https://github.com/apache/zookeeper/pull/1870];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unnecessary error log when defaultWatcher  is not set for ZooKeeper client,ZOOKEEPER-2086,12756919,Bug,Patch Available,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,saurzcode,rchzzjcn,rchzzjcn,21/Nov/14 08:37,16/Dec/14 20:50,29/Jun/25 13:34,,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,java client,,,,,1,,,"In org.apache.zookeeper.ZooKeeper.ZKWatchManager#materialize(), even if the defaultWatcher is null, it is still be added into the Set and returned. This would cause a lot of annoying error log at org.apache.zookeeper.ClientCnxn.EventThread#processEvent as below:
       2014-11-21 15:21:23,279 - ERROR - [main-EventThread:ClientCnxn$EventThread@524] - Error while calling watcher
       java.lang.NullPointerException
           at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:522)
           at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:498)

It can be simply fixed by having a null check in ZKWatchManager.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Dec/14 20:00;saurzcode;ZOOKEEPER-2086.patch;https://issues.apache.org/jira/secure/attachment/12687551/ZOOKEEPER-2086.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Dec 16 20:50:54 UTC 2014,,,,,,,,,,"0|i22n5b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Nov/14 15:41;fpj;[~rchzzjcn], do you want to propose a patch?;;;","15/Dec/14 08:03;saurzcode;Please assign to me, I would like to work on this.;;;","16/Dec/14 20:50;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12687551/ZOOKEEPER-2086.patch
  against trunk revision 1642444.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2462//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2462//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2462//console

This message is automatically generated.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Mistype of electionAlgo can fill out your disk in minutes,ZOOKEEPER-2082,12755511,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,,tianyin,tianyin,14/Nov/14 22:42,21/Oct/18 07:28,29/Jun/25 13:34,21/Oct/18 07:28,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,leaderElection,,,,,0,,,"The parameter, electionAlgo, is supposed to be 0--3. However, when I mistyped the value in my zoo.cfg (I'm stupid), ZK falls into a dead loop and starts filling up the entire disk which millions of the follow 2 lines...

2014-11-14 14:28:44,588 \[myid:3\] - INFO  \[QuorumPeer\[myid=3\]/0:0:0:0:0:0:0:0:2183:QuorumPeer@714\] - LOOKING
2014-11-14 14:28:44,588 \[myid:3\] - WARN  \[QuorumPeer\[myid=3\]/0:0:0:0:0:0:0:0:2183:QuorumPeer@764\] - Unexpected exception
java.lang.NullPointerException
    at org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:762)

The error rooted in createElectionAlgorithm() where an invalid setting leads to null for the Election object. Then, in the while look in run(), it causes null-pointer de-referencing which is captured but is not handled well.

I think our should check the setting of electionAlg in the very beginning to make sure it's a valid setting, instead of using it at runtime and cause the unfortunate things.

Let me know if you wanna a patch. I'd like to check it in the parseProperties() function in QuorumPeerConfig.java.

Thanks!",Cluster (multi-server) setup,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Aug 25 00:57:53 UTC 2017,,,,,,,,,,"0|i22enz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Nov/14 10:36;fpj;Good catch, upload a patch if you have a chance to work on one, please. We have deprecated implementations 0 1 2 of leader election, so this parameter won't be necessary any longer in future releases. ;;;","03/Mar/16 05:38;phunt;Cancelling as there is no patch attached.;;;","25/Aug/17 00:57;maoling;I think this issue has been fixed in ZOOKEEPER-1932[https://issues.apache.org/jira/browse/ZOOKEEPER-1932](commitId:a680655a3569) and the code about checking in the parseProperties() function in QuorumPeerConfig.java is here[https://github.com/apache/zookeeper/blob/master/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java#L259].so its status should be changed to RESOLVED ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"zkServer.sh uses pattern unsupported by ""grep"" on Solaris",ZOOKEEPER-2078,12754743,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Duplicate,cnauroth,metatech,metatech,12/Nov/14 12:09,01/May/15 05:57,29/Jun/25 13:34,01/May/15 05:57,3.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,scripts,,,,,0,,,"The script ""zkServer.sh"" contains a pattern (POSIX ""character class syntax"") which is not supported by ""grep"" on Solaris (both versions 10 and 11).

{code}
ZOO_DATADIR=""$(grep ""^[[:space:]]*dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//')""
{code}

This results into the environment variable being set with an empty value, which later gives the following error : 

{code}
Starting zookeeper ... bin/zkServer.sh: line 114: /zookeeper_server.pid: Permission denied
{code}


The workaround is to simplify the pattern used by ""grep"" :

{code}
ZOO_DATADIR=""$(grep ""^dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//')""
{code}

The same pattern is also used in the ""status"" command, which fails to read the ""clientPort"", which results into the following error :
{code}
Error contacting service. It is probably not running.
{code}
",Solaris 11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-1927,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri May 01 05:57:35 UTC 2015,,,,,,,,,,"0|i22a1r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Nov/14 13:41;metatech;A second problem under Solaris is that the following command
{code}
/bin/echo -n 999 > mypid.txt
{code}
will write ""-n 999"" into the ""mypid.txt"" file.

When issuing a ""zkServer.sh stop"", the following message is displayed :
{code}
Stopping zookeeper ... bin/zkServer.sh: line 145: kill: 24152: invalid signal specification
{code}
But fortunately the ""stop"" is performed anyway, it is only a warning.

The following code writes only the PID in the file : 
{code}
echo -n 999 > mypid.txt
{code}
;;;","12/Nov/14 14:02;metatech;Sorry, my previous comment was wrong : the error ""invalid signal specification"" really prevents the ""stop"" command from being processed, and the Zookeeper instance is still running (altough its PID file is removed).
Also, a ""zkServer.sh start"" while the process is running does not detect that it is already running.
;;;","01/May/15 05:57;cnauroth;[~metatech], thank you for filing the bug report.  I'm going to resolve this as a duplicate of ZOOKEEPER-1927.  I've added you as a watcher on that issue so that you'll continue to get status updates.  I'll post a patch on that issue shortly.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Incorrect exit codes for ""./zkCli.sh cmd arg""",ZOOKEEPER-2074,12753656,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,abrahamfine,surendralilhore,surendralilhore,07/Nov/14 09:20,18/May/17 03:44,29/Jun/25 13:34,10/Aug/16 17:33,3.5.0,,,,,,,,,,,,,,,,,,,,,,,,3.5.3,3.6.0,,,,,,,,,0,,,"Linux@hghoulaslx406:/> $ZOOKEEPER_HOME/bin/zkCli.sh create /test ""test""
Created /test1
Linux@hghoulaslx406:/> echo $?
0
Linux@hghoulaslx406:/> $ZOOKEEPER_HOME/bin/zkCli.sh create /test ""test""
Node already exists: /test1
Linux@hghoulaslx406:/> echo $?
0
Linux@hghoulaslx406:/> $ZOOKEEPER_HOME/bin/zkCli.sh delete /test
Linux@hghoulaslx406:/> echo $?
0
Linux@hghoulaslx406:/> $ZOOKEEPER_HOME/bin/zkCli.sh delete /test
Node does not exist: /test1
Linux@hghoulaslx406:/> echo $?
0


Here for failed command it should return exit code 1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-1898,,,,,,,,,,,"07/Nov/14 14:52;surendralilhore;ZOOKEEPER-2074_1.patch;https://issues.apache.org/jira/secure/attachment/12680173/ZOOKEEPER-2074_1.patch","02/Feb/15 18:35;surendralilhore;ZOOKEEPER-2074_2.patch;https://issues.apache.org/jira/secure/attachment/12695967/ZOOKEEPER-2074_2.patch","26/Mar/15 06:34;surendralilhore;ZOOKEEPER-2074_3.patch;https://issues.apache.org/jira/secure/attachment/12707442/ZOOKEEPER-2074_3.patch","08/Aug/16 17:44;abrahamfine;ZOOKEEPER-2074_4.patch;https://issues.apache.org/jira/secure/attachment/12822618/ZOOKEEPER-2074_4.patch","09/Aug/16 19:58;abrahamfine;ZOOKEEPER-2074_5.patch;https://issues.apache.org/jira/secure/attachment/12822869/ZOOKEEPER-2074_5.patch",,,,,,5.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,Reviewed,,,,Wed Aug 10 18:36:49 UTC 2016,,,,,,,,,,"0|i223lz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Nov/14 09:25;surendralilhore;Please assign this Jira to me, I will upload patch soon;;;","07/Nov/14 14:52;surendralilhore;I have attached patch , Please review it.;;;","20/Nov/14 13:30;thecoop1984;Looks like a duplicate of ZOOKEEPER-1897...;;;","01/Dec/14 09:17;surendralilhore;Hi Simon, ;;;","01/Dec/14 09:21;surendralilhore;I don’t think it is duplicate, In that jira they are not checking command result.
But I want, we should check command result and then do exit with 1 if command result is false.
;;;","21/Jan/15 09:15;surendralilhore;Please can someone review my patch and assign this issue to me..Thank in advance;;;","02/Feb/15 06:04;rakeshr;Thanks [~surendrasingh] for the patch. Can you move the command result check and {{System.exit(1);}} one level up to the ZooKeeperMain#main() method. I could see {{ZooKeeperMain#run()}} has default access, if someone embedded this in their code then may exit the JVM, right? ;;;","02/Feb/15 06:14;surendralilhore;Thanks [~rakeshr] .

Yes you are correct , I will change the patch and upload soon..;;;","02/Feb/15 18:38;surendralilhore;[~rakeshr]

I have attached new patch, please review it.
Thanks in advance.
;;;","03/Feb/15 05:14;rakeshr;+1 lgtm;;;","06/Feb/15 00:21;surendralilhore;@Rakesh 

Thanks for review;;;","09/Feb/15 05:39;michim;trunk: http://svn.apache.org/viewvc?view=revision&revision=1658307
branch-3.5: http://svn.apache.org/viewvc?view=revision&revision=1658308;;;","09/Feb/15 22:05;hudson;ABORTED: Integrated in ZooKeeper-trunk #2590 (See [https://builds.apache.org/job/ZooKeeper-trunk/2590/])
ZOOKEEPER-2074 Incorrect exit codes for ""./zkCli.sh cmd arg"" (surendra singh lilhore via michim) (michim: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1658307)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/ZooKeeperMain.java
;;;","14/Mar/15 21:14;michim;with this patch even successful commands return 1 if processZKCmd returns false.;;;","14/Mar/15 22:26;fournc;[~michim] did you revert the change? Do we want to revert or fix?;;;","14/Mar/15 22:30;michim;Yes, I just reverted the change:

trunk: http://svn.apache.org/viewvc?view=revision&revision=1666760
branch-3.5: http://svn.apache.org/viewvc?view=revision&revision=1666761;;;","15/Mar/15 01:09;hudson;SUCCESS: Integrated in ZooKeeper-trunk #2628 (See [https://builds.apache.org/job/ZooKeeper-trunk/2628/])
Revert ZOOKEEPER-2074. (michim: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1666760)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/ZooKeeperMain.java
;;;","15/Mar/15 04:19;rakeshr;Thanks [~michim] for pointing out this case. [~surendrasingh] could you re-look at it.;;;","16/Mar/15 03:41;surendralilhore;Thanks [~michim] , [~rakeshr] Yes I will check it..

But I have one doubt, why processZKCmd() will return false if command is success.

when watch is false ??

{code}
	 // execute from commandMap
        CliCommand cliCmd = commandMapCli.get(cmd);
        if(cliCmd != null) {
            cliCmd.setZk(zk);
            watch = cliCmd.parse(args).exec();
        } else if (!commandMap.containsKey(cmd)) {
             usage();
        }
{code}

I saw some command like ""getAcl"" which prints the command output on console, it will always return false 

{code}
	@Override
    public boolean exec() throws KeeperException, InterruptedException {
        String path = args[1];
        Stat stat = new Stat();
        List<ACL> acl = zk.getACL(path, stat);
        for (ACL a : acl) {
            out.println(a.getId() + "": ""
                        + getPermString(a.getPerms()));
        }

        if (cl.hasOption(""s"")) {
            new StatPrinter(out).print(stat);
        }
        return false;
    }
{code};;;","26/Mar/15 06:34;surendralilhore;Attached new patch, please review ;;;","26/Mar/15 17:51;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12707442/ZOOKEEPER-2074_3.patch
  against trunk revision 1669062.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2591//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2591//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2591//console

This message is automatically generated.;;;","28/Mar/15 19:00;surendralilhore;[~michim] I have attached new patch. Please can you review..;;;","10/Apr/15 06:34;rakeshr;Thanks [~surendrasingh] for taking care this. Could you tell me, any specific reason to not to return the status after executing the {{""redo""}} command. IMO, we can return after executing the command. Please verify this case also.
{code}
            history.put(commandCount, history.get(i));
            processCmd( cl);
{code};;;","10/Apr/15 09:29;surendralilhore;
Thanks [~rakeshr] for review

{{""redo""}} is not useful as Command line args for ZkCli.sh.

It is used only when we are executing command on cli prompt.

{code}./zkCli.sh -server IP:PORT redo 0{code}

This command always return false

{code}
	 } else if (cmd.equals(""redo"") && args.length >= 2) {
            Integer i = Integer.decode(args[1]);
            if (commandCount <= i){ // don't allow redoing this redo
                System.out.println(""Command index out of range"");
                return false;
           }
{code};;;","10/Apr/15 10:12;rakeshr;[~michim] could you please have a look at the reworked patch when you get a chance. Thanks!;;;","21/Jun/16 22:39;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12707442/ZOOKEEPER-2074_3.patch
  against trunk revision 1748630.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3212//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3212//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3212//console

This message is automatically generated.;;;","08/Aug/16 18:01;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12822618/ZOOKEEPER-2074_4.patch
  against trunk revision 1755379.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3334//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3334//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3334//console

This message is automatically generated.;;;","08/Aug/16 18:03;abrahamfine;I do not believe the test failure is relevant to this patch;;;","08/Aug/16 18:30;hanm;That is a known failure taken care of by ZOOKEEPER-2080.;;;","08/Aug/16 21:14;eribeiro;hey [~abrahamfine], this patch is a complement of ZOOKEEPER-1898, right? I am linking the two so that we can expose the relation between the two issues.

LGTM (informal review). :);;;","08/Aug/16 21:16;abrahamfine;[~eribeiro] indeed, they are related. thanks for taking a look!;;;","09/Aug/16 18:10;phunt;Looks good - however DEFAULT_EXIT_CODE is really the default error exit code, right? Can you change variable, e.g. DEFAULT_EXIT_CODE_ON_ERROR or something like that?;;;","09/Aug/16 20:16;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12822869/ZOOKEEPER-2074_5.patch
  against trunk revision 1755379.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3344//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3344//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3344//console

This message is automatically generated.;;;","10/Aug/16 17:33;phunt;Committed to 3.5.3 and Trunk. Thanks Abe!;;;","10/Aug/16 18:36;hudson;SUCCESS: Integrated in ZooKeeper-trunk #3030 (See [https://builds.apache.org/job/ZooKeeper-trunk/3030/])
ZOOKEEPER-2074: Incorrect exit codes for './zkCli.sh cmd arg' (Abraham Fine via phunt) (phunt: [http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1755786])
* trunk/CHANGES.txt
* trunk/src/java/main/org/apache/zookeeper/cli/CliException.java
* trunk/src/java/test/org/apache/zookeeper/ZooKeeperTest.java
;;;",,,,,,,,,,,,,,,,,,,
Init script fails to track PID file when using a non-standard dataDir,ZOOKEEPER-2067,12750510,Bug,Patch Available,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,phobos182,phobos182,phobos182,25/Oct/14 01:40,03/Mar/16 06:14,29/Jun/25 13:34,,3.4.6,3.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,debian,,"When setting a dataDir in zoo.cfg that does not match /var/lib/zookeeper, the supplied init.d script failed to track the PID file. This change moves the logic that is present in zkServer.sh to determine the PID location into zkEnv.sh. Also removed the hard coded path for the zookeeper dataDir.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Oct/14 01:42;phobos182;ZOOKEEPER-2067.patch;https://issues.apache.org/jira/secure/attachment/12677074/ZOOKEEPER-2067.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Mar 03 06:14:32 UTC 2016,,,,,,,,,,"0|i21kkv:",9223372036854775807,,,,,,,,,,,,packaging,,,,,,,,,"25/Oct/14 02:30;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12677074/ZOOKEEPER-2067.patch
  against trunk revision 1632209.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2399//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2399//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2399//console

This message is automatically generated.;;;","03/Mar/16 06:14;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12677074/ZOOKEEPER-2067.patch
  against trunk revision 1733348.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3074//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3074//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3074//console

This message is automatically generated.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven dependency should remove the 3 dependencies ,ZOOKEEPER-2050,12744949,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,samraj,samraj,30/Sep/14 13:35,30/Sep/14 13:35,29/Jun/25 13:34,,3.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,"When i add the latest zookeeper jar in the dependency it throws the error and say following jars are missing.If i added those in exclusion its working fine.

<exclusions>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
			</exclusions>
",Just add the latest zookeeper version in the maven dependency,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2014-09-30 13:35:59.0,,,,,,,,,,"0|i20mun:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConnectStringParser public api didn't handle null connect string,ZOOKEEPER-2045,12743374,Bug,Patch Available,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,hdeng,hdeng,hdeng,22/Sep/14 23:17,23/Sep/14 00:22,29/Jun/25 13:34,,3.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,"{code}
public final class ConnectStringParser {
...
   public ConnectStringParser(String connectString) {
   ...
{code}
ConnectStringParser is a public api. Besides that, both ZooKeeper constructor and ZooKeeper#updateServerList used it.

However, it doesn't handle a null connectString. It doesn't help that much to see a NPE showing up. So I add a check to the constructor.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Sep/14 23:21;hdeng;ZOOKEEPER-2045.patch;https://issues.apache.org/jira/secure/attachment/12670539/ZOOKEEPER-2045.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Sep 23 00:22:21 UTC 2014,,,,,,,,,,"0|i20d87:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Sep/14 00:22;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12670539/ZOOKEEPER-2045.patch
  against trunk revision 1626008.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2346//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2346//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2346//console

This message is automatically generated.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CancelledKeyException in zookeeper branch-3.4,ZOOKEEPER-2044,12743135,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,hanm,shamjith.antholi,shamjith.antholi,22/Sep/14 10:17,27/Mar/20 13:10,29/Jun/25 13:34,31/Jan/17 16:40,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,3.4.10,,,,,server,,,,,3,pull-request-available,,"I am getting cancelled key exception in zookeeper (version 3.4.5). Please see the log below. When this error is thrown, the connected solr shard is going down by giving the error ""Failed to index metadata in Solr,StackTrace=SolrError: HTTP status 503.Reason: {""responseHeader"":{""status"":503,""QTime"":204},""error"":{""msg"":""ClusterState says we are the leader, but locally we don't think so"",""code"":503""  and ultimately the current activity is going down. Could you please give a solution for this ?


Zookeper log 
----------------------------------------------------------
2014-09-16 02:58:47,799 [myid:1] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:ZooKeeperServer@832] - Client attempting to renew session 0x24868e7ca980003 at /172.22.0.5:58587
2014-09-16 02:58:47,800 [myid:1] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:Learner@107] - Revalidating client: 0x24868e7ca980003
2014-09-16 02:58:47,802 [myid:1] - INFO  [QuorumPeer[myid=1]/0:0:0:0:0:0:0:0:2181:ZooKeeperServer@588] - Invalid session 0x24868e7ca980003 for client /172.22.0.5:58587, probably expired
2014-09-16 02:58:47,803 [myid:1] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@1001] - Closed socket connection for client /172.22.0.5:58587 which had sessionid 0x24868e7ca980003
2014-09-16 02:58:47,810 [myid:1] - ERROR [CommitProcessor:1:NIOServerCnxn@180] - Unexpected Exception:
java.nio.channels.CancelledKeyException
        at sun.nio.ch.SelectionKeyImpl.ensureValid(SelectionKeyImpl.java:55)
        at sun.nio.ch.SelectionKeyImpl.interestOps(SelectionKeyImpl.java:59)
        at org.apache.zookeeper.server.NIOServerCnxn.sendBuffer(NIOServerCnxn.java:153)
        at org.apache.zookeeper.server.NIOServerCnxn.sendResponse(NIOServerCnxn.java:1076)
        at org.apache.zookeeper.server.NIOServerCnxn.process(NIOServerCnxn.java:1113)
        at org.apache.zookeeper.server.DataTree.setWatches(DataTree.java:1327)
        at org.apache.zookeeper.server.ZKDatabase.setWatches(ZKDatabase.java:384)
        at org.apache.zookeeper.server.FinalRequestProcessor.processRequest(FinalRequestProcessor.java:304)
        at org.apache.zookeeper.server.quorum.CommitProcessor.run(CommitProcessor.java:74)


 ",Red Hat Enterprise Linux Server release 6.2,"machelcheng commented on issue #156: ZOOKEEPER-2044:CancelledKeyException in zookeeper 3.4.5.
URL: https://github.com/apache/zookeeper/pull/156#issuecomment-532989100
 
 
   Hi, I have a few questions：
   How is this problem triggered? I recently encountered this exception a few times in version 3.4.9, but I don't know what the trigger condition is. And how  to reproduce it?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Sep/19 06:36;githubbot;600","aoozdemir commented on issue #156: ZOOKEEPER-2044:CancelledKeyException in zookeeper 3.4.5.
URL: https://github.com/apache/zookeeper/pull/156#issuecomment-602633755
 
 
   I have the same issue as @machelcheng and I don't have any guess too. We started to encounter the problem when we enabled `zookeeper metricbeat module` in our elk stack. Interesting part is that in the JIRA# card
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Mar/20 14:34;githubbot;600","aoozdemir commented on issue #156: ZOOKEEPER-2044:CancelledKeyException in zookeeper 3.4.5.
URL: https://github.com/apache/zookeeper/pull/156#issuecomment-602633755
 
 
   I have the same issue as @machelcheng and I don't have any guess too. We started to encounter the problem when we enabled `zookeeper metricbeat module` in our elk stack. Interesting part is that in the JIRA# card
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Mar/20 14:34;githubbot;600","aoozdemir commented on issue #156: ZOOKEEPER-2044:CancelledKeyException in zookeeper 3.4.5.
URL: https://github.com/apache/zookeeper/pull/156#issuecomment-602636425
 
 
   I have the same issue as @machelcheng and I don't have any guess too. We started to encounter the problem when we enabled `zookeeper metricbeat module` in our elk stack. 
   
   Our Zookeeper version is `3.4.10`. However, in the [JIRA#ZOOKEEPER-2044](https://issues.apache.org/jira/browse/ZOOKEEPER-2044) ticket, it shows the fix version as `3.4.10`. 
   
   Is this issue not fixed yet or have I missed something?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Mar/20 14:39;githubbot;600","maoling commented on issue #156: ZOOKEEPER-2044:CancelledKeyException in zookeeper 3.4.5.
URL: https://github.com/apache/zookeeper/pull/156#issuecomment-603671131
 
 
   @aoozdemir @machelcheng 
   - this patch had been included in the `3.4.10` by checking the `3.4.10` release notes
   - Could you please create a `JIRA` to provide the stack trace which will be very help? 
   - `CancelledKeyException` had been surrounded by `try-catch`? so not critical?
   - Maybe `key.isValid() `is not enough, we need other api check to handle this Exception gracefully(I don't know)?
   Cc @hanm 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Mar/20 06:48;githubbot;600","aoozdemir commented on issue #156: ZOOKEEPER-2044:CancelledKeyException in zookeeper 3.4.5.
URL: https://github.com/apache/zookeeper/pull/156#issuecomment-604373972
 
 
   @maoling 
   I'm guessing that it's not critical, but it's not ideal to have the error all the time. Below is the error log we get with the `zookeeper metricbeat module` enabled. We use the version 7.6.1 if that's related as well. I don't know what else you need, however, this is the image we use;
   ```
   image: ""k8s.gcr.io/kubernetes-zookeeper:1.0-3.4.10""
   ```
   and the configuration for the start-zookeeper;
   ```
   start-zookeeper \
             --servers=3 \
             --data_dir=/var/lib/zookeeper/data \
             --data_log_dir=/var/lib/zookeeper/data/log \
             --conf_dir=/opt/zookeeper/conf \
             --client_port=2181 \
             --election_port=3888 \
             --server_port=2888 \
             --tick_time=2000 \
             --init_limit=10 \
             --sync_limit=5 \
             --heap=512M \
             --max_client_cnxns=60 \
             --snap_retain_count=3 \
             --purge_interval=12 \
             --max_session_timeout=40000 \
             --min_session_timeout=4000 \
             --log_level=INFO
   ```
   
   ---
   
   ```
   2020-03-26T10:04:45.382Z    2020-03-26 10:04:45,382 [myid:3] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@883] - Processing mntr command from /__IPADDRESSOMITTED__:58844
   2020-03-26T10:04:45.382Z    2020-03-26 10:04:45,382 [myid:3] - INFO  [Thread-48554:NIOServerCnxn@1044] - Closed socket connection for client /__IPADDRESSOMITTED__:58844 (no session established for client)
   2020-03-26T10:04:45.386Z    Exception in thread ""Thread-48553"" java.nio.channels.CancelledKeyException
   2020-03-26T10:04:45.387Z        at sun.nio.ch.SelectionKeyImpl.ensureValid(SelectionKeyImpl.java:73)
   2020-03-26T10:04:45.387Z        at org.apache.zookeeper.server.ServerCnxn.dumpConnectionInfo(ServerCnxn.java:500)
   2020-03-26T10:04:45.387Z        at org.apache.zookeeper.server.NIOServerCnxn.getInterestOps(NIOServerCnxn.java:1180)
   2020-03-26T10:04:45.387Z        at org.apache.zookeeper.server.NIOServerCnxn$CommandThread.run(NIOServerCnxn.java:515)
   2020-03-26T10:04:45.387Z        at sun.nio.ch.SelectionKeyImpl.interestOps(SelectionKeyImpl.java:77)
   2020-03-26T10:04:45.387Z        at org.apache.zookeeper.server.NIOServerCnxn$ConsCommand.commandRun(NIOServerCnxn.java:715)
   ```
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Mar/20 11:21;githubbot;600","aoozdemir commented on issue #156: ZOOKEEPER-2044:CancelledKeyException in zookeeper 3.4.5.
URL: https://github.com/apache/zookeeper/pull/156#issuecomment-604373972
 
 
   @maoling 
   I'm guessing that it's not critical, but it's not ideal to have the error all the time. Below is the error log we get with the `zookeeper metricbeat module` enabled. We use the version 7.6 if that's related as well. I don't know what else you need, however, this is the image we use;
   ```
   image: ""k8s.gcr.io/kubernetes-zookeeper:1.0-3.4.10""
   ```
   and the configuration for the start-zookeeper;
   ```
   start-zookeeper \
             --servers=3 \
             --data_dir=/var/lib/zookeeper/data \
             --data_log_dir=/var/lib/zookeeper/data/log \
             --conf_dir=/opt/zookeeper/conf \
             --client_port=2181 \
             --election_port=3888 \
             --server_port=2888 \
             --tick_time=2000 \
             --init_limit=10 \
             --sync_limit=5 \
             --heap=512M \
             --max_client_cnxns=60 \
             --snap_retain_count=3 \
             --purge_interval=12 \
             --max_session_timeout=40000 \
             --min_session_timeout=4000 \
             --log_level=INFO
   ```
   
   ---
   
   ```
   2020-03-26T10:04:45.382Z    2020-03-26 10:04:45,382 [myid:3] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@883] - Processing mntr command from /__IPADDRESSOMITTED__:58844
   2020-03-26T10:04:45.382Z    2020-03-26 10:04:45,382 [myid:3] - INFO  [Thread-48554:NIOServerCnxn@1044] - Closed socket connection for client /__IPADDRESSOMITTED__:58844 (no session established for client)
   2020-03-26T10:04:45.386Z    Exception in thread ""Thread-48553"" java.nio.channels.CancelledKeyException
   2020-03-26T10:04:45.387Z        at sun.nio.ch.SelectionKeyImpl.ensureValid(SelectionKeyImpl.java:73)
   2020-03-26T10:04:45.387Z        at org.apache.zookeeper.server.ServerCnxn.dumpConnectionInfo(ServerCnxn.java:500)
   2020-03-26T10:04:45.387Z        at org.apache.zookeeper.server.NIOServerCnxn.getInterestOps(NIOServerCnxn.java:1180)
   2020-03-26T10:04:45.387Z        at org.apache.zookeeper.server.NIOServerCnxn$CommandThread.run(NIOServerCnxn.java:515)
   2020-03-26T10:04:45.387Z        at sun.nio.ch.SelectionKeyImpl.interestOps(SelectionKeyImpl.java:77)
   2020-03-26T10:04:45.387Z        at org.apache.zookeeper.server.NIOServerCnxn$ConsCommand.commandRun(NIOServerCnxn.java:715)
   ```
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Mar/20 11:36;githubbot;600","maoling commented on issue #156: ZOOKEEPER-2044:CancelledKeyException in zookeeper 3.4.5.
URL: https://github.com/apache/zookeeper/pull/156#issuecomment-604831403
 
 
   @aoozdemir 
   - Thanks for your great stack trace.
   - this `CancelledKeyException` is not related to this issue, although they both throw that Exception.
   - The root cause is: `sk.interestOps();` and I check that branch-3.5.* and master will not have that issue any more. AFAIK, branch-3.4.* is close to EOL
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Mar/20 06:05;githubbot;600","aoozdemir commented on issue #156: ZOOKEEPER-2044:CancelledKeyException in zookeeper 3.4.5.
URL: https://github.com/apache/zookeeper/pull/156#issuecomment-604840222
 
 
   @maoling 
   
   Oh, I see. Thanks for the clarification. I guess we just have to wait for the official kubernetes image to upgrade if we want the collect metrics without this error throwing out.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Mar/20 06:38;githubbot;600","eolivelli commented on issue #156: ZOOKEEPER-2044:CancelledKeyException in zookeeper 3.4.5.
URL: https://github.com/apache/zookeeper/pull/156#issuecomment-604965447
 
 
   We do not provide any kubernetes image.
   
   What's your provider?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Mar/20 12:09;githubbot;600","aoozdemir commented on issue #156: ZOOKEEPER-2044:CancelledKeyException in zookeeper 3.4.5.
URL: https://github.com/apache/zookeeper/pull/156#issuecomment-604991915
 
 
   > image: ""k8s.gcr.io/kubernetes-zookeeper:1.0-3.4.10""
   
   @eolivelli yep, I know. I meant to wait for gcr repo to update to another version.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Mar/20 13:10;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,6600,,,0,6600,,,,,,,,ZOOKEEPER-1237,,,,,ZOOKEEPER-2677,,,,,,,,,"05/Mar/16 16:34;fpj;ZOOKEEPER-2044.patch;https://issues.apache.org/jira/secure/attachment/12791627/ZOOKEEPER-2044.patch","29/Nov/15 22:53;abranzyck;ZOOKEEPER-2044.patch;https://issues.apache.org/jira/secure/attachment/12774760/ZOOKEEPER-2044.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sun Feb 05 06:01:29 UTC 2017,,,,,,,,,,"0|i20brr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Oct/15 13:53;sumit.nigam;i am noticing similar issues in my set up where YARN Resource Mgr and HDFS Name Node HA components failover due to ZooKeeper exception stated above.;;;","24/Nov/15 14:41;abranzyck;This is also visible in 3.4.6.
The fix seems quite straightforward. In NIOServerCnxn.java there seems to be a missing ""sk.isValid()"" before ""sk.interestOps()"":
{code:title=NIOServerCnxn.java|borderStyle=solid}
          if (bb != ServerCnxnFactory.closeConn) {
                 // We check if write interest here because if it is NOT set,
                 // nothing is queued, so we can try to send the buffer right
                 // away without waking up the selector
                 if ((sk.interestOps() & SelectionKey.OP_WRITE) == 0) { // <= SHOULD BE HERE
                    try \{
                        sock.write(bb);
                     } catch (IOException e) {
                         // we are just doing best effort right now
                     }
                 }
                 // if there is nothing left to send, we are done
                 if (bb.remaining() == 0) {
                     packetSent();
                     return;
                 }
             }
 
             synchronized(this.factory){
                 sk.selector().wakeup();
                 if (LOG.isTraceEnabled()) {
                     LOG.trace(""Add a buffer to outgoingBuffers, sk "" + sk
                             + "" is valid: "" + sk.isValid());
                 }
                 outgoingBuffers.add(bb);
                 if (sk.isValid()) {// <= AS IT IS IN HERE
                     sk.interestOps(sk.interestOps() | SelectionKey.OP_WRITE);
                 }
             }
{code};;;","24/Nov/15 14:46;abranzyck;I am changing this issue to minor since it seems to happen when the client closes the socket at a certain point of time. It is more of a false reporting of an error than a problem in the server.;;;","29/Nov/15 22:23;abranzyck;In order to reproduce this problem, I inserted a ""Thread.sleep(100)"" in the line just before the one that needs to be modified. Otherwise, I just didn't get this error.
With that line modified, the problem was solved even with the delay.
I have no idea of how to make a test case for this problem, so I will just submit the extremely simple patch without a test case.
If anybody wants to reproduce the problem, I created a program that watches in a znode (receives any event and then subscribes again), and a program that writes continuously in that znode. The error occurs when the program that watches is killed.;;;","29/Nov/15 22:53;abranzyck;The patch is for branch-3.4. It does not apply to trunk correctly.
This problem doesn't seem to be present in trunk.;;;","29/Nov/15 23:00;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12774760/ZOOKEEPER-2044.patch
  against trunk revision 1715590.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2968//console

This message is automatically generated.;;;","06/Feb/16 02:45;rgs;[~abranzyck] - thanks for the patch and sorry for the lack of review. Given we are running late with 3.4.8, lets get to this in 3.4.9. ;;;","05/Mar/16 16:34;fpj;Here is a patch with a test case. [~abranzyck] [~rgs] Let me know what you think.;;;","08/Mar/16 19:02;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12791627/ZOOKEEPER-2044.patch
  against trunk revision 1733679.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3092//console

This message is automatically generated.;;;","10/Mar/16 00:43;phunt;I get bugged about this issue quite a bit, but it's really just cosmetic. Are you sure the risk outweighs the reward wrt 3.4, vs fixing in 3.5/trunk only?;;;","13/Mar/16 14:37;abranzyck;The patch works perfectly for me. Thank you for requesting my opinion.
In my personal opinion, the risk is very low and confusing messages in the logs will be disturbing for system administrators. But as stated, is not a big issue.
;;;","13/Mar/16 15:02;fpj;I think it is very low risk, but I also don't think it is strictly necessary to have it in 3.4. If you're uneasy about having this one in 3.4 because it is mostly an improvement, I won't oppose [~phunt].
  ;;;","13/Mar/16 23:49;phunt;I'm not saying I'm against it per se. I agree it is a bug. I just want to make sure you folks feel strongly that the risk/reward is there. :-) 

Given the feedback I don't see why we shouldn't include it. Up to you all.;;;","21/Jun/16 10:11;ericzundel;Having been woken up for this and finding its a false alarm, I'd like to see it in 3.4.x branch.;;;","21/Jun/16 10:19;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12791627/ZOOKEEPER-2044.patch
  against trunk revision 1748630.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3195//console

This message is automatically generated.;;;","21/Dec/16 09:08;DEvil0000;looks similar to ZOOKEEPER-1237 - could this be the same thing?;;;","21/Dec/16 09:19;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12791627/ZOOKEEPER-2044.patch
  against trunk revision 8616a9ec8ce4bc8ac2987b7417a6f0c4b7333658.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3551//console

This message is automatically generated.;;;","25/Jan/17 00:04;hanm;This patch does not apply to master / 3.5 - due to work in ZOOKEEPER-1504. Not sure if master / 3.5 is impacted by this issue. I'll see if I can take a stab and reproduce on master / 3.5 and provide a rebased patch.

In any case, should we get this in before cutting a 3.4.10 RC build? This seems to be a low risk and high impact fix (we've seen this a lot in our 3.4.x product env too) / cc [~rakeshr].;;;","25/Jan/17 04:09;rakeshr;[~hanm], Agreed to include this, considering that, its a long waited issue and I also feel its a low risk fix.
Could you please create a pull request for the same. I hope folks will help in reviews and push asap. Thanks!
;;;","25/Jan/17 04:36;githubbot;GitHub user hanm opened a pull request:

    https://github.com/apache/zookeeper/pull/156

    ZOOKEEPER-2044:CancelledKeyException in zookeeper 3.4.5.

    Patch from Germán Blanco, test case from Flavio.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/hanm/zookeeper ZOOKEEPER-2044

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/156.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #156
    
----
commit a220d95f2aefd0bf6f72d2757a87dc5480f9891e
Author: Michael Han <hanm@apache.org>
Date:   2017-01-25T04:35:05Z

    ZOOKEEPER-2044:CancelledKeyException in zookeeper 3.4.5.
    Patch from Germán Blanco, test case from Flavio.

----
;;;","25/Jan/17 06:41;githubbot;Github user rakeshadr commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/156#discussion_r97716727
  
    --- Diff: src/java/test/org/apache/zookeeper/server/NIOServerCnxnTest.java ---
    @@ -18,6 +18,12 @@
     package org.apache.zookeeper.server;
     
     import java.io.IOException;
    +import java.nio.ByteBuffer;
    +import java.nio.channels.CancelledKeyException;
    +import java.nio.channels.SelectionKey;
    --- End diff --
    
    Please remove unused imports.
;;;","25/Jan/17 06:41;githubbot;Github user rakeshadr commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/156#discussion_r97716640
  
    --- Diff: src/java/test/org/apache/zookeeper/server/NIOServerCnxnTest.java ---
    @@ -68,4 +74,38 @@ public void testOperationsAfterCnxnClose() throws IOException,
                 zk.close();
             }
         }
    +
    +    /**
    +     * Mock extension of NIOServerCnxn to test for
    +     * CancelledKeyException (ZOOKEEPER-2044).
    +     */
    +    class MockNIOServerCnxn extends NIOServerCnxn {
    +        public MockNIOServerCnxn( NIOServerCnxn cnxn )
    +                throws IOException {
    +            super( cnxn.zkServer, cnxn.sock, cnxn.sk, cnxn.factory );
    +        }
    +
    +        public void mockSendBuffer(ByteBuffer bb) throws Exception {
    +            super.internalSendBuffer( bb );
    +        }
    +    }
    +
    +    @Test(timeout = 30000)
    +    public void testValidSelectionKey() throws Exception {
    +        final ZooKeeper zk = createClient();
    +        try {
    +            Iterable<ServerCnxn> connections = serverFactory.getConnections();
    +            for (ServerCnxn serverCnxn : connections) {
    +                MockNIOServerCnxn mock = new MockNIOServerCnxn((NIOServerCnxn) serverCnxn);
    +                // Cancel key
    +                ((NIOServerCnxn) serverCnxn).sock.keyFor(((NIOServerCnxnFactory) serverFactory).selector).cancel();;
    +                mock.mockSendBuffer( ByteBuffer.allocate(8) );
    +            }
    +        } catch (CancelledKeyException e) {
    +            e.printStackTrace();
    --- End diff --
    
    Instead of printStackTrace, can we use LOG.error(""Exception while sending bytes!"", e);
;;;","25/Jan/17 06:41;githubbot;Github user rakeshadr commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/156#discussion_r97717262
  
    --- Diff: src/java/test/org/apache/zookeeper/server/NIOServerCnxnTest.java ---
    @@ -68,4 +74,38 @@ public void testOperationsAfterCnxnClose() throws IOException,
                 zk.close();
             }
         }
    +
    +    /**
    +     * Mock extension of NIOServerCnxn to test for
    +     * CancelledKeyException (ZOOKEEPER-2044).
    +     */
    +    class MockNIOServerCnxn extends NIOServerCnxn {
    +        public MockNIOServerCnxn( NIOServerCnxn cnxn )
    +                throws IOException {
    +            super( cnxn.zkServer, cnxn.sock, cnxn.sk, cnxn.factory );
    --- End diff --
    
    This line has extra spaces and I could see formatting issues in many places. Please remove unwanted spaces and correct it.
;;;","25/Jan/17 06:41;githubbot;Github user rakeshadr commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/156#discussion_r97716986
  
    --- Diff: src/java/test/org/apache/zookeeper/server/NIOServerCnxnTest.java ---
    @@ -68,4 +74,38 @@ public void testOperationsAfterCnxnClose() throws IOException,
                 zk.close();
             }
         }
    +
    +    /**
    +     * Mock extension of NIOServerCnxn to test for
    +     * CancelledKeyException (ZOOKEEPER-2044).
    +     */
    +    class MockNIOServerCnxn extends NIOServerCnxn {
    --- End diff --
    
    Please make MockNIOServerCnxn class ''private static''
;;;","25/Jan/17 16:04;rakeshr;bq. This patch does not apply to master / 3.5 - due to work in ZOOKEEPER-1504. Not sure if master / 3.5 is impacted by this issue. I'll see if I can take a stab and reproduce on master / 3.5 and provide a rebased patch.
[~hanm], How about creating a separate jira task to do the analysis and fix, if requires. This jira can be used to push code changes only to {{branch-3.4}}, right?;;;","26/Jan/17 02:13;githubbot;Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/156
  
    @rakeshadr thanks for review, patch updated. 
;;;","26/Jan/17 06:10;githubbot;Github user rakeshadr commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/156#discussion_r97935895
  
    --- Diff: src/java/test/org/apache/zookeeper/server/NIOServerCnxnTest.java ---
    @@ -68,4 +69,38 @@ public void testOperationsAfterCnxnClose() throws IOException,
                 zk.close();
             }
         }
    +
    +    /**
    +     * Mock extension of NIOServerCnxn to test for
    +     * CancelledKeyException (ZOOKEEPER-2044).
    +     */
    +    private static class MockNIOServerCnxn extends NIOServerCnxn {
    +        public MockNIOServerCnxn(NIOServerCnxn cnxn)
    +                throws IOException {
    +            super(cnxn.zkServer, cnxn.sock, cnxn.sk, cnxn.factory);
    +        }
    +
    +        public void mockSendBuffer(ByteBuffer bb) throws Exception {
    +            super.internalSendBuffer(bb);
    +        }
    +    }
    +
    +    @Test(timeout = 30000)
    +    public void testValidSelectionKey() throws Exception {
    +        final ZooKeeper zk = createClient();
    +        try {
    +            Iterable<ServerCnxn> connections = serverFactory.getConnections();
    +            for (ServerCnxn serverCnxn : connections) {
    +                MockNIOServerCnxn mock = new MockNIOServerCnxn((NIOServerCnxn) serverCnxn);
    +                // Cancel key
    +                ((NIOServerCnxn) serverCnxn).sock.keyFor(((NIOServerCnxnFactory) serverFactory).selector).cancel();;
    +                mock.mockSendBuffer(ByteBuffer.allocate(8));
    +            }
    +        } catch (CancelledKeyException e) {
    +            LOG.error(""Exception while sending bytes!"", e);
    +            Assert.fail(e.toString());
    +        } finally {
    +            zk.close();
    --- End diff --
    
    Thanks @hanm , the latest changes looks good to me. I will leave this pull request for one more day and if there is no more comments then will commit this tomorrow.
    
    I've an observation while running the unit test case, ""zk.close()"" call is taking 15-20secs to complete. I think, this delay is due to the previously submitted mocked buffer. Could you please run test in your env and let me know your observation.
;;;","26/Jan/17 06:23;rakeshr;bq. This patch does not apply to master / 3.5 - due to work in ZOOKEEPER-1504. Not sure if master / 3.5 is impacted by this issue. I'll see if I can take a stab and reproduce on master / 3.5 and provide a rebased patch.
[~hanm], I've raised separate jira task ZOOKEEPER-2677 to do the analysis in branch-3.5 and master. For now, I've assigned the ZOOKEEPER-2677 jira to you. Please feel free to re-assign. Thanks!

IMHO, this jira can be used to push code changes only in {{branch-3.4}} as I hope we all agree on the fix.;;;","26/Jan/17 23:57;githubbot;Github user hanm commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/156#discussion_r98120457
  
    --- Diff: src/java/test/org/apache/zookeeper/server/NIOServerCnxnTest.java ---
    @@ -68,4 +69,38 @@ public void testOperationsAfterCnxnClose() throws IOException,
                 zk.close();
             }
         }
    +
    +    /**
    +     * Mock extension of NIOServerCnxn to test for
    +     * CancelledKeyException (ZOOKEEPER-2044).
    +     */
    +    private static class MockNIOServerCnxn extends NIOServerCnxn {
    +        public MockNIOServerCnxn(NIOServerCnxn cnxn)
    +                throws IOException {
    +            super(cnxn.zkServer, cnxn.sock, cnxn.sk, cnxn.factory);
    +        }
    +
    +        public void mockSendBuffer(ByteBuffer bb) throws Exception {
    +            super.internalSendBuffer(bb);
    +        }
    +    }
    +
    +    @Test(timeout = 30000)
    +    public void testValidSelectionKey() throws Exception {
    +        final ZooKeeper zk = createClient();
    +        try {
    +            Iterable<ServerCnxn> connections = serverFactory.getConnections();
    +            for (ServerCnxn serverCnxn : connections) {
    +                MockNIOServerCnxn mock = new MockNIOServerCnxn((NIOServerCnxn) serverCnxn);
    +                // Cancel key
    +                ((NIOServerCnxn) serverCnxn).sock.keyFor(((NIOServerCnxnFactory) serverFactory).selector).cancel();;
    +                mock.mockSendBuffer(ByteBuffer.allocate(8));
    +            }
    +        } catch (CancelledKeyException e) {
    +            LOG.error(""Exception while sending bytes!"", e);
    +            Assert.fail(e.toString());
    +        } finally {
    +            zk.close();
    --- End diff --
    
    @rakeshadr Good observation on the long running of the test. This is definitely something we should fix. The actual delay indeed happens at client close and the root cause is session timeout: when a client closing itself it sends a request to server, and this request packet will stuck forever in our case because server has canceled the selector; so client session will expire eventually and by default, the timeout value between client / server is set as 30 sec and 2/3 about it - which is 20 sec is exactly what it would cost for a heart beat to fail. I fixed this by adjusting the timeout value to 3 sec instead just for this single test. PTAL.
;;;","27/Jan/17 05:26;githubbot;Github user rakeshadr commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/156#discussion_r98146418
  
    --- Diff: src/java/test/org/apache/zookeeper/server/NIOServerCnxnTest.java ---
    @@ -68,4 +69,41 @@ public void testOperationsAfterCnxnClose() throws IOException,
                 zk.close();
             }
         }
    +
    +    /**
    +     * Mock extension of NIOServerCnxn to test for
    +     * CancelledKeyException (ZOOKEEPER-2044).
    +     */
    +    private static class MockNIOServerCnxn extends NIOServerCnxn {
    +        public MockNIOServerCnxn(NIOServerCnxn cnxn)
    +                throws IOException {
    +            super(cnxn.zkServer, cnxn.sock, cnxn.sk, cnxn.factory);
    +        }
    +
    +        public void mockSendBuffer(ByteBuffer bb) throws Exception {
    +            super.internalSendBuffer(bb);
    +        }
    +    }
    +
    +    @Test(timeout = 30000)
    +    public void testValidSelectionKey() throws Exception {
    +        int oldTimeout = ClientBase.CONNECTION_TIMEOUT;
    +        ClientBase.CONNECTION_TIMEOUT = 3000;
    +        final ZooKeeper zk = createClient();
    --- End diff --
    
    Thanks @hanm for the analysis and fixing it. Instead of directly changing the static value, how about simplifying the ZooKeeper client creation like below,
    
    ``final ZooKeeper zk = createZKClient(hostPort, 3000);``
;;;","27/Jan/17 16:57;githubbot;Github user hanm commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/156#discussion_r98244348
  
    --- Diff: src/java/test/org/apache/zookeeper/server/NIOServerCnxnTest.java ---
    @@ -68,4 +69,41 @@ public void testOperationsAfterCnxnClose() throws IOException,
                 zk.close();
             }
         }
    +
    +    /**
    +     * Mock extension of NIOServerCnxn to test for
    +     * CancelledKeyException (ZOOKEEPER-2044).
    +     */
    +    private static class MockNIOServerCnxn extends NIOServerCnxn {
    +        public MockNIOServerCnxn(NIOServerCnxn cnxn)
    +                throws IOException {
    +            super(cnxn.zkServer, cnxn.sock, cnxn.sk, cnxn.factory);
    +        }
    +
    +        public void mockSendBuffer(ByteBuffer bb) throws Exception {
    +            super.internalSendBuffer(bb);
    +        }
    +    }
    +
    +    @Test(timeout = 30000)
    +    public void testValidSelectionKey() throws Exception {
    +        int oldTimeout = ClientBase.CONNECTION_TIMEOUT;
    +        ClientBase.CONNECTION_TIMEOUT = 3000;
    +        final ZooKeeper zk = createClient();
    --- End diff --
    
    @rakeshadr done. I was looking for something similar in createClient - did not find it so ended up using the old approach.
;;;","30/Jan/17 03:38;dknupp;We are seeing similar Zookeeper errors when trying to launch HBase while testing Impala on RHEL7. Is there enough information in the following log output to determine if it's the same bug?

{noformat}
17/01/04 21:31:35 ERROR server.NIOServerCnxn: Unexpected Exception: 
java.nio.channels.CancelledKeyException
	at sun.nio.ch.SelectionKeyImpl.ensureValid(SelectionKeyImpl.java:73)
	at sun.nio.ch.SelectionKeyImpl.interestOps(SelectionKeyImpl.java:77)
	at org.apache.zookeeper.server.NIOServerCnxn.sendBuffer(NIOServerCnxn.java:153)
	at org.apache.zookeeper.server.NIOServerCnxn.sendResponse(NIOServerCnxn.java:1075)
	at org.apache.zookeeper.server.FinalRequestProcessor.processRequest(FinalRequestProcessor.java:404)
	at org.apache.zookeeper.server.SyncRequestProcessor.run(SyncRequestProcessor.java:138)
{noformat};;;","30/Jan/17 04:09;hanm;Yes from the log it sounds the same issue of what this JIRA is trying to address.;;;","30/Jan/17 04:28;dknupp;Thanks [~hanm].;;;","31/Jan/17 16:31;githubbot;Github user rakeshadr commented on the issue:

    https://github.com/apache/zookeeper/pull/156
  
    Thanks @hanm , I've committed the changes to branch-3.4
;;;","31/Jan/17 16:40;rakeshr;Thanks [~hanm], [~fpj], [~abranzyck] and others for the help in resolving this issue.

Committed to branch-3.4:
https://git-wip-us.apache.org/repos/asf?p=zookeeper.git;a=commit;h=4b9fe5ea71d73ba26ca722e3919b8d0afe84ab86;;;","02/Feb/17 18:40;githubbot;Github user eribeiro commented on the issue:

    https://github.com/apache/zookeeper/pull/156
  
    @rakeshadr @hanm For whatever reason this PR was not closed. Could you close it Michael?
;;;","05/Feb/17 06:01;githubbot;Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/156
  
    Closing pull request now it's merged. 
;;;","05/Feb/17 06:01;githubbot;Github user hanm closed the pull request at:

    https://github.com/apache/zookeeper/pull/156
;;;",,,,,,,,,,,,,,,
zkServer.sh does not work properly on Solaris,ZOOKEEPER-2042,12742211,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Duplicate,cnauroth,jlindwall,jlindwall,17/Sep/14 17:44,01/May/15 05:56,29/Jun/25 13:34,01/May/15 05:56,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,scripts,,,,,1,,,"There are two issues in the zkServer.sh script that make it not work properly out of the box on Solaris.

1. The bin/zkServer.sh script uses plain ""echo"" in all instances but one: when writing the pid to the pid file.  In that instance it uses ""/bin/echo"".

The ""/bin/echo"" command on Solaris does not understand the ""-n"" parameter and interprets it as a literal string, so the ""-n"" gets written into the pid file along with the pid.  This causes the ""stop"" command to fail.

2. The /bin/grep command in Solaris does not understand special character classes like ""[[:space:]]"".  You must use the alternate posix version of grep as found in /usr/xpg4/bin/grep for this to work.  If the script cannot be made completely generic then at least we should document the need to use the posix grep implementation on Solaris.
",Solaris 5.11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-1927,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri May 01 05:56:47 UTC 2015,,,,,,,,,,"0|i20647:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/May/15 05:56;cnauroth;[~jlindwall], thank you for filing the bug report.  I'm going to resolve this as a duplicate of ZOOKEEPER-1927.  I've added you as a watcher on that issue so that you'll continue to get status updates.  I'll post a patch on that issue shortly.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Jute compareBytes incorrect comparison index,ZOOKEEPER-2039,12741654,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,iandi,iandi,iandi,16/Sep/14 02:34,28/Sep/14 09:48,29/Jun/25 13:34,18/Sep/14 15:51,3.4.6,3.5.0,,,,,,,,,,,,,,,,,,,,,,,3.4.7,3.5.1,,,,jute,,,,,0,,,"The Jute utility's naïve byte-array comparison compares b1[off1+i] with b2[off2+1]. (A literal 1, not the variable i)

It should be off2+i, in parallel with the other operand.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,86400,86400,,0%,86400,86400,,,,,,,,,,,,,,,,,,,,,,,"16/Sep/14 11:12;fpj;ZOOKEEPER-2039.patch;https://issues.apache.org/jira/secure/attachment/12669031/ZOOKEEPER-2039.patch","16/Sep/14 02:57;iandi;ZOOKEEPER-2039.patch;https://issues.apache.org/jira/secure/attachment/12668956/ZOOKEEPER-2039.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sun Sep 28 09:48:58 UTC 2014,,,,,,,,,,"0|i202qn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Sep/14 02:56;iandi;Correct parallel indices in Jute byte array comparison;;;","16/Sep/14 02:57;iandi;Correct parallel indices in Jute byte array comparison;;;","16/Sep/14 03:01;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12668956/ZOOKEEPER-2039.patch
  against trunk revision 1623916.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2335//console

This message is automatically generated.;;;","16/Sep/14 03:05;iandi;Failure while applying patch;;;","16/Sep/14 11:12;fpj;Uploading a valid patch, and removed the tabs around the line changing.;;;","16/Sep/14 12:01;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12669031/ZOOKEEPER-2039.patch
  against trunk revision 1623916.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2336//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2336//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2336//console

This message is automatically generated.;;;","18/Sep/14 15:37;fpj;This is a small change and the failing tests have been failing due to other issues, so I don't think they are impacted by this change at all. I'll get this one in, +1.;;;","18/Sep/14 15:51;fpj;Thanks, Ian.

Trunk: Committed revision 1626008.
Branch 3.4: Committed revision 1626009.;;;","19/Sep/14 11:16;hudson;FAILURE: Integrated in ZooKeeper-trunk #2443 (See [https://builds.apache.org/job/ZooKeeper-trunk/2443/])
ZOOKEEPER-2039 Jute compareBytes incorrect comparison index (Ian Dimayuga via fpj) (fpj: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1626008)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/jute/Utils.java
;;;","28/Sep/14 09:48;fpj;... and here is the branch 3.5 commit: Committed revision 1628059.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Coding error in recipes/lock/src/c/src/zoo_lock.c,ZOOKEEPER-2038,12741651,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,tsingakbar,tsingakbar,16/Sep/14 02:23,16/Sep/14 02:23,29/Jun/25 13:34,,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,recipes,,,,,0,,,"In fuction child_floor(), strcmp() is used to compare the whole string.
But there exists conditions a sorted_data looks like (""x-000-00"", ""x-222-01"", ""x-111-02""), and now ""x-222-01"" is calling child_floor() to get a predecessor for watching, so the current logic will return ""x-111-02"" instead of the correct ""x-000-00"".
Use a strcmp() == 0 and a break statement should solve this problem.
",arch linux 64bit,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2014-09-16 02:23:04.0,,,,,,,,,,"0|i202pz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
diagnostics on SASL connection problems doesn't match error strings sent back,ZOOKEEPER-2035,12741270,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,stevel@apache.org,stevel@apache.org,13/Sep/14 17:33,15/Dec/15 17:47,29/Jun/25 13:34,,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,"The diagnostics code in {{ZooKeeperSaslClient.createSaslToken()}} which looks for a {{""(""Mechanism level: Server not found in Kerberos database (7) - UNKNOWN_SERVER)""}} error string isn't finding a match ... the text now appears to be {{(Mechanism level: Server not found in Kerberos database (7) - Server not found in Kerberos database)}}",Java 1.7.0.67 on OS/X,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-2344,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sat Sep 13 17:34:11 UTC 2014,,,,,,,,,,"0|i200dz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Sep/14 17:34;stevel@apache.org;Log
{code}
2014-09-13 18:19:24,155 [Thread-1-SendThread(192.168.1.85:50329)] INFO  zookeeper.ClientCnxn (ClientCnxn.java:logStartConnect(975)) - Opening socket connection to server 192.168.1.85/192.168.1.85:50329. Will attempt to SASL-authenticate using Login Context section 'Client'
2014-09-13 18:19:24,155 [NIOServerCxn.Factory:stevel-227.local/192.168.1.85:0] INFO  server.NIOServerCnxnFactory (NIOServerCnxnFactory.java:run(197)) - Accepted socket connection from /192.168.1.85:50332
2014-09-13 18:19:24,156 [Thread-1-SendThread(192.168.1.85:50329)] INFO  zookeeper.ClientCnxn (ClientCnxn.java:primeConnection(852)) - Socket connection established to 192.168.1.85/192.168.1.85:50329, initiating session
2014-09-13 18:19:24,177 [NIOServerCxn.Factory:stevel-227.local/192.168.1.85:0] INFO  server.ZooKeeperServer (ZooKeeperServer.java:processConnectRequest(868)) - Client attempting to establish new session at /192.168.1.85:50332
2014-09-13 18:19:24,180 [SyncThread:0] INFO  persistence.FileTxnLog (FileTxnLog.java:append(199)) - Creating new log file: log.1
2014-09-13 18:19:24,208 [SyncThread:0] INFO  server.ZooKeeperServer (ZooKeeperServer.java:finishSessionInit(617)) - Established session 0x1487006c1570000 with negotiated timeout 20000 for client /192.168.1.85:50332
2014-09-13 18:19:24,209 [Thread-1-SendThread(192.168.1.85:50329)] INFO  zookeeper.ClientCnxn (ClientCnxn.java:onConnected(1235)) - Session establishment complete on server 192.168.1.85/192.168.1.85:50329, sessionid = 0x1487006c1570000, negotiated timeout = 20000
2014-09-13 18:19:24,257 [Thread-1-SendThread(192.168.1.85:50329)] ERROR client.ZooKeeperSaslClient (ZooKeeperSaslClient.java:createSaslToken(384)) - An error: (java.security.PrivilegedActionException: javax.security.sasl.SaslException: GSS initiate failed [Caused by GSSException: No valid credentials provided (Mechanism level: Server not found in Kerberos database (7) - Server not found in Kerberos database)]) occurred when evaluating Zookeeper Quorum Member's  received SASL token. Zookeeper Client will go to AUTH_FAILED state.
2014-09-13 18:19:24,257 [Thread-1-SendThread(192.168.1.85:50329)] ERROR zookeeper.ClientCnxn (ClientCnxn.java:run(1015)) - SASL authentication with Zookeeper Quorum member failed: javax.security.sasl.SaslException: An error: (java.security.PrivilegedActionException: javax.security.sasl.SaslException: GSS initiate failed [Caused by GSSException: No valid credentials provided (Mechanism level: Server not found in Kerberos database (7) - Server not found in Kerberos database)]) occurred when evaluating Zookeeper Quorum Member's  received SASL token. Zookeeper Client will go to AUTH_FAILED state.
2014-09-13 18:19:24,257 [Thread-1-EventThread] ERROR curator.ConnectionState (ConnectionState.java:checkState(245)) - Authentication failed
2014-09-13 18:19:24,264 [NIOServerCxn.Factory:stevel-227.local/192.168.1.85:0] WARN  server.NIOServerCnxn (NIOServerCnxn.java:doIO(357)) - caught end of stream exception
EndOfStreamException: Unable to read additional data from client sessionid 0x1487006c1570000, likely client has closed socket

{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StringIndexOutOfBoundsException in createSaslServer ,ZOOKEEPER-2034,12741268,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Not A Problem,,stevel@apache.org,stevel@apache.org,13/Sep/14 17:09,13/Sep/14 17:11,29/Jun/25 13:34,13/Sep/14 17:11,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,"I'm seeing {{StringIndexOutOfBoundsException}} in {{createSaslServer}}, where my test kerberos code is (presumably) is not correctly set up. 

Looking at the comments, it hints that the problem is my principals are called {{zookeeper@EXAMPLE.COM}}, which doesn't match the pattern {{principal/host@realm}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sat Sep 13 17:11:54 UTC 2014,,,,,,,,,,"0|i200dj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Sep/14 17:11;stevel@apache.org;oh, it's meant to, it just gets translated into a {{server principal name/hostname determination error}};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"dynamicConfigFile should have an absolute path, not a relative path, to the dynamic configuration file",ZOOKEEPER-2030,12739745,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,shralex,shralex,shralex,07/Sep/14 04:42,17/Sep/14 11:11,29/Jun/25 13:34,17/Sep/14 05:36,3.5.0,,,,,,,,,,,,,,,,,,,,,,,,3.5.1,3.6.0,,,,server,,,,,0,,,a relative path doesn't seem like a good idea since it will work only if we start the server from the same directory as we did previously.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Sep/14 05:03;shralex;ZOOKEEPER-2030.patch;https://issues.apache.org/jira/secure/attachment/12667065/ZOOKEEPER-2030.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Sep 17 11:11:25 UTC 2014,,,,,,,,,,"0|i1zrpz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Sep/14 05:50;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12667065/ZOOKEEPER-2030.patch
  against trunk revision 1621313.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2316//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2316//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2316//console

This message is automatically generated.;;;","07/Sep/14 05:53;shralex;change looks trivial so not adding a test but ran and tested it manually instead.;;;","08/Sep/14 16:38;hdeng;+1 for the patch. Sounds good idea.;;;","17/Sep/14 05:34;michim;+1;;;","17/Sep/14 05:36;michim;trunk: http://svn.apache.org/viewvc?view=revision&revision=1625462
branch-3.5: http://svn.apache.org/viewvc?view=revision&revision=1625463;;;","17/Sep/14 11:11;hudson;FAILURE: Integrated in ZooKeeper-trunk #2441 (See [https://builds.apache.org/job/ZooKeeper-trunk/2441/])
ZOOKEEPER-2030 dynamicConfigFile should have an absolute path, not a relative
path, to the dynamic configuration file (Alexander Shraer via michim) (michim: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1625462)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Leader.LearnerCnxAcceptor should handle exceptions in run(),ZOOKEEPER-2029,12739626,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,rakeshr,asadpanda,asadpanda,05/Sep/14 23:21,06/Feb/21 21:27,29/Jun/25 13:34,11/Apr/15 18:49,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,3.5.1,3.6.0,,,,quorum,,,,,0,,,Leader.LearnerCnxAcceptor swallows exceptions and shuts itself down. It should instead crash the Leader.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-1907,ZOOKEEPER-602,,,,ZOOKEEPER-4203,,,,"09/Apr/15 18:47;rakeshr;ZOOKEEPER-2029.patch;https://issues.apache.org/jira/secure/attachment/12724294/ZOOKEEPER-2029.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sat Apr 11 18:49:40 UTC 2015,,,,,,,,,,"0|i1zqzr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Sep/14 09:49;rakeshr;How about making this as ZooKeeperCriticalThread. I'm planning to handle the exceptions of critical threads by having a special listener. This will make the server down. Please see ZOOKEEPER-1907;;;","09/Apr/15 18:51;rakeshr;Attached patch, where it does {{Leader.LearnerCnxAcceptor}} thread critical. Now, on exception it will notify the listener and by default this will make the server shutdown. Please review. Thanks!;;;","09/Apr/15 18:53;hdeng;What's the point to set true here?
https://github.com/apache/zookeeper/blob/trunk/src/java/main/org/apache/zookeeper/server/quorum/Leader.java#L378

Is it a legacy code?;;;","09/Apr/15 19:52;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12724294/ZOOKEEPER-2029.patch
  against trunk revision 1672436.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2605//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2605//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2605//console

This message is automatically generated.;;;","09/Apr/15 20:29;hdeng;Anyway, I think the patch solves the problem.

Putting a +1 here.;;;","10/Apr/15 02:17;hdeng;I will commit the code by this weekend if there is no other comments.;;;","10/Apr/15 05:19;rakeshr;Thanks [~hdeng] for reviewing the patch.;;;","10/Apr/15 20:25;hdeng;Committed:

trunk:
  svn: http://svn.apache.org/viewvc?view=revision&revision=1672751
  git: https://github.com/apache/zookeeper/commit/13c55af4117846a1337ab930786724496d4dbd11

branch-3.5:
  svn: http://svn.apache.org/viewvc?view=revision&revision=1672753
  git: https://github.com/apache/zookeeper/commit/563d3537344f8f934222d62ce19ac94591fcd501;;;","10/Apr/15 20:26;hdeng;Thanks [~asadpanda] for reporting and [~rakeshr] for the patch!;;;","11/Apr/15 11:21;hudson;FAILURE: Integrated in ZooKeeper-trunk #2657 (See [https://builds.apache.org/job/ZooKeeper-trunk/2657/])
ZOOKEEPER-2029 Leader.LearnerCnxAcceptor should handle exceptions in run()
(Rakesh R, Asad Saeed via hdeng) (hdeng: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1672751)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/Leader.java
;;;","11/Apr/15 18:49;rakeshr;Thanks [~hdeng] for committing the changes. I'm resolving/closing this issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TestClient#testAuth aborts because ASSERT throws exception again in destructor when there is active exception already,ZOOKEEPER-2028,12739336,Bug,Patch Available,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,tianq,tianq,tianq,05/Sep/14 07:20,17/Jun/23 05:50,29/Jun/25 13:34,,3.4.6,3.9.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,tests,,,,,0,,,"Hi Guys,
the testcase consistently fails if debug is turned on(set zoo_set_debug_level(ZOO_LOG_LEVEL_DEBUG) in TestDriver.cc); if debug is OFF, it fails for the first time, subsequent runs succeed.

can someone help take a look?
thanks!

below is related info: 

1. screen output
{quote}
     [exec] Zookeeper_simpleSystem::testPing : elapsed 17200 : OK
     [exec] Zookeeper_simpleSystem::testAcl : elapsed 1014 : OK
     [exec] Zookeeper_simpleSystem::testChroot : elapsed 3041 : OK
     [exec] terminate called after throwing an instance of 'CppUnit::Exception'
     [exec]   what():  equality assertion failed
     [exec] - Expected: 0
     [exec] - Actual  : -116
     [exec] 
     [exec] make: *** [run-check] Aborted (core dumped)
     [exec] Zookeeper_simpleSystem::testAuth
{quote}

2. last lines in zk server log:
{quote}
2014-09-04 21:13:57,711 [myid:] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:22181:ZooKeeperServer@868] - Client attempting to establish new session at /127.0.0.1:34992
2014-09-04 21:13:57,714 [myid:] - INFO  [SyncThread:0:ZooKeeperServer@617] - Established session 0x14844044d96000a with negotiated timeout 10000 for client /127.0.0.1:34992
2014-09-04 21:14:01,039 [myid:] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:22181:ZooKeeperServer@892] - got auth packet /127.0.0.1:34992
2014-09-04 21:14:01,747 [myid:] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:22181:ZooKeeperServer@926] - auth success /127.0.0.1:34992
2014-09-04 21:14:01,912 [myid:] - WARN  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:22181:NIOServerCnxn@362] - Exception causing close of session 0x14844044d96000a due to java.io.IOException: Connection reset by peer
2014-09-04 21:14:01,914 [myid:] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:22181:NIOServerCnxn@1007] - Closed socket connection for client /127.0.0.1:34992 which had sessionid 0x14844044d96000a
2014-09-04 21:14:12,000 [myid:] - INFO  [SessionTracker:ZooKeeperServer@347] - Expiring session 0x14844044d96000a, timeout of 10000ms exceeded
2014-09-04 21:14:12,001 [myid:] - INFO  [ProcessThread(sid:0 cport:-1)::PrepRequestProcessor@494] - Processed session termination for sessionid: 0x14844044d96000a
{quote}

3. last lines in TEST-Zookeeper_simpleSystem-mt.txt:
{quote}
2014-09-04 21:13:57,703:383481(0x7f8866c4b720):ZOO_INFO@log_env@712: Client environment:zookeeper.version=zookeeper C client 3.4.6
2014-09-04 21:13:57,703:383481(0x7f8866c4b720):ZOO_INFO@log_env@716: Client environment:host.name=localhost
2014-09-04 21:13:57,703:383481(0x7f8866c4b720):ZOO_INFO@log_env@723: Client environment:os.name=Linux
2014-09-04 21:13:57,703:383481(0x7f8866c4b720):ZOO_INFO@log_env@724: Client environment:os.arch=2.6.32-358.el6.x86_64
2014-09-04 21:13:57,703:383481(0x7f8866c4b720):ZOO_INFO@log_env@725: Client environment:os.version=#1 SMP Tue Jan 29 11:47:41 EST 2013
2014-09-04 21:13:57,703:383481(0x7f8866c4b720):ZOO_INFO@log_env@733: Client environment:user.name=tianq
2014-09-04 21:13:57,703:383481(0x7f8866c4b720):ZOO_INFO@log_env@741: Client environment:user.home=/home/tianq
2014-09-04 21:13:57,703:383481(0x7f8866c4b720):ZOO_INFO@log_env@753: Client environment:user.dir=/home/tianq/zookeeper/build/test/test-cppunit
2014-09-04 21:13:57,703:383481(0x7f8866c4b720):ZOO_INFO@zookeeper_init@786: Initiating client connection, host=127.0.0.1:22181 sessionTimeout=10000 watcher=0x42e590 sessionId=0 sessionPasswd=<null> context=0x7fff695ea9a0 flags=0
2014-09-04 21:13:57,703:383481(0x7f8866c4b720):ZOO_DEBUG@start_threads@221: starting threads...
2014-09-04 21:13:57,704:383481(0x7f8857fff700):ZOO_DEBUG@do_io@367: started IO thread
2014-09-04 21:13:57,704:383481(0x7f8857fff700):ZOO_INFO@check_events@1705: initiated connection to server [127.0.0.1:22181]
2014-09-04 21:13:57,704:383481(0x7f88667f9700):ZOO_DEBUG@do_completion@459: started completion thread
2014-09-04 21:13:57,714:383481(0x7f8857fff700):ZOO_INFO@check_events@1752: session establishment complete on server [127.0.0.1:22181], sessionId=0x14844044d96000a, negotiated timeout=10000
2014-09-04 21:13:57,714:383481(0x7f8857fff700):ZOO_DEBUG@check_events@1758: Calling a watcher for a ZOO_SESSION_EVENT and the state=ZOO_CONNECTED_STATE
2014-09-04 21:13:57,714:383481(0x7f88667f9700):ZOO_DEBUG@process_completions@2113: Calling a watcher for node [], type = -1 event=ZOO_SESSION_EVENT
2014-09-04 21:13:58,704:383481(0x7f8866c4b720):ZOO_DEBUG@send_last_auth_info@1353: Sending auth info request to 127.0.0.1:22181  
{quote}

If I understand correctly, it fails because assert expected 0, but looking at the testcase log, ""Sending auth info request to .."" appears for the first time, so it should correspond to the first zoo_add_auth call in testAuth. but its expected value is ZBADARGUMENTS...?
",linux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Sep/14 07:36;tianq;zookeeper-2028.patch;https://issues.apache.org/jira/secure/attachment/12669666/zookeeper-2028.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sat Jun 17 05:50:31 UTC 2023,,,,,,,,,,"0|i1zpqn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Sep/14 07:13;tianq;analysis:

{quote}
[exec] terminate called after throwing an instance of 'CppUnit::Exception'
[exec] what(): equality assertion failed
[exec] - Expected: 0
[exec] - Actual : -116
[exec]
[exec] make: *** [run-check] Aborted (core dumped)
[exec] Zookeeper_simpleSystem::testAuth
{quote}

above error is caused by below test unit:
src/c/tests/TestClient.cc:
    void testAuth() {

        // auth as pat, create /tauth1, close session
        rc = zoo_add_auth(zk, ""digest"", ""pat:passwd"", 10, voidCompletion,
                          (void*)ZOK);  

    static void voidCompletion(int rc, const void *data) {
        int tmp = (int) (long) data;
        CPPUNIT_ASSERT_EQUAL(tmp, rc);   // <----this line
        count++;
    }

but it is not expected behavior - there is no source code line provided and the program aborted.

with more debug, we hit below code path(frame #1 is my debug code):

{quote}
#0  0x000000398b8acb8d in nanosleep () from /lib64/libc.so.6
#1  0x000000398b8aca00 in sleep () from /lib64/libc.so.6   
#2  0x000000000042fd1b in Zookeeper_simpleSystem::voidCompletion (rc=-116, data=<value optimized out>)
    at /home/tianq/zookeeper/src/c/tests/TestClient.cc:440
#3  0x00000000004566f1 in free_completions (zh=0x22582c0, callCompletion=1, reason=-116)
    at /home/tianq/zookeeper/src/c/src/zookeeper.c:1200
#4  0x000000000045aa4c in zookeeper_close (zh=0x22582c0)
    at /home/tianq/zookeeper/src/c/src/zookeeper.c:2496
#5  0x000000000040d7ef in watchCtx::~watchCtx (this=0x7fff9b93cc90, __in_chrg=<value optimized out>)
    at /home/tianq/zookeeper/src/c/tests/TestClientRetry.cc:115
#6  0x000000000043916a in Zookeeper_simpleSystem::testAuth (this=<value optimized out>)
    at /home/tianq/zookeeper/src/c/tests/TestClient.cc:649
#7  0x000000334ee24d3a in CppUnit::TestCaseMethodFunctor::operator()() const ()
   from /usr/lib64/libcppunit-1.12.so.1
#8  0x000000334ee1a064 in CppUnit::DefaultProtector::protect(CppUnit::Functor const&, CppUnit::ProtectorContext const&) () from /usr/lib64/libcppunit-1.12.so.1
#9  0x000000334ee21647 in CppUnit::ProtectorChain::protect(CppUnit::Functor const&, CppUnit::ProtectorContext const&) () from /usr/lib64/libcppunit-1.12.so.1
#10 0x000000334ee2a854 in CppUnit::TestResult::protect(CppUnit::Functor const&, CppUnit::Test*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) ()
   from /usr/lib64/libcppunit-1.12.so.1
#11 0x000000334ee24a18 in CppUnit::TestCase::run(CppUnit::TestResult*) ()
   from /usr/lib64/libcppunit-1.12.so.1:
{quote}

Regarding callback voidCompletion, there are 2 possible code paths:
a)zookeeper_process. this is the expected call in this test. ""Processing AUTH_XID"" will be logged after the processing, if debug is on.
b)zookeeper_close->process_completions. when we close connection.


in this case we hit the 2nd code path, when we leave testAuth and destruct watchCtx object.
however, that is not the first failure.  the real problem is actually this line:

{code}
        // auth as pat, create /tauth1, close session
        rc = zoo_add_auth(zk, ""digest"", ""pat:passwd"", 10, voidCompletion,
                          (void*)ZOK);
        CPPUNIT_ASSERT_EQUAL((int) ZOK, rc); 
        waitForVoidCompletion(3); //wait for 3 seconds, then decrement count anyway.
        CPPUNIT_ASSERT(count == 0);  //<--- the count is -1, the assert fails and throw exception, cppunit try/catch triggered object destructor, which triggers zookeeper_close code path and the callback.
{code}

the related code of cppunit:

{code}
 #define CPPUNIT_ASSERT(condition)                                                 \
  ( CPPUNIT_NS::Asserter::failIf( !(condition),                                   \
                                 CPPUNIT_NS::Message( ""assertion failed"",         \
                                                      ""Expression: "" #condition), \
                                 CPPUNIT_SOURCELINE() ) )

void
Asserter::failIf( bool shouldFail,
                  const Message &message,
                  const SourceLine &sourceLine )
{
  if ( shouldFail )
    fail( message, sourceLine );
}

void
Asserter::fail( const Message &message,
                const SourceLine &sourceLine )
{
  throw Exception( message, sourceLine );
}                                 

//exception should be caught here

bool
DefaultProtector::protect( const Functor &functor,
                           const ProtectorContext &context )
{
  try
  {
    return functor(); //call the Testcase function
  }
  catch ( Exception &failure )
  {
    reportFailure( context, failure );
  }
  catch ( std::exception &e )
  {
    std::string shortDescription( ""uncaught exception of type "" );
#if CPPUNIT_USE_TYPEINFO_NAME
    shortDescription += TypeInfoHelper::getClassName( typeid(e) );
#else
    shortDescription += ""std::exception (or derived)."";
#endif
    Message message( shortDescription, e.what() );
    reportError( context, message );
  }
  catch ( ... )
  {
    reportError( context,
                 Message( ""uncaught exception of unknown type"") );
  }

  return false;
}

{code}


in short it is a typical problem of rule 8, ""Effective C++""







;;;","18/Sep/14 07:20;tianq;the proposed fix:
1)do not call cppunit assert in callback function, to avoid raising exception in destructor
2)using volatile for synchronization is not correct. see http://en.wikipedia.org/wiki/Volatile_variable. using built-in AtomicInt instead.
3)increase the timeout a bit.

with the new code, if timeout is not long enough, it will report line 547 correctly as below:
{code}
     [exec] /home/tianq/zookeeper/src/c/tests/TestClient.cc:547: Assertion: assertion failed [Expression: count.get() == 0]
     [exec] Failures !!!
     [exec] Run: 59   Failure total: 1   Failures: 1   Errors: 0
     [exec] make: *** [run-check] Error 1

{code}
;;;","19/Jul/17 20:25;onpduo;I also hit this issue, Qiang's patch works for me.

[~phunt_impala_99b5]  Could you or someone else review this patch?;;;","17/Jun/23 05:50;kezhuw;We are approaching 3.9, but this still fails.

https://github.com/apache/zookeeper/actions/runs/5293664382/jobs/9582082913#step:7:1837

{noformat}
     [exec] terminate called after throwing an instance of 'CppUnit::Exception'
     [exec]   what():  equality assertion failed
     [exec] - Expected: 0
     [exec] - Actual  : -116
     [exec] 
     [exec] Zookeeper_simpleSystem::testAuthFAIL: zktest-mt
{noformat}
 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Startup order in ServerCnxnFactory-ies is wrong,ZOOKEEPER-2026,12738358,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,sslavic,sslavic,sslavic,02/Sep/14 07:21,29/Sep/14 10:31,29/Jun/25 13:34,28/Sep/14 17:23,3.4.6,3.5.0,,,,,,,,,,,,,,,,,,,,,,,3.4.7,3.5.1,3.6.0,,,jmx,server,,,,0,,,"{{NIOServerCnxnFactory}} and {{NettyServerCnxnFactory}} {{startup}} method implementations are binding {{ZooKeeperServer}} too late, so in {{ZooKeeperServer}} in its startup can fail to register appropriate JMX MBean.

See [this|http://mail-archives.apache.org/mod_mbox/zookeeper-user/201409.mbox/%3CCAAUywg9-ad3oWfqRWahB9PyBEbg6%2Bd%3DDyj5PAUU7A%3Dm9wRncaw%40mail.gmail.com%3E] post on ZK user mailing list for more details.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Sep/14 17:46;rakeshr;ZOOKEEPER-2026-br3-4.patch;https://issues.apache.org/jira/secure/attachment/12671709/ZOOKEEPER-2026-br3-4.patch","10/Sep/14 13:25;rakeshr;ZOOKEEPER-2026.patch;https://issues.apache.org/jira/secure/attachment/12667661/ZOOKEEPER-2026.patch","02/Sep/14 07:23;sslavic;ZOOKEEPER-2026.patch;https://issues.apache.org/jira/secure/attachment/12665863/ZOOKEEPER-2026.patch",,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Sep 29 10:31:10 UTC 2014,,,,,,,,,,"0|i1zkfr:",9223372036854775807,,,,,,,,,,,,jmx,,,,,,,,,"02/Sep/14 07:23;sslavic;Attached [^ZOOKEEPER-2026.patch];;;","02/Sep/14 07:58;rakeshr;More Details: [zk user mailing thread - registering zookeeperserver jmx mbean | http://qnalist.com/questions/5107991/servercnxnfactory-startup-order-and-registering-zookeeperserver-jmx-mbean]

Thanks [~sslavic]. Could you add testcase for this.;;;","02/Sep/14 08:11;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12665863/ZOOKEEPER-2026.patch
  against trunk revision 1621313.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2308//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2308//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2308//console

This message is automatically generated.;;;","10/Sep/14 13:31;rakeshr;Attached latest patch with testcases. Please review, Thanks!;;;","10/Sep/14 14:22;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12667661/ZOOKEEPER-2026.patch
  against trunk revision 1623916.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2324//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2324//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2324//console

This message is automatically generated.;;;","16/Sep/14 09:46;rakeshr;Can someone help to review this changes and get a +1 for the proposed patch/fix. Thanks!. I feel this will give improvement in build testcases.;;;","16/Sep/14 09:57;sslavic;+1 (non-binding)

Is there a ticket to resolve failing tests, to make the build stable?;;;","16/Sep/14 10:18;rakeshr;AFAIK, there are few JMX bean related issues observed when analysing ZOOKEEPER-1833 (its an umbrella JIRA used for fixing build issues).;;;","28/Sep/14 17:26;rakeshr;Thanks Stevo!

Attaching branch3.4 committed patch.

[~fpj], [~michim] Could you help to assign the issue ""Stevo Slavic"";;;","28/Sep/14 17:26;rakeshr;Committed to trunk : http://svn.apache.org/viewvc?view=revision&revision=1628086
Committed to br3.4 : http://svn.apache.org/viewvc?view=revision&revision=1628087
Committed to br3.5 : http://svn.apache.org/viewvc?view=revision&revision=1628088;;;","29/Sep/14 07:55;sslavic;Thanks [~rakeshr] for providing tests and merging this one.;;;","29/Sep/14 09:20;rakeshr;Thank you [~michim] for assigning the jira to [~sslavic].;;;","29/Sep/14 10:31;hudson;FAILURE: Integrated in ZooKeeper-trunk #2453 (See [https://builds.apache.org/job/ZooKeeper-trunk/2453/])
ZOOKEEPER-2026 Startup order in ServerCnxnFactory-ies is wrong (Stevo Slavic via rakeshr) (rakeshr: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1628086)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/NIOServerCnxnFactory.java
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/NettyServerCnxnFactory.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/server/ZooKeeperServerMainTest.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
I found memory leak in zk client for c++,ZOOKEEPER-2015,12735750,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Not A Problem,,phipgao,phipgao,21/Aug/14 10:00,12/Nov/15 23:11,29/Jun/25 13:34,25/Aug/14 05:55,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,3.4.6,,,,,c client,,,,,0,,,"==15070== 895,632 bytes in 57,640 blocks are indirectly lost in loss record 370 of 371
==15070==    at 0x4C2677B: calloc (vg_replace_malloc.c:593)
==15070==    by 0x4C59BB: deserialize_String_vector (zookeeper.jute.c:245)
==15070==    by 0x4C5AE7: deserialize_GetChildrenResponse (zookeeper.jute.c:874)
==15070==    by 0x4BEE7E: zookeeper_process (zookeeper.c:1906)
==15070==    by 0x4BFF8E: do_io (mt_adaptor.c:439)
==15070==    by 0x4E36850: start_thread (in /lib64/libpthread-2.12.so)
==15070==    by 0x58D367C: clone (in /lib64/libc-2.12.so)
==15070==
==15070== 1,946,648 (1,051,016 direct, 895,632 indirect) bytes in 64,035 blocks are definitely lost in loss record 371 of 371
==15070==    at 0x4C2677B: calloc (vg_replace_malloc.c:593)
==15070==    by 0x4C59BB: deserialize_String_vector (zookeeper.jute.c:245)
==15070==    by 0x4C5AE7: deserialize_GetChildrenResponse (zookeeper.jute.c:874)
==15070==    by 0x4BEE7E: zookeeper_process (zookeeper.c:1906)
==15070==    by 0x4BFF8E: do_io (mt_adaptor.c:439)
==15070==    by 0x4E36850: start_thread (in /lib64/libpthread-2.12.so)
==15070==    by 0x58D367C: clone (in /lib64/libc-2.12.so)",linux/centos 6.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-1556,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Nov 12 23:11:05 UTC 2015,,,,,,,,,,"0|i1z6fr:",9223372036854775807,it's not a bug. the client user muster release the memory manually.,,,,,,,,,,,,,,,,,,,,"21/Aug/14 18:24;rgs;thanks for the report [~phipgao], are you planning on proposing a patch (if so you can assign the issue to yourself). Thanks!;;;","25/Aug/14 02:41;phipgao;I'm going to do fix it, but i fount it's difficult.please fix it.;;;","22/Apr/15 08:11;jianyuepai;hi i met the same problem
can i ask how to release the memory manually?;;;","30/Apr/15 02:58;ljsking;I resolved same problem, using deallocate_String_vector function.;;;","12/Nov/15 23:11;Hadriel;looks like the same issue;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zkCli does not execute command passed as arguments,ZOOKEEPER-2009,12734015,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Duplicate,,thecoop1984,thecoop1984,14/Aug/14 09:39,16/Aug/16 23:45,29/Jun/25 13:34,16/Aug/16 23:45,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,regression,,"In 3.4.5, zkCli executed commands passed on the command line. This command would create the {{/test}} znode and exit, with a non-zero exit code if the command failed:

{code}
$ ./zkCli.sh create /test null
{code}

This is no longer the case in 3.4.6 - the command is not executed, but zkCli still runs & exits with a zero exit code.

The interim workaround in bash is to use here documents:

{code}
$ ./zkCli.sh <<EOF
create /test null
EOF
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-1897,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,412043,,,,,Tue Aug 16 23:45:32 UTC 2016,,,,,,,,,,"0|i1yvvr:",412032,,,,,,,,,,,,,,,,,,,,,"14/Aug/14 09:41;thecoop1984;Oops, duplicate of ZOOKEEPER-2004...;;;","12/Sep/14 13:52;thecoop1984;And of ZOOKEEPER-1897;;;","18/May/15 05:55;guy.moshkowich;[~gnoremac]: 
can you please close this defect as duplicate of ZOOKEEPER-1897 which you resolved?;;;","16/Aug/16 23:45;eribeiro;Another duplicate of ZOOKEEPER-1897 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
System test fails due to missing leader election port,ZOOKEEPER-2008,12733427,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,kfirlevari,kfirlevari,kfirlevari,12/Aug/14 09:20,30/Aug/14 18:47,29/Jun/25 13:34,14/Aug/14 07:37,3.5.0,,,,,,,,,,,,,,,,,,,,,,,,3.5.1,3.6.0,,,,contrib-fatjar,,,,,0,,,Leader election and client ports are not initialized when creating a QuorumServer during system tests.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,0,,0%,0,0,,,,,,,,,,,,,,,,,,,,,,,"14/Aug/14 11:14;kfirlevari;ZOOKEEPER-2008.patch;https://issues.apache.org/jira/secure/attachment/12661697/ZOOKEEPER-2008.patch","14/Aug/14 12:29;kfirlevari;ZOOKEEPER-2008_2.patch;https://issues.apache.org/jira/secure/attachment/12661704/ZOOKEEPER-2008_2.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,411455,Reviewed,,,,Fri Aug 15 13:46:34 UTC 2014,,,,,,,,,,"0|i1yscf:",411446,,,,,,,,,,,,,,,,,,,,,"12/Aug/14 13:42;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12661179/ZOOKEEPER-2008.patch
  against trunk revision 1615240.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 9 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2272//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2272//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2272//console

This message is automatically generated.;;;","13/Aug/14 07:03;shralex;Thanks, Kfir. This looks good to me. Do you mind adding a few comments about what's in r[0], r[1], etc. to save some time for the next person trying to figure it out :)

Anyone else can take a look ? [~breed] [~fpj];;;","13/Aug/14 11:07;kfirlevari;Sure ;) (take a look)
;;;","13/Aug/14 12:02;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12661431/ZOOKEEPER-2008.patch
  against trunk revision 1615240.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 9 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2276//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2276//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2276//console

This message is automatically generated.;;;","13/Aug/14 15:48;shralex;Thanks Kfir. One last thing if you don't mind - when appending the client port to the server string, could you have "";"" instead of "":"" ? This would match the format of the server spec in the configuration files in 3.5.0. 
So I mean host:port1:port2;clientPort      
client string is ok as you have it - host:port

;;;","13/Aug/14 15:48;shralex;do you have a JIRA username ? you could assign this JIRA to yourself;;;","14/Aug/14 07:36;shralex;The change looks good to me, I committed it to trunk and 3.5 branch.

Thanks a lot, Kfir!
;;;","14/Aug/14 11:23;kfirlevari;Alex, please use the new patch.
The previous one is missing some needed brackets around the host string.
;;;","14/Aug/14 12:03;hudson;SUCCESS: Integrated in ZooKeeper-trunk #2406 (See [https://builds.apache.org/job/ZooKeeper-trunk/2406/])
ZOOKEEPER-2008. Missing leader election port in system test. (Kfir Lev-Ari via Alex Shraer). (shralex: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1617892)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/systest/org/apache/zookeeper/test/system/BaseSysTest.java
* /zookeeper/trunk/src/java/systest/org/apache/zookeeper/test/system/GenerateLoad.java
* /zookeeper/trunk/src/java/systest/org/apache/zookeeper/test/system/QuorumPeerInstance.java
;;;","14/Aug/14 12:44;shralex;committed the fix.;;;","15/Aug/14 13:46;hudson;SUCCESS: Integrated in ZooKeeper-trunk #2407 (See [https://builds.apache.org/job/ZooKeeper-trunk/2407/])
ZOOKEEPER-2008-Fix. Correcting small issue in committed 2008 patch. (shralex: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1617921)
* /zookeeper/trunk/src/java/systest/org/apache/zookeeper/test/system/QuorumPeerInstance.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zkServer.sh returns with a zero exit status when a ZooKeeper process is already running,ZOOKEEPER-1991,12729996,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,gsbiju,reedwm,reedwm,26/Jul/14 01:29,21/Jul/16 20:18,29/Jun/25 13:34,02/Mar/16 18:33,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,3.5.2,3.6.0,,,,scripts,,,,,0,,,"If ZooKeeper is started with zkServer.sh, and an error is shown that a ZooKeeper process is already running, the command returns with an exit status of 0, while it should end with a non-zero exit status.

Example:
$ bin/zkServer.sh start
JMX enabled by default
Using config: /home/reed/zookeeper/bin/../conf/zoo.cfg
Starting zookeeper ... already running as process 25063.
$ echo $?
0

This can make it difficult for automated scripts to check if creating a new ZooKeeper process was successful, as it won't catch if a user accidentally started it before. 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Feb/16 23:28;gsbiju;ZOOKEEPER-1991.patch;https://issues.apache.org/jira/secure/attachment/12790607/ZOOKEEPER-1991.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,408069,,,,,Wed Mar 02 20:03:06 UTC 2016,,,,,,,,,,"0|i1y7tz:",408076,,,,,,,,,,,,,,,,,,,,,"26/Jul/14 17:18;phunt;Reed you want to give this a try? (patch I mean). Thanks.;;;","29/Feb/16 23:28;gsbiju;Patch to return RC of 1 if user tries to start ZooKeeper server when another instance of the server is currently running.;;;","29/Feb/16 23:29;gsbiju;[~phunt] could you please review the simple change?;;;","01/Mar/16 05:09;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12790607/ZOOKEEPER-1991.patch
  against trunk revision 1729259.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3055//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3055//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3055//console

This message is automatically generated.;;;","02/Mar/16 18:33;phunt;Looks good to me. Thanks [~gsbiju]!;;;","02/Mar/16 20:03;hudson;SUCCESS: Integrated in ZooKeeper-trunk #2835 (See [https://builds.apache.org/job/ZooKeeper-trunk/2835/])
ZOOKEEPER-1991 zkServer.sh returns with a zero exit status when a ZooKeeper process is already running (gsbiju via phunt) (phunt: [http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1733348])
* trunk/bin/zkServer.sh
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client does not detect rejected connections,ZOOKEEPER-1958,12725895,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,odysseus654,odysseus654,08/Jul/14 00:32,08/Jul/14 06:33,29/Jun/25 13:34,,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,c client,,,,,0,,,"When attempting to connect to a zookeeper server that is not currently running, the connection will return the ""connection refused"" message through the timeout logic.  This is because Windows is returning the error code through select->error rather than select->write (which is what the logic is apparently expecting)

Patch is pending",Windows 7 64bit,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jul/14 06:33;odysseus654;ZOOKEEPER-1958.patch;https://issues.apache.org/jira/secure/attachment/12654474/ZOOKEEPER-1958.patch","08/Jul/14 00:35;odysseus654;ZOOKEEPER-1958.patch;https://issues.apache.org/jira/secure/attachment/12654416/ZOOKEEPER-1958.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,404053,,,,,Tue Jul 08 06:33:43 UTC 2014,,,,,,,,,,"0|i1xjg7:",404094,,,,,,,,,,,,,,,,,,,,,"08/Jul/14 06:33;odysseus654;A second submission, without the extraneous #define bars;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support Cleanup script in windows,ZOOKEEPER-1956,12725710,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,nijel,nijel,07/Jul/14 10:04,03/Mar/16 01:51,29/Jun/25 13:34,,3.4.6,3.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,"The script zkCleanup.sh support cleaning the zk data in linux system.
The same function needs to be supported in windows also",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,403868,,,,,Thu Mar 03 01:51:54 UTC 2016,,,,,,,,,,"0|i1xibr:",403911,Supporting cleaning snapshots log history via Windows script.,,,,,,,,,,,,,,,,,,,,"20/May/15 07:02;guy.moshkowich;I tested the fix with 3.4.6 version by populating ZooKeeper and creating many snapshots logs, then run the script by clicking it from a folder and also by running it from command line.
I verified that the number of snapshots to keep is read correctly by the script.;;;","22/May/15 08:17;guy.moshkowich;[~nijel]: Would you like to check if my patch resolved your issue?
[~guy.moshkowich] ;;;","04/Sep/15 04:12;nijel;[~guy.moshkowich]
Sorry for late reply :(

Did you delete the patch ? ;;;","04/Sep/15 04:13;nijel;[~guy.moshkowich]
Sorry for late reply 
Did you delete the patch ? could not find the file !;;;","03/Mar/16 01:51;phunt;Moving out of PA as this doesn't have a patch attached.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StaticHostProvider loses IPv6 scope ID when resolving server addresses,ZOOKEEPER-1954,12725375,Bug,In Progress,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,bhavanki,bhavanki,03/Jul/14 20:45,18/Jun/15 12:58,29/Jun/25 13:34,,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,java client,,,,,2,,,"I have been getting constant failures of the {{ClientPortBindTest}} unit test (see ZOOKEEPER-1256) on my Macbook. I traced the problem to loss of the IPv6 scope ID on the address chosen for the loopback address in the unit test.

The address chosen is: fe80:0:0:0:0:0:0:1%1. The scope ID here is 1, after the percent sign.

The scope ID is lost in the {{resolveAndShuffle()}} method of {{StaticHostProvider}}. The method uses {{InetAddress.getByAddress()}} which apparently does not preserve the scope ID in the host string it is passed. {{Inet6Address.getByAddress()}} can, although you have to parse the scope ID out of the host string yourself and pass it as its own parameter.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-1256,ZOOKEEPER-1476,,,,,,"07/Jul/14 15:08;bhavanki;ZOOKEEPER-1954.patch;https://issues.apache.org/jira/secure/attachment/12654329/ZOOKEEPER-1954.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,403535,,,,,Thu Jun 18 12:58:18 UTC 2015,,,,,,,,,,"0|i1xgaf:",403579,,,,,,,,,,,,,,,,,,,,,"07/Jul/14 15:09;bhavanki;Patch available for review.;;;","18/Jun/15 08:06;sslavic;[~bhavanki] consider removing yourself as assignee and setting issue status to todo instead of in progress.
I've turned on flag in JIRA that the issue has a patch.

I'm guessing it may help ZooKeeper committers find issues which are pending to be done, and have patches. Now they may think issue is being actively worked on by someone.;;;","18/Jun/15 12:58;bhavanki;Thanks for the reminder. I've unassigned myself but can't seem to change the status.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Default log directory and file name can be changed,ZOOKEEPER-1952,12724957,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,nijel,nijel,nijel,02/Jul/14 12:26,02/Mar/15 11:14,29/Jun/25 13:34,01/Mar/15 16:50,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,3.5.1,3.6.0,,,,,,,,,0,,,"The log folder and log file name is configurable now.
The default log folder is ""."" in distribution. So the log file (zookeeper.out) will be placed in bin folder

Can this be changed to <zk_home>/logs/zookeeperserver-<hostname>.log ?
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Jul/14 08:40;nijel;ZOOKEEPER-1952-1.patch;https://issues.apache.org/jira/secure/attachment/12654287/ZOOKEEPER-1952-1.patch","10/Feb/15 09:31;haridsv;ZOOKEEPER-1952-2.patch;https://issues.apache.org/jira/secure/attachment/12697696/ZOOKEEPER-1952-2.patch","11/Feb/15 15:01;haridsv;ZOOKEEPER-1952-3.patch;https://issues.apache.org/jira/secure/attachment/12698100/ZOOKEEPER-1952-3.patch","13/Feb/15 04:10;rakeshr;ZOOKEEPER-1952-4.patch;https://issues.apache.org/jira/secure/attachment/12698627/ZOOKEEPER-1952-4.patch","20/Feb/15 03:48;rakeshr;ZOOKEEPER-1952-5.patch;https://issues.apache.org/jira/secure/attachment/12699806/ZOOKEEPER-1952-5.patch",,,,,,5.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,403140,,,,,Mon Mar 02 11:14:56 UTC 2015,,,,,,,,,,"0|i1xdy7:",403198,,,,,,,,,,,,,,,,,,,,,"05/Jul/14 16:12;fpj;[~nijel], do you want to propose a patch?;;;","07/Jul/14 08:34;nijel;Attaching patch;;;","07/Jul/14 08:40;nijel;Thanks Flavio for taking a look in the issue

Attached patch with the changes. 

Had to change zkCli and server scripts for adding the log file name since there is no unified script.
Changed the default logger to Rolling file.
;;;","07/Jul/14 08:40;nijel;Updated the patch;;;","16/Sep/14 12:58;rakeshr;Thanks [~nijel]. Just one comment. Please use 'ZOO_LOGFILE' instead of 'ZOOKEEPER_LOGFILE', so that it will be in sync with other variable names.

Also, patch not applying in trunk, could you use rebase the patch.;;;","06/Feb/15 13:32;haridsv;I got the patch to apply against current trunk and made the below further changes:
- Renamed ZOOKEEPER_LOGFILE to ZOO_LOG_FILE to be consistent with the rest
- There was a typo in the original patch where ZOOKEEPR_LOGFILE was used in 3 different places, I changed these also to ZOO_LOG_FILE.
- I reverted the change to log4j.properties. The current defaults are actually consistent with the other related projects such as hadoop and hbase.

I can submit the new patch after some more testing, is that fine?;;;","10/Feb/15 09:31;haridsv;Other than regenerating the original patch against latest trunk, I made the following additional changes:
- Renamed ZOOKEEPER_LOGFILE to ZOO_LOG_FILE to be consistent with the rest
- There was a typo in the original patch where ZOOKEEPR_LOGFILE was used in 3 different places, I changed these also to ZOO_LOG_FILE.
- I reverted the change to logger configuration. The current default logger is actually consistent with the other related projects such as hadoop and hbase.
- Changed the log and out filenames to be more consistent with other sister projects, basically to ""zookeeper-$USER-$COMP-$HOST"" from ""zookeeper-$COMP-$USER-$HOST"" which was the case in the original patch.;;;","10/Feb/15 09:32;haridsv;[~rakeshr] Could you take a look at the latest patch?;;;","10/Feb/15 18:30;rakeshr;Thanks [~haridsv] for fixing the review comments. Just few more:
# default logger is not consistent in zkEnv.sh and zkEnv.cmd
{code}
zkEnv.sh
   ZOO_LOG4J_PROP=""INFO,ROLLINGFILE""

zkEnv.cmd
   set ZOO_LOG4J_PROP=INFO,CONSOLE
{code}
# Missing ""zookeeper.tracelog.dir"" in log4j.properties. Otw it would go to current directory, right?
{code}
zookeeper.tracelog.dir=${zookeeper.log.dir}
{code}
;;;","11/Feb/15 15:01;haridsv;Thanks [~rakeshr] for catching the mistakes. Uploaded a new patch.;;;","13/Feb/15 04:10;rakeshr;Reattaching the previous patch to get the QA report.;;;","16/Feb/15 08:49;rakeshr;[PreCommit build-2519|https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2519/] is getting timed out and aborting. I tried comparing with previous build report, I could see {{call-test-cppunit:}} task was not executing previously. The last two run this task has been triggered and does this cause the delay?. Appreciate any help in resolving this and make the pre-commit work.
{code}
Build timed out (after 75 minutes). Marking the build as aborted.
Build was aborted
Archiving artifacts
Sending artifact delta relative to PreCommit-ZOOKEEPER-Build #2489
Archived 18 artifacts
Archive block size is 32768
Received 0 blocks and 33357213 bytes
Compression is 0.0%
Took 8.3 sec
Recording test results
Description set: ZOOKEEPER-1952
No emails were triggered.
Finished: ABORTED
{code};;;","17/Feb/15 12:23;haridsv;I don't know much about this, but it looks like the unit tests took almost the same amount of time (about 42min) compared to the last good build, so not sure where it is taking more time in the latest steps, any possibility to log a few timestamps during these later phases?;;;","19/Feb/15 17:28;haridsv;[~rakeshr] Is there anything I can help with here? Do you think it is an intermediate problem? I have seen it a couple of times in the older builds and it recovered back. Could you give trigger another build and see how it goes?;;;","20/Feb/15 03:51;rakeshr;bq.Could you give trigger another build and see how it goes?
Thanks [~haridsv] for the reminder. FYI: usually for triggering the pre-commit build, just reattach the patch again, then press {{Submit Patch}} button. I've reattached the patch again and lets see how it goes.;;;","20/Feb/15 04:35;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12699806/ZOOKEEPER-1952-5.patch
  against trunk revision 1658888.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2522//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2522//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2522//console

This message is automatically generated.;;;","20/Feb/15 05:16;rakeshr;+1 looks good to me. Test failures are unrelated.;;;","20/Feb/15 05:18;haridsv;[~rakeshr] Thank you! ;;;","26/Feb/15 11:36;haridsv;[~rakeshr] Is there anything pending from my side to get this issue resolved?;;;","27/Feb/15 05:15;nijel;Thanks Hari for the patch

Patch Looks good to me;;;","27/Feb/15 05:21;haridsv;Thanks [~nijel]! How do we go about getting the patch applied so it will be part of next release?;;;","27/Feb/15 05:30;rakeshr;Thanks [~haridsv], [~nijel] for the contribution. If there is no more comments from others will commit it tomorrow.;;;","01/Mar/15 16:49;rakeshr;
Committed to trunk : http://svn.apache.org/viewvc?view=revision&revision=1663127
Committed to br3.5 : http://svn.apache.org/viewvc?view=revision&revision=1663128;;;","02/Mar/15 11:14;hudson;FAILURE: Integrated in ZooKeeper-trunk #2612 (See [https://builds.apache.org/job/ZooKeeper-trunk/2612/])
ZOOKEEPER-1952 Default log directory and file name can be changed(nijel, Hari Krishna Dara via rakeshr) (rakeshr: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1663127)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/bin/zkCleanup.sh
* /zookeeper/trunk/bin/zkCli.cmd
* /zookeeper/trunk/bin/zkCli.sh
* /zookeeper/trunk/bin/zkEnv.cmd
* /zookeeper/trunk/bin/zkEnv.sh
* /zookeeper/trunk/bin/zkServer.cmd
* /zookeeper/trunk/bin/zkServer.sh
* /zookeeper/trunk/conf/log4j.properties
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Server exits when unable to create data directory due to race ,ZOOKEEPER-1936,12720291,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,yuzhihong@gmail.com,hmusum,hmusum,10/Jun/14 07:25,24/Jan/20 14:20,29/Jun/25 13:34,23/Jan/20 15:47,3.4.6,3.5.0,,,,,,,,,,,,,,,,,,,,,,,3.6.0,,,,,server,,,,,3,pull-request-available,,"We sometime see issues with ZooKeeper server not starting and seeing this error in the log:


[2014-05-27 09:29:48.248] ERROR   : -               
.org.apache.zookeeper.server.ZooKeeperServerMain    Unexpected exception,
exiting abnormally\nexception=\njava.io.IOException: Unable to create data
directory /home/y/var/zookeeper/version-2\n\tat
org.apache.zookeeper.server.persistence.FileTxnSnapLog.<init>(FileTxnSnapLog.java:85)\n\tat
org.apache.zookeeper.server.ZooKeeperServerMain.runFromConfig(ZooKeeperServerMain.java:103)\n\tat
org.apache.zookeeper.server.ZooKeeperServerMain.initializeAndRun(ZooKeeperServerMain.java:86)\n\tat
org.apache.zookeeper.server.ZooKeeperServerMain.main(ZooKeeperServerMain.java:52)\n\tat
org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:116)\n\tat
org.apache.zookeeper.server.quorum.QuorumPeerMain.main(QuorumPeerMain.java:78)\n\t
[...]

Stack trace from JVM gives this:

""PurgeTask"" daemon prio=10 tid=0x000000000201d000 nid=0x1727 runnable
[0x00007f55d7dc7000]
   java.lang.Thread.State: RUNNABLE
    at java.io.UnixFileSystem.createDirectory(Native Method)
    at java.io.File.mkdir(File.java:1310)
    at java.io.File.mkdirs(File.java:1337)
    at
org.apache.zookeeper.server.persistence.FileTxnSnapLog.<init>(FileTxnSnapLog.java:84)
    at org.apache.zookeeper.server.PurgeTxnLog.purge(PurgeTxnLog.java:68)
    at
org.apache.zookeeper.server.DatadirCleanupManager$PurgeTask.run(DatadirCleanupManager.java:140)
    at java.util.TimerThread.mainLoop(Timer.java:555)
    at java.util.TimerThread.run(Timer.java:505)

""zookeeper server"" prio=10 tid=0x00000000027df800 nid=0x1715 runnable
[0x00007f55d7ed8000]
   java.lang.Thread.State: RUNNABLE
    at java.io.UnixFileSystem.createDirectory(Native Method)
    at java.io.File.mkdir(File.java:1310)
    at java.io.File.mkdirs(File.java:1337)
    at
org.apache.zookeeper.server.persistence.FileTxnSnapLog.<init>(FileTxnSnapLog.java:84)
    at
org.apache.zookeeper.server.ZooKeeperServerMain.runFromConfig(ZooKeeperServerMain.java:103)
    at
org.apache.zookeeper.server.ZooKeeperServerMain.initializeAndRun(ZooKeeperServerMain.java:86)
    at
org.apache.zookeeper.server.ZooKeeperServerMain.main(ZooKeeperServerMain.java:52)
    at
org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:116)
    at
org.apache.zookeeper.server.quorum.QuorumPeerMain.main(QuorumPeerMain.java:78)
[...]

So it seems that when autopurge is used (as it is in our case), it might happen at the same time as starting the server itself. In FileTxnSnapLog() it will check if the directory exists and create it if not. These two tasks do this at the same time, and mkdir fails and server exits the JVM.

",,"anmolnar commented on pull request #1225: ZOOKEEPER-1936. Server exits when unable to create data directory due to race 
URL: https://github.com/apache/zookeeper/pull/1225
 
 
   Resurrecting an ancient ticket which could be fixed with a simple patch.
   
   Jira mentions a scenario when auto purging tool is in use and Zookeeper server could have a race condition when creating snapshot and data directories. (directory auto creating is enabled by default)
   
   Double checking the directory existence might help with it.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Jan/20 12:43;githubbot;600","symat commented on issue #1225: ZOOKEEPER-1936. Server exits when unable to create data directory due to race 
URL: https://github.com/apache/zookeeper/pull/1225#issuecomment-576617622
 
 
   LGTM
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Jan/20 10:28;githubbot;600","asfgit commented on pull request #1225: ZOOKEEPER-1936. Server exits when unable to create data directory due to race 
URL: https://github.com/apache/zookeeper/pull/1225
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 15:46;githubbot;600","eolivelli commented on issue #1225: ZOOKEEPER-1936. Server exits when unable to create data directory due to race 
URL: https://github.com/apache/zookeeper/pull/1225#issuecomment-577740132
 
 
   committed to master and branch-3.6
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 15:47;githubbot;600","anmolnar commented on issue #1225: ZOOKEEPER-1936. Server exits when unable to create data directory due to race 
URL: https://github.com/apache/zookeeper/pull/1225#issuecomment-577814443
 
 
   @eolivelli Thanks. Shall we backport this to 3.5?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 18:35;githubbot;600","eolivelli commented on issue #1225: ZOOKEEPER-1936. Server exits when unable to create data directory due to race 
URL: https://github.com/apache/zookeeper/pull/1225#issuecomment-577816768
 
 
   @anmolnar yes it makes sense
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 18:41;githubbot;600","anmolnar commented on issue #1225: ZOOKEEPER-1936. Server exits when unable to create data directory due to race 
URL: https://github.com/apache/zookeeper/pull/1225#issuecomment-578149117
 
 
   I cherry-picked it to branch-3.5
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jan/20 14:20;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4200,,,0,4200,,,,,,,,,,,,,,,,,,,,,,"30/Sep/16 20:13;yuzhihong@gmail.com;ZOOKEEPER-1936.branch-3.4.patch;https://issues.apache.org/jira/secure/attachment/12831161/ZOOKEEPER-1936.branch-3.4.patch","20/Aug/14 18:24;apurtell;ZOOKEEPER-1936.patch;https://issues.apache.org/jira/secure/attachment/12663176/ZOOKEEPER-1936.patch","14/Jan/16 22:12;yuzhihong@gmail.com;ZOOKEEPER-1936.v2.patch;https://issues.apache.org/jira/secure/attachment/12782377/ZOOKEEPER-1936.v2.patch","20/Jan/16 06:03;yuzhihong@gmail.com;ZOOKEEPER-1936.v3.patch;https://issues.apache.org/jira/secure/attachment/12783285/ZOOKEEPER-1936.v3.patch","15/Jan/16 18:38;yuzhihong@gmail.com;ZOOKEEPER-1936.v3.patch;https://issues.apache.org/jira/secure/attachment/12782581/ZOOKEEPER-1936.v3.patch","29/Jan/16 19:17;yuzhihong@gmail.com;ZOOKEEPER-1936.v4.patch;https://issues.apache.org/jira/secure/attachment/12785224/ZOOKEEPER-1936.v4.patch","30/Sep/16 20:26;yuzhihong@gmail.com;ZOOKEEPER-1936.v5.patch;https://issues.apache.org/jira/secure/attachment/12831166/ZOOKEEPER-1936.v5.patch",,,,7.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,398490,,,,,Thu Jan 23 15:47:09 UTC 2020,,,,,,,,,,"0|i1wlsf:",398615,,,,,,,,,,,,,,,,,,,,,"20/Aug/14 18:24;apurtell;Attached patch applies to trunk and branch-3.4;;;","20/Aug/14 21:24;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12663176/ZOOKEEPER-1936.patch
  against trunk revision 1619166.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2292//console

This message is automatically generated.;;;","21/Aug/14 18:35;rgs;lgtm, +1. cc: [~shralex], [~phunt];;;","08/Jan/16 17:48;yuzhihong@gmail.com;We encountered this issue during testing, though intermittently.

Can the fix be committed ?
[~shralex] [~phunt];;;","08/Jan/16 18:15;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12663176/ZOOKEEPER-1936.patch
  against trunk revision 1720227.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3005//console

This message is automatically generated.;;;","08/Jan/16 18:18;yuzhihong@gmail.com;[~fpj]:
Can you take a look ?

Thanks;;;","14/Jan/16 22:12;yuzhihong@gmail.com;Alternate patch for consideration.

Only throw exception if dataDir doesn't exist and mkdirs() call fails.;;;","14/Jan/16 22:15;rgs;Thanks [~tedyu@apache.org] - looking. Maybe we can get this in for 3.4.8 as well. ;;;","14/Jan/16 22:16;rgs;cc: [~cnauroth], [~rakeshr];;;","15/Jan/16 00:21;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12782377/ZOOKEEPER-1936.v2.patch
  against trunk revision 1720227.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3008//console

This message is automatically generated.;;;","15/Jan/16 06:12;rakeshr;Thanks [~yuzhihong@gmail.com] for the fix. +1 for the additional {{#exists()}} check.

I've few comments:
# Could you consider {{snapDir}} creation too.
{code}
            if (!this.snapDir.mkdirs()) {
                throw new DatadirException(""Unable to create snap directory ""
                        + this.snapDir);
            }
{code}
# Can we reduce the nested calls. How about using AND operator like,
{code}
if (!this.dataDir.mkdirs() && !this.dataDir.exists())
{code};;;","15/Jan/16 16:10;fpj;what happens if the call to mkdir legitimaly fails? It looks like we would assume that the directory exists and would move on. I think we need to differentiate the dir existing from other issues when creating it. Does it sound reasonable?;;;","15/Jan/16 16:50;yuzhihong@gmail.com;After logging onto the node where the error happened, we found that dataDir didn't exist. 
So my patch doesn't suffice. 

Manual start on that node didn't reproduce the error though.

Comment is welcome.;;;","15/Jan/16 18:26;cnauroth;I'm in favor of the approach in patch v2.  This would be a deterministic fix.  Adding a delay like the first patch might still not work if we got unlucky in the way the OS scheduled the threads.  What do others think?

[~tedyu], could you please do the following?

# Make the same fix for {{snapDir}}, which is right after the code you already changed in {{FileTxnSnapLog}}.  Otherwise, we might get past the {{dataDir}} creation only to fail again on {{snapDir}}.
# Post 2 patch files: one that applied to trunk and one that applies to branch-3.4.
# Generate the patch files with {{git diff --no-prefix}} for compatibility with our pre-commit automation.

Thank you!;;;","15/Jan/16 18:42;yuzhihong@gmail.com;Patch v3 addresses comments from Chris and Rakesh.

The same patch can be applied smoothly on branch-3.4

Let me know if separate patch for branch-3.4 should be attached.;;;","15/Jan/16 18:55;fpj;but [~ted_yu] said that even with his patch {{dataDir}} wasn't created, and if what you suggest in step 1 fixed it, then the directory would be there, no? I'm actually wondering if there is something else causing trouble.;;;","15/Jan/16 18:57;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12782581/ZOOKEEPER-1936.v3.patch
  against trunk revision 1720227.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3009//console

This message is automatically generated.;;;","15/Jan/16 19:02;cnauroth;Yeah, my comments got crossed up, because I hadn't refreshed the page to see the latest.

Unfortunately, [{{File#mkdirs}}|http://docs.oracle.com/javase/7/docs/api/java/io/File.html#mkdirs()] only gives us a boolean response with no further information about root cause.  [~tedyu], do you think you can try as a troubleshooting step switching it to call [{{Files#createDirectories}}|http://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html#createDirectories(java.nio.file.Path,%20java.nio.file.attribute.FileAttribute...)] ?  That might give us more detailed information about the error.

We can't use the JDK 1.7 file APIs in the 3.4 maintenance line, so this would just be a temporary troubleshooting step.  We can use those APIs in trunk/branch-3.5 though.;;;","20/Jan/16 05:35;rgs;[~tedyu@apache.org]: mind generating the patch with something like:

{code}
git diff --no-prefix HEAD~1.. > ZOOKEEPER-1936.patch
{code}

The latest one you uploaded didn't apply cleanly. Patch lgtm, +1.

[~fpj], [~cnauroth]: mind giving it one last look?;;;","20/Jan/16 06:05;yuzhihong@gmail.com;Previous patch was generated for branch-3.4

Attached patch for trunk.;;;","20/Jan/16 06:17;rakeshr;For better understanding about the target branch, probably can include branch details while naming the patch, something like {{ZOOKEEPER-1936-br-3-4.patch}} and for trunk can use like {{ZOOKEEPER-1936.patch}};;;","20/Jan/16 06:20;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12783285/ZOOKEEPER-1936.v3.patch
  against trunk revision 1720227.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3010//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3010//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3010//console

This message is automatically generated.;;;","20/Jan/16 17:08;yuzhihong@gmail.com;https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3010//testReport/org.apache.zookeeper.test/AsyncHammerTest/testHammer/

doesn't seem to be related to the patch.;;;","22/Jan/16 22:47;yuzhihong@gmail.com;Any thing I need to do here ? [~rgs];;;","29/Jan/16 18:18;cnauroth;[~yuzhihong@gmail.com], my understanding is that you only can repro this in standalone mode, not when deploying a full ensemble.  Is that correct?  Did you get to a point where you had a consistent repro and were able to verify that this patch helped fix it?

The logic change looks correct to me, but I'm trying to figure out if there is really something more going on, as suggested in earlier comments.  Thanks!;;;","29/Jan/16 18:32;yuzhihong@gmail.com;Haven't got a chance to reproduce the bug.

After some QE fix, hbase un-secure deployment works reliably.;;;","29/Jan/16 18:44;cnauroth;It's a tough call then.  I don't see a way to write a deterministic JUnit test to prove the fix.  I'm reluctant to accept a code change without a test or a manual verification, at least on a stable maintenance line.

Here is my take on it.  Even without a consistent repro, I see the theoretical problem in the code.  The logic change in the patch looks correct to me, even if there might have been something more happening when Ted reported it.  Let's put a fix into trunk and branch-3.5, but not branch-3.4.  In trunk and branch-3.5, we also can make the switch to [{{Files#createDirectories}}|http://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html#createDirectories(java.nio.file.Path,%20java.nio.file.attribute.FileAttribute...)] that I mentioned earlier, because those branches are compiling to JDK 7.  That way, if we see another repro, we'll get additional debugging information to help with any subsequent patches.

Would some other committers like to comment on that plan?  Thanks!;;;","29/Jan/16 19:08;yuzhihong@gmail.com;Patch v4 addresses Chris' comment above;;;","29/Jan/16 19:15;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12785223/ZOOKEEPER-1936.v4.patch
  against trunk revision 1726354.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3021//console

This message is automatically generated.;;;","29/Jan/16 19:31;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12785224/ZOOKEEPER-1936.v4.patch
  against trunk revision 1726354.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3022//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3022//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3022//console

This message is automatically generated.;;;","29/Jan/16 20:04;cnauroth;There was a test failure in {{WatcherTest#testWatcherAutoResetWithLocal}}, but I can't reproduce it.;;;","28/Jul/16 13:10;mumrah;Are there any known scenarios that will trigger this race? We've seen it intermittently in an EC2 environment, but have yet to figure out why it happens there and not other environments. 

Also, any updates on the status of this issue?;;;","28/Jul/16 13:35;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12785224/ZOOKEEPER-1936.v4.patch
  against trunk revision 1754188.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3298//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3298//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3298//console

This message is automatically generated.;;;","28/Jul/16 18:03;cnauroth;Hello [~mumrah].  At this point, I don't believe any of us have a repro, so bringing in this patch was not prioritized.  I'm going to update fix version to 3.5.3 to indicate that as the next potential release to contain the patch.

I'm curious if you are running the 3.5 release line of ZooKeeper, and if so, do you have the ability to apply the latest proposed patch?  If we can get confirmation that the patch fixes the problem you're seeing in your environment, then that would help build confidence in the patch.;;;","28/Jul/16 19:11;nicholas.dipiazza;[~cnauroth] Is it going to be viciously hard to patch this against the 3.4 release? I took a stab at it and the codebases are pretty different so i didn't get too far and figured I'd ask you.

I looking into testing on the latest branch;;;","28/Jul/16 20:07;cnauroth;Hello [~nicholas.dipiazza].  The v3 patch attachment is similar logic that is compatible with the 3.4 release line.  If you can test your 3.4-based environment with that patch, then that would be interesting for us.  Thanks!;;;","29/Jul/16 02:26;nicholas.dipiazza;v1 and v2 patch with no changes. v3 doesn't:

{code}
branch-3.4
{code}

{code}
patch -p0 < ZOOKEEPER-1936.v3.patch
patching file src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
Hunk #1 FAILED at 101.
Hunk #2 FAILED at 117.
2 out of 2 hunks FAILED -- saving rejects to file src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java.rej
{code}

{code}
cat src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java.rej
--- src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
+++ src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
@@ -101,7 +101,7 @@ public FileTxnSnapLog(File dataDir, File snapDir) throws IOException {
                         + "" is false). Please create this directory manually."");
             }
 
-            if (!this.dataDir.mkdirs()) {
+            if (!this.dataDir.mkdirs() && !this.dataDir.exists()) {
                 throw new DatadirException(""Unable to create data directory ""
                         + this.dataDir);
             }
@@ -117,7 +117,7 @@ public FileTxnSnapLog(File dataDir, File snapDir) throws IOException {
                         + "" is false). Please create this directory manually."");
             }
 
-            if (!this.snapDir.mkdirs()) {
+            if (!this.snapDir.mkdirs() && !this.snapDir.exists()) {
                 throw new DatadirException(""Unable to create snap directory ""
                         + this.snapDir);
             }
{code}

My attempt at patching 3.4.9:

https://github.com/apache/zookeeper/pull/75

**zookeeper-1936-port-3.4.patch**
{code}
diff --git a/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java b/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java
index b1682c3..3f26b0a 100644
--- a/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java
+++ b/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java
@@ -355,7 +355,20 @@
      * logs
      */
     public TxnIterator read(long zxid) throws IOException {
-        return new FileTxnIterator(logDir, zxid);
+        return read(zxid, true);
+    }
+
+    /**
+     * start reading all the transactions from the given zxid.
+     *
+     * @param zxid the zxid to start reading transactions from
+     * @param fastForward true if the iterator should be fast forwarded to point
+     *        to the txn of a given zxid, else the iterator will point to the
+     *        starting txn of a txnlog that may contain txn of a given zxid
+     * @return returns an iterator to iterate through the transaction logs
+     */
+    public TxnIterator read(long zxid, boolean fastForward) throws IOException {
+        return new FileTxnIterator(logDir, zxid, fastForward);
     }
 
     /**
@@ -375,10 +388,10 @@
             }
             long pos = input.getPosition();
             // now, truncate at the current position
-            RandomAccessFile raf = new RandomAccessFile(itr.logFile, ""rw"");
+            RandomAccessFile raf=new RandomAccessFile(itr.logFile,""rw"");
             raf.setLength(pos);
             raf.close();
-            while (itr.goToNextLog()) {
+            while(itr.goToNextLog()) {
                 if (!itr.logFile.delete()) {
                     LOG.warn(""Unable to truncate {}"", itr.logFile);
                 }
@@ -523,12 +536,34 @@
          * create an iterator over a transaction database directory
          * @param logDir the transaction database directory
          * @param zxid the zxid to start reading from
+         * @param fastForward   true if the iterator should be fast forwarded to
+         *        point to the txn of a given zxid, else the iterator will
+         *        point to the starting txn of a txnlog that may contain txn of
+         *        a given zxid
+         * @throws IOException
+         */
+        public FileTxnIterator(File logDir, long zxid, boolean fastForward)
+                throws IOException {
+            this.logDir = logDir;
+            this.zxid = zxid;
+            init();
+
+            if (fastForward && hdr != null) {
+                while (hdr.getZxid() < zxid) {
+                    if (!next())
+                        break;
+                }
+            }
+        }
+        
+        /**
+         * create an iterator over a transaction database directory
+         * @param logDir the transaction database directory
+         * @param zxid the zxid to start reading from
          * @throws IOException
          */
         public FileTxnIterator(File logDir, long zxid) throws IOException {
-          this.logDir = logDir;
-          this.zxid = zxid;
-          init();
+            this(logDir, zxid, true);
         }
 
         /**
@@ -552,10 +587,17 @@
             goToNextLog();
             if (!next())
                 return;
-            while (hdr.getZxid() < zxid) {
-                if (!next())
-                    return;
+        }
+        
+        /**
+         * Return total storage size of txnlog that will return by this iterator.
+         */
+        public long getStorageSize() {
+            long sum = 0;
+            for (File f : storedFiles) {
+                sum += f.length();
             }
+            return sum;
         }
 
         /**
@@ -637,8 +679,6 @@
                 crc.update(bytes, 0, bytes.length);
                 if (crcValue != crc.getValue())
                     throw new IOException(CRC_ERROR);
-                if (bytes == null || bytes.length == 0)
-                    return false;
                 hdr = new TxnHeader();
                 record = SerializeUtils.deserializeTxn(bytes, hdr);
             } catch (EOFException e) {
diff --git a/src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java b/src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
index 6f0df51..98d94b4 100644
--- a/src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
+++ b/src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
@@ -58,6 +58,10 @@
     
     private static final Logger LOG = LoggerFactory.getLogger(FileTxnSnapLog.class);
     
+    public static final String ZOOKEEPER_DATADIR_AUTOCREATE =
+            ""zookeeper.datadir.autocreate"";
+
+    public static final String ZOOKEEPER_DATADIR_AUTOCREATE_DEFAULT = ""true"";
     /**
      * This listener helps
      * the external apis calling
@@ -80,15 +84,38 @@
 
         this.dataDir = new File(dataDir, version + VERSION);
         this.snapDir = new File(snapDir, version + VERSION);
+        // by default create snap/log dirs, but otherwise complain instead
+        // See ZOOKEEPER-1161 for more details
+        boolean enableAutocreate = Boolean.valueOf(
+                System.getProperty(ZOOKEEPER_DATADIR_AUTOCREATE,
+                        ZOOKEEPER_DATADIR_AUTOCREATE_DEFAULT));
         if (!this.dataDir.exists()) {
-            if (!this.dataDir.mkdirs()) {
-                throw new IOException(""Unable to create data directory ""
+            if (!enableAutocreate) {
+                throw new DatadirException(""Missing data directory ""
+                        + this.dataDir
+                        + "", automatic data directory creation is disabled (""
+                        + ZOOKEEPER_DATADIR_AUTOCREATE
+                        + "" is false). Please create this directory manually."");
+            }
+
+            if (!this.dataDir.mkdirs() && !this.dataDir.exists()) {
+                throw new DatadirException(""Unable to create data directory ""
                         + this.dataDir);
             }
         }
         if (!this.snapDir.exists()) {
-            if (!this.snapDir.mkdirs()) {
-                throw new IOException(""Unable to create snap directory ""
+            // by default create this directory, but otherwise complain instead
+            // See ZOOKEEPER-1161 for more details
+            if (!enableAutocreate) {
+                throw new DatadirException(""Missing snap directory ""
+                        + this.snapDir
+                        + "", automatic data directory creation is disabled (""
+                        + ZOOKEEPER_DATADIR_AUTOCREATE
+                        + "" is false). Please create this directory manually."");
+            }
+
+            if (!this.snapDir.mkdirs() && !this.snapDir.exists()) {
+                throw new DatadirException(""Unable to create snap directory ""
                         + this.snapDir);
             }
         }
@@ -164,6 +191,33 @@
             }
         }
         return highestZxid;
+    }
+
+    /**
+     * Get TxnIterator for iterating through txnlog starting at a given zxid
+     *
+     * @param zxid starting zxid
+     * @return TxnIterator
+     * @throws IOException
+     */
+    public TxnIterator readTxnLog(long zxid) throws IOException {
+        return readTxnLog(zxid, true);
+    }
+
+    /**
+     * Get TxnIterator for iterating through txnlog starting at a given zxid
+     *
+     * @param zxid starting zxid
+     * @param fastForward true if the iterator should be fast forwarded to point
+     *        to the txn of a given zxid, else the iterator will point to the
+     *        starting txn of a txnlog that may contain txn of a given zxid
+     * @return TxnIterator
+     * @throws IOException
+     */
+    public TxnIterator readTxnLog(long zxid, boolean fastForward)
+            throws IOException {
+        FileTxnLog txnLog = new FileTxnLog(dataDir);
+        return txnLog.read(zxid, fastForward);
     }
     
     /**
@@ -338,4 +392,14 @@
         txnLog.close();
         snapLog.close();
     }
+
+    @SuppressWarnings(""serial"")
+    public static class DatadirException extends IOException {
+        public DatadirException(String msg) {
+            super(msg);
+        }
+        public DatadirException(String msg, Exception e) {
+            super(msg, e);
+        }
+    }
 }
{code}

*UPDATE:* Testing 3.4.9 with this patch looks ok for me. you might have squashed this issue.;;;","29/Jul/16 05:38;githubbot;GitHub user nddipiazza opened a pull request:

    https://github.com/apache/zookeeper/pull/75

    https://issues.apache.org/jira/browse/ZOOKEEPER-1936

    https://issues.apache.org/jira/browse/ZOOKEEPER-1936
    
    port fix to 3.4

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/nddipiazza/zookeeper ZOOKEEPER-1936

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/75.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #75
    
----
commit bdd8798895e21bf3158c63c1d00aa99fba5e9f34
Author: Nicholas DiPiazza <nicholas.dipiazza@lucidworks.com>
Date:   2016-07-29T05:32:03Z

    https://issues.apache.org/jira/browse/ZOOKEEPER-1936 
    
    port fix to 3.4

----
;;;","19/Sep/16 23:27;cnauroth;This patch has been stalled, because there is no easy way to write a unit test for it, and no one has been able to produce a consistent repro in a live environment.

I have good news.  I was able to find a consistent repro with an environment that could reproduce the problem in approximately 80% of ZooKeeper server starts.  FWIW, the OS was SUSE11sp3, and it was running ZooKeeper 3.4.6.  I applied the v3 patch, deployed it in this environment, and we could no longer repro.

Based on successful manual testing, I am now +1 to commit patch v4 to trunk and branch-3.5, and commit patch v3 to branch-3.4.  I will wait until later in the week in case other committers who have been watching the issue would like to discuss further.;;;","29/Sep/16 00:45;mattf;[~cnauroth], please do commit.  +1.  Thanks.;;;","29/Sep/16 20:56;cnauroth;[~rgs] or [~fpj], could I please trouble one of you to do one last review pass to make sure we're in agreement before I commit?  Thank you.;;;","30/Sep/16 18:36;fpj;I was looking at this pull request:

https://github.com/apache/zookeeper/pull/75.patch

but it looks like it doesn't correspond to the v4 patch attached. What is it precisely that we are proposing to merge?;;;","30/Sep/16 18:52;fpj;Is it better to catch {{FileAlreadyExistsException}} for the {{Files.createDirectories}} call to be safe, in the case the directory is created concurrently?

I'm actually wondering why we added that {{DatadirException}}. I'd much rather just keep it {{IOException}} instead... I understand this isn't being introduced in this patch, although maybe for 3.4 if we merge there. Actually, what are the fix versions for this issue?   
;;;","30/Sep/16 18:56;fpj;Given that I'm not sure what exactly we are considering to merge at this point, I don't know who the assignee is. Once we clarify it, I can assign accordingly.;;;","30/Sep/16 19:57;cnauroth;[~fpj], thank you for looking.  I am proposing that we fix this for 3.5.3 and 3.4.10.  I am proposing separate patches for the 2 branches, so that we can use the NIO APIs with the richer error reporting in trunk/branch-3.5 and use the JDK 6 APIs in branch-3.4.

I now realize that the trunk/branch-3.5 patch wasn't ready.  Thanks for pointing out the problem.  [~yuzhihong@gmail.com], would you please update that to catch the exception from {{Files#createDirectories}} and allow the method to succeed if the directory already exists?  That will keep it similar to the branch-3.4 logic.  Would you please upload new patch files for both trunk/branch-3.5 and branch-3.4?  That will help eliminate the current confusion about which patch files to use.

Ted has contributed the most recent patches that I am proposing to commit after another revision, so I'll assign to him.

bq. I'm actually wondering why we added that DatadirException. I'd much rather just keep it IOException instead.

This traces back to ZOOKEEPER-1161, which introduced the ability to disable automatic directory creation.  Part of that includes special handling of {{DatadirException}} in {{QuorumPeerMain}} and {{ZooKeeperServerMain}} so that they can return unique exit codes when directory creation fails.  I think we need to keep this as is for now to preserve backward compatibility.;;;","06/Oct/16 01:10;yuzhihong@gmail.com;Is there anything I can do to move this forward ?;;;","06/Oct/16 08:45;fpj;I'd expect [~cnauroth] to +1 it. In the meanwhile, I've had another look, and there are a couple of things I don't understand:

- With the 3.4 patch, we have this:

{noformat}
if (!this.dataDir.exists()) {
            if (!this.dataDir.mkdirs() && !this.dataDir.exists()) {
{noformat} 

why do we need the first call to {{this.dataDir.exists()}} and the encapsulating if block? It sounds like we don't need the outer if block.

- In the 3.5 patch, I'm not sure why we need this if:

{noformat}
if (!this.snapDir.exists())
{noformat}

In the case {{Files.createDirectories}} fails to create the directory, then we will have an exception, so the two possible outcomes are: 1) directory is created just fine; 2) exception is thrown. Consequently, it doesn't look like we need that last if, but maybe I'm missing something.;;;","17/Mar/17 23:12;githubbot;Github user Humbedooh closed the pull request at:

    https://github.com/apache/zookeeper/pull/75
;;;","29/May/17 09:58;eolivelli;this issue is marked as fixversion = 3.5.4, the PR #75 has been closed.
I cannot find commits in 3.5 branch
which is the actual status ?

I am very interested in this fix;;;","29/May/17 13:22;fpj;I think it was simply closed, I had a few comments there that were never addressed.;;;","29/May/17 13:25;fpj;It also looks like the diff was broken as the number of commits listed is large. I haven't looked closely but it seems that merges weren't done appropriately.;;;","29/May/17 14:14;eolivelli;[~fpj] [~yuzhihong@gmail.com] [~cnauroth] 

I can pick up the issue a propose my local patch.

This issue is quite annoying in JUnit tests cases of projects which use ZK and spawn ZK servers.

I would like to provide a patch for 3.5 branch and 3.6
;;;","26/Sep/18 23:05;yuzhihong@gmail.com;Can you outline how you plan to fix ?

thanks;;;","23/Jan/20 15:47;eolivelli;Issue resolved by pull request 1225
[https://github.com/apache/zookeeper/pull/1225];;;"
A typo in zookeeperStarted document,ZOOKEEPER-1923,12712311,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,chengwei-yang,chengwei-yang,chengwei-yang,05/May/14 13:49,07/Aug/17 09:02,29/Jun/25 13:34,08/May/14 21:47,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,3.5.0,,,,,documentation,,,,,0,,,"There is a typo in the document zookeeperStarted.*, see http://zookeeper.apache.org/doc/trunk/zookeeperStarted.html, in the section *Connecting to ZooKeeper*, where the *help* output *createpath* which should be *create path*.",The trunk branch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/May/14 07:21;chengwei-yang;ZOOKEEPER-1923.patch;https://issues.apache.org/jira/secure/attachment/12643492/ZOOKEEPER-1923.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,390627,,,,,Mon Aug 07 09:02:16 UTC 2017,,,,,,,,,,"0|i1va87:",390873,,,,,,,,,,,,,,,,,,,,,"06/May/14 01:12;chengwei-yang;Patch to fix this issue. BTW, I found there was changes without build docs merged, so this patch includes those changes. Would like to split it to two patches. First one build docs and submit a patch, then change the fix this issue in another patch. Agree?;;;","06/May/14 03:37;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12643469/ZOOKEEPER-1923.patch
  against trunk revision 1592341.

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2079//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2079//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2079//console

This message is automatically generated.;;;","06/May/14 07:15;rakeshr;AFAIK its not required to include the pdf and html when updating the docs(I've referred other docs JIRAs). Could you create a new patch with only xdocs changes.

BTW, It would be great if someone can comment the reason why html/pdf docs in svn ? Thanks!;;;","06/May/14 07:18;chengwei-yang;Sure, I'll upload a new version. I'm also wondering why the generated html/pdf are tracked by VCS.;;;","06/May/14 07:22;chengwei-yang;version 2 uploaded.;;;","06/May/14 08:37;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12643492/ZOOKEEPER-1923.patch
  against trunk revision 1592341.

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2080//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2080//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2080//console

This message is automatically generated.;;;","08/May/14 21:34;michim;+1 Thanks Chengwei!;;;","08/May/14 21:47;michim;trunk: http://svn.apache.org/viewvc?view=revision&revision=1593428;;;","20/May/14 11:09;hudson;FAILURE: Integrated in ZooKeeper-trunk #2311 (See [https://builds.apache.org/job/ZooKeeper-trunk/2311/])
ZOOKEEPER-1923. A typo in zookeeperStarted document (Chengwei Yang via michim) (michim: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1593428)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/docs/src/documentation/content/xdocs/zookeeperStarted.xml
;;;","07/Aug/17 09:02;benedict jin;Hi [~chengwei-yang] . This jira should be set as `Minor` priority.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Negative min latency value,ZOOKEEPER-1922,12712298,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,jpotter,jpotter,05/May/14 12:21,02/Jul/18 12:34,29/Jun/25 13:34,,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,server,,,,,1,,,"We're seeing the output of stat on one node return a negative value for min latency time:

stat 
Zookeeper version: 3.4.6-1569965, built on 02/20/2014 09:09 GMT
Clients:
...
Latency min/avg/max: -477/149/261002

(The max value seems suspicious, too.)

Figured I'd report this, as I don't see any mention of it online or in other bug reports. Maybe negative values shouldn't be recorded?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,390614,,,,,Mon Jul 02 12:34:08 UTC 2018,,,,,,,,,,"0|i1va5b:",390860,,,,,,,,,,,,,,,,,,,,,"05/Jun/15 09:19;harisekhon;This has been reported for my check_zookeeper.pl Nagios plugin too:

https://github.com/harisekhon/nagios-plugins/issues/51

Apparently doing an 'srst' to reset the stats fixes it. I wouldn't be surprised if this was due to correcting a server's time in a sudden large step via ntpdate.

I've worked around this in my code by resetting the returned value to N/A and notifying the user to do 'srst'.

The more I think about this the more it seems like a minor ZooKeeper bug in not checking whether min latency < 0 for sanity.

I propose a simple fix that ZooKeeper check < 0 and if so do an internal 'srst' on it's stats.;;;","04/Jan/17 11:58;tonyseek;reproduced too

{noformat}
$ echo mntr | nc localhost 2181
zk_version      3.4.9-1757313, built on 08/23/2016 06:50 GMT
zk_avg_latency  5
zk_max_latency  30713
zk_min_latency  -991
zk_packets_received     3707345352
zk_packets_sent 3205871135
zk_num_alive_connections        11770
zk_outstanding_requests 0
zk_server_state follower
zk_znode_count  150242
zk_watch_count  3791016
zk_ephemerals_count     115
zk_approximate_data_size        16618989
zk_open_file_descriptor_count   11836
zk_max_file_descriptor_count    655360
{noformat};;;","02/Jul/18 12:34;maoling;[~harisekhon][~tonyseek][~jpotter]
since [ZOOKEEPER-1366 |https://issues.apache.org/jira/browse/ZOOKEEPER-1366] has replaced *System.currentTimeMillis* to *System.nanoTime*,this issue can not be reproduced. Am I right?
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Login thread is not shutdown when close the ClientCnxn,ZOOKEEPER-1920,12710843,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,rakeshr,liuyang@huawei,liuyang@huawei,28/Apr/14 02:59,30/Apr/15 11:26,29/Jun/25 13:34,,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,java client,,,,,0,,,"A new ZooKeeper client will start three threads, the SendThread, EventThread and LoginThread. I belive that these threads will be shutdown after call the zk.close. I test that the SendThread and EventThread will be die,  but LoginThread is still alive. The stack is:

""Thread-0"" daemon prio=10 tid=0x00007ffcf0020000 nid=0x69c8 waiting on condition [0x00007ffd3cc25000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(Native Method)
	at org.apache.zookeeper.Login$1.run(Login.java:183)
	at java.lang.Thread.run(Thread.java:744)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-938,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,389164,,,,,Thu Apr 30 11:26:50 UTC 2015,,,,,,,,,,"0|i1v193:",389410,,,,,,,,,,,,,,,,,,,,,"29/Apr/14 00:19;michim;Hi [~liuyang@huawei], would you like to provide a patch for this?;;;","29/Apr/14 00:46;liuyang@huawei;I will submit the patch later on.;;;","08/Apr/15 02:50;Jobo;hi,liuyang,  i want to know what is the status of this patch, now? ;;;","23/Apr/15 10:04;rakeshr;ZooKeeperSaslClient {{login}} object is static and the thread is created only once for the lifetime of that application(I mean per jvm). It looks like its done intentionally, isn't it?;;;","30/Apr/15 11:26;Jobo;[~rakeshr] Thanks for your reply.

{quote}
ZooKeeperSaslClient login object is static and the thread is created only once for the lifetime of that application(I mean per jvm). It looks like its done intentionally, isn't it?
{quote}

Ideally static login object will control one login thread  in one JVM. I came across one scenario is like Following: 
 
One application will create one zk client and this will loads class separately.Here we will run multiple applications continuously in single java class ( which means single JVM ) where we seen login object getting created for every application which is not getting closed even we call  zk.close .

 *Application which will called for every time in single Java Class* 

{code}
classLoader = new MyClassloader(new URL[] {});
		try {
			File file = new File(libPath);
			File[] jarsFiles = file.listFiles();
			for (File jarFile : jarsFiles) {
				LOGGER.info(""load jar: {}"", jarFile.getAbsolutePath());
				classLoader.addJar(jarFile.toURL());
			}
		} catch (MalformedURLException e) {
			e.printStackTrace();
		}
			
		servlet = (PretendedServlet)Class.forName(""com.zk.PretendedZK"", true, classLoader).newInstance();
		servlet.init(); 
{code}

  *Zkclient Threads which we are using same in init*  

{code}
public void init() {
		if (null == login) {
			LOGGER.info(""init login."");
			login = new PretendedLogin();
			login.start();
		}
		startSendThread();
		startEventThread();
	}
{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[JDK8] Sort children for comparison in AsyncOps tests,ZOOKEEPER-1901,12703096,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,apurtell,apurtell,apurtell,23/Mar/14 20:08,25/Mar/14 16:30,29/Jun/25 13:34,23/Mar/14 21:04,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,3.4.7,3.5.0,,,,tests,,,,,0,,,"AsyncOpsTest, ChrootAsyncTest, and NioNettySuiteTest can fail running on Java 8 if child znodes are not added to a list in the same order as expected. 

For example

{noformat}
Testcase: testAsyncGetChildrenTwo took 0.166 sec
        FAILED
expected:<OK:/foo:[child[1, child2]]> but was:<OK:/foo:[child[2, child1]]>
junit.framework.AssertionFailedError: expected:<OK:/foo:[child[1, child2]]> but was:<OK:/foo:[child[2, child1]]>
        at org.apache.zookeeper.test.AsyncOps$AsyncCB.verify(AsyncOps.java:113)
        at org.apache.zookeeper.test.AsyncOps$ChildrenCB.verify(AsyncOps.java:298)
        at org.apache.zookeeper.test.AsyncOps$ChildrenCB.verifyGetChildrenTwo(AsyncOps.java:287)
        at org.apache.zookeeper.test.AsyncOpsTest.testAsyncGetChildrenTwo(AsyncOpsTest.java:155)
        at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:52)
{noformat}

{noformat}
Testcase: testAsyncGetChildren2Two took 0.154 sec
        FAILED
expected:<OK:/foo:[child[1, child2]]> but was:<OK:/foo:[child[2, child1]]>
junit.framework.AssertionFailedError: expected:<OK:/foo:[child[1, child2]]> but was:<OK:/foo:[child[2, child1]]>
        at org.apache.zookeeper.test.AsyncOps$AsyncCB.verify(AsyncOps.java:113)
        at org.apache.zookeeper.test.AsyncOps$Children2CB.verify(AsyncOps.java:383)
        at org.apache.zookeeper.test.AsyncOps$Children2CB.verifyGetChildrenTwo(AsyncOps.java:372)
        at org.apache.zookeeper.test.AsyncOpsTest.testAsyncGetChildren2Two(AsyncOpsTest.java:175)
	at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:52)
{noformat}

This seems like a test only issue because getChildren javadoc says ""The list of children returned is not sorted and no guarantee is provided as to its natural or lexical order."" So, fix the tests by sorting the incoming lists. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Mar/14 18:26;apurtell;ZOOKEEPER-1901-3.4.patch;https://issues.apache.org/jira/secure/attachment/12636397/ZOOKEEPER-1901-3.4.patch","23/Mar/14 20:12;apurtell;ZOOKEEPER-1901.patch;https://issues.apache.org/jira/secure/attachment/12636261/ZOOKEEPER-1901.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,381434,,,,,Mon Mar 24 21:46:23 UTC 2014,,,,,,,,,,"0|i1tpuf:",381711,,,,,,,,,,,,,,,,,,,,,"23/Mar/14 20:58;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12636261/ZOOKEEPER-1901.patch
  against trunk revision 1580436.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1981//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1981//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1981//console

This message is automatically generated.;;;","23/Mar/14 21:00;michim;+1 Thank you for the patch Andrew!;;;","23/Mar/14 21:04;michim;trunk: http://svn.apache.org/viewvc?view=revision&revision=1580612;;;","24/Mar/14 11:10;hudson;SUCCESS: Integrated in ZooKeeper-trunk #2264 (See [https://builds.apache.org/job/ZooKeeper-trunk/2264/])
ZOOKEEPER-1901. [JDK8] Sort children for comparison in AsyncOps tests (Andrew Purtell via michim) (michim: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1580612)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/AsyncOps.java
;;;","24/Mar/14 18:26;apurtell;Attached a patch for branch-3.4 also. Or, the trunk patch will apply with minor fuzz. ;;;","24/Mar/14 21:46;michim;branch-3.4: http://svn.apache.org/viewvc?view=revision&revision=1581080

Thank you Andrew!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zkCli silently ignores commands with missing parameters,ZOOKEEPER-1884,12696221,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,rgs,fpj,fpj,20/Feb/14 11:58,22/Jun/18 04:49,29/Jun/25 13:34,,3.4.11,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,"Apparently, we have fixed this in trunk, but not in the 3.4 branch. When we pass only the path to create, the command is not executed because it expects an additional parameter and there is no error message because the create command exists.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/May/15 00:26;rgs;ZOOKEEPER-1884.patch;https://issues.apache.org/jira/secure/attachment/12729677/ZOOKEEPER-1884.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,374697,,,,,Wed Aug 24 22:51:36 UTC 2016,,,,,,,,,,"0|i1skjb:",374997,,,,,,,,,,,,,,,,,,,,,"01/May/15 00:26;rgs;More generally, zkCli was not issuing warnings when the command existed *but* the number of parameters was wrong. This patch changes things so that usage() is called if there's no match (regardless of the command being known or not).

cc: [~michim], [~hdeng], [~fpj];;;","01/May/15 03:47;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12729677/ZOOKEEPER-1884.patch
  against trunk revision 1676359.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2662//console

This message is automatically generated.;;;","19/May/15 09:01;rakeshr;Thanks [~rgs] for reporting this. I could see the proposed patch would affect ZOOKEEPER-1379 fixes, right?. Also, it would be good to add unit test in {{ZooKeeperTest.java}};;;","08/Nov/15 22:36;rgs;Punting this for 3.4.8. ;;;","08/Nov/15 22:39;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12729677/ZOOKEEPER-1884.patch
  against trunk revision 1713303.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2950//console

This message is automatically generated.;;;","06/Feb/16 03:23;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12729677/ZOOKEEPER-1884.patch
  against trunk revision 1728577.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3039//console

This message is automatically generated.;;;","28/Jul/16 03:28;rakeshr;ping [~rgs];;;","28/Jul/16 06:55;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12729677/ZOOKEEPER-1884.patch
  against trunk revision 1754188.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3293//console

This message is automatically generated.;;;","16/Aug/16 11:23;rakeshr;I am moving this out to 3.4.10 for now. Please feel free to discuss the target version, if needed. Thanks!;;;","24/Aug/16 22:30;abrahamfine;Hey [~rgs], would you mind if I picked this one up?;;;","24/Aug/16 22:51;phunt;Cancelling the patch for now given it's not applying cleanly and tests missing.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in ClientCnxn$EventThread.processEvent,ZOOKEEPER-1875,12692768,Bug,Reopened,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,arshad.mohammad,jinghe,jinghe,03/Feb/14 04:06,15/Jun/23 21:09,29/Jun/25 13:34,,3.4.10,3.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,java client,,,,,2,pull-request-available,,"We've been seeing NullPointerException while working on HBase:

{code}
14/01/30 22:15:25 INFO zookeeper.ZooKeeper: Client environment:user.dir=/home/biadmin/hbase-trunk
14/01/30 22:15:25 INFO zookeeper.ZooKeeper: Initiating client connection, connectString=hdtest009:2181 sessionTimeout=90000 watcher=null
14/01/30 22:15:25 INFO zookeeper.ClientCnxn: Opening socket connection to server hdtest009/9.30.194.18:2181. Will not attempt to authenticate using SASL (Unable to locate a login configuration)
14/01/30 22:15:25 INFO zookeeper.ClientCnxn: Socket connection established to hdtest009/9.30.194.18:2181, initiating session
14/01/30 22:15:25 INFO zookeeper.ClientCnxn: Session establishment complete on server hdtest009/9.30.194.18:2181, sessionid = 0x143986213e67e48, negotiated timeout = 60000
14/01/30 22:15:25 ERROR zookeeper.ClientCnxn: Error while calling watcher
java.lang.NullPointerException
        at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:519)
        at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:495)
{code}

The reason is the watcher is null in this part of the code:
{code}
       private void processEvent(Object event) {
          try {
              if (event instanceof WatcherSetEventPair) {
                  // each watcher will process the event
                  WatcherSetEventPair pair = (WatcherSetEventPair) event;
                  for (Watcher watcher : pair.watchers) {
                      try {
                          watcher.process(pair.event);
                      } catch (Throwable t) {
                          LOG.error(""Error while calling watcher "", t);
                      }
                  }
{code}",,"symat commented on PR #1855:
URL: https://github.com/apache/zookeeper/pull/1855#issuecomment-1092458477

    AFAIK your watcher should never be null. (Without a watcher you don't know if you are even connected to ZK or not... the successful connection and also the disconnection events reach the ZK client user through the watcher.) Previously we were throwing exception in this watcher==null case, and this was not not too bad, as most likely this is not how the caller app wanted to start the ZooKeeper client in the first place. Although NPE might not the right exception to throw :)
   
   So my point here is: Isn't this change breaking compatibility? Shouldn't we throw at least some InvalidStateException after logging?
   


;08/Apr/22 05:34;githubbot;600","eolivelli commented on PR #1855:
URL: https://github.com/apache/zookeeper/pull/1855#issuecomment-1092764785

   I agree with Mate.
   But maybe I am missing how to reproduce the problem.
   We should also add a test that reproduces the problem


;08/Apr/22 11:29;githubbot;600","arshadmohammad commented on PR #1855:
URL: https://github.com/apache/zookeeper/pull/1855#issuecomment-1094138322

   I checked the zk client code carefully, NPE will occur only when watcher is set null either throw ZooKeeper constructor or through register method. Now I think we should do the exactly what had been submitted in latest ZOOKEEPER-1875.patch.
   
   Updated the PR.
   
   


;09/Apr/22 23:02;githubbot;600","arshadmohammad commented on PR #1855:
URL: https://github.com/apache/zookeeper/pull/1855#issuecomment-1094915334

   > looks some of our tests violate this rule. Can you take a look and maybe switch these to some noop watcher?
   
   Corrected impacted test cases
   
   


;11/Apr/22 11:07;githubbot;600","asfgit closed pull request #1855: ZOOKEEPER-1875: NullPointerException in ClientCnxn$EventThread.processEvent
URL: https://github.com/apache/zookeeper/pull/1855


;16/Apr/22 10:08;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3000,,,0,3000,,,,,,,,,,,,,,,NIFI-8394,,,,,,,"04/Feb/14 22:44;jinghe;ZOOKEEPER-1875-trunk.patch;https://issues.apache.org/jira/secure/attachment/12627002/ZOOKEEPER-1875-trunk.patch","07/Jun/14 16:09;rakeshr;ZOOKEEPER-1875.patch;https://issues.apache.org/jira/secure/attachment/12648821/ZOOKEEPER-1875.patch","07/Jun/14 15:41;rakeshr;ZOOKEEPER-1875.patch;https://issues.apache.org/jira/secure/attachment/12648817/ZOOKEEPER-1875.patch",,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,371363,,,,,Tue Jan 24 08:22:57 UTC 2023,,,,,,,,,,"0|i1s02v:",371666,,,,,,,,,,,,,,,,,,,,,"03/Feb/14 04:18;jinghe;Attached a patch that does the null checking for watcher.;;;","03/Feb/14 04:22;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12626596/ZOOKEEPER-1875.patch
  against trunk revision 1561672.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1915//console

This message is automatically generated.;;;","03/Feb/14 04:37;jinghe;The patch was generated based on trunk. I am not sure why it can not be applied.
Re-submitting ...;;;","03/Feb/14 04:42;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12626598/ZOOKEEPER-1875-trunk.patch
  against trunk revision 1561672.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1916//console

This message is automatically generated.;;;","03/Feb/14 22:24;jinghe;Can someone look to see why the patch can not apply on the build server?
I can apply fine locally.

Also regarding the NPE, it can be easily re-created when you instantiate a zookeeper class with null watcher. ;;;","04/Feb/14 06:06;thawan;Patch need to be in svn format;;;","04/Feb/14 22:45;jinghe;Thanks, Thawan.
Attached a re-formatted patch.  Hope it will work this time.;;;","05/Feb/14 00:26;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12627002/ZOOKEEPER-1875-trunk.patch
  against trunk revision 1561672.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1917//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1917//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1917//console

This message is automatically generated.;;;","05/Feb/14 00:48;stack;+1;;;","11/Feb/14 01:33;jinghe;Hi, 

Are we good with the patch?;;;","11/Feb/14 02:19;fournc;No easy test possible?;;;","15/Feb/14 20:48;jinghe;Hi, Camille

Are you asking for a unit test case? 
Can you give a pointer or suggestion to a test case I can follow or add to?;;;","31/Mar/14 22:20;michim;Yes, it would be good to add a test case. I would add a new test file ClientCnxnTest.java under trunk/src/java/test/org/apache/zookeeper/test. Just as one example, SessionTest.java starts a server and tests the client against the server. ;;;","22/May/14 18:26;michim;Actually I'm not sure if watcher or pair.event is ever supposed to be null. Maybe there is a bug somewhere else?;;;","07/Jun/14 16:12;rakeshr;[~michim] When reviewing the code, I've come across one case where it can result in NPE. Zookeeper client.register(null) allows null watcher and during connection event the following code results in null watcher.

{code}
            case None:
                result.add(defaultWatcher);
                boolean clear = ClientCnxn.getDisableAutoResetWatch() &&
                        state != Watcher.Event.KeeperState.SyncConnected;
{code}

I've attached a patch to validate the null connection watcher at the api level. I hope this wont be a compatibility issue for 3.5 release?;;;","07/Jun/14 17:02;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12648821/ZOOKEEPER-1875.patch
  against trunk revision 1600481.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2123//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2123//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2123//console

This message is automatically generated.;;;","07/Jun/14 19:42;michim;+1 Good catch Rakesh. I don't think this would be a compatibility problem, but I'll wait for others to confirm before checking this in to 3.5.;;;","07/Jun/14 20:15;jinghe;Hi, guys
It is possible that existing user code instantiate ZooKeeper with a null watcher.
It is a valid use case: I need a ZooKeeper but I don't want to watch or get any event.

Do I misunderstand anything?;;;","08/Jun/14 19:05;rakeshr;AFAIK mostly everyone will have logic against connection watch notifications and act upon. If anyone has null watcher pattern, still it can be achieved by passing NullWatcher implementation. I thought of avoiding null checks during 'result.add(defaultWatcher);', if anyone has strong reason we can have this alternate way:);;;","26/Jul/14 17:56;phunt;bq. It is a valid use case: I need a ZooKeeper but I don't want to watch or get any event.

That's valid wrt not interested in setting any znode watches. However watchers are also notified about service state changes - such as being connected/disconnected from the ZK service. You can't operate w/o this (creating a zk object is not sufficient, you are async notified when you are eventually connected to the service - that goes to a watcher).

Unfortunately I see the current patch as a b/w incompat issue - users might be passing null watcher when contructing the ZK object even though they shouldn't be. Take a look at the results here (not everything is apropos but there are enough there...)

https://github.com/search?q=%22new+zookeeper%22+null&type=Code&ref=searchresults

We might be able to fix this over time, but for the time being I believe we need to live with it.

imo the patch should be updated to just address the original issue - handle the case where we get a null watcher.;;;","26/Jul/14 20:23;jinghe;Hi, [~phunt], [~rakeshr]
Are you ok with the original patch first patch?
I think it is simple guard against null watcher during processing of events that we should have in place anyway.
;;;","28/Jul/14 08:30;rakeshr;I agree not to break compatibility. So in this jira will just handle the original null watcher issue.

[~jinghe] How about doing the null checks at the place where it is adding the null defaultWatcher to the list, like below. Please see my [previous comments for the root cause | https://issues.apache.org/jira/browse/ZOOKEEPER-1875?focusedCommentId=14020864&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14020864]

{code}
ZooKeeper.java


if (defaultWatcher != null) {
    result.add(defaultWatcher);
{code};;;","28/Jul/14 18:02;jinghe;Hi, [~rakeshr]

Good suggestion! That will do.
Maybe add the customary null checking in my first patch as well? ;;;","28/Sep/14 18:30;rakeshr;[~jinghe] will you generate a patch?;;;","15/Apr/17 14:25;ctubbsii;I can confirm this bug affects 3.4.10 also. Will there be a 3.4.11 to fix this, or will this only be fixed in 3.5+?
This issue affects the [zookeeper-maven-plugin|https://github.com/revelc/zookeeper-maven-plugin]. I've had to create a NOOPWatcher to work around, because null cannot be passed as a watcher in the constructor.;;;","15/Jul/19 12:07;Genstr;Hi guys,

[~jerryhe], [~zookeeper], is this Jira planned to be included in the next releases - [3.6.0|https://issues.apache.org/jira/issues/?jql=project+%3D+ZOOKEEPER+AND+fixVersion+%3D+3.6.0], [3.5.6|https://issues.apache.org/jira/issues/?jql=project+%3D+ZOOKEEPER+AND+fixVersion+%3D+3.5.6]?

Best Regards,
 Yauheni Salopiy;;;","26/Dec/19 04:38;rajsura;Hi [~jerryhe],

Could you please at least generate a patch that is likely to be merged in future releases?

Thanks,

Rajkiran

 ;;;","02/Jan/20 10:43;rajsura;Hi [~jerryhe],

Could you please at least generate a patch that is likely to be merged in future releases?

Thanks,

Rajkiran;;;","07/Apr/22 07:22;arshad.mohammad;This issue is still applicable to all versions.
is anybody interested in raising PR.;;;","07/Apr/22 11:02;arshad.mohammad;I had observed this issue in the past, but right now don't have details of exact cause.;;;","07/Apr/22 11:11;arshad.mohammad;I think as proposed in the first patch we should skip the watcher processing if either watcher or pair.event is null, but we should also add warning so in future we can get better understanding of the use case from where problem is coming.
{code:java}
if (watcher != null && pair.event != null) {
    watcher.process(pair.event);
} else {
    LOG.warn(
        ""Skipping watcher processing as watcher and pair.event cannot""
            + "" be null. watcher={}, pair.event={}"",
        watcher == null ? ""null"" : watcher.getClass().getName(),
        pair.event == null ? ""null"" : pair.event);
}
{code};;;","16/Apr/22 09:52;arshad.mohammad;I have checked the zk client code carefully, NPE will occur only when watcher is set null either throw ZooKeeper constructor or through register method. Now I think we should do the exactly what had been submitted in latest ZOOKEEPER-1875.patch.;;;","16/Apr/22 09:54;arshad.mohammad;When watcher is null ZooKeeper client app is anyway getting null pointer exception. 
Now after this fix the apps will start getting IllegalArgumentException which will make it easier to figure out the wrong in the code and correct it.
;;;","16/Apr/22 10:33;arshad.mohammad;Issue resolved by pull request 1855
[https://github.com/apache/zookeeper/pull/1855];;;","16/Apr/22 10:38;arshad.mohammad;Thanks [~jerryhe] for raising the issue and submitting the patches.
Thanks [~symat], [~eolivelli] for the reviews.;;;","24/Jan/23 08:21;eolivelli;I have reverted the patch from master, branch-3.8, branch-3.8.1 and branch-3.7.

 

The PR is causing regressions on third party projects, like Apache BookKeeper and Apache Pulsar.

it is okay to prevent passing ""null"" to register watcher, but we should allow passing null in the constructor (we can automatically set a dummy watcher that does nothing).
 ;;;","24/Jan/23 08:22;eolivelli;Also, if we want to introduce this kind of changes, it is better to do it only on major releases (like 3.9.0);;;",,,,,,,,,,,,,,,,,
ConcurrentHashMap isn't used properly in QuorumCnxManager,ZOOKEEPER-1861,12688419,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,zhihyu@ebaysf.com,yuzhihong@gmail.com,yuzhihong@gmail.com,11/Jan/14 23:50,14/Feb/14 03:03,29/Jun/25 13:34,14/Feb/14 03:03,3.5.0,,,,,,,,,,,,,,,,,,,,,,,,3.5.0,,,,,,,,,,0,,,"queueSendMap is a ConcurrentHashMap.
At line 210:
{code}
            if (!queueSendMap.containsKey(sid)) {
                queueSendMap.put(sid, new ArrayBlockingQueue<ByteBuffer>(
                        SEND_CAPACITY));
{code}
By the time control enters if block, there may be another concurrent put with same sid to the ConcurrentHashMap.
putIfAbsent() should be used.

Similar issue occurs at line 307 as well.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Jan/14 20:20;yuzhihong@gmail.com;zookeeper-1861-v1.txt;https://issues.apache.org/jira/secure/attachment/12622695/zookeeper-1861-v1.txt","13/Jan/14 21:55;yuzhihong@gmail.com;zookeeper-1861-v2.txt;https://issues.apache.org/jira/secure/attachment/12622714/zookeeper-1861-v2.txt","11/Feb/14 19:24;yuzhihong@gmail.com;zookeeper-1861-v3.txt;https://issues.apache.org/jira/secure/attachment/12628301/zookeeper-1861-v3.txt",,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,367438,,,,,Fri Feb 14 02:59:35 UTC 2014,,,,,,,,,,"0|i1rc2n:",367747,,,,,,,,,,,,,,,,,,,,,"13/Jan/14 19:06;michim;Thank you for the bug report Ted. Would it be ok if I assign the ticket to you?;;;","13/Jan/14 20:20;yuzhihong@gmail.com;Sure.

Here is the patch.;;;","13/Jan/14 21:21;michim;Thank you for the patch Ted. Here are my comments:

- This patch only fixes the issue at line 210, but not the one at 307.
- There is a similar issue at 338, though this one is slightly more complicated since it does more than putting something in a map inside the containsKey block.;;;","13/Jan/14 21:54;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12622695/zookeeper-1861-v1.txt
  against trunk revision 1556976.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1881//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1881//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1881//console

This message is automatically generated.;;;","13/Jan/14 21:55;yuzhihong@gmail.com;Patch v2 addresses Michi's comments;;;","13/Jan/14 22:33;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12622714/zookeeper-1861-v2.txt
  against trunk revision 1556976.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1882//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1882//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1882//console

This message is automatically generated.;;;","14/Jan/14 17:52;yuzhihong@gmail.com;[~michim]:
Can you take a look at patch v2 ?;;;","14/Jan/14 21:08;michim;With this patch, we allocate bq even when we don't use it. I'm not sure if we want to do that. I'll let somebody more familiar with the code base review the patch.

Thanks!
--Michi;;;","15/Jan/14 05:12;yuzhihong@gmail.com;To avoid allocating extra ArrayBlockingQueue, I am thinking of the following:
* create a singleton ArrayBlockingQueue which serves as marker
* if queueSendMap.putIfAbsent(sid, singleton) returns null, create the real ArrayBlockingQueue, named bq, and call queueSendMap.replace(sid, bq)
* if queueSendMap.putIfAbsent(sid, singleton) returns non-null value, check whether the return is singleton, if so, wait till queueSendMap.get(sid) returns a value which is not singleton.;;;","15/Jan/14 17:16;yuzhihong@gmail.com;The above suggestion would involve more complex logic.

Maybe the first two hunks in patch v2 can be integrated first ?;;;","11/Feb/14 00:27;yuzhihong@gmail.com;Further review on this would be appreciated.;;;","11/Feb/14 00:44;rgs;How are the first hunks different? They also do the allocation even though you might not need them as well, no? I think that to avoid eagerly allocating and solve the concurrency issues you could put the check/set bits in a synchronized method and call that instead. ;;;","11/Feb/14 19:24;yuzhihong@gmail.com;How about patch v3 ?;;;","11/Feb/14 21:33;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12628301/zookeeper-1861-v3.txt
  against trunk revision 1566748.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1923//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1923//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1923//console

This message is automatically generated.;;;","12/Feb/14 01:28;fournc;Need to fix the formatting on that new method. Other than that, looks ok to me.
;;;","12/Feb/14 01:37;fournc;Actually, I'm going to go back on this. The whole point of using a concurrent data structure is so we don't synchronize on this operation. Which means we have to allocate potentially unnecessarily.
I prefer patch v2. If you really want to try and not worry about allocation, check for existence, then create, and put if not absent, but meh. I don't know that I care about an (unlikely) extra allocation.;;;","12/Feb/14 03:11;yuzhihong@gmail.com;bq. I prefer patch v2

I agree.

Patch v3 basically makes the map a HashMap.

bq. then create, and put if not absent

I guess you meant 'put if absent'

The chance of extra allocation should be low.;;;","12/Feb/14 19:34;fournc;Yup. I'm gonna put in patch v2 unless someone else has a comment.;;;","14/Feb/14 02:59;hudson;SUCCESS: Integrated in ZooKeeper-trunk #2217 (See [https://builds.apache.org/job/ZooKeeper-trunk/2217/])
ZOOKEEPER-1861. ConcurrentHashMap isn't used properly in QuorumCnxManager (Ted Yu via camille) (camille: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1568176)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zkCli.sh can't issue a CREATE command containing spaces in the data,ZOOKEEPER-1853,12686648,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,ryanlamore,scoulibaly,scoulibaly,28/Dec/13 22:38,21/Jul/16 20:18,29/Jun/25 13:34,08/Nov/15 22:27,3.4.6,3.5.0,,,,,,,,,,,,,,,,,,,,,,,3.4.7,3.5.2,3.6.0,,,java client,,,,,3,patch,,"Execute the following command in zkCli.sh :

create /contacts/1  {""country"":""CA"",""name"":""De La Salle""}

The results is that only {""id"":1,""fullname"":""De is stored.
The expected result is to have the full JSON payload stored.

The CREATE command seems to be croped after the first space of the data payload. When issuing a create command, all arguments not being -s nor -e shall be treated as the actual data.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Oct/15 15:04;hex108;ZOOKEEPER-1853-branch-3.4.patch;https://issues.apache.org/jira/secure/attachment/12768046/ZOOKEEPER-1853-branch-3.4.patch","15/Apr/15 03:31;ryanlamore;ZOOKEEPER-1853.patch;https://issues.apache.org/jira/secure/attachment/12725465/ZOOKEEPER-1853.patch","15/Apr/15 01:07;ryanlamore;ZOOKEEPER-1853.patch;https://issues.apache.org/jira/secure/attachment/12725445/ZOOKEEPER-1853.patch","14/Apr/15 22:57;ryanlamore;ZOOKEEPER-1853.patch;https://issues.apache.org/jira/secure/attachment/12725416/ZOOKEEPER-1853.patch","10/Jul/14 20:10;appodictic;ZkSpaceMan.java;https://issues.apache.org/jira/secure/attachment/12655068/ZkSpaceMan.java",,,,,,5.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,365640,,,,,Mon Nov 16 11:35:39 UTC 2015,,,,,,,,,,"0|i1r0zj:",365947,"Allows spaces to be used for parameters in zkCli as long as they are in single or double quotes.  ie: create /node1 ""This will now work""",,,,,,,,,,,,,,,,,,,,"10/Jul/14 20:10;appodictic;I am sure you will thank me for this.;;;","27/Jul/14 14:08;fpj;Which version are you using? 3.4.* or out of trunk? There are differences in the cli implementation.;;;","30/Jul/14 18:55;scoulibaly;Hi Flavio,
Using 3.4.5 atm.
Will Check versus trunk after august 10th !
Thank you for the investigation!
Br
Sekine

Le dimanche 27 juillet 2014, Flavio Junqueira (JIRA) <jira@apache.org> a

;;;","08/Dec/14 19:09;gus;Same issue when using set commands by the way.;;;","14/Apr/15 22:53;ryanlamore;Allows spaces to be used for parameters in zkCli as long as they are in single or double quotes.  ie: create /node1 ""This will now work""

I had this reviewed internally, but not from any official zookeeper person.;;;","14/Apr/15 22:57;ryanlamore;Switch out the split on space for a regexp that will handle spaces within quotes.  Also added a bunch of unit tests to show it working.;;;","14/Apr/15 23:00;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12725416/ZOOKEEPER-1853.patch
  against trunk revision 1672934.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 4 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2633//console

This message is automatically generated.;;;","15/Apr/15 01:05;ryanlamore;looks like I didn't do the diff correctly.. Let me try again;;;","15/Apr/15 01:07;ryanlamore;Updated patch with --no-prefix.  I believe that was the issue with the last patch;;;","15/Apr/15 02:02;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12725445/ZOOKEEPER-1853.patch
  against trunk revision 1672934.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 4 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    -1 javac.  The applied patch generated 10 javac compiler warnings (more than the trunk's current 6 warnings).

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2634//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2634//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2634//console

This message is automatically generated.;;;","15/Apr/15 03:31;ryanlamore;Fixing the last of the warnings...  This version of the patch should be the final one.;;;","15/Apr/15 04:32;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12725465/ZOOKEEPER-1853.patch
  against trunk revision 1672934.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 4 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2635//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2635//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2635//console

This message is automatically generated.;;;","15/Apr/15 14:26;ryanlamore;This is my first commit to this project.  What's the process from this point on?  Thanks!;;;","01/May/15 00:08;rgs;Thanks for the patch [~ryanlamore]! Though, could you generate one against the 3.4 branch, the one you uploaded seems to be against trunk.

Other than that, lgtm +1 

;;;","23/Aug/15 20:10;rgs;[~ryanlamore]: could you generate a patch for the 3.4 branch please? Thanks!;;;","14/Oct/15 21:00;jaytaylor;Any updates as to when this will be merged?;;;","14/Oct/15 23:06;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12725465/ZOOKEEPER-1853.patch
  against trunk revision 1706631.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 4 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2919//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2919//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2919//console

This message is automatically generated.;;;","22/Oct/15 15:07;hex108;I came across this problem too today, I rebased [~ryanlamore] 's patch to branch-3.4 since there is no response for a long time, and attach the patch for brach-3.4. Kindly review it please.;;;","22/Oct/15 15:12;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12768046/ZOOKEEPER-1853-branch-3.4.patch
  against trunk revision 1709293.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2923//console

This message is automatically generated.;;;","08/Nov/15 22:27;rgs;Merged for trunk and 3.5:

https://github.com/apache/zookeeper/commit/808d744bfa389b23fb3d8928caa2215138da2169
https://github.com/apache/zookeeper/commit/a93cda7e2e70de7fc0c393483cbc970cebbdd230

Thanks [~ryanlamore]!

And for 3.4:

https://github.com/apache/zookeeper/commit/61abcbc102d3039a94ce5dc19477818d38fd7ffd

Thanks [~hex108]!

;;;","08/Nov/15 22:30;hudson;FAILURE: Integrated in ZooKeeper-trunk #2811 (See [https://builds.apache.org/job/ZooKeeper-trunk/2811/])
ZOOKEEPER-1853: zkCli.sh can't issue a CREATE command containing
spaces in the data (Ryan Lamore via rgs) (rgs: [http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1713303])
* trunk/.gitignore
* trunk/CHANGES.txt
* trunk/src/java/main/org/apache/zookeeper/ZooKeeperMain.java
* trunk/src/java/test/org/apache/zookeeper/ZooKeeperTest.java
;;;","16/Nov/15 11:35;eribeiro;Hi [~rgs], 

While testing 3.4.7 release I have seen that some space separated data works as below:

{code}
[zk: localhost:2181(CONNECTED) 5] create /concepts ""Hello world""
Created /concepts
[zk: localhost:2181(CONNECTED) 6] get /concepts
Hello world
cZxid = 0x3
ctime = Mon Nov 16 09:17:37 BRST 2015
mZxid = 0x3
mtime = Mon Nov 16 09:17:37 BRST 2015
pZxid = 0x3
cversion = 0
dataVersion = 0
aclVersion = 0
ephemeralOwner = 0x0
dataLength = 11
numChildren = 0
{code}

OTOH, the json example on the description of this issue returns incomplete data on GET, as below:

{code}
[zk: localhost:2181(CONNECTED) 7] create /contacts '{""country"":""CA"",""name"":""De La Salle""}'
Node already exists: /contacts
[zk: localhost:2181(CONNECTED) 8] get /contacts
{""country"":""CA"",""name"":""De
cZxid = 0x2
ctime = Mon Nov 16 09:16:34 BRST 2015
mZxid = 0x2
mtime = Mon Nov 16 09:16:34 BRST 2015
pZxid = 0x2
cversion = 0
dataVersion = 0
aclVersion = 0
ephemeralOwner = 0x0
dataLength = 26
numChildren = 0
{code}

Is this the expected behaviour of GET? Should we open a new JIRA to address it? 

Best regards,
Ed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cppunit test testNonexistingHost in TestZookeeperInit is failing on Unbuntu,ZOOKEEPER-1850,12685975,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Won't Fix,abranzyck,abranzyck,abranzyck,21/Dec/13 17:52,13/Mar/14 18:17,29/Jun/25 13:34,22/Dec/13 17:18,3.4.6,3.5.0,,,,,,,,,,,,,,,,,,,,,,,3.4.6,3.5.0,,,,tests,,,,,0,,,"This is the error:
TestZookeeperInit.cc:241: Assertion: assertion failed [Expression: zh==0]",Linux ubuntu 3.8.0-29-generic #42~precise1-Ubuntu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Dec/13 18:29;abranzyck;ZOOKEEPER-1850.patch;https://issues.apache.org/jira/secure/attachment/12619981/ZOOKEEPER-1850.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,364866,,,,,Thu Mar 13 18:17:11 UTC 2014,,,,,,,,,,"0|i1qw1r:",365166,,,,,,,,,,,,,,,,,,,,,"21/Dec/13 18:29;abranzyck;Apparently it is an issue with the DNS of my ISP?
It resolves anything that has subdomains to an IP address, so zookeeper_init just tries to connect there.
If I put just a hostname, with no subdomains, then the test case works. This is what the patch is doing.
I don't know if anybody else has seen this problem, but just in case ...;;;","22/Dec/13 01:10;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12619981/ZOOKEEPER-1850.patch
  against trunk revision 1552946.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1857//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1857//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1857//console

This message is automatically generated.;;;","22/Dec/13 03:03;rgs;I wonder if under some setups ¨thisisanonexistinghost"" would be resolved by virtue of wildcard configs (http://en.wikipedia.org/wiki/Wildcard_DNS_record). I wonder if it would be worthwhile to stub out DNS queries. Thoughts?;;;","22/Dec/13 13:37;abranzyck;I think you are right, and actually this was how it was done until ZOOKEEPER-208. See [http://svn.apache.org/viewvc/zookeeper/branches/branch-3.4/src/c/tests/TestZookeeperInit.cc?revision=704657&view=markup] line 212.
It was changed in order to make it thread safe, but I think the mocked gethostbyname is thread-safe anyway. I will change it back.;;;","22/Dec/13 13:42;abranzyck;I meant the MockFailed_gethostbyname, which is an inline function in LibCMocks.h;;;","22/Dec/13 17:18;abranzyck;Unfortunately the mocking thing is more complicated than I thought, and I don't think it is worthwhile.
As you say, trying to update the FQDN here so that it fails in all cases might not be feasible, so let's leave it like it is.
If the test fails like this for anybody else, they might find this JIRA record and know that it is not a problem in ZooKeeper.;;;","13/Mar/14 18:17;fpj;Closing issues after releasing 3.4.6.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cached InetSocketAddresses prevent proper dynamic DNS resolution,ZOOKEEPER-1846,12685075,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Duplicate,,benjamin.jaton,benjamin.jaton,17/Dec/13 01:18,30/Jan/19 12:50,29/Jun/25 13:34,16/Jan/17 06:40,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,quorum,,,,,1,patch,pull-request-available,"The class QuorumPeer maintains a Map<Long, QuorumServer> quorumPeers.
Each QuorumServer is created with an instance of InetSocketAddress electionAddr, and holds it forever.

I believe this is why the ZooKeeper servers can't resolve each other dynamically: If a ZooKeeper in the ensemble cannot be resolved at startup, it will never be resolved (until restart of the JVM), constantly failing with an UnknownHostException, even when the node is back up and reachable.

I would suggest to recreate an InetSocketAddress every time we retry the connection.
",,"anmolnar commented on pull request #37: ZOOKEEPER-1846: Always recreate socket addresses for any DNS change.
URL: https://github.com/apache/zookeeper/pull/37
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Jan/19 12:50;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,ZOOKEEPER-1506,,,,,,,,,,,,,,"25/Feb/15 04:34;mitsrael;DynamicIP.java.patch;https://issues.apache.org/jira/secure/attachment/12700668/DynamicIP.java.patch","25/Feb/15 02:47;mitsrael;Learner.java;https://issues.apache.org/jira/secure/attachment/12700661/Learner.java","25/Feb/15 02:47;mitsrael;QuorumCnxManager.java;https://issues.apache.org/jira/secure/attachment/12700663/QuorumCnxManager.java","25/Feb/15 02:47;mitsrael;QuorumPeer.java;https://issues.apache.org/jira/secure/attachment/12700662/QuorumPeer.java",,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,364152,,,,,Mon Jan 16 06:40:45 UTC 2017,,,,,,,,,,"0|i1qrnr:",364452,"Forces the re-resolve, on error, of the Peers' Hostname to IP address, which is an issue in virtual/cloud environments where IPs are assigned dynamically upon every container startup.
If the Hostname is unresolvable or the connection fails (IP change), this DNS refresh process is immediately triggered.",,,,,,,,,,,,,,,,,,,,"25/Feb/15 02:42;mitsrael;I had the same issue but thanks to the log messages I was able to find and fix at the source, the situation when a IP address is still unavailable or changes all the sudden is actually VERY common in most major cloud solutions nowadays, what actually makes this bug SEVERE for the high availability does not work at all in such DNS changes, even overriding the DNS caching setting in Java is useless.

This issue affects, at least, the following methods:
org.apache.zookeeper.server.quorum.Follower.followLeader(Follower.java:71)
connectOne(QuorumCnxManager.java:369)

And the solution was to add a call to a new method located in:
org.apache.zookeeper.server.quorum.QuorumPeer.QuorumServer.refreshDNS()

And call it upon a IOException on the methods listed above, now I can start nodes anytime (even saving my DNS container for last), restart them (IPs are always different) and the negotiation works like a charm.

To say this issue is ""Minor"" is not understandable for nowadays all sorts of systems are virtualized and, most the time, IPs  address are dynamically assigned upon system startup and when multiple nodes start as the same time it is likely that a few moments will be needed for the IPs to be assigned... that is exactly what I go through with docker and Zookeeper.

This is the new method added (org.apache.zookeeper.server.quorum.QuorumPeer.QuorumServer.refreshDNS()):
        /**
         * Forces the resolution of the hostname to IP address, for this can be dynamic and on some
         * occasions even not available by the time the service starts
         */
        public void refreshDNS() {
        	LOG.debug(""Refreshing DNS for Quorum Peer "" + electionAddr);
        	
        	if (electionAddr != null) {
        		electionAddr = new InetSocketAddress(electionAddr.getHostName(), electionAddr.getPort());
        	}
        	
        	if (addr != null) {
        		addr = new InetSocketAddress(addr.getHostName(), addr.getPort());
        	}

This is how the catch clauses of the affected methods look like now:
} catch (IOException e) {
                //This code corrects a negative or out-dated cache hits avoid the servers from communicating, by forcing it to resolve again of the Hostname to a IP Address
                self.getView().get(sid).refreshDNS();
                self.quorumPeers.get(sid).refreshDNS();
                
                LOG.warn(""Cannot open channel to "" + sid
                        + "" at election address "" + electionAddr,
                        e);
            };;;","25/Feb/15 02:46;mitsrael;I had the same issue but thanks to the log messages I was able to find and fix at the source, the situation when a IP address is still unavailable or changes all the sudden is actually VERY common in most major cloud solutions nowadays, what actually makes this bug SEVERE for the high availability does not work at all in such DNS changes, even overriding the DNS caching setting in Java is useless.

This issue affects, at least, the following methods:
org.apache.zookeeper.server.quorum.Follower.followLeader(Follower.java:71)
connectOne(QuorumCnxManager.java:369)

And the solution was to add a call to a new method located in:
org.apache.zookeeper.server.quorum.QuorumPeer.QuorumServer.refreshDNS()

And call it upon a IOException on the methods listed above, now I can start nodes anytime (even saving my DNS container for last), restart them (IPs are always different) and the negotiation works like a charm.

To say this issue is ""Minor"" is not understandable for nowadays all sorts of systems are virtualized and, most the time, IPs  address are dynamically assigned upon system startup and when multiple nodes start as the same time it is likely that a few moments will be needed for the IPs to be assigned... that is exactly what I go through with docker and Zookeeper.

This is the new method added (org.apache.zookeeper.server.quorum.QuorumPeer.QuorumServer.refreshDNS()):
        /**
         * Forces the resolution of the hostname to IP address, for this can be dynamic and on some
         * occasions even not available by the time the service starts
         */
        public void refreshDNS() {
        	LOG.debug(""Refreshing DNS for Quorum Peer "" + electionAddr);
        	
        	if (electionAddr != null) {
        		electionAddr = new InetSocketAddress(electionAddr.getHostName(), electionAddr.getPort());
        	}
        	
        	if (addr != null) {
        		addr = new InetSocketAddress(addr.getHostName(), addr.getPort());
        	}

This is how the catch clauses of the affected methods look like now:
} catch (IOException e) {
                //This code corrects a negative or out-dated cache hits avoid the servers from communicating, by forcing it to resolve again of the Hostname to a IP Address
                self.getView().get(sid).refreshDNS();
                self.quorumPeers.get(sid).refreshDNS();
                
                LOG.warn(""Cannot open channel to "" + sid
                        + "" at election address "" + electionAddr,
                        e);
            };;;","25/Feb/15 02:47;mitsrael;Forces the re-resolve, on error, of the Peers' Hostname to IP address, which is an issue in virtual/cloud environments where IPs are assigned dynamically upon every container startup.
If the Hostname is unresolvable or the connection fails (IP change), this DNS refresh process is immediately triggered.;;;","25/Feb/15 02:51;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12700663/QuorumCnxManager.java
  against trunk revision 1662055.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2532//console

This message is automatically generated.;;;","25/Feb/15 04:24;mitsrael;Forces the re-resolve, on error, of the Peers' Hostname to IP address, which is an issue in virtual/cloud environments where IPs are assigned dynamically upon every container startup.
If the Hostname is unresolvable or the connection fails (IP change), this DNS refresh process is immediately triggered.;;;","25/Feb/15 04:31;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12700667/DynamicIP.java.patch
  against trunk revision 1662055.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2533//console

This message is automatically generated.;;;","25/Feb/15 04:34;mitsrael;Forces the re-resolve, on error, of the Peers' Hostname to IP address, which is an issue in virtual/cloud environments where IPs are assigned dynamically upon every container startup.
If the Hostname is unresolvable or the connection fails (IP change), this DNS refresh process is immediately triggered.;;;","25/Feb/15 04:40;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12700668/DynamicIP.java.patch
  against trunk revision 1662055.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2534//console

This message is automatically generated.;;;","07/Jul/15 01:20;githubbot;GitHub user yongtang opened a pull request:

    https://github.com/apache/zookeeper/pull/37

    ZOOKEEPER-1846: Always recreate socket addresses for any DNS change.

    This pull is also related to ZOOKEEPER-1506. The fix allows DNS changes to be applied when ZooKeeper is running. ZOOKEEPER-1506 partially solves this issue, which has already been
    applied to ZooKeeper 3.5.1 (RC3). This pull request allows ZOOKEEPER-1846 to be fixed as well.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/yongtang/zookeeper branch-3.5

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/37.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #37
    
----
commit 92a55a764f54521d3cd745a26f2fedfa7b5804ac
Author: yongtang <yongtang@users.noreply.github.com>
Date:   2015-07-07T01:15:50Z

    ZOOKEEPER-1846: Always recreate socket addresses for any DNS change. This fix is also related to ZOOKEEPER-1506.

----
;;;","07/Jul/15 02:47;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12700668/DynamicIP.java.patch
  against trunk revision 1689211.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2807//console

This message is automatically generated.;;;","07/Jul/15 03:43;michim;Is this a duplicate of ZOOKEEPER-1506?;;;","28/Aug/15 16:59;rthille;Looks like a duplicate of [Zookeeper-1506|https://issues.apache.org/jira/browse/ZOOKEEPER-1506] to me.  The patch on this one looks  nice and small too...;;;","25/Mar/16 03:51;phunt;[~benjamin.jaton] can you confirm that this is resolved by ZOOKEEPER-1506 ?;;;","25/Mar/16 07:32;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12700668/DynamicIP.java.patch
  against trunk revision 1736259.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3119//console

This message is automatically generated.;;;","26/Mar/16 18:52;phunt;Moving out of PA given we're waiting on feedback (see recent comments) on whether this is already fixed by ZOOKEEPER-1506;;;","16/Jan/17 06:40;hanm;I am pretty sure this is a duplicate of ZOOKEEPER-1506; resolve as dup.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Server tries to connect to itself during dynamic reconfig,ZOOKEEPER-1840,12684665,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,shralex,bfreuden,bfreuden,14/Dec/13 11:53,16/Apr/14 11:07,29/Jun/25 13:34,16/Apr/14 07:07,3.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,quorum,,,,,0,,,"Submitted this bug on a suggestion of Alexander Shraer (see https://issues.apache.org/jira/browse/ZOOKEEPER-1691)

How to reproduce:

== Server 1 zoo.cfg:
standaloneEnabled=false
dynamicConfigFile=<path to>/confdyn1/zoo.cfg.dynamic

== Server 1 zoo.cfg.dynamic:
server.1=localhost:2888:3888:participant;localhost:2181

== Server 2 zoo.cfg:
standaloneEnabled=false
dynamicConfigFile=<path to>/confdyn2/zoo.cfg.dynamic

== Server 2 zoo.cfg.dynamic (it is ""aware"" of the server 1, as mentioned in the Dynamic Reconfiguration - User Manual
that I should have read more carefully yesterday):
server.1=localhost:2888:3888:participant;localhost:2181
server.2=localhost:2889:3889:participant;localhost:2182

Start server 1 
Start server 2 

== use client 1 to issue a reconfig command on server 1:
[zk: localhost:2181(CONNECTED) 1] reconfig -add server.2=localhost:2889:3889:participant;localhost:2182
Committed new configuration:
server.1=localhost:2888:3888:participant;localhost:2181
server.2=localhost:2889:3889:participant;localhost:2182
version=100000003

There are strange stack traces in both server consoles.

Server 1:
2013-12-12 22:31:40,888 [myid:1] - WARN [ProcessThread(sid:1 cport:-1)::QuorumCnxManager@390] - Cannot open channel to 2 at election address localhost/127.0.0.1:3889
java.net.ConnectException: Connection refused: connect
at java.net.PlainSocketImpl.socketConnect(Native Method)
at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:351)
at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:213)
at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:200)
at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
at java.net.Socket.connect(Socket.java:529)
at org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(QuorumCnxManager.java:375)
at org.apache.zookeeper.server.quorum.QuorumPeer.connectNewPeers(QuorumPeer.java:1252)
at org.apache.zookeeper.server.quorum.QuorumPeer.setLastSeenQuorumVerifier(QuorumPeer.java:1272)
at org.apache.zookeeper.server.quorum.Leader.propose(Leader.java:1071)
at org.apache.zookeeper.server.quorum.ProposalRequestProcessor.processRequest(ProposalRequestProcessor.java:78)
at org.apache.zookeeper.server.PrepRequestProcessor.pRequest(PrepRequestProcessor.java:864)
at org.apache.zookeeper.server.PrepRequestProcessor.run(PrepRequestProcessor.java:144)
2013-12-12 22:31:41,919 [myid:1] - WARN [LearnerHandler-/127.0.0.1:52301:QuorumPeer@1259] - Restarting Leader Election
2013-12-12 22:31:41,920 [myid:1] - INFO [localhost/127.0.0.1:3888:QuorumCnxManager$Listener@571] - Leaving listener
2013-12-12 22:31:41,920 [myid:1] - INFO [QuorumPeerListener:QuorumCnxManager$Listener@544] - My election bind port: localhost/127.0.0.1:3888
2013-12-12 22:31:44,438 [myid:1] - INFO [WorkerReceiver[myid=1]:FastLeaderElection$Messenger$WorkerReceiver@410] - WorkerReceiver is down
2013-12-12 22:31:44,439 [myid:1] - INFO [WorkerSender[myid=1]:FastLeaderElection$Messenger$WorkerSender@442] - WorkerSender is down

Server 2:
2013-12-12 22:31:41,894 [myid:2] - WARN [QuorumPeer[myid=2]/127.0.0.1:2182:QuorumCnxManager@390] - Cannot open channel to 2 at election address localhost/127.0.0.1:3889
java.net.ConnectException: Connection refused: connect
at java.net.PlainSocketImpl.socketConnect(Native Method)
at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:351)
at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:213)
at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:200)
at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
at java.net.Socket.connect(Socket.java:529)
at org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(QuorumCnxManager.java:375)
at org.apache.zookeeper.server.quorum.QuorumPeer.connectNewPeers(QuorumPeer.java:1252)
at org.apache.zookeeper.server.quorum.QuorumPeer.setLastSeenQuorumVerifier(QuorumPeer.java:1272)
at org.apache.zookeeper.server.quorum.Follower.processPacket(Follower.java:131)
at org.apache.zookeeper.server.quorum.Follower.followLeader(Follower.java:89)
at org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:967)
2013-12-12 22:31:41,923 [myid:2] - WARN [QuorumPeer[myid=2]/127.0.0.1:2182:QuorumPeer@1259] - Restarting Leader Election
2013-12-12 22:31:41,924 [myid:2] - INFO [QuorumPeerListener:QuorumCnxManager$Listener@544] - My election bind port: localhost/127.0.0.1:3889",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Apr/14 06:21;shralex;ZOOKEEPER-1840.patch;https://issues.apache.org/jira/secure/attachment/12640396/ZOOKEEPER-1840.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,363737,,,,,Wed Apr 16 11:07:14 UTC 2014,,,,,,,,,,"0|i1qp53:",364043,,,,,,,,,,,,,,,,,,,,,"15/Apr/14 20:42;shralex;This issue is not about reconfig, so I'm renaming the JIRA. Its about whether or not to have an explicit connection from a server to in QuorumCnxManager.java

It looks like in FLE we a server skips sending messages to itself by immediately putting the message in the receiving queue, so although a connection to itself exists it will not be used.

But if I understand correctly a leader will explicitly send operations (proposals) to itself over an open connection. When a message is received it passes through several layers of request processors. So its not so clear to me on what layer we'd want to enqueue a packet from the leader to itself if we want to avoid explicitly sending it. Alternatively we could jut explicitly call Leader.processAck(myself) before sending the packet to others. [~fpj], [~breed], others, what do you think ? is this something we want to fix ?;;;","16/Apr/14 05:52;michim;I'm a bit confused by the summary. Aren't both server 1 and 2 trying to connect to server 2?;;;","16/Apr/14 06:18;shralex;I just noticed that the specific error in the description is due to something else - when we reconfigure, we restart leader election, which involves shutting down QCM. I think this is why 1 can't connect to 2 momentarily. On the other hand 2 tries to connect to 1 from connectNewPeers, and the attached patch prevents this.

I'm still not sure whether QCM connects to itself by default when its created.;;;","16/Apr/14 06:19;shralex;sorry I meant ""2 tries to connect to 2 from connectNewPeers"";;;","16/Apr/14 06:29;michim;QuorumCnxManager doesn't connect to itself by default.

https://github.com/apache/zookeeper/blob/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java#L322;;;","16/Apr/14 06:36;shralex;I found this line, but its used by FLE only, not leader -> follower. What about connections for sending the operation proposals ?;;;","16/Apr/14 06:53;michim;If I understand it correctly, followers/observers connect to the leader by calling connectToLeader(). The leader accepts connections and initialize LearnerHandler objects. It doesn't use QuorumCnxManager, and the leader doesn't connect to itself.

https://github.com/apache/zookeeper/blob/trunk/src/java/main/org/apache/zookeeper/server/quorum/Leader.java#L390;;;","16/Apr/14 06:59;shralex;Thanks, you're right. I guess its too late here :)
I found how this works now - ProposalRequestProcessor on the leader invokes propose() that sends messages to all learners and then ProposalRequestProcessor hands it over to AckRequestProcessor that creates an ACK from the leader itself. Anyway, I changed the title back to what it was. I tried the patch, looks like it solves the issue - no message from 2 to 2 connection failure.;;;","16/Apr/14 07:00;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12640396/ZOOKEEPER-1840.patch
  against trunk revision 1587812.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2045//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2045//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2045//console

This message is automatically generated.;;;","16/Apr/14 07:06;michim;+1 Thanks Alex!;;;","16/Apr/14 07:07;michim;trunk: http://svn.apache.org/viewvc?view=revision&revision=1587818;;;","16/Apr/14 11:07;hudson;FAILURE: Integrated in ZooKeeper-trunk #2292 (See [https://builds.apache.org/job/ZooKeeper-trunk/2292/])
ZOOKEEPER-1840. Server tries to connect to itself during dynamic reconfig (Alexander Shraer via michim) (michim: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1587818)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DeserializationPerfTest calls method with wrong arguments,ZOOKEEPER-1819,12680643,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,dknig1b,dknig1b,dknig1b,21/Nov/13 23:56,26/Apr/14 11:04,29/Jun/25 13:34,25/Apr/14 19:37,3.5.0,,,,,,,,,,,,,,,,,,,,,,,,3.5.0,,,,,tests,,,,,0,,,"The DeserializationPerfTest calls
SerializationPerfTest.createNodes to create serialized nodes to deserialize.

However 2 of the arguments, childcount and parentCVersion are switched in the call to the above method.  This results in all tests unintentionally testing the same scenario.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,"22/Nov/13 00:13;dknig1b;ZOOKEEPER-1819.patch;https://issues.apache.org/jira/secure/attachment/12615226/ZOOKEEPER-1819.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,359908,,,,,Sat Apr 26 11:04:47 UTC 2014,,,,,,,,,,"0|i1q1kv:",360207,Fix DeserializationPerfTest which was not testing the desired scenarios.,,,,,,,,,,,,,,,,,,,,"21/Nov/13 23:57;dknig1b;The 
SerializationPerfTest.createNodes(DataTree tree, String path, int depth,
            int childcount, int parentCVersion, byte[] data)

method is called

   SerializationPerfTest.createNodes(tree, ""/"", depth, tree.getNode(""/"").stat.getCversion(), width, new byte[len]);

but should be

   SerializationPerfTest.createNodes(tree, ""/"", depth, width, tree.getNode(""/"").stat.getCversion(), new byte[len]);;;;","22/Nov/13 00:00;dknig1b;Index: src/java/test/org/apache/zookeeper/server/DeserializationPerfTest.java
===================================================================
--- src/java/test/org/apache/zookeeper/server/DeserializationPerfTest.java	(revision 1544262)
+++ src/java/test/org/apache/zookeeper/server/DeserializationPerfTest.java	(working copy)
@@ -40,7 +40,7 @@
         int count;
         {
             DataTree tree = new DataTree();
-            SerializationPerfTest.createNodes(tree, ""/"", depth, tree.getNode(""/"").stat.getCversion(), width, new byte[len]);
+            SerializationPerfTest.createNodes(tree, ""/"", depth, width, tree.getNode(""/"").stat.getCversion(), new byte[len]);
             count = tree.getNodeCount();

             ByteArrayOutputStream baos = new ByteArrayOutputStream();;;;","25/Apr/14 11:10;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12615226/ZOOKEEPER-1819.patch
  against trunk revision 1589949.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2064//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2064//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2064//console

This message is automatically generated.;;;","25/Apr/14 19:34;michim;+1 Thank you Daniel.;;;","25/Apr/14 19:37;michim;trunk: http://svn.apache.org/viewvc?view=revision&revision=1590116;;;","26/Apr/14 11:04;hudson;FAILURE: Integrated in ZooKeeper-trunk #2302 (See [https://builds.apache.org/job/ZooKeeper-trunk/2302/])
ZOOKEEPER-1819. DeserializationPerfTest calls method with wrong arguments (Daniel Knightly via michim) (michim: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1590116)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/server/DeserializationPerfTest.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClientCnxn.close() should block until threads have died,ZOOKEEPER-1816,12679495,Bug,Patch Available,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,wuwen,jaredwinick,jaredwinick,15/Nov/13 21:33,22/Jun/18 04:49,29/Jun/25 13:34,,3.3.6,3.4.11,3.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,java client,,,,,1,,,"In the testing of ACCUMULO-1379 and ACCUMULO-1858 it was seen that the non-blocking behavior of ClientCnxn.close(), and therefore ZooKeeper.close(), can cause a race condition when undeploying an application running in a Java container such as JBoss or Tomcat. As the close() method returns without joining on the sendThread and eventThread, those threads continue to execute/cleanup while the container is cleaning up the application's resources. If the container has unloaded classes by the time this code runs

{code}
ZooTrace.logTraceMessage(LOG, ZooTrace.getTextTraceLevel(), ""SendThread exitedloop."");
{code}

A ""java.lang.NoClassDefFoundError: org/apache/zookeeper/server/ZooTrace"" can be seen. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-1394,,ACCUMULO-1858,,,,,,,"08/Nov/16 03:37;wuwen;ZOOKEEPER-1816.patch;https://issues.apache.org/jira/secure/attachment/12837908/ZOOKEEPER-1816.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,358855,,,,,Tue Nov 08 04:08:18 UTC 2016,,,,,,,,,,"0|i1pv0v:",359145,,,,,,,,,,,,,,,,,,,,,"08/Nov/16 04:08;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12837908/ZOOKEEPER-1816.patch
  against trunk revision 440e0923dd9e3be533a196fdd6ada960860ca7f6.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 19 new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3529//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3529//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3529//console

This message is automatically generated.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZooInspector reconnection always fails if first connection fails,ZOOKEEPER-1812,12678470,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,benjamin.jaton,benjamin.jaton,benjamin.jaton,10/Nov/13 20:28,13/Mar/14 18:17,29/Jun/25 13:34,12/Nov/13 06:30,3.4.5,3.5.0,,,,,,,,,,,,,,,,,,,,,,,3.4.6,3.5.0,,,,contrib,,,,,0,zooinspector,,"Steps to reproduce:

- Connect to localhost:2181 when ZooKeeper server is down. After a few seconds, ZooInspector warns that the connection has failed
- start the ZooKeeper server
- Reconnect to localhost:2181, ZooInspector will still not be able to connect to the server.

The workaround is to relaunch ZooInspector.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Nov/13 20:35;benjamin.jaton;ZOOKEEPER-1812-3.4.patch;https://issues.apache.org/jira/secure/attachment/12613060/ZOOKEEPER-1812-3.4.patch","10/Nov/13 20:35;benjamin.jaton;ZOOKEEPER-1812.patch;https://issues.apache.org/jira/secure/attachment/12613061/ZOOKEEPER-1812.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,357845,Reviewed,,,,Thu Mar 13 18:17:08 UTC 2014,,,,,,,,,,"0|i1posn:",358135,Fixed ZooInspector reconnection,,,,,,,,,,,,,,,,,,,,"10/Nov/13 21:11;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12613061/ZOOKEEPER-1812.patch
  against trunk revision 1539529.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1758//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1758//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1758//console

This message is automatically generated.;;;","12/Nov/13 01:01;phunt;We shouldn't fix this issue with a patch to zooinspector, this is really and issue with the zk client code. I see ZOOKEEPER-1057 which sounds related, however that's c client and not java. I thought I had seen something similar reported against just but I can't find it. (although there is ZOOKEEPER-1734/ZOOKEEPER-1576)

I think we need to address this as an issue in the client implementation.;;;","12/Nov/13 01:17;benjamin.jaton;I'm not sure about this, all the other JIRAs are about not being able to connect to the ensemble when the connection to 1 node fails.
In our case there is only 1 ZooKeeper server.;;;","12/Nov/13 01:33;phunt;Regardless though I think it's an issue that needs to be fixed in the client.;;;","12/Nov/13 01:45;benjamin.jaton;The way it's handled right now in ZooInspectorManagerImpl just cannot work : the connection is attempted only if this.zooKeeper is null.
The first time around, this.zooKeeper is null, so it creates a new ZooKeeper client and tries to connect, which is good.
The problem is that it never resets this.zooKeeper to null so we never enter the <if> again.;;;","12/Nov/13 06:30;phunt;Ok, makes sense. Committed to 3.4.6/trunk. Thanks Benjamin!;;;","12/Nov/13 07:24;benjamin.jaton;Thanks Patrick;;;","13/Nov/13 11:10;hudson;SUCCESS: Integrated in ZooKeeper-trunk #2118 (See [https://builds.apache.org/job/ZooKeeper-trunk/2118/])
ZOOKEEPER-1812. ZooInspector reconnection always fails if first connection fails (Benjamin Jaton via phunt) (phunt: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1540961)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/manager/ZooInspectorManagerImpl.java
;;;","13/Mar/14 18:17;fpj;Closing issues after releasing 3.4.6.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ephemeral node not deleted (or recreated?) after session expiry,ZOOKEEPER-1809,12677722,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Not A Problem,,shauns,shauns,06/Nov/13 05:06,06/Dec/13 21:32,29/Jun/25 13:34,07/Nov/13 03:54,3.4.5,3.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,"We have been running into a situation where we attempt to recreate our ephemeral nodes after a session expiry, only to find that the node already exists.   Admittedly, this is only happening when we are aggresively killing and recreating sessions in a tight loop, but I thought it might point to a larger issue which may need to be addressed.

Attached is a small app which demonstrates the issue, and a log file (client and server in the same log) which shows the issue as it occured.  Reproducing the bug is a tedious process of rerunning the test over and over again, but I have typically been able to reproduce it within 15mins of trying.  The test app is using Curator, however, I think the issue is occuring at the ZK level since the logs clearly indicate the ephermal node is deleted after the session expiry.

Interesting bits from the log
{noformat}
...
2013/11/06 13:46:03,065 INFO  [ConnectionStateManager-0] Recreating node: /test
...
2013/11/06 13:46:03,070 DEBUG [SyncThread:0] Processing request:: sessionid:0x1422bbb36d10002 type:create cxid:0x2 zxid:0x8 txntype:1 reqpath:n/a
...
2013/11/06 13:46:03,071 DEBUG [main] Closing client for session: 0x1422bbb36d10002
2013/11/06 13:46:03,075 INFO  [ProcessThread(sid:0 cport:-1):] Processed session termination for sessionid: 0x1422bbb36d10002
2013/11/06 13:46:03,079 DEBUG [SyncThread:0] Processing request:: sessionid:0x1422bbb36d10002 type:closeSession cxid:0x1 zxid:0x9 txntype:-11 reqpath:n/a
2013/11/06 13:46:03,080 DEBUG [SyncThread:0] Deleting ephemeral node /test for session 0x1422bbb36d10002
2013/11/06 13:46:03,080 DEBUG [SyncThread:0] sessionid:0x1422bbb36d10002 type:closeSession cxid:0x1 zxid:0x9 txntype:-11 reqpath:n/a
...
2013/11/06 13:46:04,459 INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:43462] Client attempting to renew session 0x1422bbb36d10002 at /127.0.0.1:59559
2013/11/06 13:46:04,459 INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:43462] Invalid session 0x1422bbb36d10002 for client /127.0.0.1:59559, probably expired
2013/11/06 13:46:04,460 INFO  [main-SendThread(localhost:43462)] Unable to reconnect to ZooKeeper service, session 0x1422bbb36d10002 has expired, closing socket connection
2013/11/06 13:46:04,460 DEBUG [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:43462] Dropping request: No session with sessionid 0x1422bbb36d10002 exists, probably expired and removed
...
2013/11/06 13:46:04,463 INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:43462] Client attempting to establish new session at /127.0.0.1:59560
2013/11/06 13:46:04,466 DEBUG [SyncThread:0] Processing request:: sessionid:0x1422bbb36d10003 type:createSession cxid:0x0 zxid:0xa txntype:-10 reqpath:n/a
2013/11/06 13:46:04,466 DEBUG [SyncThread:0] sessionid:0x1422bbb36d10003 type:createSession cxid:0x0 zxid:0xa txntype:-10 reqpath:n/a
2013/11/06 13:46:04,467 INFO  [SyncThread:0] Established session 0x1422bbb36d10003 with negotiated timeout 30000 for client /127.0.0.1:59560
...
2013/11/06 13:46:04,473 INFO  [ConnectionStateManager-0] Recreating node: /test
2013/11/06 13:46:04,474 DEBUG [SyncThread:0] Processing request:: sessionid:0x1422bbb36d10003 type:exists cxid:0x2 zxid:0xfffffffffffffffe txntype:unknown reqpath:/___CURATOR_KILL_SESSION___15970538640754
2013/11/06 13:46:04,474 DEBUG [SyncThread:0] sessionid:0x1422bbb36d10003 type:exists cxid:0x2 zxid:0xfffffffffffffffe txntype:unknown reqpath:/___CURATOR_KILL_SESSION___15970538640754
2013/11/06 13:46:04,475 INFO  [ProcessThread(sid:0 cport:-1):] Got user-level KeeperException when processing sessionid:0x1422bbb36d10003 type:create cxid:0x3 zxid:0xc txntype:-1 reqpath:n/a Error Path:/test Error:KeeperErrorCode = NodeExists for /test
2013/11/06 13:46:04,475 DEBUG [main-SendThread(localhost:43462)] Reading reply sessionid:0x1422bbb36d10003, packet:: clientPath:null serverPath:null finished:false header:: 2,3  replyHeader:: 2,11,-101  request:: '/___CURATOR_KILL_SESSION___15970538640754,T  response::  
2013/11/06 13:46:04,476 INFO  [main] Initiating client connection, connectString=127.0.0.1:43462 sessionTimeout=10000 watcher=com.netflix.curator.test.KillSession$2@4067d00a sessionId=1422bbb36d10003 sessionPasswd=<hidden>
...
2013/11/06 13:46:04,479 ERROR [ConnectionStateManager-0] Failed to recreate ephemeral node
org.apache.zookeeper.KeeperException$NodeExistsException: KeeperErrorCode = NodeExists for /test
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:119)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:783)
	at com.netflix.curator.framework.imps.CreateBuilderImpl$10.call(CreateBuilderImpl.java:625)
	at com.netflix.curator.framework.imps.CreateBuilderImpl$10.call(CreateBuilderImpl.java:609)
	at com.netflix.curator.RetryLoop.callWithRetry(RetryLoop.java:106)
	at com.netflix.curator.framework.imps.CreateBuilderImpl.pathInForeground(CreateBuilderImpl.java:605)
	at com.netflix.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:428)
	at com.netflix.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:408)
	at com.netflix.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:41)
	at com.rakuten.sandbox.sessionexpiry.nodeexists.SessionExpiryTest$2.stateChanged(SessionExpiryTest.java:72)
	at com.netflix.curator.framework.state.ConnectionStateManager$2.apply(ConnectionStateManager.java:184)
	at com.netflix.curator.framework.state.ConnectionStateManager$2.apply(ConnectionStateManager.java:180)
	at com.netflix.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:262)
	at com.netflix.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
	at com.netflix.curator.framework.state.ConnectionStateManager.processEvents(ConnectionStateManager.java:177)
	at com.netflix.curator.framework.state.ConnectionStateManager.access$000(ConnectionStateManager.java:40)
	at com.netflix.curator.framework.state.ConnectionStateManager$1.call(ConnectionStateManager.java:104)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)
...
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-1740,,,,,,,,,"06/Nov/13 05:10;shauns;SessionExpiryTest.java;https://issues.apache.org/jira/secure/attachment/12612321/SessionExpiryTest.java","06/Nov/13 09:02;shauns;testapp-3.5.0.log.gz;https://issues.apache.org/jira/secure/attachment/12612342/testapp-3.5.0.log.gz","06/Nov/13 05:22;shauns;testapp.log;https://issues.apache.org/jira/secure/attachment/12612325/testapp.log",,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,357097,,,,,Tue Nov 12 00:49:12 UTC 2013,,,,,,,,,,"0|i1pk6n:",357387,,,,,,,,,,,,,,,,,,,,,"06/Nov/13 05:10;shauns;Small testapp which demonstates the issue.  Depends on Curator (v1.3.3) and SLF4J (1.6+).  ;;;","06/Nov/13 05:22;shauns;complete log file (client and server in the same file) showing a run of the attached testapp when the problem occurred.;;;","06/Nov/13 08:31;abranzyck;This could be related or even a duplicate of ZOOKEEPER-1740. Could you please check?;;;","06/Nov/13 08:45;shauns;The bug seems identical, execpt that ZOOKEEPER-1740 was targeted to the 3.3 branch.  This is occurring on 3.4.5.;;;","06/Nov/13 09:02;shauns;After re-running the app for 15mins, I was able to reproduce the issue against a build of 3.5.0 I made from the latest trunk source;;;","06/Nov/13 11:23;fpj;I'm confused, the description says that the ephemeral is deleted after the session expiration. Is that a typo or the ephemeral is eventually deleted?

In any case, I remember having a discussion not too far back on the list and it might be related to this. I believe that expiring a session and deleting the ephemerals are not done atomically. The contract is that the ephemeral won't be deleted while the session is expired, not that it will be deleted at the exact time the session expires. So it is possible that you find the ephemeral still there for some short period of time. This is safe. 

We have a problem if it never goes away.;;;","07/Nov/13 00:42;shauns;No, its not a typo, but it may be a bit misleading.  The ZK log indicates that the ephemeral node has been deleted, then at a later point in time the app tries to recreate the node but gets a ""NodeExists"".  This can been seen in the logs from these lines

{noformat}
...
2013/11/06 13:46:03,080 DEBUG [SyncThread:0] Deleting ephemeral node /test for session 0x1422bbb36d10002
...
2013/11/06 13:46:04,475 INFO  [ProcessThread(sid:0 cport:-1):] Got user-level KeeperException when processing sessionid:0x1422bbb36d10003 type:create cxid:0x3 zxid:0xc txntype:-1 reqpath:n/a Error Path:/test Error:KeeperErrorCode = NodeExists for /test
{noformat}

Because of the ordering of these messages, I would assume the request should have succeeded.  Currently, the testapp exits as soon as the NodeExits exception is thrown so I dont know if the node eventually is deleted or not.  I suspect that it is though.

If I cannot be guarnateed that my ephemeral nodes will be deleted after a session expiry, what is the recommended practice for recreating ephemeral nodes?  Should I just keep polling the server until all of those nodes go away?;;;","07/Nov/13 03:52;shauns;Sorry everyone, this is my bad.  I took a closer look at the ZK logs and noticed that a ""create"" request is made immediately after being reconnected to the ZK cluster.  My RetryPolicy is causing a recovery attempt from a previous session to create the ephemeral node immediately after reconnecting to ZK, but before the new recovery attempt is made.  I will just have to change my code to handle session expiry while in the middle of a recovery.;;;","07/Nov/13 03:54;shauns;As indicated previously, this was a problem with the way the testapp was handling reconnect and not a problem with ZK.  Closing the issue.;;;","12/Nov/13 00:49;phunt;No problem [~shauns] - for future reference (and others looking at this jira) I've found it helpful to use the LogFormatter tool to dump the logs when attempting to debug such issues. It will give insight into the operations being performed. log4j logs are great, but this can often be even better.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SaslAuthFailDesignatedClientTest.testAuth fails frequently on SUSE,ZOOKEEPER-1799,12675090,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,jeffreyz,jeffreyz,jeffreyz,22/Oct/13 18:20,13/Mar/14 18:17,29/Jun/25 13:34,22/Oct/13 23:17,3.4.5,,,,,,,,,,,,,,,,,,,,,,,,3.4.6,3.5.0,,,,tests,,,,,0,,,"org.apache.zookeeper.test.SaslAuthFailDesignatedClientTest.testAuth often fails on SUSE with the following error stack trace:
{code}
junit.framework.AssertionFailedError: expected [0x141ccb60d870000] expected:<1> but was:<0>
	at org.apache.zookeeper.test.JMXEnv.ensureAll(JMXEnv.java:115)
	at org.apache.zookeeper.test.ClientBase.createClient(ClientBase.java:200)
	at org.apache.zookeeper.test.ClientBase.createClient(ClientBase.java:174)
	at org.apache.zookeeper.test.ClientBase.createClient(ClientBase.java:159)
	at org.apache.zookeeper.test.ClientBase.createClient(ClientBase.java:152)
	at org.apache.zookeeper.test.SaslAuthFailDesignatedClientTest.testAuth(SaslAuthFailDesignatedClientTest.java:87)
	at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:52)
{code}

The reason is that this is a negative test. After authentication fails, the client connection is closed at the server side so does the session right before test case calls JMXEnv.ensureAll  to verify the session. Below are the log events show the sequence and you can see the session was already closed before client JMXEnv.ensureAll.

{code}
2013-10-18 10:56:25,320 [myid:] - INFO  [SyncThread:0:ZooKeeperServer@595] - Established session 0x141ccb60d870000 with negotiated timeout 30000 for client /127.0.0.1:58272
2013-10-18 10:56:25,327 [myid:] - WARN  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11221:ZooKeeperServer@940] - Client failed to SASL authenticate: javax.security.sasl.SaslException: DIGEST-MD5: digest response format violation. Mismatched response.
2013-10-18 10:56:25,327 [myid:] - WARN  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11221:ZooKeeperServer@946] - Closing client connection due to SASL authentication failure.
2013-10-18 10:56:25,329 [myid:] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11221:NIOServerCnxn@1001] - Closed socket connection for client /127.0.0.1:58272 which had sessionid 0x141ccb60d870000
....
2013-10-18 10:56:25,330 [myid:] - INFO  [main-SendThread(localhost:11221):ClientCnxn$SendThread@1089] - Unable to read additional data from server sessionid 0x141ccb60d870000, likely server has closed socket, closing socket connection and attempting reconnect
2013-10-18 10:56:25,332 [myid:] - INFO  [main:JMXEnv@105] - expect:0x141ccb60d870000
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Oct/13 18:33;jeffreyz;zookeeper-1799.patch;https://issues.apache.org/jira/secure/attachment/12609700/zookeeper-1799.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,354710,Reviewed,,,,Thu Mar 13 18:17:09 UTC 2014,,,,,,,,,,"0|i1p5hb:",354999,,,,,,,,,,,,,,,,,,,,,"22/Oct/13 19:14;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12609700/zookeeper-1799.patch
  against trunk revision 1534599.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1715//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1715//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1715//console

This message is automatically generated.;;;","22/Oct/13 23:17;phunt;Committed to 3.4.6 and trunk. Thanks Jeffrey.;;;","23/Oct/13 11:09;hudson;SUCCESS: Integrated in ZooKeeper-trunk #2098 (See [https://builds.apache.org/job/ZooKeeper-trunk/2098/])
ZOOKEEPER-1799. SaslAuthFailDesignatedClientTest.testAuth fails frequently on SUSE (Jeffrey Zhong via phunt) (phunt: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1534842)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/SaslAuthFailDesignatedClientTest.java
;;;","13/Mar/14 18:17;fpj;Closing issues after releasing 3.4.6.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add support for enabling local session in rolling upgrade,ZOOKEEPER-1787,12673080,Bug,Patch Available,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,rgs,thawan,thawan,09/Oct/13 18:31,23/Aug/14 15:43,29/Jun/25 13:34,,3.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,server,,,,,0,,,"Currently, local session need to be enable by stopping the entire ensemble. If a rolling upgrade is used, all write request from a local session will fail with session move until the local session is enabled on the leader.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-1147,"20/Nov/13 04:30;rgs;ZOOKEEPER-1787.patch;https://issues.apache.org/jira/secure/attachment/12614784/ZOOKEEPER-1787.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,352703,,,,,Sat Aug 23 15:43:36 UTC 2014,,,,,,,,,,"0|i1ot5r:",352990,,,,,,,,,,,,,,,,,,,,,"09/Oct/13 18:34;rgs;[~thawan]: would you like me to rebase the patch I proposed in ZOOKEEPER-1147 (with the comments you suggested) or do you have a better/different approach?;;;","09/Oct/13 19:00;thawan;Your original patch is to add 4lw comment to disable session validation on the leader right? If you could try my approach, I think the patch should be much smaller. ;;;","20/Nov/13 04:30;rgs;With this patch you can use -Dzookeeper.skipSessionValidation=yes to enable local sessions with a rolling upgrade. We should probably add some documentation as well - but lets agree on this patch first. ;;;","20/Nov/13 04:34;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12614784/ZOOKEEPER-1787.patch
  against trunk revision 1543281.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    -1 javac.  The patch appears to cause tar ant target to fail.

    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1793//testReport/
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1793//console

This message is automatically generated.;;;","26/Jun/14 00:25;rgs;[~thawan], [~phunt], [~fpj], [~michim]: if you guys have some cycles, review would be welcomed. I'd like to have this so we can get testing for upgrades from 3.4 early on in the 3.5.0 release cycle. ;;;","26/Jun/14 00:32;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12614784/ZOOKEEPER-1787.patch
  against trunk revision 1605517.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    -1 javac.  The patch appears to cause tar ant target to fail.

    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2152//testReport/
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2152//console

This message is automatically generated.;;;","23/Aug/14 15:30;shralex;should this be a blocker for 3.5.0 ? ;;;","23/Aug/14 15:43;rgs;Not sure. Local sessions are not enabled by default though:

{noformat}
    /**
     * Whether learners in this quorum should create new sessions as local.
     * False by default to preserve existing behavior.
     */
    protected boolean localSessionsEnabled = false;
{noformat}

so it won't actually break out of the box rolling upgrades. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZooKeeper data model documentation is incorrect,ZOOKEEPER-1786,12672979,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,ntolia,ntolia,ntolia,09/Oct/13 08:10,13/Mar/14 18:16,29/Jun/25 13:34,15/Nov/13 18:07,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,3.4.6,3.5.0,,,,documentation,,,,,0,,,"When I look at https://zookeeper.apache.org/doc/trunk/zookeeperProgrammers.html#ch_zkDataModel, I see two things that seem wrong in terms of restricted characters:

* \uXFFFE - \uXFFFF (where X is a digit 1 - E)
* \uF0000 - \uFFFFF

These definitions are invalid characters in Java and aren't reflected in PathUtils either (or PathUtilsTest). In fact the code in PathUtils states:
{code:borderStyle=solid}
            } else if (c > '\u0000' && c <= '\u001f'
                    || c >= '\u007f' && c <= '\u009F'
                    || c >= '\ud800' && c <= '\uf8ff'
                    || c >= '\ufff0' && c <= '\uffff') {
                reason = ""invalid charater @"" + i;
                break;
            }
{code}

Unless I am missing something, this simple patch should fix the documentation problem:
{code}
Index: src/docs/src/documentation/content/xdocs/zookeeperProgrammers.xml
===================================================================
--- src/docs/src/documentation/content/xdocs/zookeeperProgrammers.xml	(revision 1530514)
+++ src/docs/src/documentation/content/xdocs/zookeeperProgrammers.xml	(working copy)
@@ -139,8 +139,7 @@

       <listitem>
         <para>The following characters are not allowed: \ud800 - uF8FF,
-        \uFFF0 - uFFFF, \uXFFFE - \uXFFFF (where X is a digit 1 - E), \uF0000 -
-        \uFFFFF.</para>
+        \uFFF0 - uFFFF.</para>
       </listitem>

       <listitem>
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Nov/13 17:51;ntolia;ZOOKEEPER-1786.patch;https://issues.apache.org/jira/secure/attachment/12613885/ZOOKEEPER-1786.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,352602,,,,,Thu Mar 13 18:16:59 UTC 2014,,,,,,,,,,"0|i1osjb:",352889,,,,,,,,,,,,,,,,,,,,,"13/Nov/13 12:45;fpj;Niraj, do you want to generate a patch file so that we can review?;;;","13/Nov/13 18:56;ntolia;Patch for documentation attached.;;;","14/Nov/13 09:40;fpj;Thanks, Niraj. A couple of things:

# Please name the patch file ""ZOOKEEPER-1786.patch"".
# Please base it on the project root, not on trunk. The source file paths should start with src/....
# I think that with your patch we are covering:

{noformat}
c >= '\ud800' && c <= '\uf8ff'
                    || c >= '\ufff0' && c <= '\uffff'
{noformat}

but not:

{noformat}
c > '\u0000' && c <= '\u001f'
                    || c >= '\u007f' && c <= '\u009F'
{noformat}

Don't we need to cover those too? Am I missing anything?;;;","14/Nov/13 17:49;ntolia;{quote}
Please name the patch file ""ZOOKEEPER-1786.patch"".
{quote}

Will do.

{quote}
Please base it on the project root, not on trunk. The source file paths should start with src/....
{quote}

Assuming you meant the inverse but yes, sure.

{quote}
I think that with your patch we are covering:
...
{quote}

The other exceptions you mentioned are already covered in the documentation but just don't show up in the diff. Please see  https://zookeeper.apache.org/doc/trunk/zookeeperProgrammers.html#ch_zkDataModel for the exceptions you referred to. ;;;","14/Nov/13 17:59;fpj;bq. Assuming you meant the inverse but yes, sure.

We are probably not using the same terminology here. For me, if the project root is ""/"", then ""/src"" is the source folder. I think you got it, but if you didn't, either ask or check other patches in different jiras.

bq. The other exceptions you mentioned are already covered in the documentation but just don't show up in the diff.

Ok, thanks.;;;","14/Nov/13 21:05;fpj;+1, thanks, [~ntolia].;;;","15/Nov/13 18:07;fpj;Trunk Committed revision 1542355.;;;","15/Nov/13 18:15;fpj;B3.4 Committed revision 1542356.;;;","16/Nov/13 11:54;hudson;SUCCESS: Integrated in ZooKeeper-trunk #2121 (See [https://builds.apache.org/job/ZooKeeper-trunk/2121/])
ZOOKEEPER-1786. ZooKeeper data model documentation is incorrect (Niraj Tolia via fpj) (fpj: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1542355)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/docs/src/documentation/content/xdocs/zookeeperProgrammers.xml
;;;","13/Mar/14 18:16;fpj;Closing issues after releasing 3.4.6.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Small fix in zkServer.sh to support new configuration format,ZOOKEEPER-1785,12672930,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Not A Problem,shralex,shralex,shralex,09/Oct/13 00:22,29/Mar/14 22:48,29/Jun/25 13:34,29/Mar/14 22:48,3.5.0,,,,,,,,,,,,,,,,,,,,,,,,3.5.0,,,,,scripts,,,,,0,,,"The problem can be reproduced by running a server with the following type of config file:

dataDir=/Users/shralex/zookeeper-test/zookeeper1
syncLimit=2
initLimit=5
tickTime=2000
server.1=localhost:2721:2731:participant;2791
server.2=localhost:2722:2732:participant;2792

and then trying to do ""zkServer.sh status""

Here I specified the servers using the new config format but still used the static config file and didn't include the ""clientPort"" key.

zkServer.sh already supports the new configuration format, but expects server spec to appear in the dynamic config file if it uses the new format.
So in the example above it will not find the client port. 

The current logic for executing something like 'zkServer.sh status'  is:

1. Look for clientPort keyword in the static config file
2. Look for the client port in the server spec in the dynamic config file

The attached patch adds an intermediate step:
1'. Look for the client port in the server spec in the static config file

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-1783,,,,,,,,,"09/Oct/13 00:22;shralex;zkServersh.patch;https://issues.apache.org/jira/secure/attachment/12607475/zkServersh.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,352553,,,,,Sat Mar 29 22:48:43 UTC 2014,,,,,,,,,,"0|i1os8f:",352840,,,,,,,,,,,,,,,,,,,,,"09/Oct/13 01:16;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12607475/zkServersh.patch
  against trunk revision 1530166.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1663//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1663//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1663//console

This message is automatically generated.;;;","29/Mar/14 21:46;michim;I couldn't quite reproduce the problem. I used a static conf file like this:

{noformat}
dataDir=/tmp/zktest/data0
syncLimit=2
tickTime=2000
initLimit=5
server.0=localhost:2000:3000:participant;localhost:4000
server.1=localhost:2001:3001:participant;localhost:4001
server.2=localhost:2002:3002:participant;localhost:4002
{noformat}

but the server generates .dynamic conf file when it starts, so the status command succeeds without this patch. I verified the patch correctly finds the client port from the static conf file by running the status command before starting the server. [~shralex], doesn't the server always generate .dynamic conf file during startup, or is there a case where the .dynamic conf file doesn't get generated?;;;","29/Mar/14 22:20;shralex;I think you're right - initially the dynamic config was written out only once the first reconfig happened, but in ZOOKEEPER-1783 we changed that, so the current jira seems to be no longer necessary.;;;","29/Mar/14 22:28;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12607475/zkServersh.patch
  against trunk revision 1582943.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2002//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2002//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2002//console

This message is automatically generated.;;;","29/Mar/14 22:48;michim;Ok thanks Alex. I'm resolving this issue as 'not a problem'.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZooKeeper Server fails if snapCount is set to 1 ,ZOOKEEPER-1781,12672267,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,bwtakacy,bwtakacy,bwtakacy,04/Oct/13 01:19,13/Mar/14 18:17,29/Jun/25 13:34,07/Oct/13 23:38,3.4.5,,,,,,,,,,,,,,,,,,,,,,,,3.4.6,3.5.0,,,,quorum,,,,,0,,,"If snapCount is set to 1, ZooKeeper Server can start but it fails with the below error:

2013-10-02 18:09:07,600 [myid:1] - ERROR [SyncThread:1:SyncRequestProcessor@151] - Severe unrecoverable error, exiting
java.lang.IllegalArgumentException: n must be positive
        at java.util.Random.nextInt(Random.java:300)
        at org.apache.zookeeper.server.SyncRequestProcessor.run(SyncRequestProcessor.java:93)

In source code,  it maybe be supposed that snapCount must be 2 or more:
{code:title=org.apache.zookeeper.server.SyncRequestProcessor.java|borderStyle=solid}
     91             // we do this in an attempt to ensure that not all ofthe servers
     92             // in the ensemble take a snapshot at the same time
     93             int randRoll = r.nextInt(snapCount/2);
{code}

I think this supposition is not bad because snapCount = 1 is not realistic setting...
But, it may be better to mention this restriction in documentation or add a validation in the source code.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Oct/13 07:57;bwtakacy;ZOOKEEPER-1781.patch;https://issues.apache.org/jira/secure/attachment/12607062/ZOOKEEPER-1781.patch","05/Oct/13 12:18;bwtakacy;ZOOKEEPER-1781.patch;https://issues.apache.org/jira/secure/attachment/12606988/ZOOKEEPER-1781.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,351893,Reviewed,,,,Thu Mar 13 18:17:07 UTC 2014,,,,,,,,,,"0|i1oo6n:",352181,,,,,,,,,,,,,,,,,,,,,"04/Oct/13 16:52;phunt;IMO making it work with snapCount set to 1 would be the best way to resolve this. While it's not realistic for production use it would possibly be interesting for things like testing.;;;","05/Oct/13 12:43;bwtakacy;I make a patch for ZooKeeper 3.4.5. By reading SyncRequestProcessor.java, I found that a  random number between snapCount/2 and snapCount-1 is used. So, I added an explanation about it in the documentation. And I changed the source code to reset snapCount into 2 if it is configured to 1, because snapCount = 1 is meaningless and snapCount = 2 is the minimum for this algorism.;;;","05/Oct/13 20:32;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12606988/ZOOKEEPER-1781.patch
  against trunk revision 1529344.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1641//console

This message is automatically generated.;;;","06/Oct/13 08:01;bwtakacy;I attached a modified patch which includes a junit test.;;;","06/Oct/13 08:33;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12607062/ZOOKEEPER-1781.patch
  against trunk revision 1529344.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1643//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1643//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1643//console

This message is automatically generated.;;;","07/Oct/13 05:50;breed;+1 good work!;;;","07/Oct/13 23:38;phunt;Committed to 3.4.6 and trunk. Thanks Takashi!;;;","08/Oct/13 11:12;hudson;SUCCESS: Integrated in ZooKeeper-trunk #2082 (See [https://builds.apache.org/job/ZooKeeper-trunk/2082/])
ZOOKEEPER-1781. ZooKeeper Server fails if snapCount is set to 1 (Takashi Ohnishi via phunt, breed) (phunt: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1530110)
* /zookeeper/trunk/docs/index.pdf
* /zookeeper/trunk/docs/javaExample.pdf
* /zookeeper/trunk/docs/linkmap.pdf
* /zookeeper/trunk/docs/recipes.pdf
* /zookeeper/trunk/docs/releasenotes.pdf
* /zookeeper/trunk/docs/zookeeperAdmin.html
* /zookeeper/trunk/docs/zookeeperAdmin.pdf
* /zookeeper/trunk/docs/zookeeperHierarchicalQuorums.pdf
* /zookeeper/trunk/docs/zookeeperInternals.pdf
* /zookeeper/trunk/docs/zookeeperJMX.pdf
* /zookeeper/trunk/docs/zookeeperObservers.pdf
* /zookeeper/trunk/docs/zookeeperOver.pdf
* /zookeeper/trunk/docs/zookeeperProgrammers.pdf
* /zookeeper/trunk/docs/zookeeperQuotas.pdf
* /zookeeper/trunk/docs/zookeeperStarted.pdf
* /zookeeper/trunk/docs/zookeeperTutorial.pdf
ZOOKEEPER-1781. ZooKeeper Server fails if snapCount is set to 1 (Takashi Ohnishi via phunt, breed) (phunt: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1530108)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/docs/zookeeperAdmin.html
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/server/InvalidSnapCountTest.java
;;;","13/Mar/14 18:17;fpj;Closing issues after releasing 3.4.6.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException in SnapshotFormatter,ZOOKEEPER-1770,12671316,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,abranzyck,abranzyck,abranzyck,30/Sep/13 08:00,13/Mar/14 18:16,29/Jun/25 13:34,01/Oct/13 23:46,3.4.5,,,,,,,,,,,,,,,,,,,,,,,,3.4.6,3.5.0,,,,,,,,,0,,,"SnapshotFormatter fails with a NullPointerException when parsing one snapshot (with ""null"" data in one Znode):
Exception in thread ""main"" java.lang.NullPointerException
        at org.apache.zookeeper.server.SnapshotFormatter.printZnode(SnapshotFormatter.java:90)
        at org.apache.zookeeper.server.SnapshotFormatter.printZnode(SnapshotFormatter.java:95)
        at org.apache.zookeeper.server.SnapshotFormatter.printZnode(SnapshotFormatter.java:95)
        at org.apache.zookeeper.server.SnapshotFormatter.printZnode(SnapshotFormatter.java:95)
        at org.apache.zookeeper.server.SnapshotFormatter.printZnodeDetails(SnapshotFormatter.java:79)
        at org.apache.zookeeper.server.SnapshotFormatter.printDetails(SnapshotFormatter.java:71)
        at org.apache.zookeeper.server.SnapshotFormatter.run(SnapshotFormatter.java:67)
        at org.apache.zookeeper.server.SnapshotFormatter.main(SnapshotFormatter.java:51)
","Windos, Java 1.7",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Oct/13 11:17;abranzyck;ZOOKEEPER-1770.patch;https://issues.apache.org/jira/secure/attachment/12606081/ZOOKEEPER-1770.patch","30/Sep/13 11:04;abranzyck;ZOOKEEPER-1770.patch;https://issues.apache.org/jira/secure/attachment/12605878/ZOOKEEPER-1770.patch","01/Oct/13 11:17;abranzyck;snapshot.273;https://issues.apache.org/jira/secure/attachment/12606080/snapshot.273",,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,351022,Reviewed,,,,Thu Mar 13 18:16:52 UTC 2014,,,,,,,,,,"0|i1oiu7:",351314,,,,,,,,,,,,,,,,,,,,,"30/Sep/13 11:42;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12605878/ZOOKEEPER-1770.patch
  against trunk revision 1527398.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1607//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1607//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1607//console

This message is automatically generated.;;;","01/Oct/13 11:17;abranzyck;The patch is now updated with a test case.
Could anybody please help me to upload the binary file?;;;","01/Oct/13 11:48;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12606081/ZOOKEEPER-1770.patch
  against trunk revision 1527908.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 8 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1616//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1616//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1616//console

This message is automatically generated.;;;","01/Oct/13 22:03;phunt;I'll look at the patch. There is no way to get the patchbot to handle this properly btw. (binary attach);;;","01/Oct/13 23:46;phunt;Committed to branch-3.4 and trunk. Thanks Germán!;;;","02/Oct/13 11:06;hudson;SUCCESS: Integrated in ZooKeeper-trunk #2076 (See [https://builds.apache.org/job/ZooKeeper-trunk/2076/])
ZOOKEEPER-1770. NullPointerException in SnapshotFormatter (Germán Blanco via phunt) (phunt: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1528271)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/SnapshotFormatter.java
* /zookeeper/trunk/src/java/test/data/invalidsnap/version-2/snapshot.273
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/InvalidSnapshotTest.java
;;;","13/Mar/14 18:16;fpj;Closing issues after releasing 3.4.6.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZooInspector can't display node data/metadata/ACLs,ZOOKEEPER-1769,12671273,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,benjamin.jaton,benjamin.jaton,benjamin.jaton,29/Sep/13 17:12,01/Oct/13 11:11,29/Jun/25 13:34,01/Oct/13 05:56,3.5.0,,,,,,,,,,,,,,,,,,,,,,,,3.5.0,,,,,contrib,,,,,0,patch,,"There seem to be a few bugs in the trunk that prevent ZooInspector to load the node viewers ( the 3 tabs in the main windows when you select a ZK node in the tree don't show up any more ).
Apparently it has been introduced 2 years ago after a refactoring about icons and another about partially fixing a typo (""veiwer"" -> ""viewer"").

Note: the bug is only in trunk, 3.4 is fine.",Ubuntu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Sep/13 17:16;benjamin.jaton;ZOOKEEPER-1769.patch;https://issues.apache.org/jira/secure/attachment/12605815/ZOOKEEPER-1769.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,350979,,,,,Tue Oct 01 11:11:23 UTC 2013,,,,,,,,,,"0|i1oikf:",351270,,,,,,,,,,,,,,,,,,,,,"29/Sep/13 17:16;benjamin.jaton;For review.;;;","30/Sep/13 08:24;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12605815/ZOOKEEPER-1769.patch
  against trunk revision 1527398.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1605//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1605//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1605//console

This message is automatically generated.;;;","01/Oct/13 05:56;phunt;Committed to trunk. Thanks Benjamin!;;;","01/Oct/13 11:11;hudson;SUCCESS: Integrated in ZooKeeper-trunk #2075 (See [https://builds.apache.org/job/ZooKeeper-trunk/2075/])
ZOOKEEPER-1769. ZooInspector can't display node data/metadata/ACLs (Benjamin Jaton via phunt) (phunt: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1527908)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/ZooInspector.java
* /zookeeper/trunk/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/gui/nodeviewer/NodeViewerData.java
* /zookeeper/trunk/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/manager/ZooInspectorManagerImpl.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race condition producing NPE in NIOServerCnxn.toString,ZOOKEEPER-1750,12666416,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,rakeshr,helen,helen,30/Aug/13 22:57,13/Mar/14 18:16,29/Jun/25 13:34,04/Oct/13 23:16,3.5.0,,,,,,,,,,,,,,,,,,,,,,,,3.4.6,3.5.0,,,,server,,,,,0,,," The socket is closed and the variable ""sock"" is set to null for normal reasons, but the toString method is called before ""sock"" can be set again, producing a NullPointerException.

Stack trace: 

2013-08-29 01:49:19,991 6277 [CommitProcWorkThread-3] WARN org.apache.zookeeper.server.WorkerService  - Unexpected exception
java.lang.NullPointerException
    at org.apach.zookeeper.server.NIOServerCnxn.toString(NIOServerCnxn.java:961)
    at java.lang.String.valueOf(String.java:2854)
    at java.lang.StringBuilder.append(StringBuilder.java:128)
    at org.apache.zookeeper.server.NIOServerCnxn.process(NIOServerCnxn.java:1104)
    at org.apache.zookeeper.server.WatchManager.triggerWatch(WatchManager.java:120)
    at org.apache.zookeeper.server.WatchManager.triggerWatch(WatchManager.java:92)
    at org.apache.zookeeper.server.DataTree.createNode(DataTree.java:544)
    at org.apache.zookeeper.server.DataTree.processTxn(DataTree.java:805)
    at org.apache.zookeeper.server.ZKDatabase.processTxn(ZKDatabase.java:319)
    at org.apache.zookeeper.server.ZooKeeperServer.processTxn(ZooKeeperServer.java:967)
    at org.apache.zookeeper.server.FinalRequestProcessor.processRequest(FinalRequestProcessor.java:115)
    at org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor.processRequest(Leader.java:859)
    at org.apache.zookeeper.server.quorum.CommitProcessor$CommitWorkRequest.doWork(CommitProcessor.java:271)
    at org.apache.zookeeper.server.WorkerService$ScheduledWorkRequest.run(WorkerService.java:152)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:722)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Sep/13 04:32;rakeshr;0001-ZOOKEEPER-1750-trunk-version.patch;https://issues.apache.org/jira/secure/attachment/12602030/0001-ZOOKEEPER-1750-trunk-version.patch","09/Sep/13 05:25;rakeshr;0002-ZOOKEEPER-1750-trunk-version.patch;https://issues.apache.org/jira/secure/attachment/12602090/0002-ZOOKEEPER-1750-trunk-version.patch","10/Sep/13 06:43;rakeshr;0003-ZOOKEEPER-1750-branch-3_4.patch;https://issues.apache.org/jira/secure/attachment/12602296/0003-ZOOKEEPER-1750-branch-3_4.patch","11/Sep/13 03:01;rakeshr;0004-ZOOKEEPER-1750-trunk-version-modified-test-case-assertion.patch;https://issues.apache.org/jira/secure/attachment/12602502/0004-ZOOKEEPER-1750-trunk-version-modified-test-case-assertion.patch",,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,346355,,,,,Thu Mar 13 18:16:54 UTC 2014,,,,,,,,,,"0|i1nq53:",346656,,,,,,,,,,,,,,,,,,,,,"08/Sep/13 04:36;rakeshr;Used sock.isOpen() instead of nullifying sock=null. Please help me to review the changes. Thanks. The problem exists in 3.4 branch also.;;;","09/Sep/13 05:25;rakeshr;Updated latest patch.;;;","09/Sep/13 09:45;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12602090/0002-ZOOKEEPER-1750-trunk-version.patch
  against trunk revision 1520436.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1570//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1570//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1570//console

This message is automatically generated.;;;","09/Sep/13 22:05;michim;+1 Thanks Rakesh.

This patch doesn't apply to branch-3.4. Rakesh, could you generate a separate patch for branch-3.4?;;;","10/Sep/13 06:33;rakeshr;Thanks [~michi009] for the interest.
Hi, I think there is potential problem in the test case assertion which I done in the patch.
{code}
                String cnxnStr = serverCnxn.toString();
                serverCnxn.close();
                Assert.assertEquals(""Connection mismatches!"", cnxnStr,
                        serverCnxn.toString());
{code}

NIOServerCnxn#toString is using 'sock.socket().getRemoteSocketAddress()' and  this api is returning 'null' randomly. I think we should change it like:

{code}
                try {
                    serverCnxn.toString();
                } catch (Exception e) {
                    Assert.fail(""Shouldn't throw exception while getting connection details"");
                }
{code}

I could see its committed in trunk version. Could you please help to change this, otw it may leads random failures. Whats the approach to do the necessary changes?;;;","10/Sep/13 06:43;rakeshr;Updated patch for 3.4 version. Please have a look at it.;;;","10/Sep/13 06:52;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12602296/0003-ZOOKEEPER-1750-branch-3_4.patch
  against trunk revision 1521308.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1571//console

This message is automatically generated.;;;","10/Sep/13 11:06;hudson;SUCCESS: Integrated in ZooKeeper-trunk #2050 (See [https://builds.apache.org/job/ZooKeeper-trunk/2050/])
ZOOKEEPER-1750 Race condition producing NPE in NIOServerCnxn.toString
(Rakesh R via michim) (michim: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1521308)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/NIOServerCnxn.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/server/NIOServerCnxnTest.java
;;;","10/Sep/13 17:53;michim;Hi Rakesh,

Please submit the patch to this jira. I'll review it and check it in.

By the way, does anybody know how to specify the target branch for the pre-commit build?

Thanks!;;;","11/Sep/13 03:03;rakeshr;[~michi009] Could you please see the updated patch for the changes. Thanks;;;","11/Sep/13 04:09;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12602502/0004-ZOOKEEPER-1750-trunk-version-modified-test-case-assertion.patch
  against trunk revision 1521308.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1572//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1572//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1572//console

This message is automatically generated.;;;","11/Sep/13 22:20;michim;+1 for both 0003-ZOOKEEPER-1750-branch-3_4.patch and 0004-ZOOKEEPER-1750-trunk-version-modified-test-case-assertion.patch. Thanks Rakesh!
;;;","12/Sep/13 11:12;hudson;SUCCESS: Integrated in ZooKeeper-trunk #2053 (See [https://builds.apache.org/job/ZooKeeper-trunk/2053/])
ZOOKEEPER-1750 Handle NIOServerCnxn#toString returning null (Rakesh R via michim) (michim: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1522079)
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/server/NIOServerCnxnTest.java
;;;","13/Mar/14 18:16;fpj;Closing issues after releasing 3.4.6.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bin scripts don't dereference symlinks,ZOOKEEPER-1741,12664054,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Duplicate,shmuma,shmuma,shmuma,16/Aug/13 12:46,02/Oct/13 17:02,29/Jun/25 13:34,02/Oct/13 17:02,3.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,scripts,,,,,0,,,"Symlinks on bin scripts are not dereferenced correctly (""set -x"" added):
{noformat}
[root@tsthdp1 noarch]# which zookeeper-client
/usr/local/bin/zookeeper-client
[root@tsthdp1 noarch]# ls -la /usr/local/bin/zookeeper-client
lrwxrwxrwx 1 root root 40 Авг 16 15:56 /usr/local/bin/zookeeper-client -> /usr/local/hadoop/zookeeper/bin/zkCli.sh
[root@tsthdp1 noarch]# ls -la /usr/local/hadoop/zookeeper/bin
итого 36
drwxr-xr-x 2 root root 4096 Авг 16 16:24 .
drwxr-xr-x 5 root root 4096 Авг 16 15:56 ..
-rwxr-xr-x 1 root root 1909 Авг 16 15:56 zkCleanup.sh
-rwxr-xr-x 1 root root 1536 Авг 16 16:22 zkCli.sh
-rwxr-xr-x 1 root root 2599 Авг 16 15:56 zkEnv.sh
-rwxr-xr-x 1 root root 4559 Авг 16 15:56 zkServer-initialize.sh
-rwxr-xr-x 1 root root 6246 Авг 16 15:56 zkServer.sh
[root@tsthdp1 noarch]# zookeeper-client
+ ZOOBIN=/usr/local/bin/zookeeper-client
++ dirname /usr/local/bin/zookeeper-client
+ ZOOBIN=/usr/local/bin
++ cd /usr/local/bin
++ pwd
+ ZOOBINDIR=/usr/local/bin
+ '[' -e /usr/local/bin/../libexec/zkEnv.sh ']'
+ . /usr/local/bin/zkEnv.sh
/usr/local/bin/zookeeper-client: line 37: /usr/local/bin/zkEnv.sh: no such file or directory
{noformat}",Centos 5.8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Aug/13 15:11;shmuma;zk-symlinked-scripts-trunk.patch;https://issues.apache.org/jira/secure/attachment/12598480/zk-symlinked-scripts-trunk.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,344055,,,,,Wed Oct 02 17:02:18 UTC 2013,,,,,,,,,,"0|i1nbzz:",344357,,,,,,,,,,,,,,,,,,,,,"16/Aug/13 13:20;shmuma;trivial fix;;;","16/Aug/13 13:22;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12598448/zk-symlinked-scripts.patch
  against trunk revision 1503101.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1541//console

This message is automatically generated.;;;","16/Aug/13 15:11;shmuma;patch aganst trunk;;;","16/Aug/13 15:42;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12598480/zk-symlinked-scripts-trunk.patch
  against trunk revision 1503101.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1542//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1542//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1542//console

This message is automatically generated.;;;","01/Oct/13 00:14;phunt;Is this a dup (or vice versa) of ZOOKEEPER-1737 ?;;;","01/Oct/13 07:00;shmuma;Yes, it's the same issue.;;;","01/Oct/13 23:52;phunt;Given ZOOKEEPER-1737 was created/patched prior to this issue, Max would you mind reviewing 1737 and see if it meets your needs? If not I'd suggest updating that patch (on 1737). If you're fine with 1737 I'll close this as a dup. LMK.;;;","02/Oct/13 06:09;shmuma;ZOOKEEPER-1737 is ok for me. It's also more general, handling chain of symlinks correctly. So, it's ok to close this issue.;;;","02/Oct/13 17:02;phunt;closing as dup of ZOOKEEPER-1737;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"thread safe bug in FastLeaderElection: instance of WorkerSender is not safe published, WorkerSender thread may see that WorkerSender.manager is the default value null",ZOOKEEPER-1739,12662781,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,qiaoqingjie,qiaoqingjie,qiaoqingjie,09/Aug/13 04:29,11/Aug/13 03:01,29/Jun/25 13:34,,3.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,leaderElection,,,,,0,,,"I am reading the trunk source code recently and find a thread-safe problem, but i'm not quite sure.

in FastLeaderElection:

{code}
class WorkerSender implements Runnable { 
    volatile boolean stop; 
    QuorumCnxManager manager; 

    WorkerSender(QuorumCnxManager manager){ 
        this.stop = false; 
        this.manager = manager; 
    } 

    public void run() {
 ...
    }
}

...

Messenger(QuorumCnxManager manager) {

    this.ws = new WorkerSender(manager);

    Thread t = new Thread(this.ws,
            ""WorkerSender[myid="" + self.getId() + ""]"");
    t.setDaemon(true);
    t.start();

    this.wr = new WorkerReceiver(manager);

    t = new Thread(this.wr,
            ""WorkerReceiver[myid="" + self.getId() + ""]"");
    t.setDaemon(true);
    t.start();
}
...
{code}

The instance of WorkerSender is constructed in main thread, and its field manager is assigned , and it is used in another thread. The later thread may see that WorkerSender.manager is the default value null. The solution may be:
(1) change
{code} 
WorkerSender(QuorumCnxManager manager){ 
        this.stop = false; 
        this.manager = manager; 
} 
{code}

to 

{code}
WorkerSender(QuorumCnxManager manager){ 
	this.manager = manager; 
	this.stop = false; 
} 
{code}

or(2)
change 

{code}
QuorumCnxManager manager; 
{code}

to 

{code}
final QuorumCnxManager manager;
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Aug/13 03:01;qiaoqingjie;ZOOKEEPER-1739.patch;https://issues.apache.org/jira/secure/attachment/12597320/ZOOKEEPER-1739.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,342783,,,,,Sun Aug 11 03:00:25 UTC 2013,,,,,,,,,,"0|i1n45r:",343087,,,,,,,,,,,,,,,,,,,,,"09/Aug/13 10:50;fpj;I'm a bit behind with my reviews, but this change seems trivial. Could you propose a patch, [~qiaoqingjie]?;;;","11/Aug/13 03:00;qiaoqingjie;Not sure if this is really a problem or we should just ignore this. If it is, threre are a lot more similar codes. Since I'm new to zk and haven't read all the codes, the patch may not cover all the codes with this problem.

make the workerPool visible to SelectorThread:
{code}
Index: src/java/main/org/apache/zookeeper/server/NIOServerCnxnFactory.java
===================================================================
--- src/java/main/org/apache/zookeeper/server/NIOServerCnxnFactory.java	(版本 1512570)
+++ src/java/main/org/apache/zookeeper/server/NIOServerCnxnFactory.java	(工作副本)
@@ -722,11 +722,11 @@
 
     @Override
     public void start() {
-        stopped = false;
         if (workerPool == null) {
             workerPool = new WorkerService(
                 ""NIOWorker"", numWorkerThreads, false);
         }
+        stopped = false;
         for(SelectorThread thread : selectorThreads) {
             if (thread.getState() == Thread.State.NEW) {
                 thread.start();
{code}

make cnxTO visible to QuorumCnxManager.Listener thread, SendWorker's fields visible to SendWorker thread and RecvWorker's fields visible to RecvWorker:
{code}
Index: src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
===================================================================
--- src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java	(版本 1512570)
+++ src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java	(工作副本)
@@ -85,7 +85,7 @@
      * Connection time out value in milliseconds 
      */
     
-    private int cnxTO = 5000;
+    private volatile int cnxTO = 5000;
     
     /*
      * Local IP address
@@ -593,11 +593,11 @@
      * one.
      */
     class SendWorker extends Thread {
-        Long sid;
-        Socket sock;
+        final Long sid;
+        final Socket sock;
         RecvWorker recvWorker;
         volatile boolean running = true;
-        DataOutputStream dout;
+        volatile DataOutputStream dout;
 
         /**
          * An instance of this thread receives messages to send
@@ -747,10 +747,10 @@
      * channel breaks, then removes itself from the pool of receivers.
      */
     class RecvWorker extends Thread {
-        Long sid;
-        Socket sock;
+        final Long sid;
+        final Socket sock;
         volatile boolean running = true;
-        DataInputStream din;
+        volatile DataInputStream din;
         final SendWorker sw;
 
         RecvWorker(Socket sock, Long sid, SendWorker sw) {
{code}

make manager visible to WorkerReceiver and WorkerSender thread:
{code}
Index: src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java
===================================================================
--- src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java	(版本 1512570)
+++ src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java	(工作副本)
@@ -201,7 +201,7 @@
 
         class WorkerReceiver implements Runnable {
             volatile boolean stop;
-            QuorumCnxManager manager;
+            final QuorumCnxManager manager;
 
             WorkerReceiver(QuorumCnxManager manager) {
                 this.stop = false;
@@ -410,7 +410,7 @@
 
         class WorkerSender implements Runnable {
             volatile boolean stop;
-            QuorumCnxManager manager;
+            final QuorumCnxManager manager;
 
             WorkerSender(QuorumCnxManager manager){
                 this.stop = false;
{code}

make quorumVerifier visible to QuorumPeer thread and all initialized fields visible to QuorumPeer thread
{code}
Index: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java
===================================================================
--- src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java	(版本 1512570)
+++ src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java	(工作副本)
@@ -342,7 +342,7 @@
      */
 
     //last committed quorum verifier
-    public QuorumVerifier quorumVerifier;
+    public volatile QuorumVerifier quorumVerifier;
     
     //last proposed quorum verifier
     public QuorumVerifier lastSeenQuorumVerifier = null;
@@ -603,6 +603,7 @@
         loadDataBase();
         cnxnFactory.start();
         startLeaderElection();
+        running = true;
         super.start();
     }
{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Zookeeper Dynamic Conf writes out hostnames when IPs are supplied,ZOOKEEPER-1725,12657552,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,michim,justinsb,justinsb,13/Jul/13 00:43,01/Apr/14 11:10,29/Jun/25 13:34,31/Mar/14 23:57,3.5.0,,,,,,,,,,,,,,,,,,,,,,,,3.5.0,,,,,,,,,,0,,,"When writing the dynamic configuration out, Zookeeper writes out hostnames, even if an IP address is supplied.  These may not correctly round-trip (e.g. 127.0.0.1 might be written as localhost which may then resolve to 127.0.0.1 and another IP address).

This isn't actually causing problems for me right now, but seems very likely to cause hard-to-track-down problems in future.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Oct/13 01:49;shralex;ZOOKEEPER-1725-ver1.patch;https://issues.apache.org/jira/secure/attachment/12608128/ZOOKEEPER-1725-ver1.patch","29/Mar/14 05:34;michim;ZOOKEEPER-1725.patch;https://issues.apache.org/jira/secure/attachment/12637608/ZOOKEEPER-1725.patch","11/Oct/13 17:58;shralex;ZOOKEEPER-1725.patch;https://issues.apache.org/jira/secure/attachment/12608046/ZOOKEEPER-1725.patch",,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,337773,,,,,Tue Apr 01 11:10:52 UTC 2014,,,,,,,,,,"0|i1m9e7:",338095,,,,,,,,,,,,,,,,,,,,,"11/Oct/13 16:22;phunt;[~shralex] is this something you can address?;;;","11/Oct/13 16:29;shralex;Hi Patrick, 

I have my hands full with other JIRAs, would be good if someone else takes this. 

Alex;;;","11/Oct/13 17:58;shralex;attached patch seems to solve the issue;;;","11/Oct/13 18:56;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12608046/ZOOKEEPER-1725.patch
  against trunk revision 1531061.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1683//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1683//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1683//console

This message is automatically generated.;;;","12/Oct/13 03:13;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12608128/ZOOKEEPER-1725-ver1.patch
  against trunk revision 1531444.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1685//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1685//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1685//console

This message is automatically generated.;;;","12/Mar/14 22:45;michim;+1

I'm rerunning the precommit build.;;;","29/Mar/14 04:53;michim;Actually I'd like to update the patch to use HostNameUtils.;;;","29/Mar/14 21:26;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12637608/ZOOKEEPER-1725.patch
  against trunk revision 1582943.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2000//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2000//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2000//console

This message is automatically generated.;;;","31/Mar/14 22:23;michim;ping;;;","31/Mar/14 22:43;shralex;+1 looks good;;;","31/Mar/14 23:54;michim;Thank you Alex for +1. I'm checking this in.;;;","31/Mar/14 23:57;michim;trunk: http://svn.apache.org/viewvc?view=revision&revision=1583495;;;","01/Apr/14 11:10;hudson;SUCCESS: Integrated in ZooKeeper-trunk #2276 (See [https://builds.apache.org/job/ZooKeeper-trunk/2276/])
ZOOKEEPER-1725. Zookeeper Dynamic Conf writes out hostnames when IPs are supplied (Alexander Shraer via michim) (michim: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1583495)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/server/quorum/QuorumServerTest.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
perl client segfaults if ZOO_READ_ACL_UNSAFE constant is used,ZOOKEEPER-1714,12651322,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,botond.hejj,botond.hejj,botond.hejj,06/Jun/13 13:06,13/Mar/14 18:17,29/Jun/25 13:34,21/Jun/13 20:01,3.4.5,,,,,,,,,,,,,,,,,,,,,,,,3.4.6,3.5.0,,,,contrib-bindings,,,,,1,,,if ZOO_READ_ACL_UNSAFE or ZOO_CREATOR_ALL_ACL constant is used than the client core dumps with segmentation fault.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jun/13 16:24;botond.hejj;ZOOKEEPER-1714.patch;https://issues.apache.org/jira/secure/attachment/12586524/ZOOKEEPER-1714.patch","06/Jun/13 13:15;botond.hejj;ZOOKEEPER-1714.patch;https://issues.apache.org/jira/secure/attachment/12586494/ZOOKEEPER-1714.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,331648,,,,,Thu Mar 13 18:17:08 UTC 2014,,,,,,,,,,"0|i1l7qn:",331979,,,,,,,,,,,,,,,,,,,,,"06/Jun/13 13:15;botond.hejj;Patch for trunk to fix the issue;;;","06/Jun/13 13:51;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12586494/ZOOKEEPER-1714.patch
  against trunk revision 1484527.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1498//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1498//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1498//console

This message is automatically generated.;;;","06/Jun/13 15:35;fournc;Could you add a test to the access tests that I believe live in 50_access.t?;;;","06/Jun/13 16:24;botond.hejj;Adding unittests;;;","06/Jun/13 17:01;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12586524/ZOOKEEPER-1714.patch
  against trunk revision 1484527.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1499//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1499//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1499//console

This message is automatically generated.;;;","21/Jun/13 17:56;fournc;+1 looks good thanks Botond, checked in.;;;","21/Jun/13 18:27;hudson;Integrated in ZooKeeper-trunk #1967 (See [https://builds.apache.org/job/ZooKeeper-trunk/1967/])
    ZOOKEEPER-1714 perl client segfaults if ZOO_READ_ACL_UNSAFE constant is used
  (Botond Hejj via camille) (Revision 1495522)

     Result = FAILURE
camille : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1495522
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/contrib/zkperl/ZooKeeper.xs
* /zookeeper/trunk/src/contrib/zkperl/t/50_access.t
;;;","13/Mar/14 18:17;fpj;Closing issues after releasing 3.4.6.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
wrong time calculation in zkfuse.cc,ZOOKEEPER-1713,12651298,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,abranzyck,abranzyck,abranzyck,06/Jun/13 09:51,13/Mar/14 18:16,29/Jun/25 13:34,02/Sep/13 20:23,3.4.5,,,,,,,,,,,,,,,,,,,,,,,,3.4.6,3.5.0,,,,,,,,,0,,,"A colleague of mine has spotted this error in time calculation in the code in zkfuse.cc lines 81 to 85:
inline
uint64_t nanosecsToMillisecs(uint64_t nanosecs)
{
    return nanosecs * 1000000;
}
I am not sure how this method is used, but for sure it will make something wrong happen if it is.",Linux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Aug/13 11:12;abranzyck;ZOOKEEPER-1713.patch;https://issues.apache.org/jira/secure/attachment/12600374/ZOOKEEPER-1713.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,331624,,,,,Thu Mar 13 18:16:57 UTC 2014,,,,,,,,,,"0|i1l7lb:",331955,,,,,,,,,,,,,,,,,,,,,"14/Aug/13 07:07;fpj;German, Do you want to propose a patch? This is an easy one.;;;","14/Aug/13 18:48;abranzyck;Yes I would and yes it should be easy :)


;;;","28/Aug/13 11:15;abranzyck;It seems that the nanosecs value affected by this problem is always 0 in my machine, so there is actually no difference. But I guess that for those machines that provide a value there will be.
This means I haven't been able to check that there was a problem and it was removed, although it seems obvious in the code. I did test that zkfuse worked ok after (and in my case also before) the patch was applied.;;;","28/Aug/13 11:52;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12600374/ZOOKEEPER-1713.patch
  against trunk revision 1516126.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1546//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1546//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1546//console

This message is automatically generated.;;;","28/Aug/13 21:47;fpj;+1, thanks, German.
;;;","02/Sep/13 20:23;fpj;b3.4: Committed revision 1519510.
trunk: Committed revision 1519511.;;;","03/Sep/13 11:06;hudson;SUCCESS: Integrated in ZooKeeper-trunk #2043 (See [https://builds.apache.org/job/ZooKeeper-trunk/2043/])
ZOOKEEPER-1713. wrong time calculation in zkfuse.cc (german via fpj) (fpj: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1519511)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/contrib/zkfuse/src/zkfuse.cc
;;;","13/Mar/14 18:16;fpj;Closing issues after releasing 3.4.6.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZooKeeper server binds to all ip addresses for leader election and broadcast,ZOOKEEPER-1711,12650311,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Duplicate,,abranzyck,abranzyck,31/May/13 11:16,13/Mar/14 18:17,29/Jun/25 13:34,29/Aug/13 13:22,3.4.5,,,,,,,,,,,,,,,,,,,,,,,,3.4.6,,,,,server,,,,,1,,,"Unlike current ZooKeeper version in trunk intended for release as 3.5.0, the current ZooKeeper server version 3.4.5 binds to all ip addresses on the specified port for election. It only makes sense to bind to the ip address indicated in the configuration file, which is where the other servers will connect. Listening to other ip addresses could have bad security implications.",Any,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,259200,259200,,0%,259200,259200,,,,,,,,,,,ZOOKEEPER-1096,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,330638,,,,,Thu Mar 13 18:17:12 UTC 2014,,,,,,,,,,"0|i1l1j3:",330972,,,,,,,,,,,,,,,,,,,,,"31/May/13 17:21;marshall;Is this the same as: https://issues.apache.org/jira/browse/ZOOKEEPER-1096 ??;;;","14/Aug/13 07:11;fpj;German, It does look like this is a duplicate of ZOOKEEPER-1096. Could you have a look, please? There is a patch proposed there.;;;","29/Aug/13 13:10;fpj;I'd like to get a resolution on this jira. If this is duplicate, then we should resolve it as such and mark ZOOKEEPER-1096 for 3.4.6.;;;","29/Aug/13 13:22;abranzyck;This is a duplicate of 1096;;;","13/Mar/14 18:17;fpj;Closing issues after releasing 3.4.6.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong version of java in control file for deb packages,ZOOKEEPER-1708,12648188,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Won't Fix,johanhillertz,johanhillertz,johanhillertz,17/May/13 15:01,03/Mar/16 16:23,29/Jun/25 13:34,03/Mar/16 16:23,3.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,"After building the deb package it is not installable because of missing dependencies in the control file. 

Path:
src/packages/deb/zookeeper.control/control

If I remember correctly the package 'sun-java6-jre' is no longer provided by Ubuntu.

If it is possible to run zookeeper in openjdk the correct string in the control file should be:

""Depends: openjdk-6-jre""
Or 
""Depends: openjdk-7-jre""

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-1604,,,,"31/May/13 06:57;johanhillertz;ZOOKEEPER-1708.patch;https://issues.apache.org/jira/secure/attachment/12585559/ZOOKEEPER-1708.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,328544,,,,,Thu Mar 03 16:23:36 UTC 2016,,,,,,,,,,"0|i1koov:",328888,,,,,,,,,,,,,,,,,,,,,"17/May/13 17:41;michim;Hi Johan,

Could you provide a patch for this? I think the package should depend on the virtual package java6-runtime instead of a specific jre.

Also, please note that we are deprecating deb/rpm package support in 3.5 in favor of bigtop.

https://issues.apache.org/jira/browse/ZOOKEEPER-1604


--Michi;;;","30/May/13 12:51;johanhillertz;Index: src/packages/deb/zookeeper.control/control
===================================================================
--- src/packages/deb/zookeeper.control/control  (revision 1487806)
+++ src/packages/deb/zookeeper.control/control  (working copy)
@@ -17,7 +17,7 @@
 Section: misc
 Priority: optional
 Architecture: all
-Depends: sun-java6-jre
+Depends: default-jre
 Maintainer: Apache Software Foundation <dev@zookeeper.apache.org>
 Description: ZooKeeper is a centralized service for maintaining configuration information, naming, providing distributed synchronization, and providing group services.
 Distribution: development;;;","31/May/13 06:52;johanhillertz;If you do not have JAVA_HOME set in needs to be detected correctly.;;;","31/May/13 06:57;johanhillertz;Uploaded a new patch file.;;;","31/May/13 07:23;fpj;[~johanhillertz], I have submitted the patch for you and added you as the assignee for this jira. I have a question, though. Given Michi's comment about us deprecating the deb/rpm package support, are you still interested in having this patch in? If you think we shouldn't deprecate package support, please write your comments to ZOOKEEPER-1604.;;;","31/May/13 07:56;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12585559/ZOOKEEPER-1708.patch
  against trunk revision 1484527.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1495//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1495//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1495//console

This message is automatically generated.;;;","31/May/13 08:22;johanhillertz;Regarding 'tests included':
Could not find any automated tests for the packages build.
It has manually been tested on Ubuntu 12.04 LTS (single zookeeper) I will test cluster as well. But packaes installs fine now.;;;","31/May/13 08:42;johanhillertz;[~fpj] I have not looked into the BigTop build that closely. But it looks like it will include a to large package set for production use. I will look at BigTop when I have time and if I can get the BigTop packages working it is fine by me.

I am only interested in a working deb package...;;;","31/May/13 08:45;johanhillertz;[~fpj] I have not looked into the BigTop build that closely. But it looks like it will include a to large package set for production use. I will look at BigTop when I have time and if I can get the BigTop packages working it is fine by me.

I am only interested in a working deb package...;;;","31/May/13 13:27;johanhillertz;Cluster works fin as well on Ubuntu 12.04 LTS;;;","03/Mar/16 16:23;phunt;Given the packaging has been removed as of ZOOKEEPER-1604 I'm closing this. Please use Bigtop for ZK packaging.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect documentation of build dependencies for deb and rpm packages.,ZOOKEEPER-1707,12648184,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Won't Fix,cnauroth,johanhillertz,johanhillertz,17/May/13 14:16,03/Mar/16 16:23,29/Jun/25 13:34,03/Mar/16 16:23,3.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,documentation,,,,,0,documentation,,"Since I faild to build a deb package from the instructions. I found that the documentation in 'README_packaging.txt' for building Ubuntu packages can be improved. I have attached a suggested patch.

Tested on Ubuntu 12.04 LTS",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-1893,,,,,ZOOKEEPER-1604,,,,"17/May/13 14:18;johanhillertz;README_packaging.txt.diff;https://issues.apache.org/jira/secure/attachment/12583656/README_packaging.txt.diff","17/Apr/15 18:09;cnauroth;ZOOKEEPER-1707.001.patch;https://issues.apache.org/jira/secure/attachment/12726216/ZOOKEEPER-1707.001.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,328540,,,,,Thu Mar 03 16:23:04 UTC 2016,,,,,,,,,,"0|i1konz:",328884,,,,,,,,,,,,,,,,,,,,,"17/May/13 14:18;johanhillertz;A diff file uploaded;;;","17/Apr/15 18:09;cnauroth;I found the same thing recently for both deb and rpm packages.  Additionally, we now require version 1.12 or greater for automake.  ZOOKEEPER-1893 introduced usage of the {{serial-tests}} option, which was first supported in 1.12.

I'm attaching an updated patch that covers README_packaging.txt and zookeeperProgrammers.xml.;;;","17/Apr/15 19:42;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12726216/ZOOKEEPER-1707.001.patch
  against trunk revision 1672934.

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2639//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2639//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2639//console

This message is automatically generated.;;;","03/Mar/16 16:23;phunt;Given the packaging has been removed as of ZOOKEEPER-1604 I'm closing this. Please use Bigtop for ZK packaging.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typo in Double Barriers example,ZOOKEEPER-1706,12647252,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,yaojingguo,yaojingguo,yaojingguo,13/May/13 06:05,13/Mar/14 18:17,29/Jun/25 13:34,13/May/13 07:34,3.4.5,,,,,,,,,,,,,,,,,,,,,,,,3.4.6,3.5.0,,,,documentation,,,,14/May/13 00:00,0,,,"For the Double Barriers example in the ""ZooKeeper Recipes and Solutions"" page, the P should be L in line 4 of the Leave pseudo code.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/May/13 06:07;yaojingguo;ZOOKEEPER-1706.patch;https://issues.apache.org/jira/secure/attachment/12582892/ZOOKEEPER-1706.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,327608,,,,,Thu Mar 13 18:17:11 UTC 2014,,,,,,,,,,"0|i1kiwv:",327952,,,,,,,,,,,,,,,,,,,,,"13/May/13 06:06;yaojingguo;Patch available.;;;","13/May/13 06:45;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12582892/ZOOKEEPER-1706.patch
  against trunk revision 1481325.

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1478//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1478//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1478//console

This message is automatically generated.;;;","13/May/13 07:33;fpj;+1, Thanks, [~jingguo]. Committed revision 1481718.;;;","13/May/13 07:40;fpj;Branch 3.4 commit: Committed revision 1481722.;;;","13/May/13 11:09;hudson;Integrated in ZooKeeper-trunk #1924 (See [https://builds.apache.org/job/ZooKeeper-trunk/1924/])
    ZOOKEEPER-1706.  Typo in Double Barriers example (Jingguo Yao via fpj) (Revision 1481718)

     Result = SUCCESS
fpj : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1481718
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/docs/src/documentation/content/xdocs/recipes.xml
;;;","13/Mar/14 18:17;fpj;Closing issues after releasing 3.4.6.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZooKeeper Leader sends a repeated NEWLEADER quorum packet to followers,ZOOKEEPER-1694,12643906,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Duplicate,,abranzyck,abranzyck,22/Apr/13 10:08,22/Apr/13 20:02,29/Jun/25 13:34,22/Apr/13 12:43,3.4.5,3.5.0,,,,,,,,,,,,,,,,,,,,,,,3.5.0,,,,,quorum,,,,,0,patch,,This is at least what it seems in the logs. This also seems to cause a second snapshot in the follower.,"Windows, Linux, MacOSX",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-1324,,,,,,,,,,,,"22/Apr/13 11:11;abranzyck;ZOOKEEPER-1694.patch;https://issues.apache.org/jira/secure/attachment/12579823/ZOOKEEPER-1694.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,324273,,,,,Mon Apr 22 12:42:27 UTC 2013,,,,,,,,,,"0|i1jy33:",324618,,,,,,,,,,,,,,,,,,,,,"22/Apr/13 10:13;abranzyck;This patch just removes the lines of code that send the second NEWLEADER quorum packet.
The first packet is sent with:
leaderLastZxid = leader.startForwarding(this, updates);
a few lines above.;;;","22/Apr/13 11:00;fpj;Hi Germán, I think this is a duplicate of ZOOKEEPER-1342. Could you have a look, please?;;;","22/Apr/13 11:05;fpj;Sorry, I meant to say ZOOKEEPER-1324.
;;;","22/Apr/13 11:11;abranzyck;This second try removes the insertion of the quorum packet for NEWLEADER in Leader.startForwarding.
The packet is sent in LearnerHandler@407, after a check on the version that I don't understand (?).;;;","22/Apr/13 12:02;abranzyck;This patch skips adding the NEWLEADER quorum packet in Leader.startForwarding, since it will be added in LearnerHandler a few lines below the call to Leader.startForwarding.
I don't think that a test case (checking that the server doesn't send a duplicate message) is necessary in this case.
Could somebody please review this?;;;","22/Apr/13 12:07;abranzyck;Sorry, I had the window with ""Attach file"" opened and I didn't see your comment.
And sorry again, yes, it is a duplicate. I have been looking at JIRAs these days and I thought that I would have remembered that one, but no, I didn't.
Should I then close this one?;;;","22/Apr/13 12:11;abranzyck;Flavio, could you please tell me if the attached patch is worth anything?
It is extremelly simple, but it seems to solve the issue and pass the tests.;;;","22/Apr/13 12:16;fpj;The point is that we shouldn't treat the same issue in two separate jiras. We already have a patch in ZOOKEEPER-1324 that has been committed to branch 3.4. I had committed it to trunk, but we reverted because of a conflict with a much larger patch, which was about to get in (ZOOKEEPER-107). My suggestion is that you have a look at what has been done in ZOOKEEPER-1324 and confirm that it is the same issue. If it is, we should close this jira as duplicate. Also, please feel free to comment to ZOOKEEPER-1324, feedback is always appreciated.;;;","22/Apr/13 12:41;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12579823/ZOOKEEPER-1694.patch
  against trunk revision 1463329.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1463//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1463//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1463//console

This message is automatically generated.;;;","22/Apr/13 12:42;abranzyck;CAncelling the patch, this is a duplicate issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Remove JVMFLAGS completely from clients, if CLIENT_JVMFLAGS are also set",ZOOKEEPER-1689,12642255,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,jlord,jlord,12/Apr/13 15:30,06/Feb/17 21:24,29/Jun/25 13:34,,3.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,scripts,,,,,0,,,"In zkCli.sh, the CLIENT_JVMFLAGS are being passed along with regular JVMFLAGS, so the latter ends up overriding it anyhow if set. Can we please remove JVMFLAGS completely from clients, if CLIENT_JVMFLAGS are also set (i.e. use just one). 

One example of how this can be detrimental is if you attempt to start a zookeeper-client session on the same host that is already running zookeeper and use the default config directory. If the zookeeper server has jmx enabled than the client will also pick up that port and attempt to bind resulting in a failure

# /usr/bin/zookeeper-client 
Error: Exception thrown by the agent : java.rmi.server.ExportException: Port already in use: 9010; nested exception is: 
java.net.BindException: Address already in use 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,322669,,,,,Mon Feb 06 21:24:03 UTC 2017,,,,,,,,,,"0|i1jo6v:",323014,,,,,,,,,,,,,,,,,,,,,"06/Feb/17 21:24;abrahamfine;[~jlord] Looks like, since ZOOKEEPER-1012, we currently prioritize the server JVM_FLAGS. 
{code}
""$JAVA"" ""-Dzookeeper.log.dir=${ZOO_LOG_DIR}"" ""-Dzookeeper.root.logger=${ZOO_LOG4J_PROP}"" ""-Dzookeeper.log.file=${ZOO_LOG_FILE}"" \
     -cp ""$CLASSPATH"" $CLIENT_JVMFLAGS $JVMFLAGS \
     org.apache.zookeeper.ZooKeeperMain ""$@""
{code}
Note: My testing seems to indicate that HotSpot prioritizes the leftmost params. Let me know if you can find hard documented evidence that we can always expect this behavior. 

While I think completely removing JVMFLAGS from the client may be inconvenient for some, the current order seems backwards to me. 

What do you think [~jlord] [~hanm]?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Zookeeper don't support cidr in expression in ACL with ip scheme,ZOOKEEPER-1673,12637731,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,ccondit,blackwithwhite666,blackwithwhite666,19/Mar/13 10:01,26/Apr/14 11:04,29/Jun/25 13:34,25/Apr/14 21:41,3.4.5,,,,,,,,,,,,,,,,,,,,,,,,3.5.0,,,,,,,,,,1,auth,,"Currently, when i try to set ACL with cidr in expression, i get exception:

{code}
[zk: localhost:2181(CONNECTED) 2] setAcl /AS0 ip:127.0.0.1/8:cdrwa
Exception in thread ""main"" org.apache.zookeeper.KeeperException$InvalidACLException: KeeperErrorCode = InvalidACL for /AS0
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:112)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:42)
	at org.apache.zookeeper.ZooKeeper.setACL(ZooKeeper.java:1175)
	at org.apache.zookeeper.ZooKeeperMain.processZKCmd(ZooKeeperMain.java:716)
	at org.apache.zookeeper.ZooKeeperMain.processCmd(ZooKeeperMain.java:581)
	at org.apache.zookeeper.ZooKeeperMain.executeLine(ZooKeeperMain.java:353)
	at org.apache.zookeeper.ZooKeeperMain.run(ZooKeeperMain.java:311)
	at org.apache.zookeeper.ZooKeeperMain.main(ZooKeeperMain.java:270)
{code}

Also, there is no support for CIDR in IPAuthenticationProvider.isValid, but IPAuthenticationProvider.matches has it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Feb/14 20:09;ccondit;ZOOKEEPER-1673.patch;https://issues.apache.org/jira/secure/attachment/12628834/ZOOKEEPER-1673.patch","13/Feb/14 19:44;ccondit;ZOOKEEPER-1673.patch;https://issues.apache.org/jira/secure/attachment/12628825/ZOOKEEPER-1673.patch","13/Feb/14 19:25;ccondit;ZOOKEEPER-1673.patch;https://issues.apache.org/jira/secure/attachment/12628822/ZOOKEEPER-1673.patch",,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,318211,,,,,Sat Apr 26 11:04:47 UTC 2014,,,,,,,,,,"0|i1iwnr:",318552,,,,,,,,,,,,,,,,,,,,,"13/Feb/14 19:25;ccondit;Patch and test case to add support for CIDR expressions in setAcl.;;;","13/Feb/14 19:32;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12628822/ZOOKEEPER-1673.patch
  against trunk revision 1567660.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1927//console

This message is automatically generated.;;;","13/Feb/14 19:44;ccondit;Updated version which applies to trunk.;;;","13/Feb/14 20:02;rgs;In:

{noformat}
+        int bits = aclAddr.length * 8;
+        if (parts.length == 2) {
+            try {
+                bits = Integer.parseInt(parts[1]);
+                if (bits < 0 || bits > aclAddr.length * 8) {
+                    return false;
+                }
+            } catch (NumberFormatException e) {
+                return false;
+            }
+        }
+        return true;
{noformat}

whats the point of assigning bits outside the if block if it's not used afterwards. Also inside the if block it gets immediately reassigned. 

;;;","13/Feb/14 20:09;ccondit;Cleaned up patch per [~rgs].;;;","13/Feb/14 20:26;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12628825/ZOOKEEPER-1673.patch
  against trunk revision 1567660.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1928//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1928//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1928//console

This message is automatically generated.;;;","13/Feb/14 21:00;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12628834/ZOOKEEPER-1673.patch
  against trunk revision 1567660.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1929//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1929//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1929//console

This message is automatically generated.;;;","14/Feb/14 16:46;rgs;lgtm, +1 (cc: [~phunt]: easy pick for 3.5.0). ;;;","27/Mar/14 21:00;michim;It looks like the logic is duplicated in isValid() and matches(). Could you refactor the code so that one calls the other?;;;","25/Apr/14 21:34;michim;... on the second thought, refactoring this might not save much since isValid() and matches() are slightly different. +1. Thanks Craig!;;;","25/Apr/14 21:41;michim;trunk: http://svn.apache.org/viewvc?view=revision&revision=1590157;;;","26/Apr/14 11:04;hudson;FAILURE: Integrated in ZooKeeper-trunk #2302 (See [https://builds.apache.org/job/ZooKeeper-trunk/2302/])
ZOOKEEPER-1673. Zookeeper don't support cidr in expression in ACL with ip scheme (Craig Condit via michim) (michim: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1590157)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/auth/IPAuthenticationProvider.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/ACLTest.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"zookeeper client does not accept ""-members"" option in reconfig command",ZOOKEEPER-1672,12637689,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,wilsonny371,wilsonny371,wilsonny371,19/Mar/13 00:40,20/Mar/13 11:30,29/Jun/25 13:34,20/Mar/13 06:21,3.5.0,,,,,,,,,,,,,,,,,,,,,,,,3.5.0,,,,,java client,,,,,0,patch,,"Without the modification to src/java/main/org/apache/zookeeper/cli/ReconfigCommand.java line 88, the reconfig command will not accept ""-member"" options by complaining not using the right usage.",Zookeeper trunk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,0,,0%,0,0,,,,,,,,,,,,,,,,,,,,,,,"19/Mar/13 00:47;wilsonny371;ZOOKEEPER-1672.patch;https://issues.apache.org/jira/secure/attachment/12574279/ZOOKEEPER-1672.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,318169,Reviewed,,,,Wed Mar 20 11:30:58 UTC 2013,,,,,,,,,,"0|i1iwef:",318510,,,,,,,,,,,,,,,,,,,,,"19/Mar/13 00:47;wilsonny371;Without the patch -members doesn't work and with this patch, the zookeeper membership can be modified.;;;","19/Mar/13 00:51;wilsonny371;[zk: localhost:2181(CONNECTED) 2] reconfig -remove 7
Committed new configuration:
server.4=192.168.1.4:2888:3888:participant;0.0.0.0:2181
server.5=192.168.1.5:2888:3888:participant;0.0.0.0:2181
server.6=192.168.1.6:2888:3888:participant;0.0.0.0:2181
version=1000004f7
[zk: localhost:2181(CONNECTED) 3]  reconfig -members server.4=192.168.1.4:2888:3888;2181,server.5=192.168.1.5:2888:3888;2181,server.6=192.168.1.6:2888:3888;2181
Committed new configuration:
server.4=192.168.1.4:2888:3888:participant;192.168.1.4:2181
server.5=192.168.1.5:2888:3888:participant;192.168.1.5:2181
server.6=192.168.1.6:2888:3888:participant;192.168.1.6:2181
version=100000515
[zk: localhost:2181(CONNECTED) 4]  reconfig -members server.4=192.168.1.4:2888:3888;2181,server.5=192.168.1.5:2888:3888;2181,server.6=192.168.1.6:2888:3888;2181,server.7=192.168.1.7:2888:3888;2181
Committed new configuration:
server.4=192.168.1.4:2888:3888:participant;192.168.1.4:2181
server.5=192.168.1.5:2888:3888:participant;192.168.1.5:2181
server.6=192.168.1.6:2888:3888:participant;192.168.1.6:2181
server.7=192.168.1.7:2888:3888:participant;192.168.1.7:2181
version=100000533
[zk: localhost:2181(CONNECTED) 5]  reconfig -members server.4=192.168.1.4:2888:3888;0.0.0.0:2181,server.5=192.168.1.5:2888:3888;0.0.0.0:2181,server.6=192.168.1.6:2888:3888;0.0.0.0:2181,server.7=192.168.1.7:2888:3888;0.0.0.0:2181
Committed new configuration:
server.4=192.168.1.4:2888:3888:participant;0.0.0.0:2181
server.5=192.168.1.5:2888:3888:participant;0.0.0.0:2181
server.6=192.168.1.6:2888:3888:participant;0.0.0.0:2181
server.7=192.168.1.7:2888:3888:participant;0.0.0.0:2181
version=100000550
;;;","19/Mar/13 01:24;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12574279/ZOOKEEPER-1672.patch
  against trunk revision 1455387.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1432//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1432//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1432//console

This message is automatically generated.;;;","19/Mar/13 01:33;shralex;looks good to me. thanks for catching and fixing this!;;;","20/Mar/13 06:21;phunt;Committed to trunk. Thanks Xiaoshuang Wang!;;;","20/Mar/13 11:30;hudson;Integrated in ZooKeeper-trunk #1871 (See [https://builds.apache.org/job/ZooKeeper-trunk/1871/])
    ZOOKEEPER-1672. zookeeper client does not accept ""-members"" option in reconfig command (Xiaoshuang Wang via phunt) (Revision 1458648)

     Result = FAILURE
phunt : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1458648
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/cli/ReconfigCommand.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
scripts don't work when path contains spaces,ZOOKEEPER-1663,12636590,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,amichai,amichai,amichai,12/Mar/13 15:25,26/Jun/14 11:19,29/Jun/25 13:34,20/May/13 17:12,3.4.5,,,,,,,,,,,,,,,,,,,,,,,,3.4.6,3.5.0,,,,scripts,,,,,0,,,The shell scripts (bin/zk*.sh) don't work when there are spaces in the zookeeper or java paths.,Kubuntu 12.10 (GNU bash 4.2.37),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/May/13 16:57;amichai;ZOOKEEPER-1663-ls.trunk.patch;https://issues.apache.org/jira/secure/attachment/12583852/ZOOKEEPER-1663-ls.trunk.patch","19/May/13 09:42;amichai;ZOOKEEPER-1663.patch;https://issues.apache.org/jira/secure/attachment/12583764/ZOOKEEPER-1663.patch","19/May/13 10:56;fpj;ZOOKEEPER-1663.trunk.patch;https://issues.apache.org/jira/secure/attachment/12583766/ZOOKEEPER-1663.trunk.patch","19/May/13 10:28;amichai;ZOOKEEPER-1663.trunk.patch;https://issues.apache.org/jira/secure/attachment/12583765/ZOOKEEPER-1663.trunk.patch",,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,317082,,,,,Thu Jun 26 11:19:07 UTC 2014,,,,,,,,,,"0|i1ipov:",317423,,,,,,,,,,,,,,,,,,,,,"12/Mar/13 15:28;amichai;Needs to be tested on other platforms...;;;","12/Mar/13 15:31;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12573347/fix_spaces_in_paths.patch
  against trunk revision 1455387.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1429//console

This message is automatically generated.;;;","10/May/13 23:03;phunt;Amichai, seems the patch is not applying cleanly, can you create against trunk as well as (assuming) a branch? (probably branch-3.4). Thanks.;;;","19/May/13 09:42;amichai;The patch applies cleanly on the 3.4.5 branch.;;;","19/May/13 10:28;amichai;Added updated patch that applies against trunk as well.;;;","19/May/13 10:55;fpj;I tried this patch and it looks good to me, +1. What do you say, Pat?;;;","19/May/13 10:56;fpj;Uploading the trunk patch again so that jenkins picks the right file.;;;","19/May/13 11:31;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12583766/ZOOKEEPER-1663.trunk.patch
  against trunk revision 1483440.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1486//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1486//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1486//console

This message is automatically generated.;;;","19/May/13 21:56;fournc;This looks good +1. I'll check it in.;;;","19/May/13 22:00;fournc;Committed to trunk but does not apply to 3.4.6. Can you submit a patch that applies to 3.4?;;;","20/May/13 06:28;amichai;I submitted two patches, one with the .trunk.patch extension which applies against trunk, and one with only .patch extension which applies against 3.4.5 and also (I just tried it) the 3.4 branch.

btw I just found another bug, both in the original script and updated one (on both trunk and branch) - in zkEnv.sh line ~94, both

{noformat} if [ -e ""${ZOOKEEPER_PREFIX}/share/zookeeper/zookeeper-*.jar"" ]; then {noformat}

and

{noformat} if [ -e ""${ZOOKEEPER_PREFIX}""/share/zookeeper/zookeeper-*.jar ]; then {noformat}

don't work correctly - the former doesn't expand the wildcard, and the latter expands to multiple arguments which causes test to fail.
The correct way to do this appears to be

{noformat} if ls ""${ZOOKEEPER_PREFIX}""/share/zookeeper/zookeeper-*.jar > /dev/null 2>&1; then {noformat}
;;;","20/May/13 10:59;hudson;Integrated in ZooKeeper-trunk #1932 (See [https://builds.apache.org/job/ZooKeeper-trunk/1932/])
    ZOOKEEPER-1663. scripts don't work when path contains spaces (Amichai Rothman via camille) (Revision 1484355)

     Result = FAILURE
camille : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1484355
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/bin/zkCleanup.sh
* /zookeeper/trunk/bin/zkCli.sh
* /zookeeper/trunk/bin/zkEnv.sh
* /zookeeper/trunk/bin/zkServer-initialize.sh
* /zookeeper/trunk/bin/zkServer.sh
;;;","20/May/13 16:33;fournc;If you want to fix that issue you just discovered and submit a patch asap I will check it in on this ticket otherwise we'll have to make another ticket. ;;;","20/May/13 16:57;amichai;Attached the ls fix patch against trunk (in addition to the previous patch, not instead of it).;;;","20/May/13 17:10;fournc;Great, commited all fixes to trunk and patch to 3.4. ;;;","20/May/13 17:32;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12583852/ZOOKEEPER-1663-ls.trunk.patch
  against trunk revision 1484357.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1488//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1488//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1488//console

This message is automatically generated.;;;","21/May/13 10:58;hudson;Integrated in ZooKeeper-trunk #1934 (See [https://builds.apache.org/job/ZooKeeper-trunk/1934/])
    ZOOKEEPER-1663. scripts don't work when path contains spaces (Amichai Rothman via camille) (Revision 1484527)

     Result = FAILURE
camille : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1484527
Files : 
* /zookeeper/trunk/bin/zkEnv.sh
;;;","25/Jun/13 18:14;marshall;This fix is incorrect. It assumes the shell is bash since it uses bash array construction, e.g.:

{code}
96 LIBPATH=(""${ZOOKEEPER_PREFIX}""/share/zookeeper/*.jar)
{code}

This does NOT work if /bin/sh points to /bin/dash as it does on Ubuntu.

It fails as so:

{quote}
zkEnv.sh: 96: zkEnv.sh: Syntax error: ""("" unexpected (expecting ""fi"")
{quote}

If I change the shebang at the top to use ""/bin/bash"" instead of ""/bin/sh"" it works as expected. I don't know the full details of why using a bash array was chosen as the solution but I don't think it is the right way to deal with spaces in these paths...

I opened a separate jira (ZOOKEEPER-1719).;;;","25/Jun/13 19:12;amichai;The array was used in order for that glob expression to expand properly into multiple paths where each can contain a space (e.g. if ZOOKEEPER_PREFIX contains a space), so they can be passed on as such - as opposed to a single string with spaces in it (losing the individual paths) or multiple strings with no space in them (cutting the individual paths in the middle where they contain spaces), which is what the simpler syntax achieves. Both alternatives would fail when passed as arguments to a command later on. An array is the only way I found to do this, but if there is a better way, by all means use it.;;;","25/Jun/13 19:14;marshall;OK, that makes sense.

I think the best option here is to change the shebang at the top to explicitly use bash like we are in zkServer.sh, as in:

{code}
#!/usr/bin/env bash
{code};;;","29/Jun/13 11:00;hudson;Integrated in ZooKeeper-trunk #1975 (See [https://builds.apache.org/job/ZooKeeper-trunk/1975/])
    ZOOKEEPER-1719. zkCli.sh, zkServer.sh and zkEnv.sh regression caused by ZOOKEEPER-1663
  (Marshall McMullen via camille) (Revision 1497830)

     Result = FAILURE
camille : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1497830
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/bin/zkCleanup.sh
* /zookeeper/trunk/bin/zkCli.sh
* /zookeeper/trunk/bin/zkEnv.sh
;;;","13/Mar/14 18:16;fpj;Closing issues after releasing 3.4.6.;;;","26/Jun/14 11:19;hudson;SUCCESS: Integrated in ZooKeeper-trunk #2347 (See [https://builds.apache.org/job/ZooKeeper-trunk/2347/])
ZOOKEEPER-1945. deb - zkCli.sh, zkServer.sh and zkEnv.sh regression caused by ZOOKEEPER-1663 (Mark Flickinger via fpj) (fpj: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1605391)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/packages/deb/init.d/zookeeper
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix to two small bugs in ReconfigTest.testPortChange(),ZOOKEEPER-1662,12636148,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,shralex,shralex,shralex,09/Mar/13 00:27,11/Mar/14 11:11,29/Jun/25 13:34,11/Mar/14 01:45,3.5.0,,,,,,,,,,,,,,,,,,,,,,,,3.5.0,,,,,tests,,,,,0,,,"Fix to two small bugs in ReconfigTest.testPortChange():
1. the test expected a port change to happen immediately, which is not necessarily
going to happen. The fix waits a bit and also tries several times.
2. when a client port changes, the test created a new ZooKeeper handle, but didn't specify a Watcher object, which generated some NullPointerException events when the watcher was triggered.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Mar/13 01:09;shralex;TestPortChange.patch;https://issues.apache.org/jira/secure/attachment/12572871/TestPortChange.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,316640,,,,,Tue Mar 11 11:11:05 UTC 2014,,,,,,,,,,"0|i1imz3:",316982,,,,,,,,,,,,,,,,,,,,,"09/Mar/13 01:03;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12572865/TestPortChange.patch
  against trunk revision 1453693.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1425//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1425//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1425//console

This message is automatically generated.;;;","09/Mar/13 01:42;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12572871/TestPortChange.patch
  against trunk revision 1453693.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1426//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1426//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1426//console

This message is automatically generated.;;;","09/Mar/13 01:47;shralex;This fails because of ZOOKEEPER-1629, unrelated to the change in this jira, which touches a different test.
We should really consider disabling testTransactionLogCorruption until its fixed.;;;","11/Mar/14 00:54;michim;rerunning the test;;;","11/Mar/14 01:30;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12572871/TestPortChange.patch
  against trunk revision 1576127.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1947//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1947//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1947//console

This message is automatically generated.;;;","11/Mar/14 01:41;michim;+1 the patch looks good to me.;;;","11/Mar/14 01:45;michim;trunk: http://svn.apache.org/viewvc?view=revision&revision=1576174;;;","11/Mar/14 02:09;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12572871/TestPortChange.patch
  against trunk revision 1576127.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1949//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1949//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1949//console

This message is automatically generated.;;;","11/Mar/14 11:11;hudson;SUCCESS: Integrated in ZooKeeper-trunk #2244 (See [https://builds.apache.org/job/ZooKeeper-trunk/2244/])
ZOOKEEPER-1662. Fix to two small bugs in ReconfigTest.testPortChange() (Alexander Shraer via michim) (michim: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1576174)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/ReconfigTest.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bad documentation link on site,ZOOKEEPER-1654,12634491,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,hanm,fournc,fournc,27/Feb/13 21:00,06/Sep/17 13:44,29/Jun/25 13:34,,3.4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,"If you go to this page:
http://zookeeper.apache.org/doc/trunk/zookeeperProgrammers.html

Then try to click on Developer -> API Docs you'll get to 
http://zookeeper.apache.org/doc/trunk/api/index.html

Which does not exist. Should point to:

http://zookeeper.apache.org/doc/current/api/index.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,314984,,,,,Wed Sep 06 13:44:11 UTC 2017,,,,,,,,,,"0|i1icrr:",315328,,,,,,,,,,,,,,,,,,,,,"29/Aug/17 12:52;maoling;this issue still exists in the zookeeper official website.I can't find the html about API DOCS.could someone offer a help or give it a PR?;;;","06/Sep/17 13:44;hanm;I remember someone reported the same issue to mailing list a while ago. Not sure what caused this, but a republish of the site could probably fix the issue (and the current doc on site is outdated anyway). I'll do it since publishing requires committer access.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cppunit test TestOperations.cc fails,ZOOKEEPER-1631,12629754,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,cmccabe,cmccabe,29/Jan/13 19:19,29/Jan/13 19:19,29/Jun/25 13:34,,3.4.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,"I tried running ""make run-check"" on the cppunit tests, and got the following error:

{code}
tests/TestOperations.cc:270: Assertion: equality assertion failed [Expected: 1, Actual : 0]
tests/TestOperations.cc:339: Assertion: assertion failed [Expression: timeMock==zh->last_recv]
tests/TestOperations.cc:407: Assertion: equality assertion failed [Expected: 1, Actual : 0]
tests/TestOperations.cc:212: Assertion: equality assertion failed [Expected: -7, Actual : 0]
{code}

I thought this might be an environment issue, but I was able to reproduce it on both Ubuntu 12.04 and OpenSUSE 12.1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,310250,,,,,2013-01-29 19:19:19.0,,,,,,,,,,"0|i1hjkf:",310595,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
session ids will be negative in the year 2022,ZOOKEEPER-1622,12627857,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,ecn,ecn,ecn,16/Jan/13 16:29,15/Jul/22 17:11,29/Jun/25 13:34,16/Dec/13 06:30,3.4.0,3.5.0,,,,,,,,,,,,,,,,,,,,,,,3.4.6,3.5.0,,,,,,,,,0,,,"Someone decided to use a large number for their myid file.  This cause session ids to go negative, and our software (Apache Accumulo) did not handle this very well.  While diagnosing the problem, I noticed this in SessionImpl:

{noformat}
   public static long initializeNextSession(long id) {
        long nextSid = 0;
        nextSid = (System.currentTimeMillis() << 24) >> 8;
        nextSid =  nextSid | (id <<56);
        return nextSid;
    }
{noformat}

When the 40th bit in System.currentTimeMillis() is a one, sign extension will fill the upper 8 bytes of nextSid, and id will not make the session id unique.  I recommend changing the right shift to the logical shift:

{noformat}
   public static long initializeNextSession(long id) {
        long nextSid = 0;
        nextSid = (System.currentTimeMillis() << 24) >>> 8;
        nextSid =  nextSid | (id <<56);
        return nextSid;
    }
{noformat}

But, we have until the year 2022 before we have to worry about it.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Oct/13 16:56;ecn;ZOOKEEPER-1622.patch;https://issues.apache.org/jira/secure/attachment/12608028/ZOOKEEPER-1622.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,304699,Reviewed,,,,Fri Jul 15 12:00:25 UTC 2022,,,,,,,,,,"0|i17uan:",253877,,,,,,,,,,,,,,,,,,,,,"16/Jan/13 17:03;fpj;I haven't checked if the 40th bit will be set only by 2022, but otherwise the change seems good to me, nice catch. I guess we just missed the opportunity of having the equivalent of the Y2K bug for zookeeper in 2022. ;-);;;","17/Jan/13 01:03;mahadev;Nice catch Eric! I think we do document that id be between 0 and 255 but maybe we should error out if that is not the case.
;;;","11/Oct/13 16:37;phunt;[~ecn] could you submit a patch? Thanks.;;;","11/Oct/13 18:22;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12608028/ZOOKEEPER-1622.patch
  against trunk revision 1531061.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1682//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1682//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1682//console

This message is automatically generated.;;;","17/Nov/13 10:58;fpj;[~phunt], is this a +1 for you?;;;","16/Dec/13 06:30;phunt;Committed to 3.4.6 and Trunk. Thanks Eric!;;;","16/Dec/13 11:09;hudson;SUCCESS: Integrated in ZooKeeper-trunk #2155 (See [https://builds.apache.org/job/ZooKeeper-trunk/2155/])
ZOOKEEPER-1622. session ids will be negative in the year 2022 (Eric Newton via phunt) (phunt: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1551119)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/SessionTrackerImpl.java
;;;","13/Mar/14 18:16;fpj;Closing issues after releasing 3.4.6.;;;","07/Apr/22 18:15;jwomeara;Can confirm...  It is 2022, and session ids are negative...;;;","15/Jul/22 12:00;rmstone;I'm running 3.4.5 (from Cloudera) on a few systems. On two of them I recently restarted ZK and now Accumulo is not happy, complaining about NumberFormatException: For input string: ""ff81f7...."" Is this the same thing? How do I actually tell if the session id is negative?

 

This WAS my issue, and it was resolved with the described fix.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The documentation still points to 2008 in the copyright notice,ZOOKEEPER-1613,12625536,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,eribeiro,eribeiro,eribeiro,30/Dec/12 23:47,09/Oct/23 11:21,29/Jun/25 13:34,25/Jan/13 07:29,3.4.5,,,,,,,,,,,,,,,,,,,,,,,,3.4.6,3.5.0,,,,documentation,,,,30/Dec/12 00:00,0,newbie,,While fiddling with docbook to solve the broken links of ZOOKEEPER-1488 I noted that all the documentation's copyright notice still has the year 2008 only. I am submitting a patch a fix this.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Dec/12 23:50;eribeiro;ZOOKEEPER-1613.patch;https://issues.apache.org/jira/secure/attachment/12562738/ZOOKEEPER-1613.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,302080,Reviewed,,,,Thu Mar 13 18:16:55 UTC 2014,,,,,,,,,,"0|i16yhb:",248721,,,,,,,,,,,,docs,,,,,,,,,"30/Dec/12 23:50;eribeiro;I am submitting a small patch that modifies src/docs/src/documentation/skinconf.xml to update the copyright notice.;;;","21/Jan/13 20:50;eribeiro;Updating the copyright year. ;;;","21/Jan/13 21:20;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12562738/ZOOKEEPER-1613.patch
  against trunk revision 1434978.

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1350//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1350//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1350//console

This message is automatically generated.;;;","25/Jan/13 07:29;phunt;Committed to 3.3.7, 3.4.6, and trunk. Thanks Edward!;;;","13/Mar/14 18:16;fpj;Closing issues after releasing 3.4.6.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
QuorumPeer.setRunning is not used,ZOOKEEPER-1580,12615319,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,maoling,fpj,fpj,08/Nov/12 11:13,30/Jan/18 10:44,29/Jun/25 13:34,30/Jan/18 07:07,3.4.11,3.5.3,3.6.0,,,,,,,,,,,,,,,,,,,,,,3.5.4,3.6.0,,,,,,,,,0,,,"setRunning is a public method and a search did not indicate that it is used anywhere, not even in tests. In fact, I believe we should not change ""running"" freely and we should only do it when calling shutdown. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,255933,,,,,Tue Jan 30 07:27:34 UTC 2018,,,,,,,,,,"0|i0fw1z:",90791,,,,,,,,,,,,,,,,,,,,,"09/Jan/18 06:26;githubbot;GitHub user maoling opened a pull request:

    https://github.com/apache/zookeeper/pull/446

    ZOOKEEPER-1580:QuorumPeer.setRunning is not used

    more details in [JIRA:ZOOKEEPER-1580](https://issues.apache.org/jira/browse/ZOOKEEPER-1580)

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/maoling/zookeeper ZOOKEEPER-1580

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/446.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #446
    
----
commit b86ae0e6258b1e9319b75530e4bd917517c380c2
Author: maoling <maoling199210191@...>
Date:   2018-01-09T06:22:04Z

    ZOOKEEPER-1580:QuorumPeer.setRunning is not used

----
;;;","09/Jan/18 06:51;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1401//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1401//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1401//console

This message is automatically generated.;;;","09/Jan/18 10:17;githubbot;Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/446#discussion_r160366222
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java ---
    @@ -1751,7 +1751,7 @@ public synchronized void initConfigInZKDatabase() {
             if (zkDb != null) zkDb.initConfigInZKDatabase(getQuorumVerifier());
         }
         
    -    public void setRunning(boolean running) {
    +    private void setRunning(boolean running) {
    --- End diff --
    
    I can't see the point of using a private setter. Set the field directly instead.
;;;","10/Jan/18 03:04;githubbot;Github user maoling commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/446#discussion_r160580471
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java ---
    @@ -1751,7 +1751,7 @@ public synchronized void initConfigInZKDatabase() {
             if (zkDb != null) zkDb.initConfigInZKDatabase(getQuorumVerifier());
         }
         
    -    public void setRunning(boolean running) {
    +    private void setRunning(boolean running) {
    --- End diff --
    
    I'm also ambiguous about this change.could you give me some your insight?
;;;","19/Jan/18 00:08;githubbot;Github user phunt commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/446#discussion_r162506685
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java ---
    @@ -1751,7 +1751,7 @@ public synchronized void initConfigInZKDatabase() {
             if (zkDb != null) zkDb.initConfigInZKDatabase(getQuorumVerifier());
         }
         
    -    public void setRunning(boolean running) {
    +    private void setRunning(boolean running) {
    --- End diff --
    
    Where are we with this @maoling @anmolnar ?
;;;","19/Jan/18 08:50;githubbot;Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/446#discussion_r162564621
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java ---
    @@ -1751,7 +1751,7 @@ public synchronized void initConfigInZKDatabase() {
             if (zkDb != null) zkDb.initConfigInZKDatabase(getQuorumVerifier());
         }
         
    -    public void setRunning(boolean running) {
    +    private void setRunning(boolean running) {
    --- End diff --
    
    Sorry for the late answer. It's not too much of an insight, rather - in general - I don't see the point of using a private setter without logic. In other words, is there any objection against setting the field directly?
;;;","22/Jan/18 20:48;githubbot;Github user phunt commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/446#discussion_r163063447
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java ---
    @@ -1751,7 +1751,7 @@ public synchronized void initConfigInZKDatabase() {
             if (zkDb != null) zkDb.initConfigInZKDatabase(getQuorumVerifier());
         }
         
    -    public void setRunning(boolean running) {
    +    private void setRunning(boolean running) {
    --- End diff --
    
    @maoling ?
;;;","23/Jan/18 22:06;githubbot;Github user afine commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/446#discussion_r163392345
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java ---
    @@ -1751,7 +1751,7 @@ public synchronized void initConfigInZKDatabase() {
             if (zkDb != null) zkDb.initConfigInZKDatabase(getQuorumVerifier());
         }
         
    -    public void setRunning(boolean running) {
    +    private void setRunning(boolean running) {
    --- End diff --
    
    +1 to @anmolnar i think we can remote the setter
;;;","26/Jan/18 14:04;githubbot;Github user maoling closed the pull request at:

    https://github.com/apache/zookeeper/pull/446
;;;","26/Jan/18 14:28;githubbot;GitHub user maoling opened a pull request:

    https://github.com/apache/zookeeper/pull/452

    ZOOKEEPER-1580:QuorumPeer.setRunning is not used

    - more details in [JIRA:ZOOKEEPER-1580](https://issues.apache.org/jira/browse/ZOOKEEPER-1580)
    - I forget fetching the upstream codes, make a mistake in the origin [PR-446] (https://github.com/apache/zookeeper/pull/446) which includes some review history,so I close it and open a new one

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/maoling/zookeeper ZOOKEEPER-1580

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/452.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #452
    
----
commit 28de1e88fb54ddd783e00dd96a777af3e1e6f36e
Author: maoling <maoling199210191@...>
Date:   2018-01-09T06:22:04Z

    ZOOKEEPER-1580:QuorumPeer.setRunning is not used

commit 29a5aba1e7b354797170b7e61fabd9b51a1ddfd1
Author: maoling <maoling199210191@...>
Date:   2018-01-26T13:46:28Z

    remove the setter and return back to setting the running field directly

----
;;;","30/Jan/18 07:04;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/452
;;;","30/Jan/18 07:27;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3709 (See [https://builds.apache.org/job/ZooKeeper-trunk/3709/])
ZOOKEEPER-1580: QuorumPeer.setRunning is not used (afine: rev d1b07d588e445085eff4abeb42cf730cc7c57e83)
* (edit) src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leaks in zoo_multi API,ZOOKEEPER-1562,12611660,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,djagtap,djagtap,djagtap,13/Oct/12 01:03,13/Mar/14 18:16,29/Jun/25 13:34,03/Feb/13 06:42,3.4.3,3.4.4,,,,,,,,,,,,,,,,,,,,,,,3.4.6,3.5.0,,,,c client,,,,,0,patch,,"Valgrind is reporting memory leak for zoo_multi operations.

==4056== 2,240 (160 direct, 2,080 indirect) bytes in 1 blocks are definitely lost in loss record 18 of 24
==4056==    at 0x4A04A28: calloc (vg_replace_malloc.c:467)
==4056==    by 0x504D822: create_completion_entry (zookeeper.c:2322)
==4056==    by 0x5052833: zoo_amulti (zookeeper.c:3141)
==4056==    by 0x5052A8B: zoo_multi (zookeeper.c:3240)

It looks like completion entries for individual operations in multiupdate transaction are not getting freed. My observation is that memory leak size depends on the number of operations in single mutlipupdate transaction",Zookeeper client and server both are running on CentOS 6.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jan/13 19:33;djagtap;ZOOKEEPER-1562.patch;https://issues.apache.org/jira/secure/attachment/12567032/ZOOKEEPER-1562.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,248154,Reviewed,,,,Thu Mar 13 18:16:54 UTC 2014,,,,,,,,,,"0|i09lv3:",53975,"zoo_multi API used to leak memory while deserializing the response from zookeeper server.
Completion entries for individual operation in zoo_multi transaction weren't getting cleaned causing memory leak. This patch resolves this memory leak by destroying completion entries in deserialize_multi function.",,,,,,,,,,,zoo_multi memory-leak,,,,,,,,,"14/Oct/12 04:47;marshall;This is certainly a bug in the C multi code I wrote, so i'm taking this bug...;;;","22/Jan/13 22:20;djagtap;Hi Marshall,

Thanks for taking this up!
Just curious has this memory leak been fixed in 3.4.5 stable release.
Or it will be included in future releases.
Also please let know if I can assist you in fixing this.

Thanks & Regards,
Deepak;;;","29/Jan/13 02:56;djagtap;Hi,

zoo_multi API used to leak memory while deserializing the response from zookeeper server.
Completion entries for individual operation in zoo_multi transaction weren't getting cleaned causing memory leak. This patch resolves this memory leak by destroying completion entries in deserialize_multi function.

Please find attached patch for the same.
Could you please review it and let me know if you have any comments?

Thanks & Regards,
Deepak;;;","29/Jan/13 03:01;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12566893/ZOOKEEPER-1562.patch
  against trunk revision 1438375.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1366//console

This message is automatically generated.;;;","29/Jan/13 03:22;marshall;Deepak, Thanks for the patch. Have been meaning to get to this but way too much on my plate.

I reviewed the patch and it looks good to me. Pretty simple fix. I assume with this fix all the unit tests still pass and there is no longer a memory leak ?

If you verify those two things then +1 for me.;;;","29/Jan/13 20:09;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12567032/ZOOKEEPER-1562.patch
  against trunk revision 1438375.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    -1 release audit.  The applied patch generated 26 release audit warnings (more than the trunk's current 24 warnings).

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1368//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1368//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1368//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1368//console

This message is automatically generated.;;;","29/Jan/13 23:26;djagtap;Thanks for reviewing this Marshall!
I have verified that valgrind doesn't report any memory leak with my application.
But somehow I am not managed to successfully run unit tests provided in the trunk though Hadoop QA reported success for all unit tests. It looks like I am missing some steps in compile and build.

I am using following steps for compiling, building and running test:
1. svn checkout https://svn.apache.org/repos/asf/zookeeper/tags/release-3.4.5/ zookeeper-3.4.5
2. patch -p0 < ZOOKEEPER-1562.patch
2. cd zookeeper-3.4.5
3. ant compile_jute
4. cd zookeeper-3.4.5/src/c
5. autoreconf -if
6. ./configure
7. make
8. cd ../../../zookeeper-3.4.5
9. ant test
On the console I could see many tests failed.
I tried same thing without my patch and still same test are failing.
Am I missing any steps in the build and patch testing?

Thanks & Regards,
Deepak

;;;","30/Jan/13 00:00;marshall;Don't do steps 8 and 9. After step 7, do this:

8. make zktest-st
9. ./zktest-st
10. make zktest-mt
11. ./zktest-mt



;;;","30/Jan/13 00:16;djagtap;Great all tests succeed now.Thanks!;;;","30/Jan/13 00:18;marshall;Awesome!! +1 from me.;;;","03/Feb/13 06:42;phunt;Committed to 3.4.6 and trunk. Thanks Deepak! (and Marshall for the review/help);;;","03/Feb/13 11:02;hudson;Integrated in ZooKeeper-trunk #1822 (See [https://builds.apache.org/job/ZooKeeper-trunk/1822/])
    ZOOKEEPER-1562. Memory leaks in zoo_multi API (Deepak Jagtap via phunt) (Revision 1441862)

     Result = SUCCESS
phunt : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1441862
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/c/src/zookeeper.c
;;;","13/Mar/14 18:16;fpj;Closing issues after releasing 3.4.6.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak reported by valgrind mt version,ZOOKEEPER-1556,12610125,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,andremartin,andremartin,03/Oct/12 19:10,24/Oct/17 04:39,29/Jun/25 13:34,,3.4.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,c client,,,,,0,,,"Valgrind reports the following memory leak when using the c-client (mt):

==11674== 18 bytes in 9 blocks are indirectly lost in loss record 14 of 173
==11674==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11674==    by 0xC8064A: ia_deserialize_string (recordio.c:271)
==11674==    by 0xC81F2E: deserialize_String_vector (zookeeper.jute.c:247)
==11674==    by 0xC842F9: deserialize_GetChildrenResponse (zookeeper.jute.c:874)
==11674==    by 0xC7E9F0: zookeeper_process (zookeeper.c:1904)
==11674==    by 0xC7FE5B: do_io (mt_adaptor.c:439)
==11674==    by 0x4E39E99: start_thread (pthread_create.c:308)
==11674==    by 0x5FA6DBC: clone (clone.S:112)
==11674== 
==11674== 90 (72 direct, 18 indirect) bytes in 49 blocks are definitely lost in loss record 139 of 173
==11674==    at 0x4C29DB4: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11674==    by 0xC81EEE: deserialize_String_vector (zookeeper.jute.c:245)
==11674==    by 0xC842F9: deserialize_GetChildrenResponse (zookeeper.jute.c:874)
==11674==    by 0xC7E9F0: zookeeper_process (zookeeper.c:1904)
==11674==    by 0xC7FE5B: do_io (mt_adaptor.c:439)
==11674==    by 0x4E39E99: start_thread (pthread_create.c:308)
==11674==    by 0x5FA6DBC: clone (clone.S:112)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-1632,,ZOOKEEPER-2015,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,242157,,,,,Tue Oct 24 03:36:11 UTC 2017,,,,,,,,,,"0|i02j5j:",12704,,,,,,,,,,,,,,,,,,,,,"29/Jan/13 22:37;cmccabe;this patch fixes some valgrind issues I encountered when running {{cli_mt}};;;","29/Jan/13 22:49;cmccabe;Looks like the memory leaks I found are different than the ones you found.  Moving to a separate JIRA.;;;","01/Jul/13 11:01;geminiak;i'm sorry, but i can't found the patch;;;","12/Nov/15 22:28;Hadriel;We've found the same thing at my company. In our case, the leak was caused because the completion thread can end before the IO thread, just before the IO thread created a completion entry for the completion thread to process. We added a mutex guard to prevent the completion thread (do_completion()) from exiting its while-loop until the IO thread (do_io()) had exited its while loop; and also added an extra call to process_completions(zh) just after the while-loop in case it had one more to do.

We cleared the new mutex guard inside of adaptor_finish(), after the IO thread is ended. The reason is that the IO thread (and the completion thread) can finish their while-loops as soon as zh->close_requested is set to 1 in zookeeper_close(), including before free_completions() does its stuff... and since free_completions() can create one or more fake responses for the completion thread to process (for unanswered requests), it's possible for free_completions() to also add things to the completion queue and cause the memory leak. So keeping the completion thread inside its while-loop until adaptor_finish() is called seems to make sense.;;;","24/Oct/17 03:36;DavidLiu;Use deallocate_String_vector(in generated/zookeeper.jute.h) to fix the memory leak;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Findbugs configuration is missing some dependencies,ZOOKEEPER-1553,12609819,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,busbey,busbey,busbey,01/Oct/12 22:00,13/Mar/14 18:16,29/Jun/25 13:34,12/Dec/12 08:03,3.5.0,,,,,,,,,,,,,,,,,,,,,,,,3.4.6,3.5.0,,,,build,,,,,0,,,"While updating the findbugs configuration to account for a change in log4j versions I noticed findbugs complaining about access to the netty and slf4j classes.

Steps to reproduce:

# install findbugs to $FINDBUGS_HOME
# run ant -Dfindbugs.home=""$FINDBUGS_HOME"" findbugs

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Oct/12 22:15;busbey;ZOOKEEPER-1553.patch;https://issues.apache.org/jira/secure/attachment/12547290/ZOOKEEPER-1553.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,239567,Reviewed,,,,Thu Mar 13 18:16:56 UTC 2014,,,,,,,,,,"0|i00r9z:",2351,,,,,,,,,,,,,,,,,,,,,"01/Oct/12 22:15;busbey;Changes auxClasspath for findbugs to all the jars in the ivy lib directory.

Fixes the immediate issue of not including dependencies other than log4j and also makes sure we'll include future dependency changes/additions.;;;","01/Oct/12 23:03;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12547290/ZOOKEEPER-1553.patch
  against trunk revision 1391526.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1202//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1202//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1202//console

This message is automatically generated.;;;","02/Oct/12 14:24;busbey;No new tests because the patch is a configuration change to findbugs. You can manually test by running step #2 of the reproduce after the patch and findbugs will no longer complain about unknown classes.;;;","12/Dec/12 08:03;phunt;Committed to 3.4.6 and trunk. Thanks Sean!;;;","12/Dec/12 11:05;hudson;Integrated in ZooKeeper-trunk #1770 (See [https://builds.apache.org/job/ZooKeeper-trunk/1770/])
    ZOOKEEPER-1553. Findbugs configuration is missing some dependencies (Sean Busbey via phunt) (Revision 1420555)

     Result = SUCCESS
phunt : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1420555
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/build.xml
;;;","13/Mar/14 18:16;fpj;Closing issues after releasing 3.4.6.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
System.exit() calls on interrupted SyncThread,ZOOKEEPER-1544,12605997,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Duplicate,,dweiss,dweiss,03/Sep/12 14:01,03/Sep/12 16:03,29/Jun/25 13:34,03/Sep/12 16:03,3.3.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,"We have a test framework at Lucene/Solr which attempts to interrupt threads that leak out of a single class (suite) scope. The problem we're facing is that ZooKeeper's SyncThread is doing this:
{code}
>>             LOG.fatal(""Severe unrecoverable error, exiting"", t);
>>             System.exit(11);
{code}

Is this terminating the JVM really needed here? Could it be made optional with a system property or even removed entirely? Currently it aborts the entire JUnit runner and prevents successive tests from continuing.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,242166,,,,,Mon Sep 03 16:03:07 UTC 2012,,,,,,,,,,"0|i02j7j:",12713,,,,,,,,,,,,,,,,,,,,,"03/Sep/12 15:52;fpj;I think this is incorporated into ZOOKEEPER-575.;;;","03/Sep/12 16:02;dweiss;Yeah, looks like a duplicate, thanks Flavio.;;;","03/Sep/12 16:03;dweiss;Dupl. of ZOOKEEPER-575;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve space handling in zkServer.sh and zkEnv.sh,ZOOKEEPER-1538,12604306,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,adferguson,adferguson,adferguson,22/Aug/12 00:00,25/Jun/13 18:07,29/Jun/25 13:34,07/Sep/12 06:23,3.4.3,,,,,,,,,,,,,,,,,,,,,,,,3.5.0,,,,,,,,,,0,,,"Running `bin/zkServer.sh start` from a freshly-built copy of trunk fails if the source code is checked-out to a directory with spaces in the name. I'll include a small fix to fix this problem.

thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Aug/12 00:01;adferguson;ZOOKEEPER-1538.patch;https://issues.apache.org/jira/secure/attachment/12541840/ZOOKEEPER-1538.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,242172,,,,,Tue Jun 25 18:07:24 UTC 2013,,,,,,,,,,"0|i02j8v:",12719,,,,,,,,,,,,,,,,,,,,,"22/Aug/12 02:46;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12541840/ZOOKEEPER-1538.patch
  against trunk revision 1373156.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1166//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1166//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1166//console

This message is automatically generated.;;;","07/Sep/12 06:16;mahadev;Moving it out of 3.4 branch. The patch looks good. Ill go ahead and commit this to trunk.;;;","07/Sep/12 06:23;mahadev;Just committed this to trunk. Thanks for the patch Andrew!;;;","07/Sep/12 11:01;hudson;Integrated in ZooKeeper-trunk #1672 (See [https://builds.apache.org/job/ZooKeeper-trunk/1672/])
    ZOOKEEPER-1538. Improve space handling in zkServer.sh and zkEnv.sh. (Andrew Ferguson via mahadev) (Revision 1381900)

     Result = SUCCESS
mahadev : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1381900
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/bin/zkEnv.sh
* /zookeeper/trunk/bin/zkServer.sh
;;;","25/Jun/13 17:58;marshall;This fix is incorrect. It assumes the shell is bash since it uses bash array construction, e.g.:

 96   LIBPATH=(""${ZOOKEEPER_PREFIX}""/share/zookeeper/*.jar)

This does NOT work if /bin/sh points to /bin/dash as it does on Ubuntu. 

It fails as so:

zkEnv.sh: 96: zkEnv.sh: Syntax error: ""("" unexpected (expecting ""fi"")                                                                                                                                                                                              


If I change the shebang at the top to use ""/bin/bash"" instead of ""/bin/sh"" it works as expected. I don't know the full details of why using a bash array was chosen as the solution but I don't think it is the right way to deal with spaces in these paths...

I will open a separate jira and assign to Andrew Ferguson.;;;","25/Jun/13 18:00;marshall;See ZOOKEEPER-1719.;;;","25/Jun/13 18:07;marshall;My Bad, this regression was actually caused by ZOOKEEPER-1663 not ZOOKEEPER-1538. Will update the jira.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
registration page not accepting capital letters,ZOOKEEPER-1537,12603867,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Incomplete,,mailtotaher,mailtotaher,17/Aug/12 14:20,30/Aug/12 05:39,29/Jun/25 13:34,30/Aug/12 05:39,3.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,c client,,,,,0,performance,,"1.Type zookeeper URL in the address bar to go to home page of it.
2.For new users, click on ""new user"" and it will open a registration form.
3.Give your full name in capital letters as mentioned.
4.Even though I give capital letters it is not accepting and is giving an error message as ""PLEASE TYPE CAPITAL LETTERS""","WINDOWS XP, MOZILLA FIREFOX, 500 GB HARD DISK, 2 GB RAM
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1510560,1510560,,0%,1510560,1510560,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,242173,,,,,Thu Aug 30 05:39:02 UTC 2012,,,,,,,,,,"0|i02j93:",12720,,,,,,,,,,,,,,,,,,,,,"30/Aug/12 05:39;mahadev;Looks like there is a loss of context here (not sure what registration with capital letters means). Please feel free to create another jira with the right context and more information. Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Correct the documentation of the args for the JavaExample doc.,ZOOKEEPER-1533,12603185,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,wturkal,wturkal,wturkal,13/Aug/12 06:50,03/Mar/16 01:35,29/Jun/25 13:34,14/Aug/12 23:11,3.3.0,3.3.1,3.3.2,3.3.3,3.3.4,3.3.5,3.3.6,3.4.0,3.4.1,3.4.2,3.4.3,3.4.4,3.5.0,,,,,,,,,,,,3.5.0,,,,,documentation,,,,,0,,,Small doc fix in the JavaExample doc.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Aug/12 22:35;wturkal;ZOOKEEPER-1533.patch;https://issues.apache.org/jira/secure/attachment/12540970/ZOOKEEPER-1533.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,242177,,,,,Wed Aug 15 11:01:36 UTC 2012,,,,,,,,,,"0|i02j9z:",12724,,,,,,,,,,,,,,,,,,,,,"14/Aug/12 20:40;michim;Hi Warren,

Is this patch ready to be reviewed? If so, please click on the ""Submit Patch"" button to change the status to ""Patch Available"".

Thanks!
--Michi;;;","14/Aug/12 21:41;wturkal;I just did this for all of my current issues with outstanding patches. I didn't know that part of the workflow.;;;","14/Aug/12 21:41;wturkal;BTW, thanks for helping me with the workflow.;;;","14/Aug/12 21:50;michim;The patch looks good to me. Could you also fix this existing typo?

<listitem><para>then name of a znode - the one to be watched</para></listitem>

should be:

<listitem><para>the name of a znode - the one to be watched</para></listitem>

--Michi;;;","14/Aug/12 22:35;wturkal;Fixed a requested typo. Also, fixed the whitespace (changed tabs to spaces) around the affected markup to be consistent with other parts in the file.;;;","14/Aug/12 22:58;michim;+1

Thanks for the patch Warren. I'll check this in.

--Michi;;;","15/Aug/12 11:01;hudson;Integrated in ZooKeeper-trunk #1649 (See [https://builds.apache.org/job/ZooKeeper-trunk/1649/])
    ZOOKEEPER-1533 Correct the documentation of the args for the JavaExample doc.
(Warren Turkal via michim) (Revision 1373156)

     Result = SUCCESS
michim : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1373156
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/docs/src/documentation/content/xdocs/javaExample.xml
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
A txn log record with a corrupt sentinel byte looks like EOF,ZOOKEEPER-1520,12600203,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,bbridge,bbridge,bbridge,25/Jul/12 18:42,03/Feb/22 08:50,29/Jun/25 13:34,,3.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,server,,,,,1,newbie,patch,"In Util.readTxnBytes() the sentinel is compared with 0x42 and if it does not match then the record is considered partially written and thus the EOF. However if it is a partial record the sentinel should be 0x00 since that is what the log is initialized with. Any other value would indicate corruption and should throw an IOException rather than indicate EOF. See [ZOOKEEPER-1453|https://issues.apache.org/jira/browse/ZOOKEEPER-1453] for a related issue. ",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,86400,86400,,0%,86400,86400,,,,,,,,,,,,,,,,,,,,,,,"24/Aug/12 23:46;bbridge;ZOOKEEPER-1520.patch;https://issues.apache.org/jira/secure/attachment/12542370/ZOOKEEPER-1520.patch","07/Aug/12 22:37;bbridge;ant.out;https://issues.apache.org/jira/secure/attachment/12539728/ant.out","07/Aug/12 22:37;bbridge;checkout.out;https://issues.apache.org/jira/secure/attachment/12539727/checkout.out","07/Aug/12 22:36;bbridge;init.out;https://issues.apache.org/jira/secure/attachment/12539726/init.out","07/Aug/12 22:05;bbridge;init.out;https://issues.apache.org/jira/secure/attachment/12539722/init.out",,,,,,5.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,239662,,,,,Tue Apr 01 02:56:47 UTC 2014,,,,,,,,,,"0|i00s5z:",2495,,,,,,,,,,,,,,,,,,,,,"25/Jul/12 18:47;bbridge;This is a simple localized fix with a low probability of causing any problems. I want to do this to learn the process for making ZooKeeper contributions.;;;","25/Jul/12 20:37;fpj;Did you mean to upload a patch, Bill? Your proposal sounds reasonable to me.;;;","26/Jul/12 19:39;bbridge;I intend to upload a patch as soon as I can build from an svn checkout, edit in eclipse, run the tests, and create a patch. This is an extremely complex process, and is not documented anywhere that I can find. Fortunately I have a friend that is an old hand at Java development. He is helping me find all the parts that are not in the trunk (e.g. eclipse, svn, ant, ivy, slf4j, log4j, ???), configuring eclipse to successfully compile, and getting the tests to run. At last report the tests were all failing due to some missing or misplaced component or parameter. I suspect our wandering in the dark is going to produce a different development environment than anyone else has. This will likely lead to future problems. 

Did I just not find the detailed description of how to take an empty machine that boots some freshly installed OS and turn it into a ZooKeeper development environment? It should start with which JDK to use (I chose jdk1.6.0), and where to download it. ;;;","31/Jul/12 22:57;phunt;""ant test"" is usually how we do it.

Also ""ant eclipse"" and then open the project in eclipse itself.

No need to download jars and such (slf/log/etc..) those will be d/l automatically by ant.


If the ""how to contribute"" page is not sufficient please let us know: https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute;;;","07/Aug/12 22:35;bbridge;I have been unable to checkout the trunk and successfully run the tests. I am using a Solaris 10 SPARC machine, and I expect that is part of my problem.

I eventually get the following error after ""ant test"" runs for 35 minutes:
{quote}
/zookeeper/zookeeper-trunk/build.xml:1240: Execute failed: java.io.IOException: Cannot run program ""autoreconf"" (in directory ""/zookeeper/zookeeper-trunk/src/c""): error=2, No such file or directory
{quote}
Here are the commands I enter:
{quote}
bash-3.00$ rm -rf zookeeper-trunk/bash-3.00$  svn checkout http://svn.apache.org/repos/asf/zookeeper/trunk/ zookeeper-trunk &>checkout.out
bash-3.00$ cd zookeeper-trunk/
bash-3.00$ ant init &>../init.out
bash-3.00$ ant test &>../ant.out
{quote}
I will attach the output files.

The autoreconf file is really missing. It seems to be related to compiling C code to run natively, which is why I expect it is a SPARC problem.

Am I doing something wrong or is development on SPARC Solaris really broken?

I am very much a newbie to large scale Java development such as ZooKeeper. The instructions on the how to contribute page were not sufficient for me. I had previously  downloaded zookeeper-3.3.5 and got it running under eclipse on windows. I found out the hard way that the procedure for a checked out version is quite different.

It would be nice to list the tools that should be installed such as ivy, eclipse, ant, ... and where they can be found for download. It is particularly important to specify which version of the JDK should be used since using a 1.7 feature in ZooKeeper would be bad if users are running a 1.6 JRE. I still do not know which JDK is appropriate.

A bit more explaination about how the build file works, and what it is capable of would be helpful. I have never used ant before so it took awhile to understand build.xml. A list of the high level targets, their intended use, and what they do would have told me that I did not need to find libraries like log4j online. I had never heard of ivy. Understanding why I should do something is better than just being told what to type.
;;;","21/Aug/12 15:47;bbridge;I have attached a patch to throw an error if the sentinel byte is corrupt.Please review.;;;","21/Aug/12 16:09;bbridge;Throws an error if the sentinel byte on a transaction record is corrupt.;;;","21/Aug/12 16:45;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12541774/ZOOKEEPER-1520.patch
  against trunk revision 1373156.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1165//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1165//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1165//console

This message is automatically generated.;;;","24/Aug/12 23:45;bbridge;I moved to linux since I was unable to get the tests working on SPARC Solaris (See above comments). However that too did not really work. I am using a virtual machine that is assigned to me for Oracle development so the timing may be different than a physical machine.I ran ""ant test"" many times before making any changes and got many different errors on the tests. They all seem timing related. After creating my patch and testing it I get the same tests failing at about the same rate. For example I got the following errors when I ran the test suite 21 times:

""server.quorum.Zab1_0Test FAILED""    16 times
""server.ZxidRolloverTest FAILED""      1 time
""test.AsyncHammerTest FAILED""         3 times
""test.FLETest FAILED""                 1 time
""test.NioNettySuiteHammerTest FAILED"" 3 times ""(timeout)"" on 2 of them
""test.QuorumTest FAILED""              1 time
""test.WatcherTest FAILED""            10 times

There was one of the 21 runs where none of the test failed but the build failed due to a missing script in my checked out source tree (/scratch/zookeeper/Workspace/zookeeper-trunk/). The test output for this run ended with:

create-cppunit-configure:
     [exec] checking for doxygen... /usr/bin/doxygen
     [exec] checking for perl... /usr/bin/perl
     [exec] checking for dot... no
     [exec] configure: error: cannot find install-sh or install.sh in /scratch/zookeeper/Workspace/zookeeper-trunk/src/c /scratch/zookeeper/Workspace/zookeeper-trunk/src/c/.. /scratch/zookeeper/Workspace/zookeeper-trunk/src/c/../..

BUILD FAILED ...

This looks like it has something to do with C code, which I did not touch, so I do not think this has anything to do with my patch.

Is there something that can be done so I can reliably run the tests?

;;;","24/Aug/12 23:48;bbridge;Patch did not include test;;;","24/Aug/12 23:52;bbridge;This treats a sentinel byte of zero as EOF, and throws an IOException if the sentinel byte is otherwise not 0x42. CRCTest was upgraded to test for all 4 types of corruption that the code looks for, including a corrupt sentinel byte.;;;","25/Aug/12 00:20;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12542370/ZOOKEEPER-1520.patch
  against trunk revision 1373156.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1170//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1170//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1170//console

This message is automatically generated.;;;","14/Oct/12 21:08;fpj;The patch looks good to me, thanks, Bill. I have a question about how to recover from such errors. With this patch, if there is a corrupt record, then we throw an exception, which I believe would prevent a server from starting. Does it mean that if we get a corrupt record on a given node, we won't be able to recover the data on the disk of that node?

;;;","15/Oct/12 08:24;fpj;Also, the sentinel being zero does not necessarily mean that there has been no corruption. I understand that it is a pretty good guess, though, because of the zeroing during preallocation. If it happens that there has been a corruption and we simply considered it as a partial record. Is it acceptable to have such a low probability corner case? I'm just pointing this out because the behavior wouldn't be consistent if we hit this case.  ;;;","01/Apr/14 02:51;michim;The patch doesn't apply anymore.;;;","01/Apr/14 02:56;michim;Sorry for jumping in this late, but to answer Flavio's question:

{quote}
Also, the sentinel being zero does not necessarily mean that there has been no corruption. I understand that it is a pretty good guess, though, because of the zeroing during preallocation. If it happens that there has been a corruption and we simply considered it as a partial record. Is it acceptable to have such a low probability corner case? I'm just pointing this out because the behavior wouldn't be consistent if we hit this case.
{quote}

I think we can check if the record is corrupted by validating the checksum, using 0x42 as the last byte instead of 0x0. By the way, it's kind of strange that readTxnBytes() doesn't validate the checksum at all.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Zab1.0 sends NEWLEADER packet twice,ZOOKEEPER-1498,12597347,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Duplicate,,fournc,fournc,03/Jul/12 21:25,04/Jan/13 02:29,29/Jun/25 13:34,04/Jan/13 02:29,3.4.3,3.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,server,,,,,0,,,"In pre-Zab1.0, we would process the NEWLEADER packet in registerWithLeader. Now we only process it in syncWithLeader, and in certain circumstances (the first follower of a new leader) it seems like we get 2 of them, which causes 2 snapshots to be taken one right after another. Not sure whether we should ignore taking the snapshot the second time, or not send two packets, or what. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,242204,,,,,Fri Jan 04 02:29:39 UTC 2013,,,,,,,,,,"0|i02jfz:",12751,,,,,,,,,,,,,,,,,,,,,"31/Dec/12 21:38;eribeiro;Hi Camille,

Isn't this issue a duplicate of ZOOKEEPER-1324 ?

PS: I liked your description, it's very good.
;;;","04/Jan/13 02:29;thawan;See ZOOKEEPER-1324;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZK client hangs when using a function not available on the server.,ZOOKEEPER-1495,12596218,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,nkeywal,nkeywal,nkeywal,28/Jun/12 07:51,13/Mar/14 18:16,29/Jun/25 13:34,25/Jan/13 01:37,3.3.5,3.4.2,,,,,,,,,,,,,,,,,,,,,,,3.4.6,3.5.0,,,,server,,,,,0,,,"This happens for example when using zk#multi with a 3.4 client but a 3.3 server.

The issue seems to be on the server side: the servers drops the packets with an unknown OpCode in ZooKeeperServer#submitRequest
{noformat}
public void submitRequest(Request si) {
    // snip
    try {
        touch(si.cnxn);
        boolean validpacket = Request.isValid(si.type); // ===> Check on case OpCode.*
        if (validpacket) {
            // snip
        } else {
            LOG.warn(""Dropping packet at server of type "" + si.type);
            // if invalid packet drop the packet.
        }
    } catch (MissingSessionException e) {
        if (LOG.isDebugEnabled()) {
            LOG.debug(""Dropping request: "" + e.getMessage());
        }
    }
}
{noformat}

The solution discussed in ZOOKEEPER-1381 would be to get an exception on the client side then & close the session.",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,HBASE-5843,,ZOOKEEPER-1381,,,,,,,"28/Jun/12 08:06;nkeywal;1495.br33.v3.patch;https://issues.apache.org/jira/secure/attachment/12533788/1495.br33.v3.patch","23/Jan/13 06:42;eribeiro;ZOOKEEPER-1495.2.patch;https://issues.apache.org/jira/secure/attachment/12566099/ZOOKEEPER-1495.2.patch","22/Jan/13 21:45;skye;ZOOKEEPER-1495.patch;https://issues.apache.org/jira/secure/attachment/12566025/ZOOKEEPER-1495.patch","25/Jan/13 01:31;skye;ZOOKEEPER-1495_branch34.patch;https://issues.apache.org/jira/secure/attachment/12566427/ZOOKEEPER-1495_branch34.patch",,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,242206,Reviewed,,,,Thu Mar 13 18:16:55 UTC 2014,,,,,,,,,,"0|i02jgf:",12753,,,,,,,,,,,,,,,,,,,,,"27/Aug/12 10:08;nkeywal;Any feedback on the patch proposed?;;;","17/Dec/12 23:28;skye;This overall looks good to me. I'm not convinced a separate UnimplementedRequestProcessor is necessary since you could just do the work inline in ZooKeeperServer.submitRequest, but it doesn't make a big difference either way.  The chroot business in your test seems unnecessary -- you're not creating a client with a chroot, and the request shouldn't be processed anyway. You're also creating an ExistsRequest and then a SetDataResponse (although the net result is the same). Maybe clean up the test and resubmit?

One thing to note is that if ZOOKEEPER-1599 is fixed, it will still be possible for 3.4 leaders to send multis to 3.3 followers. We can consider a solution for that problem depending on how ZOOKEEPER-1599 is resolved.;;;","22/Jan/13 21:45;skye;It looks like we don't need to worry about ZOOKEEPER-1599 for now. I took nkeywal's patch and cleaned up the test a little bit.;;;","22/Jan/13 22:20;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12566025/ZOOKEEPER-1495.patch
  against trunk revision 1434978.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1353//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1353//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1353//console

This message is automatically generated.;;;","23/Jan/13 06:26;eribeiro;Cool. FYI, you can simplify the test even more if you get rid of try-catch boilerplate inside the method when testing things that are supposed to throw exceptions (this works only for JUnit 4). You can replace ""@Test"" by ""@Test(expected=SomeException.class)"". It removes the boilerplate code and makes the test method even more simple.

Best regards,
E.;;;","23/Jan/13 06:32;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12566097/ZOOKEEPER-1495.2.patch
  against trunk revision 1437257.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    -1 javac.  The patch appears to cause tar ant target to fail.

    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1354//testReport/
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1354//console

This message is automatically generated.;;;","23/Jan/13 06:42;eribeiro;Sorry, forgot to ""svn add"".;;;","23/Jan/13 07:19;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12566099/ZOOKEEPER-1495.2.patch
  against trunk revision 1437257.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1355//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1355//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1355//console

This message is automatically generated.;;;","25/Jan/13 01:31;skye;Patch that can be applied to the 3.4 branch (only difference is imports in ClientTest).;;;","25/Jan/13 01:37;phunt;A true team effort, thanks all! Committed to trunk and 3.4.6.;;;","11/Feb/13 23:42;yuzhihong@gmail.com;What about 1495.br33.v3.patch ?
It would really useful for clients to see whether certain operation is supported.;;;","13/Mar/14 18:16;fpj;Closing issues after releasing 3.4.6.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Some links are not working in the Zookeeper Documentation,ZOOKEEPER-1488,12560719,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,kiran_bc,kiran_bc,15/Jun/12 06:13,01/Jul/15 23:53,29/Jun/25 13:34,,3.4.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,documentation,,,,,0,,,"There are some internal link errors in the Zookeeper documentation. The list is as follows:
docs\zookeeperAdmin.html -> tickTime and datadir
docs\zookeeperOver.html -> fg_zkComponents, fg_zkPerfReliability and fg_zkPerfRW
docs\zookeeperStarted.html -> Logging",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,242212,,,,,Tue Dec 18 07:15:05 UTC 2012,,,,,,,,,,"0|i02jhr:",12759,,,,,,,,,,,,,,,,,,,,,"14/Dec/12 21:15;eribeiro;In the latest HTML page (zookeeperStarted.html) I removed the reference to the Programmer's guide because it doesn't have any section with logging output examples.;;;","14/Dec/12 21:22;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12561027/ZOOKEEPER-1488.patch
  against trunk revision 1421098.

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1295//console

This message is automatically generated.;;;","14/Dec/12 21:34;eribeiro;Fixing the links.;;;","14/Dec/12 21:42;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12561035/ZOOKEEPER-1488.patch
  against trunk revision 1421098.

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1296//console

This message is automatically generated.;;;","16/Dec/12 06:30;phunt;Hi Edward, those files are generated. In order to fix this you'll need to edit the source documents in src/docs/src/documentation/content/xdocs/..

You'll need to re-generate the docs to verify your changes 
bq. ant -Dforrest.home=~/apache-forrest-0.9 docs
forrest can be downloaded here: http://forrest.apache.org/mirrors.cgi

results are output to the docs subdirectory.

Easiest way to submit the patch is to checkout the trunk using svn, make the edits, ""svn diff > ZOOKEEPER-1488.patch"", (create the patch from the toplevel directory) then attach the patch here. More detail here:
https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute
;;;","16/Dec/12 17:08;eribeiro;Oh, thanks Patrick! And sorry for the initial mess up. I will fix that and patch again asap. Your tips are very welcomed, thanks again.

By the way, I have just seen that the PDF generated in the in the docs section still has a 2008 copyright notice (""Copyright © 2008 The Apache Software Foundation. All rights reserved""). Should I open a ticket to update this? Or may I try to include in this patch?;;;","17/Dec/12 06:20;mahadev;bq. By the way, I have just seen that the PDF generated in the in the docs section still has a 2008 copyright notice (""Copyright © 2008 The Apache Software Foundation. All rights reserved""). Should I open a ticket to update this? Or may I try to include in this patch?


Thanks for pointing that out Edward. Please open a jira for that.;;;","18/Dec/12 07:15;phunt;Cancelling while the patch is being updated.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Small bug in QuorumTest.testFollowersStartAfterLeader( ),ZOOKEEPER-1478,12559070,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,shralex,shralex,shralex,03/Jun/12 03:03,13/Mar/14 18:16,29/Jun/25 13:34,13/Dec/12 07:19,3.4.3,,,,,,,,,,,,,,,,,,,,,,,,3.4.6,3.5.0,,,,tests,,,,,0,,,"The following code appears in QuorumTest.testFollowersStartAfterLeader( ):

for (int i = 0; i < 30; i++) {
    try {
       zk.create(""/test"", ""test"".getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE,
                 CreateMode.PERSISTENT);
       break;
     } catch(KeeperException.ConnectionLossException e) {
       Thread.sleep(1000);
     }
    // test fails if we still can't connect to the quorum after 30 seconds.
    Assert.fail(""client could not connect to reestablished quorum: giving up after 30+ seconds."");
}

From the comment it looks like the intention was to try to reconnect 30 times and only then trigger the Assert, but that's not what this does.
After we fail to connect once and Thread.sleep is executed, Assert.fail will be executed without retrying create. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Sep/12 18:52;mahadev;ZOOKEEPER-1478.patch;https://issues.apache.org/jira/secure/attachment/12544504/ZOOKEEPER-1478.patch","20/Jun/12 15:02;shralex;ZOOKEEPER-1478.patch;https://issues.apache.org/jira/secure/attachment/12532701/ZOOKEEPER-1478.patch","20/Jun/12 07:45;fpj;ZOOKEEPER-1478.patch;https://issues.apache.org/jira/secure/attachment/12532665/ZOOKEEPER-1478.patch","19/Jun/12 16:07;fpj;ZOOKEEPER-1478.patch;https://issues.apache.org/jira/secure/attachment/12532571/ZOOKEEPER-1478.patch","03/Jun/12 03:15;shralex;ZOOKEEPER-1478.patch;https://issues.apache.org/jira/secure/attachment/12530678/ZOOKEEPER-1478.patch",,,,,,5.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,239613,Reviewed,,,,Thu Mar 13 18:16:58 UTC 2014,,,,,,,,,,"0|i00rof:",2416,,,,,,,,,,,,,,,,,,,,,"03/Jun/12 03:48;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12530678/ZOOKEEPER-1478.patch
  against trunk revision 1337029.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1086//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1086//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1086//console

This message is automatically generated.;;;","19/Jun/12 16:13;fpj;Good catch, Alex. I was wondering why we are trying to create znodes instead of trying to simply check if it is connected. Is it because we can have a race and the output of waitForConnected is not reliable? Check the latest patch I have uploaded to see the approach I'm thinking about.

Other than this issue, the patch you submitted looks good.;;;","19/Jun/12 22:57;shralex;Hi Flavio, this looks good, although I don't know the details of ZK-790 to which this test is related, so not sure what it is supposed to do exactly. One thing a bit odd is the line 

QuorumBase.waitForServerUp(
                        ""127.0.0.1:"" + qu.getPeer(2).clientPort,
                        CONNECTION_TIMEOUT));

above your changes. Server 2 might not have been even shut down (it should be ""index"" ?) and in any case your new line waitForConnected seems to be sufficient even without the above line. right ? 

;;;","20/Jun/12 07:43;fpj;I had a look at ZOOKEEPER-790 and if I checked it right, and this change to run 30 times create was introduced in ZOOKEEPER-1103. 

We are just trying to check if the client is able to reconnect to the ensemble after a leader demotion, so I think the way I'm proposing is cleaner. I'll be uploading shortly a small change that will guarantee that the race I was referring to doesn't happen by waiting until we actually observe that the client has disconnected.

About the waitForServerUp statement, it doesn't look strictly necessary by the way we create the zookeeper object. It sounds ok to remove.;;;","20/Jun/12 07:45;fpj;Change to wait until client actually observes the disconnection.;;;","20/Jun/12 08:28;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12532665/ZOOKEEPER-1478.patch
  against trunk revision 1351541.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 4 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1100//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1100//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1100//console

This message is automatically generated.;;;","20/Jun/12 15:02;shralex;removed waitForServerUp;;;","20/Jun/12 15:38;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12532701/ZOOKEEPER-1478.patch
  against trunk revision 1351541.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 4 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1101//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1101//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1101//console

This message is automatically generated.;;;","21/Jun/12 22:16;fpj;This is a +1 for me, but since I added code to the patch, it might be a good idea to have someone else having a look at it too.;;;","10/Sep/12 18:49;mahadev;Moving it out to 3.5 since the bugfix isnt a really critical one. ;;;","10/Sep/12 18:51;mahadev;Rerunning through hudson.;;;","10/Sep/12 18:52;mahadev;Re uploading the patch for hudson.;;;","10/Sep/12 19:35;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12544504/ZOOKEEPER-1478.patch
  against trunk revision 1382661.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 4 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1181//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1181//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1181//console

This message is automatically generated.;;;","25/Sep/12 03:43;breed;+1 looks good to me!;;;","13/Dec/12 07:19;phunt;Committed to 3.4.6 and trunk. Thanks Alexander.;;;","13/Dec/12 11:05;hudson;Integrated in ZooKeeper-trunk #1771 (See [https://builds.apache.org/job/ZooKeeper-trunk/1771/])
    ZOOKEEPER-1478. Small bug in QuorumTest.testFollowersStartAfterLeader( ) (Alexander Shraer via fpj, breed, phunt) (Revision 1421091)

     Result = SUCCESS
phunt : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1421091
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/QuorumTest.java
;;;","13/Mar/14 18:16;fpj;Closing issues after releasing 3.4.6.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WatchedEvent class missing from documentation,ZOOKEEPER-1472,12558110,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Duplicate,,davidnickerson,davidnickerson,25/May/12 14:34,28/Sep/23 01:57,29/Jun/25 13:34,28/Sep/23 01:57,3.3.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,documentation,,,,,1,documentation,,org.apache.zookeeper.WatchedEvent is missing from the 3.3.5 documentation.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-1083,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,242227,,,,,2012-05-25 14:34:01.0,,,,,,,,,,"0|i02jl3:",12774,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Jute generates invalid C++ code,ZOOKEEPER-1471,12556625,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,michim,michim,michim,21/May/12 01:10,30/Jun/12 11:01,29/Jun/25 13:34,30/Jun/12 06:44,3.4.3,,,,,,,,,,,,,,,,,,,,,,,,3.4.4,3.5.0,,,,jute,,,,,0,,,"There are 2 issues with the current jute generated C++ code.

1. Variable declaration for JRecord is incorrect. It looks something like this:
{code} 
    Id id;
{code}
It should be like this instead:
{code} 
 org::apache::zookeeper::data::Id mid;
{code}

2. The header file declares all the variables (except for JRecord ones) with ""m"" prefix, but the .cc file doesn't use the prefix. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/May/12 02:13;michim;ZOOKEEPER-1471.patch;https://issues.apache.org/jira/secure/attachment/12528368/ZOOKEEPER-1471.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,242228,Reviewed,,,,Sat Jun 30 11:01:10 UTC 2012,,,,,,,,,,"0|i02jlb:",12775,,,,,,,,,,,,,,,,,,,,,"21/May/12 02:16;michim;I didn't include a test for this since the existing jute code doesn't have a test either. I generated C++ code with the modified version of jute and verified it fixed all the compilation errors. 

--Michi;;;","21/May/12 02:48;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12528368/ZOOKEEPER-1471.patch
  against trunk revision 1337029.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1083//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1083//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1083//console

This message is automatically generated.;;;","30/Jun/12 06:44;phunt;Thanks Michi!;;;","30/Jun/12 11:01;hudson;Integrated in ZooKeeper-trunk #1600 (See [https://builds.apache.org/job/ZooKeeper-trunk/1600/])
    ZOOKEEPER-1471. Jute generates invalid C++ code (Michi Mutsuzaki via phunt) (Revision 1355653)

     Result = SUCCESS
phunt : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1355653
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/jute/compiler/JRecord.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zkpython: close() should delete any watcher,ZOOKEEPER-1470,12556597,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,pagiannaros,pagiannaros,20/May/12 17:00,20/May/12 18:31,29/Jun/25 13:34,,3.4.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,contrib-bindings,,,,,0,memory_leak,python,"When calling zookeeper.close(handle), any connection watcher for the handle is not deleted. This is a source of memory leaks for applications that create and close lots of connections. Its damage can be mitigated to some degree by changing the watcher to some function that won't keep references to instances alive before calling close.

The fix is just to add a free_pywatcher(..) call in the close sequence. Alternatively you could allow set_watcher(handle, None) as a way of deleting the watcher, but it's probably best to take care of it on close too.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,242229,,,,,Sun May 20 18:31:43 UTC 2012,,,,,,,,,,"0|i02jlj:",12776,,,,,,,,,,,,,,,,,,,,,"20/May/12 18:31;pagiannaros;In fact, close() should decref all pending callbacks for the same reason. This will be harder to implement, so maybe it should go into a separate issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
C API improperly logs getaddrinfo failures on Linux when using glibc,ZOOKEEPER-1451,12551652,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,tyree731,tyree731,tyree731,19/Apr/12 18:04,25/Apr/12 20:29,29/Jun/25 13:34,25/Apr/12 20:29,3.4.3,,,,,,,,,,,,,,,,,,,,,,,,3.5.0,,,,,c client,,,,,0,,,"This is how the code currently logs getaddrinfo errors:

{quote}
                errno = getaddrinfo_errno(rc);
                LOG_ERROR((""getaddrinfo: %s\n"", strerror(errno)));
{quote}

On Linux, specifically when using glibc, there is a better function for logging getaddrinfo errors called gai_strerror. An example:

{quote}
                LOG_ERROR((""getaddrinfo: %s\n"", gai_strerror(rc)));
{quote}

It doesn't miss a lot of cases like the errno based version does.",Linux when using glibc,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Apr/12 18:11;tyree731;ZOOKEEPER-1451.patch;https://issues.apache.org/jira/secure/attachment/12523375/ZOOKEEPER-1451.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,236460,,,,,Wed Apr 25 11:00:45 UTC 2012,,,,,,,,,,"0|i05xnj:",32551,,,,,,,,,,,,,,,,,,,,,"19/Apr/12 18:58;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12523375/ZOOKEEPER-1451.patch
  against trunk revision 1326029.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1044//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1044//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1044//console

This message is automatically generated.;;;","24/Apr/12 13:27;tyree731;Is there anything else necessary here or are we good to go?;;;","24/Apr/12 20:40;michim;Sorry for the delay Stephen. The patch looks good. I'll check this in.

Thanks!
--Michi;;;","25/Apr/12 11:00;hudson;Integrated in ZooKeeper-trunk #1537 (See [https://builds.apache.org/job/ZooKeeper-trunk/1537/])
    ZOOKEEPER-1451. C API improperly logs getaddrinfo failures on Linux when using glibc (Stephen Tyree via michim) (Revision 1330043)

     Result = SUCCESS
michim : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1330043
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/c/src/zookeeper.c
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
C API makes it difficult to implement a timed wait_until_connected method correctly,ZOOKEEPER-1446,12550731,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,tyree731,tyree731,12/Apr/12 19:59,30/May/12 20:30,29/Jun/25 13:34,,3.3.5,3.4.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,c client,,,,,0,,,"When using the C API, one might feel inclined to create a zookeeper_wait_until_connected method which waits for some amount for a connected state event to occur. The code might look like the following (didn't actually compile this):

//------
static pthread_mutex_t kConnectedMutex = PTHREAD_MUTEX_INITIALIZER;
static pthread_cond_t kConnectedCondvar = PTHREAD_COND_INITIALIZER;

int zookeeper_wait_until_connected(zhandle_t* zk, const struct timespec* timeout)
{
  struct timespec abstime;
  clock_gettime(TIMER_ABSTIME, &abstime);
  abstime->tv_sec += timeout->tv_sec;
  abstime->tv_nsec += timeout->tv_nsec;

  pthread_mutex_lock(&kConnectedMutex);
  if (zoo_state(zk) == ZOO_CONNECTED_STATE) {
    return 1;
  }

  pthread_cond_timedwait(&kConnectedCondvar, &kConnectedMutex, &abstime);
  int state = zoo_state(zk);
  return (state == ZOO_CONNECTED_STATE);
}

void zookeeper_session_callback(zhandle_t* zh, int type, int state, const char* path, void* arg)
{
  pthread_mutex_lock(&kConnectedMutex);
  if (type == ZOO_SESSION_EVENT && state == ZOO_CONNECTED_STATE) {
    pthread_cond_broadcast(&kConnectedCondvar);
  }
}
//-----

That would work fine (assuming I didn't screw anything up), except that pthread_cond_timedwait can spuriously wakeup, making you not actually wait the desired timeout. The solution to this is to loop until the condition is met, which might look like the following:

//---
  int state = zoo_state(zk);
  int result = 0;
  while ((state == ZOO_CONNECTING_STATE || state == ZOO_ASSOCIATING_STATE) && result != ETIMEDOUT) {
    result = pthread_cond_timedwait(&kConnectedCondvar, &kConnectedMutex, &abstime);
    state = zoo_state(zk);
  }
//---

That would work fine, except the state might be valid and connecting, yet not ZOO_CONNECTING_STATE or ZOO_ASSOCIATING_STATE, it might be 0 or, as implemented recently courtesy of zookeeper-1108, 999. Checking for those states causes your code to rely upon an implementation detail of zookeeper, a problem highlighted by that implementation detail changing recently. Is there any way this behavior can become documented (via a ZOO_INITIALIZED_STATE or something like that), or is there any way this behavior can be supported by the library itself?
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/May/12 20:30;tyree731;ZOOKEEPER-1446.patch;https://issues.apache.org/jira/secure/attachment/12530265/ZOOKEEPER-1446.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,235595,,,,,Wed May 30 20:30:29 UTC 2012,,,,,,,,,,"0|i05xo7:",32554,,,,,,,,,,,,,,,,,,,,,"30/May/12 20:30;tyree731;An example patch. Was unable to run the unit test I wrote (because my setup is being a jerk), but I'm more looking for input on the design.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Uncaught exception handler should exit on a java.lang.Error,ZOOKEEPER-1442,12549541,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,strib,strib,strib,04/Apr/12 17:09,29/Jul/17 14:34,29/Jun/25 13:34,,3.3.5,3.4.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,java client,server,,,,0,,,"The uncaught exception handler registered in NIOServerCnxnFactory and ClientCnxn simply logs exceptions and lets the rest of ZooKeeper go on its merry way.  However, errors such as OutOfMemoryErrors should really crash the program, as they represent unrecoverable errors.  If the exception that gets to the uncaught exception handler is an instanceof a java.lang.Error, ZK should exit with an error code (in addition to logging the error).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Apr/12 23:38;strib;ZOOKEEPER-1442.patch;https://issues.apache.org/jira/secure/attachment/12524785/ZOOKEEPER-1442.patch","25/Apr/12 21:20;strib;ZOOKEEPER-1442.patch;https://issues.apache.org/jira/secure/attachment/12524351/ZOOKEEPER-1442.patch","11/Apr/12 18:30;strib;ZOOKEEPER-1442.patch;https://issues.apache.org/jira/secure/attachment/12522293/ZOOKEEPER-1442.patch",,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,234532,,,,,Sat Jul 29 14:34:31 UTC 2017,,,,,,,,,,"0|i05xov:",32557,,,,,,,,,,,,,,,,,,,,,"11/Apr/12 00:00;strib;I have a patch ready.  I can't figure out how to add a test that will verify that the system calls System.exit() correctly when an Error is thrown -- I don't think the test harness is set up for that.  Anyone have any pointers?;;;","11/Apr/12 00:02;strib;No test, but not sure one is needed.;;;","11/Apr/12 18:30;strib;Fixed patch base directory. Anyone care to code review?;;;","11/Apr/12 22:58;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12522293/ZOOKEEPER-1442.patch
  against trunk revision 1307644.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1031//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1031//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1031//console

This message is automatically generated.;;;","11/Apr/12 23:15;strib;Regarding the findbugs warnings: any exception thrown from the handler will be ignored, so throwing a RuntimeException isn't really an option.  See http://docs.oracle.com/javase/6/docs/api/java/lang/Thread.UncaughtExceptionHandler.html#uncaughtException%28java.lang.Thread,%20java.lang.Throwable%29 .
;;;","13/Apr/12 15:14;fournc;My biggest question mark is around exiting on ThreadDeath, and I'd like to get a bit of community feedback before committing. But if I can get some color around those concerns I'm ok with the patch.;;;","13/Apr/12 17:36;henryr;The current method of logging the error seems problematic - if the exception really is OOME then the string passed to LOG will perhaps fail to be allocated (since it can't be interned because of the concatenation). 

It doesn't seem correct to exit on ThreadDeath either, by a cursory reading of the documentation.

The advice on java.lang.error appears to be that we should not be trying to catch it at all. That said, I'm not against failing fast because I've seen java server processes go OOM and then just keep ticking along like a zombie, causing strange bugs when some operations appear to take effect and some don't. ;;;","13/Apr/12 17:45;strib;I'm happy to update the patch to avoid exiting if the error is an instance of ThreadDeath.  Seems reasonable to me.;;;","22/Apr/12 19:50;fournc;The overwhelming feedback on the ML was the desire for a flag to turn this on or off... I'm a bit torn but can we see a patch with that option? Also, do you really need this in the client side, or is it best to just remove the uncaught exception handler completely from that part of the code?;;;","23/Apr/12 23:33;strib;I don't have a need for it on the client side.  In general I think the user of either library should be able to override the default uncaught exception handler if they want to, but that could be future work.  I can drop the client side out of this patch.

However, I don't have any experience adding flags to ZK -- can someone point me at a good example I can follow?;;;","24/Apr/12 06:53;michim;Hi Jeremy,

* ZooKeeperServerMain creates a ServerConfig, which in turn creates QuorumPeerConfig that parses a config file. You can modify QuorumPeerConfig.parseProperties() to include the new flag.
* Then, initialize the flag in ServerConfig.readFrom().
* Coming back to ZooKeeperServerMain, runFromConfig() calls ServerCnxnFactory.configure(). You can probably add a new parameter here to pass the flag to ServerCnxnFactory. 
* You might need to move the Thread.setDefaultUncaughtExceptionHandler() call in NIOServerCnxnFactory since it doesn't have the flag until configure() is called. 
* Finally, include the flag in ZooKeeperServer.dumpConf() so that it gets printed with ""conf"" 4-letter word command. 

--Michi;;;","24/Apr/12 22:52;strib;Thanks Michi, I will give it a try.;;;","25/Apr/12 21:20;strib;Here's an attempt to make the default uncaught exception strategy parameterized.  I'd appreciate a review.

It changes the system behavior slightly by setting the handler only when an NIOServerCnxnFactory is constructed, instead of as static class code.  That means it will overwrite the handler for each new factory, if the strategy is not ""none"".

Feel free to hammer me on style.  I erred on the side of verbosity with variable names, but couldn't find anything stating the preferred line length so sometimes lines get a bit long.;;;","25/Apr/12 21:50;michim;+1. 

The patch looks good to me. I'd like to wait for +1 from another committer before checking this in.

{quote}
Feel free to hammer me on style. I erred on the side of verbosity with variable names, but couldn't find anything stating the preferred line length so sometimes lines get a bit long.
{quote}

Yeah I guess we don't enforce line length with tools like checkstyle. Not sure if we have an official coding style guide. 

Thanks!
--Michi;;;","25/Apr/12 22:34;phunt;This is a great idea and a very nice patch. Thanks! However I do have a few comments.

1) indeed the line length formatting needs to be fixed, 80 char max (some wiggle room but generally 80 is max)

2) the default should be log and exit for 3.5. not exiting is really a bug, and since it's configurable I think it's fine to be b/w compatible when it comes to the new release. (so you'd have two patches that are slightly different, that's ok). I would mark this jira as ""incompatible"" and add a release note to this jira for inclusion in the release notes of the effected releases

3) this is a bigger comment. You shouldn't be using constants to mark ""logonly"" ""logandexit"" etc.... Rather you should be configuring which class to handle the strategy.

a) Define an interface for this strategy
b) Implement three default classes to be available for use in the config file. (log/logexit/none)
c) document this (intf and concrete classes) in the guide

the nice thing about this approach is say that someone comes along and needs a fourth option. Say it's osgi specific, or ""page me"", etc... They can implement their own class and then just specify that strategy in the config file. It will be much more adaptable going forward.;;;","25/Apr/12 22:41;strib;Thanks for the reviews!

bq. 1) indeed the line length formatting needs to be fixed, 80 char max (some wiggle room but generally 80 is max)

Ok great, that's what I prefer too but I saw a lot of wiggling in other files and thought there might be a preference for long lines.  Will fix.

bq. 2) the default should be log and exit for 3.5. not exiting is really a bug, and since it's configurable I think it's fine to be b/w compatible when it comes to the new release. (so you'd have two patches that are slightly different, that's ok). I would mark this jira as ""incompatible"" and add a release note to this jira for inclusion in the release notes of the effected releases

I thought from the email discussion that the default behavior shouldn't change until the next major release (e.g., 4.0).   I was planning to create a reminder JIRA for 4.0 that we should change the default to ""log and exit"".  More than happy to change the default, but I just want to make sure everyone's on the same page with that.

{quote}
3) this is a bigger comment. You shouldn't be using constants to mark ""logonly"" ""logandexit"" etc.... Rather you should be configuring which class to handle the strategy.

a) Define an interface for this strategy
b) Implement three default classes to be available for use in the config file. (log/logexit/none)
c) document this (intf and concrete classes) in the guide

the nice thing about this approach is say that someone comes along and needs a fourth option. Say it's osgi specific, or ""page me"", etc... They can implement their own class and then just specify that strategy in the config file. It will be much more adaptable going forward.
{quote}

That sounds good.  I'll work on that when I get some time.;;;","26/Apr/12 06:53;rakeshr;Sorry to jump in late here. Its really a great patch and following are just some thoughts from mine,

1) It would be good moving the literals ""logOnly"", ""logAndExitOnError"", ""none"" to the enum DefaultUncaughtExceptionStrategyType and expose a method getType() or type(), so will avoid hardcoding in multiple places.

2) I agree, presently there is no exception handlers for NettyServer, but I feel would be great provide these strategies to this also. what others feel?;;;","26/Apr/12 17:35;phunt;bq. I thought from the email discussion that the default behavior shouldn't change until the next major release (e.g., 4.0).

I missed that discussion, sorry. As long as we maintain backward compatibility we can make such a change in a ""minor"" release. 3.4 to 3.5 say. And in this case we are maintaining the b/w compat - you can configure the server as you wish. Additionally there are other cases where the server will exit, and you have to handle that (see the supervisor section of the admin guide). So really we're not changing the general behavior of the server here.

@rakesh - there's no need to have the type if you go to a strategy class approach, really in that case you don't want to have such.;;;","26/Apr/12 23:38;strib;Here's another try addressing the review comments.  I also added code to the Netty factory to install the specified exception handler.  I'd appreciate another review.
;;;","27/Apr/12 02:38;rakeshr;It looks nice, I just have one small comment about reflection usage. I don't see any logic to use reflection until not supporting new user defined custom strategies, instead can we make it simple by putting the instance directly to the HashMap?
like,
{noformat}
        handlerMap.put(LogOnlyExceptionHandler.name().toLowerCase(),
                       new LogOnlyExceptionHandler());
{noformat}
;;;","27/Apr/12 04:51;strib;bq. It looks nice, I just have one small comment about reflection usage. I don't see any logic to use reflection until not supporting new user defined custom strategies, instead can we make it simple by putting the instance directly to the HashMap?

I was just trying to avoid the unnecessary object construction, though admittedly it probably doesn't save much work.  I could take out the reflection if others agree it's over the top.

If I took it out, I would probably make name() be a member of the interface, and then just iterate over an array of constructed instances to find the match.;;;","28/Jul/17 13:39;fournc;Oh 2012, how we missed you. Apparently this is still an issue! We should probably fix it. ;;;","29/Jul/17 14:34;maoling;This uncaught exception runs so fast that we spent five years to try to catch it;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Spurious log error messages when QuorumCnxManager is shutting down,ZOOKEEPER-1440,12549021,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,randgalt,randgalt,randgalt,01/Apr/12 20:28,12/Mar/14 23:32,29/Jun/25 13:34,12/Mar/14 21:45,3.4.3,,,,,,,,,,,,,,,,,,,,,,,,3.5.0,,,,,quorum,server,,,,0,,,"When shutting down the QuroumPeer, ZK server logs unnecessary errors. See QuorumCnxManager.Listener.run() - ss.accept() will throw an exception when it is closed. The catch (IOException e) will log errors. It should first check the shutdown field to see if the Listener is being shutdown. If it is, the exception is correct and no errors should be logged.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/May/12 17:29;randgalt;patch.txt;https://issues.apache.org/jira/secure/attachment/12527472/patch.txt","01/Apr/12 20:34;randgalt;patch.txt;https://issues.apache.org/jira/secure/attachment/12520848/patch.txt",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,234094,,,,,Wed Mar 12 23:32:22 UTC 2014,,,,,,,,,,"0|i05xpb:",32559,,,,,,,,,,,,,,,,,,,,,"01/Apr/12 20:34;randgalt;Potential patch. It doesn't see that I can catch an explicit exception so ignore all IOExceptions when shutting down.;;;","02/Apr/12 09:29;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12520848/patch.txt
  against trunk revision 1307644.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1027//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1027//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1027//console

This message is automatically generated.;;;","06/May/12 05:08;michim;+1. I'll commit this in a few days unless somebody has an objection. Thank you for the patch, Jordan!

--Michi;;;","08/May/12 11:00;hudson;Integrated in ZooKeeper-trunk #1550 (See [https://builds.apache.org/job/ZooKeeper-trunk/1550/])
    ZOOKEEPER-1440. Spurious log error messages when QuorumCnxManager is shutting down (Jordan Zimmerman via michim) (Revision 1335338)

     Result = SUCCESS
michim : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1335338
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
;;;","15/May/12 17:16;phunt;I think we need to revert this commit. The patch as committed introduces a socket leak - there is a race condition where 1) the run method could be processing a socket operation that throws an ioexception, and 2) the shutdown flag being set. As a result we might not close the socket.
;;;","15/May/12 17:22;randgalt;I see it - I'll work on a new patch;;;","15/May/12 17:29;randgalt;Previous patch introduced socket leaks. This patch should be better.;;;","15/May/12 17:30;randgalt;Focus this change solely on the spurious error messages.;;;","15/May/12 18:00;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12527472/patch.txt
  against trunk revision 1337029.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1072//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1072//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1072//console

This message is automatically generated.;;;","16/May/12 06:49;michim;Ah sorry I should've caught that. Jordan's new patch looks good to me. Pat, I'll wait for your +1 before checking in this time :)

--Michi;;;","12/Mar/14 21:06;michim;Rerunning the precommit build. I'd like to get this checked in.;;;","12/Mar/14 21:39;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12527472/patch.txt
  against trunk revision 1576174.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1952//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1952//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1952//console

This message is automatically generated.;;;","12/Mar/14 21:45;michim;http://svn.apache.org/viewvc?view=revision&revision=1576936;;;","12/Mar/14 23:32;hudson;FAILURE: Integrated in ZooKeeper-trunk #2246 (See [https://builds.apache.org/job/ZooKeeper-trunk/2246/])
ZOOKEEPER-1440. Spurious log error messages when QuorumCnxManager is shutting down (Jordan Zimmerman via michim) (michim: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1576936)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMX MBeans for client connections can be orphaned,ZOOKEEPER-1438,12548781,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,tlipcon,tlipcon,30/Mar/12 04:49,30/Mar/12 04:49,29/Jun/25 13:34,,3.4.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,jmx,,,,,0,,,"I have a functional test that extends from ClientBase, which I'm using to stress test a piece of software that uses ZK underneath. In this test, I want to simulate disconnection events, so I fire up a thread which calls ""serverFactory.closeAll()"" every 50ms. The clients themselves churn through a lot of sessions as part of the test. When the test completes, the ClientBase teardown method fails, since it sees one or two MBeans ""left over"" from earlier elapsed sessions.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,233878,,,,,2012-03-30 04:49:08.0,,,,,,,,,,"0|i05xpr:",32561,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Just a bug in the tutorial code on the website,ZOOKEEPER-1418,12546661,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,zookeeperatcabot,zookeeperatcabot,zookeeperatcabot,15/Mar/12 21:11,22/Mar/12 14:49,29/Jun/25 13:34,,3.4.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,documentation,,,,,0,,,"When I ran the Queue example from here: http://zookeeper.apache.org/doc/trunk/zookeeperTutorial.html
The producer created entries of the form:  /app1/element0000000001...
but the consumer tried to consume of the form:  /app1/element1...

adding a patch with the file attached.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Mar/12 20:41;zookeeperatcabot;SyncPrimitive.java;https://issues.apache.org/jira/secure/attachment/12518940/SyncPrimitive.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,231819,,,,,Thu Mar 22 14:49:10 UTC 2012,,,,,,,,,,"0|i05xqv:",32566,,,,,,,,,,,,,,,,,,,,,"15/Mar/12 21:15;phunt;Hi Joe, please see the following: (you just attach a patch file to this jira, ""attach files"" under ""more actions"")
https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute;;;","19/Mar/12 20:40;zookeeperatcabot;Attaching updated file with corrected code for web page;;;","19/Mar/12 20:41;zookeeperatcabot;Updated file _should_ be attached.;;;","19/Mar/12 21:00;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12518940/SyncPrimitive.java
  against trunk revision 1302281.

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1001//console

This message is automatically generated.;;;","21/Mar/12 20:30;zookeeperatcabot;Hi - sorry to assign this back to you.  I added the updated file as a patch.  However, the system wasn't all that pleased :).   I'm not 100% sure this code even exists in the code base anywhere, so there isn't something to ""patch"" in a traditional sense.  Rather, the website itself that contains this code needs to be updated....;;;","22/Mar/12 04:30;phunt;Hey Joe. No worries. I think what you intend is to update this file:

src/docs/src/documentation/content/xdocs/zookeeperTutorial.xml

The easiest way to do this is 
1) svn co http://svn.apache.org/repos/asf/zookeeper/trunk
2) edit the tutorial
3) svn diff > ZOOKEEPER-1418.patch
(from within the trunk directory)
4) attach that file here

can you give that a try? If you run into trouble just lmk. Appreciate you sticking with it. Regards.;;;","22/Mar/12 14:49;zookeeperatcabot;First attempt was bad/incorrect.  I'll submit a new (hopefully better/correct) one.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zkCli.sh script quoting issue,ZOOKEEPER-1403,12544916,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,javacruft,javacruft,javacruft,02/Mar/12 11:12,18/Mar/12 11:00,29/Jun/25 13:34,18/Mar/12 07:04,3.3.4,3.4.3,,,,,,,,,,,,,,,,,,,,,,,3.3.6,3.4.4,3.5.0,,,scripts,,,,,0,,,"The zkCli.sh script included with zookeeper doesn't quote its parameters
correctly when passing them on to the java program. 

This causes issues with arguments with spaces and such.
",Ubuntu/Debian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Mar/12 11:20;javacruft;ZOOKEEPER-1403.patch;https://issues.apache.org/jira/secure/attachment/12516817/ZOOKEEPER-1403.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,230102,Reviewed,,,,Sun Mar 18 11:00:39 UTC 2012,,,,,,,,,,"0|i05xs7:",32572,,,,,,,,,,,,,,,,,,,,,"02/Mar/12 11:58;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12516817/ZOOKEEPER-1403.patch
  against trunk revision 1296035.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/971//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/971//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/971//console

This message is automatically generated.;;;","06/Mar/12 09:52;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12516817/ZOOKEEPER-1403.patch
  against trunk revision 1297377.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/979//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/979//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/979//console

This message is automatically generated.;;;","18/Mar/12 07:04;phunt;Thanks James!;;;","18/Mar/12 11:00;hudson;Integrated in ZooKeeper-trunk #1498 (See [https://builds.apache.org/job/ZooKeeper-trunk/1498/])
    ZOOKEEPER-1403. zkCli.sh script quoting issue (James Page via phunt) (Revision 1302073)

     Result = SUCCESS
phunt : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1302073
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/bin/zkCli.sh
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Binary Jar in zookeeper-3.3.4 displays wrong version when run,ZOOKEEPER-1399,12543790,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,novas0x2a,novas0x2a,23/Feb/12 02:16,23/Feb/12 02:16,29/Jun/25 13:34,,3.3.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,build,server,,,,0,,,"When you start up zookeeper using the jar in zookeeper-3.3.4.tar.gz, it prints a 3.3.3 version string:

server.ZooKeeperServer  - Server environment:zookeeper.version=3.3.3-1203054, built on 11/17/2011 05:47 GMT
server.ZooKeeperServer  - Server environment:java.class.path=/usr/lib/zookeeper/apache-rat-tasks-0.6.jar:/usr/lib/zookeeper/commons-lang-2.4.jar:/usr/lib/zookeeper/commons-cli-1.1.jar:/usr/lib/zookeeper/log4j-1.2.15.jar:/usr/lib/zookeeper/commons-collections-3.2.jar:/usr/lib/zookeeper/apache-rat-core-0.6.jar:/usr/lib/zookeeper/jline-0.9.94.jar:/usr/lib/zookeeper/zookeeper-3.3.4.jar:/etc/zookeeper

I assume this is due to a build problem of some form. (Rebuilding the jar from the tarball fixes the version).
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,229029,,,,,2012-02-23 02:16:32.0,,,,,,,,,,"0|i05xsf:",32573,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassNotFoundException on shutdown of client,ZOOKEEPER-1394,12543484,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Not A Problem,wuwen,meerlol,meerlol,21/Feb/12 13:26,17/Feb/17 13:44,29/Jun/25 13:34,31/Oct/16 02:22,3.4.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,java client,,,,,1,,,"When close() is called on the ZooKeeper instance from a ContextListener (contextDestroyed) there is no way to synchronize with the fact that the EventThread and SendThread have actually finished their work. The problem lies in the SendThread which makes a call to ZooTrace when it exits, but that class has not been loaded yet. Because the ContextListener could not synchronize with the death of the threads the classloader has already disappeared, resulting in a ClassNotFoundException.
My personal opinion is that the close() method should probably wait until the event and send thread have actually died.","OS X 10.7 java version ""1.6.0_29""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-2618,,,ZOOKEEPER-2697,,ZOOKEEPER-1816,,,,,,,"26/Oct/16 14:18;wuwen;ZOOKEEPER-1394.patch;https://issues.apache.org/jira/secure/attachment/12835341/ZOOKEEPER-1394.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,228730,,,,,Mon Oct 31 12:36:14 UTC 2016,,,,,,,,,,"0|i05xt3:",32576,,,,,,,,,,,,,,,,,,,,,"18/Jun/13 15:01;cmorelli;Can this call to ZooTrace be replaced with another logging call (since basically all other logging to ZooTrace has been removed anyway)? This is sort of an annoying thing to see in the logs during every shutdown of an application. In fact, a temporary ""fix"" has been put in place to make a call to ZooTrace before calling close() so that the class is actually loaded in memory. This works, but it's ugly.;;;","26/Oct/16 12:42;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12835316/ZOOKEEPER-1394.patch
  against trunk revision f6349d16fcd5f04b560095417fd2a1813ac3e855.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3502//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3502//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3502//console

This message is automatically generated.;;;","26/Oct/16 14:23;fpj;The patch is trivial and it simply replaces the call to {{ZooTrace}} with {{LOG.debug}}, but I'm not convinced that this is the right way to fix this issue. In fact, I'm not even sure I fully understand the issue. Is there a way to reliably reproduce it?

I'm also thinking that {{ZooTrace}} is a bit abandoned, so we might want to make some fixes there.;;;","26/Oct/16 14:23;fpj;Canceling patch until we converge.;;;","27/Oct/16 02:03;wuwen;Look here http://zookeeper-user.578899.n2.nabble.com/java-lang-NoClassDefFoundError-org-apache-zookeeper-server-ZooTrace-td7578739.html

when using Zookeeper client API in tomcat and shut down tomcat.
;;;","27/Oct/16 02:19;wuwen;also in  jboss

jBPMClusteredScheduler_$_brmsperf02.mw.lab.eng.bos.redhat.com1425567199094 shutdown complete.
09:58:29,651 INFO  [org.jbpm.executor.impl.ExecutorImpl] (MSC service thread 1-6)  >>>>> Destroying Executor !!!
09:58:29,733 ERROR [org.apache.zookeeper.ClientCnxn] (MSC service thread 1-6-SendThread(brmsperf03:2181)) from MSC service thread 1-6-SendThread(brmsperf03:2181): java.lang.NoClassDefFoundError: org/apache/zookeeper/server/ZooTrace
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1223) [zookeeper-3.3.4.jar:3.3.3-1203054]
Caused by: java.lang.ClassNotFoundException: org.apache.zookeeper.server.ZooTrace from [Module ""deployment.business-central.war:main"" from Service Module Loader]
	at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:213) [jboss-modules.jar:1.3.6.Final-redhat-1]
	at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:459) [jboss-modules.jar:1.3.6.Final-redhat-1]
	at org.jboss.modules.ConcurrentClassLoader.performLoadClassChecked(ConcurrentClassLoader.java:408) [jboss-modules.jar:1.3.6.Final-redhat-1]
	at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:389) [jboss-modules.jar:1.3.6.Final-redhat-1]
	at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:134) [jboss-modules.jar:1.3.6.Final-redhat-1]
	... 1 more
;;;","27/Oct/16 12:20;fpj;Let me elaborate. I understand that folks are getting it with Tomcat and JBoss, but why would the class not be found? Is it because it is not loading the server package? Would it make any difference if {{ZooTrace}} were in a different package?

It is not a big deal to remove that {{ZooTrace}} call because it is really the only call to {{ZooTrace}} in the client currently, but I'd rather understand why it happens and fix the problem rather than remove the call if possible. Do you understand why this happens, [~wuwen]n? I read the explanation in the description, but I don't understand why the class isn't being loaded. Granted that I don't understand Tomcat and JBoss well enough to determine whether it is problem with those frameworks.;;;","27/Oct/16 12:27;eolivelli;I get regularly into this error. 
IMHO the problem is that the container closes  the Classloader and so no class can be loaded anymore.
Another fix is to make the client eagerly load the ZooTrace class by using it at boot or in other convenient place.
A workaround can be to use the ZooTrace class in the WebApplication and so force the classloader to load it;;;","27/Oct/16 13:55;wuwen;i think this is a class loading time problem,If ZooTrace.xxx()  has been used already before the application stopped, it can be loaded normally.

{code:java}
class SendThread extends Thread {
        //..igonre       
        @Override
        public void run() {
          //..igonre

            //*********for example， If ZooTrace is called here, the problem does not occur.*******
            ZooTrace.logTraceMessage(LOG, ZooTrace.getTextTraceLevel(),
                                     ""SendThread starting loop."");

            while (state.isAlive()) {
                //..igonre
                //there is loop

            }

            //...executing

            /***At this time, may be this web application instance has been stopped already.**/
        
   /**java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not         load [org.apache.zookeeper.server.ZooTrace]**/
            //The container seems to think this is an illegal load
            ZooTrace.logTraceMessage(LOG, ZooTrace.getTextTraceLevel(),
                                     ""SendThread exitedloop."");
        }

        void close() {
            state = States.CLOSED;
            clientCnxnSocket.wakeupCnxn();
        }
       
    }
{code};;;","29/Oct/16 08:34;wuwen;Hi [~fpj], I start to agree that this is not a problem, the problem is that the application does not have a graceful shutdown.
i think zookeeper client should be closed before application shutdown, rather than rely on shutdownhook.
Does this issue need to be closed?;;;","29/Oct/16 09:28;fpj;Hi [~wuwen], If we agree that it isn't an issue, then we do resolve this jira with ""Not a problem"". But, [~eolivelli] seems to be observing this problem as well, so I wonder if he agrees that shutting down zk before the application in his setting solves the problem. It sounds right to me, though.;;;","31/Oct/16 02:19;wuwen;Hi [~eolivelli] there are two solutions
1. shutting down zk client before the application.
2. to make the client eagerly load the ZooTrace class by using it at boot or in other convenient place.

I think the problem is that the application does not have a graceful shutdown.;;;","31/Oct/16 02:22;wuwen;shutting down zk client before the application.;;;","31/Oct/16 10:16;meerlol;Ok, my 2 cents as the original filer of the issue (even though it was almost 5 years ago and I'm no longer working with ZooKeeper at the moment). The problem happened when trying to shut down zookeeper gracefully when the application is shut down. As the report mentions zookeeper was being stopped in the contextdestroyed (the only hook there is in an application container). So nothing was done wrong in my opinion.;;;","31/Oct/16 12:19;eolivelli;In my case I use ZooKeeper.close() in contextDestroyed() method of my ServletContextListener

I think that call does not wait for all the support threads to finish

maybe it is the same of ZOOKEEPER-1916
;;;","31/Oct/16 12:36;wuwen;You can try to use the {{@PreDestroy}}  annotation to close the zkclient.

for example
{code:java}
@PreDestroy
public void destroy() {
       ZooKeeper.close();
}
{code}
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZooKeeper client exists() javadoc incorrectly states watcher(s) will be triggered on node deletion,ZOOKEEPER-1393,12542733,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Invalid,,maddogg14524,maddogg14524,15/Feb/12 19:11,25/Feb/12 18:41,29/Jun/25 13:34,25/Feb/12 18:41,3.3.4,3.4.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,java client,,,,,0,,,"I found it very misleading that the javadoc for the exists() calls that take a boolean or a Watcher state that 'The watch will be triggered by a successful operation that creates/delete the node or sets the data on the node.'

What I've seen from descriptions of bugs (older but this is this references it http://zookeeper-user.578899.n2.nabble.com/Exists-Watch-Triggered-by-Delete-td1490893.html) and my own personal usage is that watchers set on exists() are triggered when a non-existing node is now created or an existing node is changed.  They are NOT triggered when the node already exists and is deleted.

http://zookeeper.apache.org/doc/r3.4.3/api/index.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1200,1200,,0%,1200,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,228019,,,,,Sat Feb 25 18:41:42 UTC 2012,,,,,,,,,,"0|i05xtb:",32577,,,,,,,,,,,,,,,,,,,,,"25/Feb/12 18:41;maddogg14524;It turned out to be an issue related to the client wrapper I was using.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong epoch file created,ZOOKEEPER-1387,12541374,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,breed,busjaeger,busjaeger,06/Feb/12 05:57,13/Mar/14 18:16,29/Jun/25 13:34,13/Dec/12 08:00,3.4.2,,,,,,,,,,,,,,,,,,,,,,,,3.4.6,3.5.0,,,,quorum,,,,,0,,,"It looks like line 443 in QuorumPeer [1] may need to change from:

writeLongToFile(CURRENT_EPOCH_FILENAME, acceptedEpoch);

to

writeLongToFile(ACCEPTED_EPOCH_FILENAME, acceptedEpoch);

I only noticed this reading the code, so I may be wrong and I don't know yet if/how this affects the runtime.

[1] https://github.com/apache/zookeeper/blob/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java#L443",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Feb/12 23:22;breed;ZOOKEEPER-1387.patch;https://issues.apache.org/jira/secure/attachment/12513712/ZOOKEEPER-1387.patch","13/Dec/12 08:00;phunt;ZOOKEEPER-1387_br34.patch;https://issues.apache.org/jira/secure/attachment/12560731/ZOOKEEPER-1387_br34.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,226662,Reviewed,,,,Thu Mar 13 18:16:59 UTC 2014,,,,,,,,,,"0|i00rfj:",2376,,,,,,,,,,,,,,,,,,,,,"07/Feb/12 22:33;breed;yes you are correct. i don't think it really affects the runtime since we are really just setting it to something reasonably arbitrary anyway, when the leadership/follower logic runs, it will be written correctly. let me see if i can make a testcase for it.;;;","07/Feb/12 23:22;breed;then makes the change proposed by benjamin and includes a test;;;","07/Feb/12 23:25;breed;then -> this;;;","07/Feb/12 23:56;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12513712/ZOOKEEPER-1387.patch
  against trunk revision 1240959.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/953//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/953//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/953//console

This message is automatically generated.;;;","19/Mar/12 06:36;phunt;Ben (Reed) the new test is currently failing against trunk. Can you take a look and update?;;;","07/Sep/12 04:44;mahadev;Moving it out since its not a blocker.;;;","13/Dec/12 08:00;phunt;updated patch for br34 to compile/pass testing.;;;","13/Dec/12 08:00;phunt;Committed to 3.4.6 and trunk. Thanks Benjamin!;;;","13/Dec/12 11:05;hudson;Integrated in ZooKeeper-trunk #1771 (See [https://builds.apache.org/job/ZooKeeper-trunk/1771/])
    ZOOKEEPER-1387. Wrong epoch file created (Benjamin Busjaeger via breed, phunt) (Revision 1421098)

     Result = SUCCESS
phunt : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1421098
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java
;;;","13/Mar/14 18:16;fpj;Closing issues after releasing 3.4.6.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
test-cppunit overrides LD_LIBRARY_PATH and fails if gcc is in non-standard location,ZOOKEEPER-1384,12540662,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,shrauner,shrauner,shrauner,01/Feb/12 00:51,19/Mar/12 11:00,29/Jun/25 13:34,19/Mar/12 06:17,3.4.2,,,,,,,,,,,,,,,,,,,,,,,,3.4.4,3.5.0,,,,build,tests,,,,0,,,"On Linux with gcc installed in /usr/local and the libs in /usr/local/lib64, test-core-cppunit fails because zktest-st is unable to find the right libstdc++.

build.xml is overriding the environment LD_LIBRARY_PATH instead of appending to it. This should be changed to match the treatment of PATH by appending the desired extra path.",Linux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Feb/12 00:52;shrauner;ZOOKEEPER-1384.patch;https://issues.apache.org/jira/secure/attachment/12512703/ZOOKEEPER-1384.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,226057,Reviewed,,,,Mon Mar 19 11:00:02 UTC 2012,,,,,,,,,,"0|i05xuf:",32582,,,,,,,,,,,,,,,,,,,,,"01/Feb/12 00:53;shrauner;Please review this change.;;;","01/Feb/12 01:08;phunt;Hi Jay, the best way to let us know when you want something reviewed is to click ""submit patch"", that will start the next phase of the workflow.
See also: https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute;;;","01/Feb/12 02:44;shrauner;Thanks--I was confused and thought I used ""submit patch"" after people had approved it.;;;","01/Feb/12 03:16;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12512703/ZOOKEEPER-1384.patch
  against trunk revision 1238176.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/934//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/934//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/934//console

This message is automatically generated.;;;","01/Feb/12 18:05;shrauner;This is a change solely to build.xml, so a test isn't appropriate.

I ran ant test using two dev setups, one in which the path pointed to a gcc in /usr/bin and with no LD_LIBRARY_PATH set, and the other using a path pointing to a gcc in /usr/local/bin with LD_LIBRARY_PATH set to /usr/local/lib64:/usr/local/lib. Both compiled and ran the tests fine.;;;","19/Mar/12 06:17;phunt;Thanks Jay!;;;","19/Mar/12 11:00;hudson;Integrated in ZooKeeper-trunk #1500 (See [https://builds.apache.org/job/ZooKeeper-trunk/1500/])
    ZOOKEEPER-1384. test-cppunit overrides LD_LIBRARY_PATH and fails if gcc is in non-standard location (Jay Shrauner via phunt) (Revision 1302281)

     Result = SUCCESS
phunt : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1302281
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/build.xml
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"'printwatches, redo, history and connect '. client commands always print usage. This is not necessary",ZOOKEEPER-1379,12540327,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,eribeiro,kavita sharma,kavita sharma,30/Jan/12 08:43,13/Mar/14 18:17,29/Jun/25 13:34,02/Sep/13 21:05,3.4.0,,,,,,,,,,,,,,,,,,,,,,,,3.4.6,3.5.0,,,,java client,,,,,0,,,"while executing the commands:
'printwatches, redo, history and connect usage is getting print 
.basically we are printing usage if user has entered the command 
wrong but in these commands case every time usage is getting print.
eg
{noformat}
[zk: localhost:2181(CONNECTED) 0] printwatches
printwatches is on
ZooKeeper -server host:port cmd args
	connect host:port
	get path [watch]
	ls path [watch]
	set path data [version]
	delquota [-n|-b] path
	quit 
	printwatches on|off
	create [-s] [-e] path data acl
	stat path [watch]
	close 
	ls2 path [watch]
	history 
	listquota path
	setAcl path acl
	getAcl path
	sync path
	redo cmdno
	addauth scheme auth
	delete path [version]
	setquota -n|-b val path
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jan/13 22:02;eribeiro;ZOOKEEPER-1379.2.patch;https://issues.apache.org/jira/secure/attachment/12565863/ZOOKEEPER-1379.2.patch","05/Feb/13 21:37;eribeiro;ZOOKEEPER-1379.3.patch;https://issues.apache.org/jira/secure/attachment/12568089/ZOOKEEPER-1379.3.patch","31/Aug/13 20:47;eribeiro;ZOOKEEPER-1379.4.patch;https://issues.apache.org/jira/secure/attachment/12600958/ZOOKEEPER-1379.4.patch","31/Aug/13 04:43;eribeiro;ZOOKEEPER-1379.branch-3.4.patch;https://issues.apache.org/jira/secure/attachment/12600923/ZOOKEEPER-1379.branch-3.4.patch","26/Dec/12 19:33;eribeiro;ZOOKEEPER-1379.patch;https://issues.apache.org/jira/secure/attachment/12562395/ZOOKEEPER-1379.patch",,,,,,5.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,225740,,,,,Thu Mar 13 18:17:01 UTC 2014,,,,,,,,,,"0|i07juv:",41984,,,,,,,,,,,,,,,,,,,,,"26/Dec/12 19:33;eribeiro;I am submitting a simple patch to solve this annoying issue. And by the way, the indentation in the whole ZookeeperMain.java  should be fixed, but I opted for not doing this in this patch to keep it simple and to a minimum. I hope this helps.;;;","21/Jan/13 22:02;eribeiro;Attaching a new version of this patch (with a simple test).;;;","21/Jan/13 22:04;eribeiro;Submitting patch.;;;","21/Jan/13 22:40;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12565863/ZOOKEEPER-1379.2.patch
  against trunk revision 1434978.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1351//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1351//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1351//console

This message is automatically generated.;;;","25/Jan/13 18:44;eribeiro;[~phunt] Hi Patrick, would you like to take a look at this patch whenever possible? :)

Best regards,
Edeward;;;","03/Feb/13 06:53;phunt;Hi Edward, the patch looks good except that we don't use wildcards in import statements

e.g.

bq. +import java.util.*;

If you fix that I should be able to commit.

Thanks!

ps. I'm not sure what's up with the formatting, might have had tabs in there at some point and someone converted them to spaces w/o adjusting the indent. (my best guess);;;","05/Feb/13 21:37;eribeiro;Hi Patrick,

Thanks for the feedback and for updating me about not using wildcard imports. I've removed them from the patch. What about including this piece of info in the wiki ( http://wiki.apache.org/hadoop/ZooKeeper/HowToContribute )? It will certainly give a heads up to newbies like me. ;) 

Now I think the patch is ready to commit. :);;;","14/Mar/13 13:28;eribeiro;Hi folks, any interest on commiting this patch? :);;;","14/Aug/13 07:21;fpj;[~eribeiro], You forgot to resubmit the patch. I have just done it and if it stale, I'd like to ask you to upload a new one.;;;","14/Aug/13 07:53;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12568089/ZOOKEEPER-1379.3.patch
  against trunk revision 1503101.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1539//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1539//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1539//console

This message is automatically generated.;;;","14/Aug/13 08:46;fpj;+1, looks good. [~phunt], is this ready to go for you?;;;","15/Aug/13 14:12;eribeiro;I am obviously biased, but i don't see any problem with this patch, it would be nice to have it merged into trunk. ;;;","30/Aug/13 18:47;phunt;This is marked for 3.4 however the patch fails to apply on branch-3.4 (applies cleanly to trunk though). I looked at fixing it but it looks like the code has changed significantly (although the same problem exists afaict). 

Please submit an additional patch specific to branch-3.4;;;","31/Aug/13 04:43;eribeiro;I have attached a patch to the 3.4 branch, in addition to one that targets the trunk.

PS: If you like, I can clean up the trunk patch a little bit, I guess.

Cheers,
Edward;;;","31/Aug/13 18:09;fpj;Please cleanup and submit the patch, Edward. Don't forget to click on ""submit patch"" above.;;;","31/Aug/13 20:47;eribeiro;Hi Flávio,

I've cleaned up the trunk patch (ZOOKEEPER-1379.4.patch). I have shrink its size from 5.3 KB to 2.3 KB by getting rid of unnecessary changes in the file (mainly involving imports).

Now it's with about the same patch that should be applied to 4.6 branch (ZOOKEEPER-1379.branch-3.4.patch. 

If you or Patrick have any further demand, feel free to say. 

Best regards,
Edward;;;","31/Aug/13 20:49;eribeiro;This issue have a patch for both the trunk (ZOOKEEPER-1379.4.patch) and a patch for 3.4 (ZOOKEEPER-1379.branch-3.4.patch). I didn't know what was the naming convention to a secondary patch that applies to a different branch, so excuse me if I named it wrongly.

Best,
Edward;;;","31/Aug/13 21:22;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12600958/ZOOKEEPER-1379.4.patch
  against trunk revision 1516126.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1550//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1550//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1550//console

This message is automatically generated.;;;","02/Sep/13 21:05;fpj;+1, thanks, Edward. Trunk: Committed revision 1519515.;;;","02/Sep/13 21:48;fpj;Branch 3.4: Committed revision 1519521.;;;","03/Sep/13 11:06;hudson;SUCCESS: Integrated in ZooKeeper-trunk #2043 (See [https://builds.apache.org/job/ZooKeeper-trunk/2043/])
ZOOKEEPER-1379. 'printwatches, redo, history and connect '. client commands always print usage. This is not necessary (edward via fpj) (fpj: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1519515)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/ZooKeeperMain.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/ZooKeeperTest.java
;;;","13/Mar/14 18:17;fpj;Closing issues after releasing 3.4.6.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zkServer.sh does not correctly check for $SERVER_JVMFLAGS,ZOOKEEPER-1376,12539987,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,skye,phunt,phunt,27/Jan/12 01:39,09/Oct/23 11:21,29/Jun/25 13:34,21/Sep/12 23:05,3.3.3,3.3.4,,,,,,,,,,,,,,,,,,,,,,,3.4.5,,,,,scripts,,,,,0,newbie,,"It will always include it even if not defined, although not much harm.

if [ ""x$SERVER_JVMFLAGS"" ]
then
JVMFLAGS=""$SERVER_JVMFLAGS $JVMFLAGS""
fi

should use the std idiom.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-1012,"21/Sep/12 22:41;skye;ZOOKEEPER-1376.patch;https://issues.apache.org/jira/secure/attachment/12546108/ZOOKEEPER-1376.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,225490,Reviewed,,,,Fri Sep 21 23:05:36 UTC 2012,,,,,,,,,,"0|i05xv3:",32585,,,,,,,,,,,,,,,,,,,,,"21/Sep/12 22:41;skye;This is already fixed in trunk but as part of a new feature (see ZOOKEEPER-1161).

Here's a patch that can be applied directly to 3.3.3 and 3.3.4.;;;","21/Sep/12 22:52;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12546108/ZOOKEEPER-1376.patch
  against trunk revision 1386496.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1185//console

This message is automatically generated.;;;","21/Sep/12 22:53;henryr;+1, patch looks good to me. I'll commit shortly to 3.3 and 3.4.;;;","21/Sep/12 23:05;henryr;I just committed this to 3.3 and 3.4. Thanks Skye!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
C client multi-threaded test suite fails to compile on ARM architectures.,ZOOKEEPER-1374,12539622,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,javacruft,javacruft,javacruft,24/Jan/12 15:22,28/Jun/16 08:37,29/Jun/25 13:34,06/Feb/12 09:54,3.3.4,,,,,,,,,,,,,,,,,,,,,,,,3.4.3,3.5.0,,,,c client,,,,,0,,,"The multi-threaded test suite fails to build on ARM architectures:

g++ -DHAVE_CONFIG_H -I. -I./include -I./tests -I./generated -D_FORTIFY_SOURCE=2 -DUSE_STATIC_LIB -DTHREADED -DZKSERVER_CMD=""\""./tests/zkServer.sh\"""" -Wall -g -MT zktest_mt-ThreadingUtil.o -MD -MP -MF .deps/zktest_mt-ThreadingUtil.Tpo -c -o zktest_mt-ThreadingUtil.o `test -f 'tests/ThreadingUtil.cc' || echo './'`tests/ThreadingUtil.cc
/tmp/ccqJWQRC.s: Assembler messages:
/tmp/ccqJWQRC.s:373: Error: bad instruction `lock xaddl r4,[r3,#0]'
/tmp/ccqJWQRC.s:425: Error: bad instruction `lock xchgl r4,[r3,#0]'

gcc does provide alternative primitives (_sync_*) which provide better cross platform compatibility; but that does make the assumption that a) gcc is being used or b) the primitives are provided by alternative compilers.

Tracked in Ubuntu here: https://bugs.launchpad.net/ubuntu/+source/zookeeper/+bug/920871",Ubuntu 12.04 (precise) armel or armhf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-2453,,,,,,,"27/Jan/12 19:40;phunt;ZOOKEEPER-1374.patch;https://issues.apache.org/jira/secure/attachment/12512216/ZOOKEEPER-1374.patch","24/Jan/12 15:55;javacruft;ZOOKEEPER-1374.patch;https://issues.apache.org/jira/secure/attachment/12511680/ZOOKEEPER-1374.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,225124,Reviewed,,,,Mon Feb 06 10:58:03 UTC 2012,,,,,,,,,,"0|i05xvj:",32587,,,,,,,,,,,,,,,,,,,,,"24/Jan/12 15:55;javacruft;Trunk patch to use _sync primitives rather than ASM;;;","24/Jan/12 16:26;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12511680/ZOOKEEPER-1374.patch
  against trunk revision 1234974.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/916//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/916//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/916//console

This message is automatically generated.;;;","27/Jan/12 19:40;phunt;James the patch looks fine, however I'd like to maintain the old behavior if not compiling under GCC. Updated the patch as such, please take a look.;;;","27/Jan/12 20:16;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12512216/ZOOKEEPER-1374.patch
  against trunk revision 1234974.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/926//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/926//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/926//console

This message is automatically generated.;;;","27/Jan/12 22:26;javacruft;Patrick - that sounds entirely reasonable and the updated patch looks good; would you like me to test on arm* architectures before committing?;;;","27/Jan/12 22:41;phunt;Yes, please do and lmk when you have it green. I'll commit it once I hear back from you.;;;","30/Jan/12 14:46;javacruft;Revised patch builds fine on the following non-x86 architectures: armel, armhf and powerpc.

See https://launchpad.net/ubuntu/+source/zookeeper/3.3.4+dfsg1-2ubuntu4 for details.

Also builds just fine on x86 as well!;;;","06/Feb/12 08:38;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12512216/ZOOKEEPER-1374.patch
  against trunk revision 1240905.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/948//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/948//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/948//console

This message is automatically generated.;;;","06/Feb/12 09:54;mahadev;I just committed this to both trunk and 3.4. Thanks James!;;;","06/Feb/12 10:58;hudson;Integrated in ZooKeeper-trunk #1451 (See [https://builds.apache.org/job/ZooKeeper-trunk/1451/])
    ZOOKEEPER-1374. C client multi-threaded test suite fails to compile on ARM architectures. (James Page via mahadev)

mahadev : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1240952
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/c/tests/ThreadingUtil.cc
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Zab1_0Test uses hard-wired port numbers. Specifically, it uses the same port for leader in two different tests. The second test periodically fails complaining that the port is still in use.",ZOOKEEPER-1357,12537831,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,shralex,shralex,shralex,09/Jan/12 23:04,14/Apr/14 22:31,29/Jun/25 13:34,14/Apr/14 21:53,3.5.0,,,,,,,,,,,,,,,,,,,,,,,,3.5.0,,,,,tests,,,,,0,,,"Here's what I get:


Testcase: testLeaderInConnectingFollowers took 34.117 sec
Testcase: testLastAcceptedEpoch took 0.047 sec                    <----- new test added in ZK-1343
Testcase: testLeaderInElectingFollowers took 0.004 sec
        Caused an ERROR
Address already in use
java.net.BindException: Address already in use
        at java.net.PlainSocketImpl.socketBind(Native Method)
        at java.net.PlainSocketImpl.bind(PlainSocketImpl.java:383)
        at java.net.ServerSocket.bind(ServerSocket.java:328)
        at java.net.ServerSocket.<init>(ServerSocket.java:194)
        at java.net.ServerSocket.<init>(ServerSocket.java:106)
        at org.apache.zookeeper.server.quorum.Leader.<init>(Leader.java:220)
        at org.apache.zookeeper.server.quorum.Zab1_0Test.createLeader(Zab1_0Test.java:711)
        at org.apache.zookeeper.server.quorum.Zab1_0Test.testLeaderInElectingFollowers(Zab1_0Test.java:225)

Testcase: testNormalFollowerRun took 29.128 sec
Testcase: testNormalRun took 25.158 sec
Testcase: testLeaderBehind took 25.148 sec
Testcase: testAbandonBeforeACKEpoch took 34.029 sec


My guess is that testLastAcceptedEpoch doesn't properly close the connection before testLeaderInElectingFollowers starts.
I propose to add 

if (leadThread != null) {
                leadThread.interrupt();
                leadThread.join();
}       

to the test.


In addition, I propose to change the hard-wired ports in Zab1_0Test to use Portassignment.unique() as done in other tests. If I understand correctly the static counter used in unique() to assign ports is initialized once per test file, so it would also prevent the problem I'm seeing here of two tests in the same file trying to use the same port. 

The error can be reproduced using the attached patch (for some reason I don't see the problem in the trunk).

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Apr/14 02:47;shralex;ZOOKEEPER-1357-v1.patch;https://issues.apache.org/jira/secure/attachment/12640011/ZOOKEEPER-1357-v1.patch","11/Oct/13 16:49;shralex;ZOOKEEPER-1357.patch;https://issues.apache.org/jira/secure/attachment/12608026/ZOOKEEPER-1357.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,223337,,,,,Mon Apr 14 22:31:59 UTC 2014,,,,,,,,,,"0|i05xy7:",32599,,,,,,,,,,,,,,,,,,,,,"11/Oct/13 16:26;phunt;[~shralex] is this still an issue? What's the ""affects""?;;;","11/Oct/13 16:32;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12509972/reconfig-8-jan.patch
  against trunk revision 1531061.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 57 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1679//console

This message is automatically generated.;;;","11/Oct/13 16:43;shralex;Part of this was solved by ZOOKEEPER-1522 (the part of correctly terminating leaderThread).
The hard-wired ports are still there. I can make a patch.;;;","11/Oct/13 17:49;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12608026/ZOOKEEPER-1357.patch
  against trunk revision 1531061.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1681//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1681//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1681//console

This message is automatically generated.;;;","14/Apr/14 02:47;shralex;Resubmitting for current trunk. One of the 2 issues mentioned in this jira was already solved. What remained is changed the hard wired ports to Portassignment.unique.;;;","14/Apr/14 03:39;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12640011/ZOOKEEPER-1357-v1.patch
  against trunk revision 1586200.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2042//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2042//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2042//console

This message is automatically generated.;;;","14/Apr/14 21:48;michim;+1 thanks Alex.;;;","14/Apr/14 21:53;michim;trunk: http://svn.apache.org/viewvc?view=revision&revision=1587335;;;","14/Apr/14 22:31;hudson;FAILURE: Integrated in ZooKeeper-trunk #2290 (See [https://builds.apache.org/job/ZooKeeper-trunk/2290/])
ZOOKEEPER-1357. Zab1_0Test uses hard-wired port numbers. Specifically, it uses the same port for leader in two different tests. The second test periodically fails complaining that the port is still in use. (Alexander Shraer via michim) (michim: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1587335)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
C client test suite fails consistently,ZOOKEEPER-1353,12537601,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,spamaps,spamaps,spamaps,06/Jan/12 21:42,06/Feb/12 10:58,29/Jun/25 13:34,06/Feb/12 08:00,3.3.4,,,,,,,,,,,,,,,,,,,,,,,,3.3.5,3.4.3,3.5.0,,,c client,tests,,,,0,patch,test,"When the c client test suite, zktest-mt, is run, it fails with this:

tests/TestZookeeperInit.cc:233: Assertion: equality assertion failed [Expected: 2, Actual  : 22]

This was also reported in 3.3.1 here:

http://www.mail-archive.com/zookeeper-dev@hadoop.apache.org/msg08914.html

The C client tests are making some assumptions that are not valid. getaddrinfo may have, at one time, returned ENOENT instead of EINVAL for the host given in the test. The assertion should simply be that EINVAL | ENOENT are given, so that builds on platforms which return ENOENT for this are not broken.

","Ubuntu precise (dev release), amd64",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,300,300,,0%,300,300,,,,,,,,,,,,,,,,,,,,,,,"07/Jan/12 01:28;phunt;fix-broken-c-client-unittest.patch;https://issues.apache.org/jira/secure/attachment/12509759/fix-broken-c-client-unittest.patch","06/Jan/12 21:51;spamaps;fix-broken-c-client-unittest.patch;https://issues.apache.org/jira/secure/attachment/12509719/fix-broken-c-client-unittest.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,223107,Reviewed,,,,Mon Feb 06 10:58:04 UTC 2012,,,,,,,,,,"0|i05xyn:",32601,,,,,,,,,,,,,,,,,,,,,"06/Jan/12 21:56;spamaps;Tracked in Ubuntu here:

https://bugs.launchpad.net/ubuntu/+source/zookeeper/+bug/912935;;;","06/Jan/12 22:02;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12509719/fix-broken-c-client-unittest.patch
  against trunk revision 1227927.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/886//console

This message is automatically generated.;;;","07/Jan/12 01:31;phunt;Hi Clint, our systems expect the patch to be relative to the toplevel ""trunk"" directory. I've updated that patch to address this time around. For future reference, we typically name the patches as ZOOKEEPER-####.patch where #### is the jira number. Thanks for the submission!
https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute;;;","07/Jan/12 01:55;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12509759/fix-broken-c-client-unittest.patch
  against trunk revision 1227927.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/887//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/887//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/887//console

This message is automatically generated.;;;","06/Feb/12 07:33;mahadev;Thanks for pointing this out (and also for the patch) Clint.;;;","06/Feb/12 08:00;mahadev;I just committed to all 3 branches. Thanks Clint!;;;","06/Feb/12 10:58;hudson;Integrated in ZooKeeper-trunk #1451 (See [https://builds.apache.org/job/ZooKeeper-trunk/1451/])
    ZOOKEEPER-1353. C client test suite fails consistently. (Clint Byrum via mahadev)

mahadev : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1240905
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/c/tests/TestZookeeperInit.cc
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typo in docs: acheive -> achieve,ZOOKEEPER-1331,12535659,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,ash211,ash211,ash211,19/Dec/11 07:10,28/Dec/11 10:58,29/Jun/25 13:34,28/Dec/11 00:39,3.2.2,,,,,,,,,,,,,,,,,,,,,,,,3.5.0,,,,,documentation,,,,,0,,,Found this typo while reading docs.  Attaching SVN patch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Dec/11 00:37;phunt;ZOOKEEPER-1331.patch;https://issues.apache.org/jira/secure/attachment/12508713/ZOOKEEPER-1331.patch","19/Dec/11 07:14;ash211;acheive_fix.patch;https://issues.apache.org/jira/secure/attachment/12507871/acheive_fix.patch","19/Dec/11 07:27;ash211;acheive_fix2.patch;https://issues.apache.org/jira/secure/attachment/12507873/acheive_fix2.patch",,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,221343,Reviewed,,,,Wed Dec 28 10:58:22 UTC 2011,,,,,,,,,,"0|i05y1r:",32615,,,,,,,,,,,,,,,,,,,,,"19/Dec/11 07:14;ash211;Index: content/xdocs/zookeeperOver.xml
===================================================================
--- content/xdocs/zookeeperOver.xml	(revision 1220630)
+++ content/xdocs/zookeeperOver.xml	(working copy)
@@ -67,7 +67,7 @@
       file system. The name space consists of data registers - called znodes,
       in ZooKeeper parlance - and these are similar to files and directories.
       Unlike a typical file system, which is designed for storage, ZooKeeper
-      data is kept in-memory, which means ZooKeeper can acheive high
+      data is kept in-memory, which means ZooKeeper can achieve high
       throughput and low latency numbers.</para>
 
       <para>The ZooKeeper implementation puts a premium on high performance,
;;;","19/Dec/11 07:21;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12507871/acheive_fix.patch
  against trunk revision 1214571.

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/835//console

This message is automatically generated.;;;","19/Dec/11 07:27;ash211;Have patch apply cleanly by svn diff down to project root (src/docs/content/... instead of content/...);;;","19/Dec/11 07:31;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12507873/acheive_fix2.patch
  against trunk revision 1214571.

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/836//console

This message is automatically generated.;;;","28/Dec/11 00:37;phunt;updated the patch for trunk doc tree hierarchy. (plz use ZOOKEEPER-###.patch in future). Thanks!;;;","28/Dec/11 00:39;phunt;Thanks Andrew!;;;","28/Dec/11 10:58;hudson;Integrated in ZooKeeper-trunk #1410 (See [https://builds.apache.org/job/ZooKeeper-trunk/1410/])
    ZOOKEEPER-1331. Typo in docs: acheive -> achieve (Andrew Ash via phunt)

phunt : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1225062
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/docs/bookkeeperConfig.pdf
* /zookeeper/trunk/docs/bookkeeperOverview.pdf
* /zookeeper/trunk/docs/bookkeeperProgrammer.pdf
* /zookeeper/trunk/docs/bookkeeperStarted.pdf
* /zookeeper/trunk/docs/bookkeeperStream.pdf
* /zookeeper/trunk/docs/index.pdf
* /zookeeper/trunk/docs/javaExample.pdf
* /zookeeper/trunk/docs/linkmap.pdf
* /zookeeper/trunk/docs/recipes.pdf
* /zookeeper/trunk/docs/releasenotes.pdf
* /zookeeper/trunk/docs/zookeeperAdmin.pdf
* /zookeeper/trunk/docs/zookeeperHierarchicalQuorums.pdf
* /zookeeper/trunk/docs/zookeeperInternals.pdf
* /zookeeper/trunk/docs/zookeeperJMX.pdf
* /zookeeper/trunk/docs/zookeeperObservers.pdf
* /zookeeper/trunk/docs/zookeeperOver.html
* /zookeeper/trunk/docs/zookeeperOver.pdf
* /zookeeper/trunk/docs/zookeeperProgrammers.pdf
* /zookeeper/trunk/docs/zookeeperQuotas.pdf
* /zookeeper/trunk/docs/zookeeperStarted.pdf
* /zookeeper/trunk/docs/zookeeperTutorial.pdf
* /zookeeper/trunk/src/docs/src/documentation/content/xdocs/zookeeperOver.xml
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Zookeeper server not serving the client request even after completion of Leader election,ZOOKEEPER-1330,12535655,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,amithdk,amithdk,19/Dec/11 05:21,03/Feb/22 08:50,29/Jun/25 13:34,,3.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,server,,,,,0,,,"Have a cluster of 3 zookeepers
90 clients are connected to the server
leader got killed and started
the other 2 zookeeper started FLE and Leader was elected

But its taking nearly 10 sec for this server to server requests and saying ""ZooKeeperServer not running"" message..?

Why is this even after Leader election SERVER IS NOT RUNNING !!!!!!!!!!

2011-12-19 16:12:29,732 [myid:2] - WARN  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2182:NIOServerCnxn@354] - Exception causing close of session 0x0 due to java.io.IOException: ZooKeeperServer not running
2011-12-19 16:12:29,733 [myid:2] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2182:NIOServerCnxn@1000] - Closed socket connection for client /10.18.47.148:51965 (no session established for client)
2011-12-19 16:12:29,753 [myid:2] - INFO  [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:2182:QuorumPeer@747] - LEADING
2011-12-19 16:12:29,762 [myid:2] - INFO  [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:2182:Leader@58] - TCP NoDelay set to: true
2011-12-19 16:12:29,765 [myid:2] - INFO  [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:2182:ZooKeeperServer@168] - Created server with tickTime 2000 minSessionTimeout 4000 maxSessionTimeout 40000 datadir ../dataDir/version-2 snapdir ../dataDir/version-2
2011-12-19 16:12:29,766 [myid:2] - INFO  [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:2182:Leader@294] - LEADING - LEADER ELECTION TOOK - 4663
2011-12-19 16:12:29,776 [myid:2] - INFO  [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:2182:FileSnap@83] - Reading snapshot ../dataDir/version-2/snapshot.100013661
2011-12-19 16:12:29,831 [myid:2] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2182:NIOServerCnxnFactory@213] - Accepted socket connection from /10.18.47.148:51982
2011-12-19 16:12:29,831 [myid:2] - WARN  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2182:NIOServerCnxn@354] - Exception causing close of session 0x0 due to java.io.IOException: ZooKeeperServer not running
2011-12-19 16:12:29,832 [myid:2] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2182:NIOServerCnxn@1000] - Closed socket connection for client /10.18.47.148:51982 (no session established for client)
2011-12-19 16:12:29,884 [myid:2] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2182:NIOServerCnxnFactory@213] - Accepted socket connection from /10.18.47.148:51989
2011-12-19 16:12:29,884 [myid:2] - WARN  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2182:NIOServerCnxn@354] - Exception causing close of session 0x0 due to java.io.IOException: ZooKeeperServer not running",3 zk quorum,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,221339,,,,,Mon Oct 14 03:32:32 UTC 2019,,,,,,,,,,"0|i05y1z:",32616,,,,,,,,,,,,,,,,,,,,,"07/Sep/16 04:42;cammckenzie;Have there been any updates on this? We seem to be running into the same problem. The leader election completes after some period but the nodes are taking 15+ seconds before they stop logging the ""ZooKeeperServer no running"" message and start processing traffic. This is happening on the leader and followers. See logs excerpts below. After this everything seems to go back to normal.

From the leader:

2016-09-04 01:00:41,024 [myid:5] - INFO  [QuorumPeer[myid=5]/0:0:0:0:0:0:0:0:2181:Leader@358] - LEADING - LEADER ELECTION TOOK - 10251

2016-09-04 01:00:48,814 [myid:5] - INFO  [QuorumPeer[myid=5]/0:0:0:0:0:0:0:0:2181:Leader@943] - Have quorum of supporters, sids: [ 1,2,5 ]; starting up and setting last processed zxid: 0x160000000

From a follower:

2016-09-04 01:00:43,823 [myid:3] - INFO  [QuorumPeer[myid=3]/0:0:0:0:0:0:0:0:2181:Follower@63] - FOLLOWING - LEADER ELECTION TOOK - 8684

016-09-04 01:00:57,964 [myid:3] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxnFactory@197] - Accepted socket connection from /X.X.X.X:39700
2016-09-04 01:00:57,964 [myid:3] - WARN  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@362] - Exception causing close of session 0x0 due to java.io.IOException: ZooKeeperServer not running
2016-09-04 01:00:57,964 [myid:3] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@1007] - Closed socket connection for client /X.X.X.X:39700 (no session established for client)
2016-09-04 01:00:58,055 [myid:3] - WARN  [QuorumPeer[myid=3]/0:0:0:0:0:0:0:0:2181:Follower@118] - Got zxid 0x1600000c80 expected 0x1

;;;","12/Sep/16 14:04;fpj;[~cammckenzie] from your log messages, it looks like the leader election is taking quite some time. The leader one says 10s plus another 7s until it got a quorum of supporters. Your ensemble for some reason is taking its time to come back up.;;;","12/Sep/16 21:40;cammckenzie;[~fpj]. Yeah, not sure why the election is taking so long. Some sort of network issues perhaps. It still seems though that after the election is complete it takes another 10+ seconds before the ZooKeeperServer not running log messages stop appearing.;;;","13/Sep/16 08:23;fpj;Note that it is taking another 7s after election for the leader to gather a quorum of supporters. Until the leader has a quorum of supporters, it won't lead. To sum up, the leader election took 10s and it took 7s for the quorum of supporters, so you have 17s right there just waiting for the leader to come up. I'm not sure where the remaining time is coming from, but I suspect it is just client backoff. ;;;","13/Sep/16 23:49;cammckenzie;Thanks Flavio,
I assumed that once the LEADING - ... log occurred that the election was complete. I must not understand how the election works correctly. I thought that the support of the quorum was required for the election to complete. Is this not the case? Should I ask this on the zookeeper list instead?
cheers;;;","13/Sep/16 23:54;hanm;I believe leader election completion does not imply quorum being formed - followers have to sync with leader (i.e. transferring snapshot over the wire then load in memory), and this step could take a while depends on size of snapshot diffs, network condition and the load of quorum machine. After followers sync-ed with leader a quorum will be formed.;;;","13/Sep/16 23:56;cammckenzie;Thanks for the explanation, that would make sense.
cheers;;;","14/Oct/19 03:13;MachelCheng;Hi，[~hanm]  [~fpj]

In my project, I just encountered this problem. Leader election took 25 seconds, but the follower took 374 seconds. The log is as follows:

2019-10-12 23:00:20,354 [myid:3] - INFO [QuorumPeer[myid=3]/0:0:0:0:0:0:0:0:2181:Leader@380] - LEADING - LEADER ELECTION TOOK - 25507
 2019-10-12 23:06:54,692 [myid:1] - INFO [QuorumPeer[myid=1]/0:0:0:0:0:0:0:0:2181:Follower@65] - FOLLOWING - LEADER ELECTION TOOK - 374511

 

During this period, the client could not connect to zookeeper server, and there are many logs as follows:

WARN [NIOServerCxn.Factory: 0.0.0.0/0.0.0.0:2181:NIOServerCnxn@362] - Exception causing close of session 0x0 due to java.io.IOException: ZooKeeperServer not running

There are three questions, who can help explain:
 1. Why the time required to select a follower needs to be so long, and the time difference from the leader election is so large;
 2. When does zookeeper provide services normally？ Need followers‘s election process is done?  Or just  the leader election is done?
 3. How to solve this problem?  This is the most important and I want to know the most.

 ;;;","14/Oct/19 03:32;MachelCheng;from the follower, the log as follows:

 

2019-10-12 23:06:45,112 [myid:1] - INFO [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxnFactory@215] - Accepted socket connection from /192.168.101.1:58720

2019-10-12 23:06:45,112 [myid:1] - WARN [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@383] - Exception causing close of session 0x0: ZooKeeperServer not running

2019-10-12 23:06:45,112 [myid:1] - INFO [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@1056] - Closed socket connection for client /192.168.101.1:58720 (no session established for client)

2019-10-12 23:06:46,514 [myid:1] - INFO [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxnFactory@215] - Accepted socket connection from /192.168.101.2:44684

2019-10-12 23:06:46,514 [myid:1] - WARN [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@383] - Exception causing close of session 0x0: ZooKeeperServer not running

2019-10-12 23:06:46,514 [myid:1]  INFO [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@1056] - Closed socket connection for client /192.168.101.2:44684 (no session established for client)

2019-10-12 23:06:46,676 [myid:1] - INFO [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxnFactory@215] - Accepted socket connection from /192.168.101.2:44690

2019-10-12 23:06:46,677 [myid:1] - WARN [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@383] - Exception causing close of session 0x0: ZooKeeperServer not running

2019-10-12 23:06:46,677 [myid:1] - INFO [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@1056] - Closed socket connection for client /192.168.101.2:44690 (no session established for client)

2019-10-12 23:06:49,135 [myid:1] - INFO [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxnFactory@215] - Accepted socket connection from /192.168.101.1:58818

2019-10-12 23:06:49,135 [myid:1] - WARN [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@383] - Exception causing close of session 0x0: ZooKeeperServer not running

2019-10-12 23:06:49,135 [myid:1] - INFO [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@1056] - Closed socket connection for client /192.168.101.1:58818 (no session established for client)

2019-10-12 23:06:46,676 [myid:1] - INFO [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxnFactory@215] - Accepted socket connection from /192.168.101.2:44690

2019-10-12 23:06:46,677 [myid:1] - WARN [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@383] - Exception causing close of session 0x0: ZooKeeperServer not running

2019-10-12 23:06:46,677 [myid:1] - INFO [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@1056] - Closed socket connection for client /192.168.101.2:44690 (no session established for client)

2019-10-12 23:06:49,135 [myid:1] - INFO [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxnFactory@215] - Accepted socket connection from /192.168.101.1:58818

2019-10-12 23:06:49,135 [myid:1] - WARN [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@383] - Exception causing close of session 0x0: ZooKeeperServer not running

2019-10-12 23:06:49,135 [myid:1] - INFO [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@1056] - Closed socket connection for client /192.168.101.1:58818 (no session established for client)

2019-10-12 23:06:51,191 [myid:1] - INFO [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxnFactory@215] - Accepted socket connection from /127.0.0.1:55068

2019-10-12 23:06:51,191 [myid:1] - INFO [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@908] - Processing srvr command from /127.0.0.1:55068

2019-10-12 23:06:51,192 [myid:1] - INFO  [Thread-739:NIOServerCnxn@1056] - Closed socket connection for client /127.0.0.1:55068 (no session established for client)

2019-10-12 23:06:52,156 [myid:1] - INFO [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxnFactory@215] - Accepted socket connection from /192.168.101.1:58880

2019-10-12 23:06:52,156 [myid:1] - WARN [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@383] - Exception causing close of session 0x0: ZooKeeperServer not running

2019-10-12 23:06:52,156 [myid:1] - INFO[NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@1056] - Closed socket connection for client /192.168.101.1:58880 (no session established for client)

2019-10-12 23:06:54,176 [myid:1] - INFO [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxnFactory@215] - Accepted socket connection from /192.168.101.1:58906

2019-10-12 23:06:54,177 [myid:1] - WARN [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@383] - Exception causing close of session 0x0: ZooKeeperServer not running

2019-10-12 23:06:54,177 [myid:1] - INFO[NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@1056] - Closed socket connection for client /192.168.101.1:58906 (no session established for client)

2019-10-12 23:06:54,492 [myid:1] - INFO [WorkerReceiver[myid=1]:FastLeaderElection@595]- Notification: 1 (message format version), 3 (n.leader), 0x8e000036ef (n.zxid), 0x12 (n.round), LOOKING (n.state), 3 (n.sid),0x8e (n.peerEpoch) LOOKING (my state)

2019-10-12 23:06:54,492 [myid:1] - INFO [WorkerReceiver[myid=1]:FastLeaderElection@595]- Notification: 1 (message format version), 3 (n.leader), 0x8e000036ef (n.zxid), 0x12 (n.round), LOOKING (n.state), 1 (n.sid),0x8e (n.peerEpoch) LOOKING (my state)

2019-10-12 23:06:54,692 [myid:1] - INFO  [QuorumPeer[myid=1]/0:0:0:0:0:0:0:0:2181:QuorumPeer@979] - FOLLOWING

2019-10-12 23:06:54,692 [myid:1] - INFO[QuorumPeer[myid=1]/0:0:0:0:0:0:0:0:2181:ZooKeeperServer@174] - Created server with tickTime 2000 minSessionTimeout 4000 maxSessionTimeout 40000 datadir /opt/zookeeper/data/version-2 snapdir /opt/zookeeper/data/version-2

2019-10-12 23:06:54,692 [myid:1] - INFO  [QuorumPeer[myid=1]/0:0:0:0:0:0:0:0:2181:Follower@65] - FOLLOWING - LEADER ELECTION TOOK - 374511;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Possible segfault in zookeeper_init,ZOOKEEPER-1317,12533782,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,akitada,akitada,akitada,04/Dec/11 13:48,17/Dec/11 01:33,29/Jun/25 13:34,09/Dec/11 18:37,3.3.3,3.4.0,,,,,,,,,,,,,,,,,,,,,,,3.4.1,3.5.0,,,,c client,,,,,0,,,"zookeeper_init does not check the return value of strdup(index_chroot).
When it returns NULL, it causes segfault when it try to strlen(zh->chroot).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Dec/11 13:48;akitada;ZOOKEEPER-1317.patch;https://issues.apache.org/jira/secure/attachment/12506040/ZOOKEEPER-1317.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,219508,Reviewed,,,,Fri Dec 09 20:20:26 UTC 2011,,,,,,,,,,"0|i05y3j:",32623,,,,,,,,,,,,,,,,,,,,,"05/Dec/11 22:34;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12506040/ZOOKEEPER-1317.patch
  against trunk revision 1208979.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/805//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/805//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/805//console

This message is automatically generated.;;;","08/Dec/11 22:15;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12506040/ZOOKEEPER-1317.patch
  against trunk revision 1208979.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/821//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/821//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/821//console

This message is automatically generated.;;;","09/Dec/11 00:49;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12506040/ZOOKEEPER-1317.patch
  against trunk revision 1212192.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/825//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/825//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/825//console

This message is automatically generated.;;;","09/Dec/11 18:37;mahadev;I just committed this. THanks Akira!;;;","09/Dec/11 20:20;hudson;Integrated in ZooKeeper-trunk #1390 (See [https://builds.apache.org/job/ZooKeeper-trunk/1390/])
    ZOOKEEPER-1317. Possible segfault in zookeeper_init. (Akira Kitada via mahadev)

mahadev : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1212566
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/c/src/zookeeper.c
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zookeeper_init leaks memory if chroot is just '/',ZOOKEEPER-1316,12533781,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,akitada,akitada,akitada,04/Dec/11 13:34,17/Dec/11 01:33,29/Jun/25 13:34,08/Dec/11 22:30,3.3.3,3.4.0,,,,,,,,,,,,,,,,,,,,,,,3.4.1,3.5.0,,,,c client,,,,,0,,,"zookeeper_init does not free strdup'ed memory when chroot is just '/'.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Dec/11 13:38;akitada;ZOOKEEPER-1316.patch;https://issues.apache.org/jira/secure/attachment/12506039/ZOOKEEPER-1316.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,219507,Reviewed,,,,Fri Dec 09 11:06:14 UTC 2011,,,,,,,,,,"0|i05y3r:",32624,,,,,,,,,,,,,,,,,,,,,"05/Dec/11 18:45;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12506039/ZOOKEEPER-1316.patch
  against trunk revision 1208979.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/804//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/804//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/804//console

This message is automatically generated.;;;","06/Dec/11 15:16;akitada;I don't think this kind of fix needs a unit testing. Valgrind or code analysis tooks like coverity would find ones.;;;","07/Dec/11 19:03;breed;+1 good catch and fix. i agreed that this isn't a good candidate for a unit test.;;;","08/Dec/11 21:16;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12506039/ZOOKEEPER-1316.patch
  against trunk revision 1208979.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/819//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/819//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/819//console

This message is automatically generated.;;;","08/Dec/11 22:30;mahadev;I just committed this. Thanks Akira!;;;","09/Dec/11 11:06;hudson;Integrated in ZooKeeper-trunk #1389 (See [https://builds.apache.org/job/ZooKeeper-trunk/1389/])
    ZOOKEEPER-1316. zookeeper_init leaks memory if chroot is just \'/\'. (Akira Kitada via mahadev)

mahadev : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1212172
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/c/src/zookeeper.c
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zookeeper_init always reports sessionPasswd=<hidden>,ZOOKEEPER-1315,12533776,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,akitada,akitada,akitada,04/Dec/11 10:31,17/Dec/11 01:33,29/Jun/25 13:34,09/Dec/11 00:21,3.3.4,3.4.0,,,,,,,,,,,,,,,,,,,,,,,3.4.1,3.5.0,,,,c client,,,,,0,,,zookeeper_init always reports sessionPasswd=<hidden> even when it's empty.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Dec/11 10:40;akitada;ZOOKEEPER-1315.patch;https://issues.apache.org/jira/secure/attachment/12506034/ZOOKEEPER-1315.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,219502,Reviewed,,,,Fri Dec 09 11:06:13 UTC 2011,,,,,,,,,,"0|i05y3z:",32625,,,,,,,,,,,,,,,,,,,,,"04/Dec/11 11:26;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12506034/ZOOKEEPER-1315.patch
  against trunk revision 1208979.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/803//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/803//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/803//console

This message is automatically generated.;;;","04/Dec/11 12:13;akitada;I didn't add tests because I thought the patch is trivial enough and
writing a test that checks stderr output would be tricky.

To verify the fix, I changed the code manually to print INFO log and
checked if it emits ""sessionPasswd=<null>"" and ""sessionPasswd=<hidden>"" according to the condition.;;;","08/Dec/11 22:13;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12506034/ZOOKEEPER-1315.patch
  against trunk revision 1208979.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/820//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/820//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/820//console

This message is automatically generated.;;;","08/Dec/11 23:26;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12506034/ZOOKEEPER-1315.patch
  against trunk revision 1212172.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/823//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/823//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/823//console

This message is automatically generated.;;;","09/Dec/11 00:07;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12506034/ZOOKEEPER-1315.patch
  against trunk revision 1212172.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/824//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/824//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/824//console

This message is automatically generated.;;;","09/Dec/11 00:21;mahadev;I just committed this. Thanks Akira!;;;","09/Dec/11 11:06;hudson;Integrated in ZooKeeper-trunk #1389 (See [https://builds.apache.org/job/ZooKeeper-trunk/1389/])
    ZOOKEEPER-1315. zookeeper_init always reports sessionPasswd=<hidden>. (Akira Kitada via mahadev)

mahadev : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1212192
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/c/src/zookeeper.c
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Observer LearnerHandlers are not removed from Leader collection.,ZOOKEEPER-1303,12531863,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Duplicate,ashm,ashm,ashm,17/Nov/11 23:32,30/Apr/14 20:25,29/Jun/25 13:34,30/Apr/14 20:25,3.3.4,,,,,,,,,,,,,,,,,,,,,,,,3.4.4,3.5.0,,,,scripts,,,,,1,,,"The Leader.removeLearnerHandler() call removes handlers from the forwardingFollowers and learners sets, but not from observingLearners.  This will cause a leak if observers are repeatedly connected and disconnected from the ensemble.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,604800,604800,,0%,604800,604800,,,,,,,,,,,,,,,,,,,,,,,"17/Nov/11 23:34;ashm;removeObservingLearners.diff;https://issues.apache.org/jira/secure/attachment/12504139/removeObservingLearners.diff",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,217599,,,,,Wed Apr 30 20:25:06 UTC 2014,,,,,,,,,,"0|i05y5z:",32634,,,,,,,,,,,,,,,,,,,,,"17/Nov/11 23:41;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12504139/removeObservingLearners.diff
  against trunk revision 1202557.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/793//console

This message is automatically generated.;;;","01/Dec/11 07:05;phunt;the patch is failing to apply - was it created against trunk?;;;","21/Oct/13 10:59;rakeshr;Hi, It seems this has been fixed as part of ZOOKEEPER-1361. Can we close this issue?;;;","30/Apr/14 20:25;michim;This has been fixed in ZOOKEEPER-1361 as Rakesh pointed out.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typo in ZooKeeper Recipes and Solutions documentation,ZOOKEEPER-1241,12528418,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,yaojingguo,yaojingguo,yaojingguo,23/Oct/11 15:10,24/Oct/11 10:53,29/Jun/25 13:34,24/Oct/11 08:01,3.3.3,,,,,,,,,,,,,,,,,,,,,,,,3.5.0,,,,,documentation,,,,,0,,,"In ""if p is the lowest process node in L, wait on highest process node in P"", ""P"" should be ""L"".",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,300,300,,0%,300,300,,,,,,,,,,,,,,,,,,,,,,,"23/Oct/11 15:12;yaojingguo;ZOOKEEPER-1241.patch;https://issues.apache.org/jira/secure/attachment/12500366/ZOOKEEPER-1241.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,214278,Reviewed,,,,Mon Oct 24 10:53:12 UTC 2011,,,,,,,,,,"0|i05ya7:",32653,,,,,,,,,,,,,,,,,,,,,"23/Oct/11 15:41;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12500366/ZOOKEEPER-1241.patch
  against trunk revision 1186967.

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/641//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/641//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/641//console

This message is automatically generated.;;;","24/Oct/11 08:01;phunt;committed to trunk, thanks Jingguo Yao!;;;","24/Oct/11 10:53;hudson;Integrated in ZooKeeper-trunk #1342 (See [https://builds.apache.org/job/ZooKeeper-trunk/1342/])
    ZOOKEEPER-1241. Typo in ZooKeeper Recipes and Solutions documentation (Jingguo Yao via phunt)

phunt : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1188039
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/docs/bookkeeperConfig.pdf
* /zookeeper/trunk/docs/bookkeeperOverview.pdf
* /zookeeper/trunk/docs/bookkeeperProgrammer.pdf
* /zookeeper/trunk/docs/bookkeeperStarted.pdf
* /zookeeper/trunk/docs/bookkeeperStream.pdf
* /zookeeper/trunk/docs/index.pdf
* /zookeeper/trunk/docs/javaExample.pdf
* /zookeeper/trunk/docs/linkmap.pdf
* /zookeeper/trunk/docs/recipes.html
* /zookeeper/trunk/docs/recipes.pdf
* /zookeeper/trunk/docs/releasenotes.pdf
* /zookeeper/trunk/docs/skin/images/apache-thanks.png
* /zookeeper/trunk/docs/skin/images/built-with-cocoon.gif
* /zookeeper/trunk/docs/zookeeperAdmin.html
* /zookeeper/trunk/docs/zookeeperAdmin.pdf
* /zookeeper/trunk/docs/zookeeperHierarchicalQuorums.pdf
* /zookeeper/trunk/docs/zookeeperInternals.pdf
* /zookeeper/trunk/docs/zookeeperJMX.pdf
* /zookeeper/trunk/docs/zookeeperObservers.pdf
* /zookeeper/trunk/docs/zookeeperOver.pdf
* /zookeeper/trunk/docs/zookeeperProgrammers.pdf
* /zookeeper/trunk/docs/zookeeperQuotas.pdf
* /zookeeper/trunk/docs/zookeeperStarted.pdf
* /zookeeper/trunk/docs/zookeeperTutorial.pdf
* /zookeeper/trunk/src/docs/src/documentation/content/xdocs/recipes.xml
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Compiler issue with redhat linux,ZOOKEEPER-1240,12528345,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,ftpeng,ftpeng,ftpeng,22/Oct/11 02:16,03/Feb/22 08:50,29/Jun/25 13:34,,3.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,c client,,,,,1,patch,,"When I compile zookeeper c client in my project, there are some error:
../../../include/zookeeper/recordio.h:70: error：expected unqualified-id before '__extension__'
../../../include/zookeeper/recordio.h:70: error：expected `)' before '__extension__'
../../.. /include/zookeeper/recordio.h:70: error：expected unqualified-id before ')' token
","Linux phy 2.6.18-53.el5 #1 SMP Wed Oct 10 16:34:19 EDT 2007 x86_64 x86_64 x86_64 GNU/Linux
gcc version 4.1.2 20070626 (Red Hat 4.1.2-14)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,"22/Oct/11 02:23;ftpeng;ZOOKEEPER-1240.patch;https://issues.apache.org/jira/secure/attachment/12500278/ZOOKEEPER-1240.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,113481,,,,,Thu Aug 29 13:07:42 UTC 2013,,,,,,,,,,"0|i05yaf:",32654,Fix compile error under RedHat linux,,,,,,,,,,,c client ,,,,,,,,,"22/Oct/11 02:23;ftpeng;fix compile error under RedHat Linux;;;","22/Oct/11 02:31;ftpeng;Index: src/c/include/recordio.h
===================================================================
--- src/c/include/recordio.h	（修订版 1187635）
+++ src/c/include/recordio.h	（工作拷贝）
@@ -72,9 +72,9 @@
 void close_buffer_iarchive(struct iarchive **ia);
 char *get_buffer(struct oarchive *);
 int get_buffer_len(struct oarchive *);
-
+#ifndef htonll
 int64_t htonll(int64_t v);
-
+#endif
 #ifdef __cplusplus
 }
 #endif
;;;","22/Oct/11 02:31;ftpeng;Index: src/c/include/recordio.h
===================================================================
--- src/c/include/recordio.h	（修订版 1187635）
+++ src/c/include/recordio.h	（工作拷贝）
@@ -72,9 +72,9 @@
 void close_buffer_iarchive(struct iarchive **ia);
 char *get_buffer(struct oarchive *);
 int get_buffer_len(struct oarchive *);
-
+#ifndef htonll
 int64_t htonll(int64_t v);
-
+#endif
 #ifdef __cplusplus
 }
 #endif
;;;","24/Oct/11 06:13;mahadev;Peng, 
 You seem to have closed the jira again? Take a look at how to contribute, on the https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute for guidance on how to upload/review/get it committed.;;;","25/Oct/11 01:54;ftpeng;@Mahadev konar, 
I am sorry,Can you help me finished this issue?Thank you very much.
I just want you know there are a issue.;;;","25/Oct/11 09:20;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12500278/ZOOKEEPER-1240.patch
  against trunk revision 1188523.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/653//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/653//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/653//console

This message is automatically generated.;;;","08/Dec/11 21:12;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12500278/ZOOKEEPER-1240.patch
  against trunk revision 1208979.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/818//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/818//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/818//console

This message is automatically generated.;;;","08/Dec/11 22:22;mahadev;Peng,
 Can you please re upload the patch and grant license to Apache for inclusion? 

Thanks;;;","08/Dec/11 22:23;mahadev;I am taking this out of 3.4.1. If the patch becomes available before I cut a 3.4.1 Ill incorporate it.;;;","06/Feb/12 08:06;mahadev;Peng,
 Could you please re upload the patch with a license grant?;;;","30/Aug/12 05:27;mahadev;Moving it out, not a critical bugfix.;;;","14/Aug/13 07:13;fpj;It has been a long time, is this still an issue? ;;;","29/Aug/13 13:07;fpj;Since I got no feedback, I'm moving this one to 3.5.0.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
problem across zookeeper clients when reading data written by other clients,ZOOKEEPER-1224,12526976,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Not A Problem,lakshman,amithdk,amithdk,13/Oct/11 04:54,18/Oct/11 08:09,29/Jun/25 13:34,18/Oct/11 08:09,3.3.0,,,,,,,,,,,,,,,,,,,,,,,,3.5.0,,,,,java client,,,,,0,,,"create a java client 
create a persistent node using that client
write data into the node  
like..
ZkClient zk = new ZkClient ( getZKServers () );
        zk.createPersistent ( ""/amith"" , true );
        zk.writeData ( ""/amith"", ""amith"" );
        Object readData = zk.readData ( ""/amith"" );
        LOGGER.logInfo (readData);

        zk.delete ( ""/amith"" );

and try to read the same using ZkCli.sh console client

[zk: XXX.XXX.XXX.XXX:XXXXX(CONNECTED) 2] get /amith
ï¿½ï¿½tamith
cZxid = 0x100000004
ctime = Wed Oct 12 10:13:15 CST 2011
mZxid = 0x100000005
mtime = Wed Oct 12 10:13:15 CST 2011
pZxid = 0x100000004
cversion = 0
dataVersion = 1
aclVersion = 0
ephemeralOwner = 0x0
dataLength = 12
numChildren = 0

data is displayed as ï¿½ï¿½tamith
this include some unwanted char

 



","Zookeeper console client (i.e, zkCli.sh )
and ZkClient
with 3 zookeeper quorum",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2419200,2419200,,0%,2419200,2419200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,85289,,,,,Tue Oct 18 08:09:58 UTC 2011,,,,,,,,,,"0|i05yb3:",32657,,,,,,,,,,,,,,,,,,,,,"17/Oct/11 13:23;lakshman;Amith, this seems to be encoding issue.
Can you please provide the encoding on server and client side.;;;","18/Oct/11 05:30;amithdk;Lakshman i have used UTF-8 on both client and server side
;;;","18/Oct/11 08:02;lakshman;Got it. This is not a problem with encoding.

ZooKeeper always deals with byte array as data.

You are using third party library ZKClient. It provides some user friendly APIs to deal with Objects rather than byte array. This library internally takes care of serializing the input data and send to ZooKeeper in byte array form. So, when you serialize a String object it contains some extra binary information like type info

Reason why this is not happening in cli mode is ""In cli mode its directly persisting the String.getBytes rather than persisting in the serialized form.""

;;;","18/Oct/11 08:09;lakshman;Not an issue. Please feel free to reopen the issue if you still see some problem.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
C recipes includes <zookeeper.h> instead of <zookeeper/zookeeper.h>,ZOOKEEPER-1223,12526971,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,,,jwfang,jwfang,13/Oct/11 03:51,29/Dec/11 16:17,29/Jun/25 13:34,,3.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,recipes,,,,,0,,,"according to ZOOKEEPER-1033, headers will be installed into ""PREFIX/zookeeper"" directory.
i guess theses includes may also needed to be changed ? ",CentOS 5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,85284,,,,,Thu Dec 29 16:17:04 UTC 2011,,,,,,,,,,"0|i05ybb:",32658,,,,,,,,,,,,,,,,,,,,,"29/Dec/11 16:17;qwertymaniac;Do they not compile after the change?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
getACL should only call DataTree.copyStat when passed in stat is not null,ZOOKEEPER-1222,12526933,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,michim,fournc,fournc,12/Oct/11 21:08,08/Jul/14 21:17,29/Jun/25 13:34,08/Jul/14 18:33,3.3.3,3.4.0,,,,,,,,,,,,,,,,,,,,,,,3.4.7,3.5.0,,,,java client,,,,,0,,,"getACL(String, Stat) should allow the stat object to be null in the case that the user doesn't care about getting the stat back, as per other methods with similar syntax",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jul/14 18:25;rakeshr;ZOOKEEPER-1222-br3_4.patch;https://issues.apache.org/jira/secure/attachment/12654631/ZOOKEEPER-1222-br3_4.patch","07/Jun/14 20:02;michim;ZOOKEEPER-1222.patch;https://issues.apache.org/jira/secure/attachment/12648828/ZOOKEEPER-1222.patch","15/May/14 17:57;michim;ZOOKEEPER-1222.patch;https://issues.apache.org/jira/secure/attachment/12645050/ZOOKEEPER-1222.patch",,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,84819,,,,,Tue Jul 08 21:17:24 UTC 2014,,,,,,,,,,"0|i05ybj:",32659,,,,,,,,,,,,,,,,,,,,,"19/Oct/11 06:42;mahadev;Not a blocker for 3.4.;;;","15/May/14 18:52;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12645050/ZOOKEEPER-1222.patch
  against trunk revision 1594755.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2090//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2090//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2090//console

This message is automatically generated.;;;","07/Jun/14 18:41;rakeshr;[~michim] I think zk#reconfig(joiningServers, leavingServers, newMembers, fromConfig, stat) api also allows null stat object. Could you consider this too.;;;","07/Jun/14 18:58;michim;Will do.;;;","07/Jun/14 20:52;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12648828/ZOOKEEPER-1222.patch
  against trunk revision 1600481.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2126//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2126//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2126//console

This message is automatically generated.;;;","08/Jun/14 19:09;rakeshr;Thanks [~michim]. +1 lgtm;;;","08/Jul/14 18:25;rakeshr;Attaching branch 3.4 patch. Please ignore QA failure report as this is expected for 3.4 patch.;;;","08/Jul/14 18:31;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12654631/ZOOKEEPER-1222-br3_4.patch
  against trunk revision 1608872.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/2180//console

This message is automatically generated.;;;","08/Jul/14 18:33;rakeshr;Committed to trunk : http://svn.apache.org/viewvc?view=revision&revision=1608872

Committed to branch 3.4 : http://svn.apache.org/viewvc?view=revision&revision=1608873;;;","08/Jul/14 21:17;hudson;FAILURE: Integrated in ZooKeeper-trunk #2360 (See [https://builds.apache.org/job/ZooKeeper-trunk/2360/])
ZOOKEEPER-1222. getACL should only call DataTree.copyStat when passed in stat is not null (Michi Mutsuzaki via rakeshr) (rakeshr: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1608872)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/ZooKeeper.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/ClientTest.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/ReconfigTest.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
C client's package name,ZOOKEEPER-1211,12525282,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Duplicate,,jwfang,jwfang,30/Sep/11 09:07,13/Oct/11 02:28,29/Jun/25 13:34,13/Oct/11 02:28,3.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,c client,,,,,0,,,"the package name of c client is ""c-client-src"",
which lead the include file to be installed to /usr/local/include/c-client-src.

it's a bit annoying since user need to manual rename it to zookeeper.

i think there are two fix,
1) change autoconf package name to ""zookeeper"", then the header will be installed to
   zookeeper subdir, which is consistent with the README;
2) change pkginclude_HEADER to include_HEADER, which will install headers to /usr/local/include.
",centos 5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,40983,,,,,Thu Oct 13 02:16:08 UTC 2011,,,,,,,,,,"0|i05yc7:",32662,,,,,,,,,,,,,,,,,,,,,"07/Oct/11 04:10;mahadev;Duplicate of ZOOKEEPER-1033?;;;","13/Oct/11 02:16;jwfang;seems so, this bug could be closed.
but i found another related bug which is also annoying, which i will create another bug.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't build ZooKeeper RPM with RPM >= 4.6.0 (i.e. on RHEL 6 and Fedora >= 10),ZOOKEEPER-1210,12525061,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,tkadlubo,tkadlubo,tkadlubo,28/Sep/11 14:20,30/Jun/12 11:01,29/Jun/25 13:34,30/Jun/12 06:19,3.4.0,,,,,,,,,,,,,,,,,,,,,,,,3.3.6,3.4.4,,,,build,,,,,0,patch,,"I was trying to build the zookeeper RPM (basically, `ant rpm -Dskip.contrib=1`), using build scripts that were recently merged from the work on the ZOOKEEPER-999 issue.

The final stage, i.e. running rpmbuild failed. From what I understand it mixed BUILD and BUILDROOT subdirectories in /tmp/zookeeper_package_build_tkadlubo/, leaving BUILDROOT empty, and placing everything in BUILD.

The full build log is at http://pastebin.com/0ZvUAKJt (Caution: I cut out long file listings from running tar -xvvf).",Tested to fail on both Centos 6.0 and Fedora 14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Oct/11 10:15;tkadlubo;rpm_buildroot_on_RHEL6.patch;https://issues.apache.org/jira/secure/attachment/12498410/rpm_buildroot_on_RHEL6.patch","07/Oct/11 07:54;tkadlubo;rpm_buildroot_on_RHEL6.patch;https://issues.apache.org/jira/secure/attachment/12498121/rpm_buildroot_on_RHEL6.patch","07/Oct/11 07:28;tkadlubo;rpm_buildroot_on_RHEL6.patch;https://issues.apache.org/jira/secure/attachment/12498120/rpm_buildroot_on_RHEL6.patch",,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,36676,Reviewed,,,,Sat Jun 30 11:01:10 UTC 2012,,,,,,,,,,"0|i05ycf:",32663,"Fix buildroot misplacement on systems with RPM>=4.6. Earlier RPM versions support --buildroot commandline flag, so this doesn't break anything on older systems.",,,,,,,,,,,rpm ant,,,,,,,,,"29/Sep/11 12:34;tkadlubo;I debugged this issue somewhat.

The support for the Buildroot directive in the RPM spec files got removed in rpm 4.6.0 (AFAICT).

The spec files created in the ZOOKEEPER-999 issue define Buildroot: %{_build_dir}, which is silently ignored on systems that use rpm >= 4.6. These include Fedora >= 10 and RHEL >=6.0

One solution for this issue might be to pass ""--buildroot=${package.buildroot}/BUILD"" to the ""rpm"" ant task. ""--buildroot"" option is supported by both old and new rpmbuild versions.

;;;","07/Oct/11 04:18;mahadev;Tadeusz,
 Mind uploading a patch?;;;","07/Oct/11 07:22;tkadlubo;I created this patch at work. My employer (Wirtualna Polska S.A.) is OK with me submitting patches upstream.;;;","07/Oct/11 07:26;tkadlubo;The following patch fixes rpm buildroot misplacement on systems with rpm >= 4.6. Earlier rpm versions support --buildroot commandline flag, so this patch doesn't break building on older systems.

diff --git a/build.xml b/build.xml
index 8448aa6..fa3f6d8 100644
--- a/build.xml
+++ b/build.xml
@@ -1020,7 +1020,7 @@
           </replacetokens>
         </filterchain>
       </copy>
-      <rpm specFile=""zookeeper.spec"" command=""-ba"" topDir=""${package.buildroot}"" cleanBuildDir=""true"" failOnError=""true""
+      <rpm specFile=""zookeeper.spec"" command=""-ba --buildroot=${package.buildroot}/BUILD"" topDir=""${package.buildroot}"" cleanBuildDir=""true"" failOnError=""true""
 />
       <copy todir=""${build.dir}/"" flatten=""true"">
         <fileset dir=""${package.buildroot}/RPMS"">
diff --git a/src/contrib/zkpython/build.xml b/src/contrib/zkpython/build.xml
index 7ceeda9..d8254d1 100644
--- a/src/contrib/zkpython/build.xml
+++ b/src/contrib/zkpython/build.xml
@@ -141,7 +141,7 @@
         </filterchain>
       </copy>
 
-      <rpm specFile=""${name}.spec"" command=""-ba"" topDir=""${package.buildroot}"" cleanBuildDir=""true"" failOnError=""true"" />
+      <rpm specFile=""${name}.spec"" command=""-ba --buildroot=${package.buildroot}/BUILD"" topDir=""${package.buildroot}"" cleanBuildDir=""true"" failOnError=""true"" />
       <copy todir=""${build.dir}/"" flatten=""true"">
         <fileset dir=""${package.buildroot}/RPMS"">
           <include name=""**/*.rpm"" />
diff --git a/src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec b/src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec
index 2c640b0..d1f9814 100644
--- a/src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec
+++ b/src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec
@@ -52,7 +52,6 @@ Version: %{version}
 Release: %{release} 
 Source0: %{_python_lib}
 Prefix: %{_prefix}
-Buildroot: %{_build_dir}
 Requires: zookeeper-lib == %{version}
 AutoReqProv: no
 Provides: zkpython
diff --git a/src/packages/rpm/spec/zookeeper.spec b/src/packages/rpm/spec/zookeeper.spec
index fa1333c..8e195c7 100644
--- a/src/packages/rpm/spec/zookeeper.spec
+++ b/src/packages/rpm/spec/zookeeper.spec
@@ -70,7 +70,6 @@ Prefix: %{_conf_dir}
 Prefix: %{_log_dir}
 Prefix: %{_pid_dir}
 Prefix: %{_var_dir}
-Buildroot: %{_build_dir}
 Requires: sh-utils, textutils, /usr/sbin/useradd, /usr/sbin/usermod, /sbin/chkconfig, /sbin/service, jdk >= 1.6
 AutoReqProv: no
 Provides: zookeeper
;;;","07/Oct/11 07:32;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12498120/rpm_buildroot_on_RHEL6.patch
  against trunk revision 1179371.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/608//console

This message is automatically generated.;;;","07/Oct/11 07:37;mahadev;Tadeusz, 
 You might want to use --no-prefix for generating the patch.;;;","07/Oct/11 07:54;tkadlubo;Generated with git diff --no-prefix.;;;","07/Oct/11 08:24;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12498121/rpm_buildroot_on_RHEL6.patch
  against trunk revision 1179371.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/609//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/609//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/609//console

This message is automatically generated.;;;","07/Oct/11 20:14;phunt;Tadeusz - you need to grant license explicitly to ASF each time you upload a patch - this last time you selected ""no"". See ""manage attachments"" under the attachments section (popup menu).;;;","10/Oct/11 10:15;tkadlubo;The same patch, with license grant checked.;;;","12/Jun/12 23:57;jasonbrooks;I've just run into this same issue, attempting to build zookeeper-3.4.3 for Fedora 17.;;;","13/Jun/12 00:08;jasonbrooks;Scratch that, I think I'm hung up on something different.;;;","30/Jun/12 06:19;phunt;Thanks Tadeusz!;;;","30/Jun/12 11:01;hudson;Integrated in ZooKeeper-trunk #1600 (See [https://builds.apache.org/job/ZooKeeper-trunk/1600/])
    ZOOKEEPER-1210. Can't build ZooKeeper RPM with RPM >= 4.6.0 (i.e. on RHEL 6 and Fedora >= 10) (Tadeusz Andrzej Kadłubowski via phunt) (Revision 1355649)

     Result = SUCCESS
phunt : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1355649
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/build.xml
* /zookeeper/trunk/src/contrib/zkpython/build.xml
* /zookeeper/trunk/src/contrib/zkpython/src/packages/rpm/spec/zkpython.spec
* /zookeeper/trunk/src/packages/rpm/spec/zookeeper.spec
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Sequential node creation does not use always use digits in node name given certain Locales.,ZOOKEEPER-1206,12524930,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,markrmiller@gmail.com,markrmiller@gmail.com,markrmiller@gmail.com,27/Sep/11 16:26,23/Nov/11 19:22,29/Jun/25 13:34,29/Sep/11 21:36,3.3.3,,,,,,,,,,,,,,,,,,,,,,,,3.3.4,3.4.0,3.5.0,,,server,,,,,0,,,"While I always expect to be able to parse a sequential node by looking for digits, under some locals you end up with non digits - for example: n_००००००००००

It looks like the problem is around line 236 in PrepRequestProcessor:

{code}
                if (createMode.isSequential()) {
                    path = path + String.format(""%010d"", parentCVersion);
                }
{code}

Instead we should pass Locale.ENGLISH to the format call.

{code}
                if (createMode.isSequential()) {
                    path = path + String.format(Locale.ENGLISH, ""%010d"", parentCVersion);
                }
{code}

Lucene/Solr tests with random Locales, and some of my tests that try and inspect the node name and order things expect to find digits - currently my leader election recipe randomly fails when the wrong locale pops up.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Sep/11 18:47;markrmiller@gmail.com;ZOOKEEPER-1206-3.3.patch;https://issues.apache.org/jira/secure/attachment/12497038/ZOOKEEPER-1206-3.3.patch","29/Sep/11 02:46;markrmiller@gmail.com;ZOOKEEPER-1206-3.4.patch;https://issues.apache.org/jira/secure/attachment/12496963/ZOOKEEPER-1206-3.4.patch","29/Sep/11 16:21;markrmiller@gmail.com;ZOOKEEPER-1206.patch;https://issues.apache.org/jira/secure/attachment/12497014/ZOOKEEPER-1206.patch",,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,19505,Reviewed,,,,Fri Sep 30 11:17:08 UTC 2011,,,,,,,,,,"0|i05yd3:",32666,,,,,,,,,,,,,,,,,,,,,"28/Sep/11 22:14;phunt;Seems like a straightforward fix - Mark could you submit a patch for this?;;;","29/Sep/11 02:46;markrmiller@gmail.com;The trunk patch is identical to the patch needed by the 3.3 branch. The 3.4 version of the patch is needed for the 3.4 branch.;;;","29/Sep/11 08:02;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12496964/ZOOKEEPER-1206.patch
  against trunk revision 1177191.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/596//console

This message is automatically generated.;;;","29/Sep/11 08:19;mahadev;Mark can you please update the patch? looks like it doesnt apply.;;;","29/Sep/11 13:20;markrmiller@gmail.com;Sorry - I'm at a loss for the moment - that patch was made off latest trunk and applies to latest trunk for me. I'm obviously missing something...;;;","29/Sep/11 14:34;fournc;Try resynching your code base and creating the patch again. It doesn't apply cleanly for me due to the import statements, which were cleaned up in a checkin on 9/14.;;;","29/Sep/11 16:00;markrmiller@gmail.com;Silly me - my orig checkout is off the 3.3 branch not trunk - my bad - new patch coming.;;;","29/Sep/11 16:21;markrmiller@gmail.com;patch to trunk;;;","29/Sep/11 18:47;markrmiller@gmail.com;here is the 3.3 patch;;;","29/Sep/11 21:36;phunt;committed to 3.3/3.4/trunk. Thanks Mark!;;;","30/Sep/11 11:17;hudson;Integrated in ZooKeeper-trunk #1319 (See [https://builds.apache.org/job/ZooKeeper-trunk/1319/])
    ZOOKEEPER-1206. Sequential node creation does not use always use digits in node name given certain Locales. (Mark Miller via phunt)

phunt : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1177432
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fix build for java 7,ZOOKEEPER-1171,12521225,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,phunt,phunt,phunt,02/Sep/11 19:35,23/Nov/11 19:22,29/Jun/25 13:34,13/Sep/11 21:50,3.4.0,,,,,,,,,,,,,,,,,,,,,,,,3.4.0,,,,,build,,,,,0,,,I tried testing out zk on java 7 (not yet officially supported) but I ran into a road block due to the build failing. Patch coming next.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Sep/11 19:42;phunt;ZOOKEEPER-1171.patch;https://issues.apache.org/jira/secure/attachment/12492796/ZOOKEEPER-1171.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,3964,Reviewed,,,,Thu Sep 15 10:56:36 UTC 2011,,,,,,,,,,"0|i05ygf:",32681,,,,,,,,,,,,,,,,,,,,,"02/Sep/11 19:42;phunt;This patch addresses a new check added to javac in version 7. This is the default in java 6 (default source to target) so should be a relatively low risk change.

With this patch applied I can compile and run all tests successfully using java7.;;;","02/Sep/11 20:17;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12492796/ZOOKEEPER-1171.patch
  against trunk revision 1164632.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/491//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/491//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/491//console

This message is automatically generated.;;;","09/Sep/11 01:52;mahadev;Pat, 
 Dont we need to do this for build.xml files in recipes/rest and others?;;;","13/Sep/11 18:34;phunt;No, the toplevel build.xml is the only file in which we specify an explicit target. As a result the other builds should build fine - although I didn't test that as my main goal here is to get the trunk build working on jdk7 and setup a jenkins job.

I think this should just go in as-is.;;;","13/Sep/11 21:50;mahadev;Just pushed this. thanks pat!;;;","15/Sep/11 10:56;hudson;Integrated in ZooKeeper-trunk #1304 (See [https://builds.apache.org/job/ZooKeeper-trunk/1304/])
    ZOOKEEPER-1171. fix build for java 7 (phunt via mahadev)

mahadev : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1170365
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/build.xml
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
better eclipse support in tests,ZOOKEEPER-1165,12520644,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,wturkal,wturkal,wturkal,29/Aug/11 22:08,23/Nov/11 19:22,29/Jun/25 13:34,02/Sep/11 17:02,3.4.0,,,,,,,,,,,,,,,,,,,,,,,,3.4.0,,,,,tests,,,,,0,patch,,"The Eclipse test runner tries to run tests from all classes that inherit from TestCase. However, this class is inherited by at least one class (org.apache.zookeeper.test.system.BaseSysTest) that has no test cases as it is used as infrastructure for other real test cases. This patch annotates that class with @Ignore, which causes the class to be Ignored. Also, due to the way annotations are not inherited by default, this patch will not affect classes that inherit from this class.",Eclipse,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,"29/Aug/11 22:10;wturkal;BaseSysTest.java.patch;https://issues.apache.org/jira/secure/attachment/12492150/BaseSysTest.java.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,3969,Reviewed,,,,Fri Sep 02 17:51:28 UTC 2011,,,,,,,,,,"0|i05yh3:",32684,Small Eclipse test fix.,,,,,,,,,,,,,,,,,,,,"29/Aug/11 22:44;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12492150/BaseSysTest.java.patch
  against trunk revision 1163015.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/476//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/476//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/476//console

This message is automatically generated.;;;","30/Aug/11 00:44;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12492150/BaseSysTest.java.patch
  against trunk revision 1163015.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/477//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/477//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/477//console

This message is automatically generated.;;;","30/Aug/11 07:05;mahadev;Not a blocker. Moving it out!;;;","02/Sep/11 17:02;phunt;Thanks Warren! Committed to 3.4.0.;;;","02/Sep/11 17:33;hudson;Integrated in ZooKeeper-trunk-jdk7 #3 (See [https://builds.apache.org/job/ZooKeeper-trunk-jdk7/3/])
    ZOOKEEPER-1165. better eclipse support in tests (Warren Turkal via phunt)

phunt : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1164632
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/systest/org/apache/zookeeper/test/system/BaseSysTest.java
;;;","02/Sep/11 17:51;hudson;Integrated in ZooKeeper-trunk #1292 (See [https://builds.apache.org/job/ZooKeeper-trunk/1292/])
    ZOOKEEPER-1165. better eclipse support in tests (Warren Turkal via phunt)

phunt : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1164632
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/systest/org/apache/zookeeper/test/system/BaseSysTest.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Some of the tests timeout or cause JVM crash,ZOOKEEPER-1157,12519462,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,vishal.k,vishal.k,19/Aug/11 19:58,29/Jun/12 17:11,29/Jun/25 13:34,,3.3.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,tests,,,,,0,test,,"The following tests are consistently timing out for me, and sometimes they crash the JVM. We need to look at these tests and make sure they pass consistently, otherwise they provide no value.

org.apache.zookeeper.test.AsyncHammerTest
org.apache.zookeeper.test.FollowerResyncConcurrencyTest
org.apache.zookeeper.test.ObserverQuorumHammerTest
org.apache.zookeeper.test.QuorumHammerTest
org.apache.zookeeper.test.QuorumTest
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,2400,,,,,Tue Aug 23 01:14:18 UTC 2011,,,,,,,,,,"0|i05yhr:",32687,,,,,,,,,,,,,,,,,,,,,"20/Aug/11 03:39;fournc;FollowerResyncConcurrencyTest is inherently a bit transient, but if you are seeing it fail regularly without any changes, please post the details.
QuorumTest should also not be failing.
I think these failures are due to changes you made in 1154, and probably due to errors in your code or the tests needing to be updated based on changes you made.;;;","22/Aug/11 03:40;mahadev;Vishal, can you post the logs on the test failures? Does this happen on trunk as well? Or just 3.3 branch?;;;","23/Aug/11 01:14;vishal.k;Thanks folks for looking at this. This is happening on trunk and I located the reason for some of the failures.

1. The timeouts were due to logging at DEBUG level, instead of default INFO. Once I bumped the logging level back down to the default, the tests are passing on my ""fast"" machine.
2. JVM crashes were mea culpa. They don't repro without my patch.
3. There are some tests (eg Netty hammer tests) which are timing out on a ""slow"" machine (ie my laptop). I will try bumping up their JUnit timeouts and see if I can get them to pass. 

Thanks!
Vishal;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"jenkins is reporting two warnings, fix these",ZOOKEEPER-1139,12515582,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,phunt,phunt,phunt,27/Jul/11 21:42,23/Nov/11 19:22,29/Jun/25 13:34,28/Jul/11 23:23,3.4.0,,,,,,,,,,,,,,,,,,,,,,,,3.4.0,,,,,,,,,,0,,,"cleanup jenkins report, currently 2 compiler warnings being reported.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jul/11 21:47;phunt;ZOOKEEPER-1139.patch;https://issues.apache.org/jira/secure/attachment/12488036/ZOOKEEPER-1139.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,3983,Reviewed,,,,Wed Aug 10 01:26:20 UTC 2011,,,,,,,,,,"0|i05yjz:",32697,,,,,,,,,,,,,,,,,,,,,"27/Jul/11 21:47;phunt;cleanup the warnings;;;","27/Jul/11 22:15;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12488036/ZOOKEEPER-1139.patch
  against trunk revision 1150937.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    -1 release audit.  The applied patch generated 26 release audit warnings (more than the trunk's current 24 warnings).

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/416//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/416//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/416//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/416//console

This message is automatically generated.;;;","28/Jul/11 23:23;mahadev;I just committed this. Thanks pat!;;;","10/Aug/11 01:26;hudson;Integrated in ZooKeeper-trunk #1258 (See [https://builds.apache.org/job/ZooKeeper-trunk/1258/])
    ZOOKEEPER-1139. jenkins is reporting two warnings, fix these (phunt via mahadev)

mahadev : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1152036
Files : 
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/Op.java
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/ClientWatchManager.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zookeeper 3.3.3 fails to build with gcc >= 4.6.1 on Debian/Ubuntu,ZOOKEEPER-1117,12512864,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,javacruft,javacruft,javacruft,05/Jul/11 14:50,23/Nov/11 19:22,29/Jun/25 13:34,26/Aug/11 07:52,3.3.3,3.4.0,,,,,,,,,,,,,,,,,,,,,,,3.3.4,3.4.0,,,,c client,,,,,0,,,"zookeeper 3.3.3 (and 3.3.1) fails to build on Debian and Ubuntu systems with gcc >= 4.6.1:

/bin/bash ./libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I.  -I./include -I./tests -I./generated  -Wall -Werror  -g -O2 -D_GNU_SOURCE -MT zookeeper.lo -MD -MP -MF .deps/zookeeper.Tpo -c -o zookeeper.lo `test -f 'src/zookeeper.c' || echo './'`src/zookeeper.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I./include -I./tests -I./generated -Wall -Werror -g -O2 -D_GNU_SOURCE -MT zookeeper.lo -MD -MP -MF .deps/zookeeper.Tpo -c src/zookeeper.c  -fPIC -DPIC -o .libs/zookeeper.o
src/zookeeper.c: In function 'getaddrs':
src/zookeeper.c:455:13: error: variable 'port' set but not used [-Werror=unused-but-set-variable]
cc1: all warnings being treated as errors

See http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=625441 for more information.","Ubuntu Developement Release (11.10/Oneiric Ocelot), Debian Unstable (sid)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Aug/11 09:00;javacruft;ZOOKEEPER-1117-3.3.3.patch;https://issues.apache.org/jira/secure/attachment/12490512/ZOOKEEPER-1117-3.3.3.patch","16/Aug/11 09:00;javacruft;ZOOKEEPER-1117.patch;https://issues.apache.org/jira/secure/attachment/12490511/ZOOKEEPER-1117.patch","05/Jul/11 14:52;javacruft;disable-cc-errors;https://issues.apache.org/jira/secure/attachment/12485288/disable-cc-errors","08/Aug/11 15:18;javacruft;gcc-4.6-ftbfs.patch;https://issues.apache.org/jira/secure/attachment/12489697/gcc-4.6-ftbfs.patch","08/Aug/11 15:14;javacruft;gcc-4.6-ftbfs.patch;https://issues.apache.org/jira/secure/attachment/12489696/gcc-4.6-ftbfs.patch","08/Aug/11 15:09;javacruft;gcc-4.6-ftbfs.patch;https://issues.apache.org/jira/secure/attachment/12489694/gcc-4.6-ftbfs.patch","08/Aug/11 18:47;javacruft;gcc-4.6-trunk-fix.patch;https://issues.apache.org/jira/secure/attachment/12489725/gcc-4.6-trunk-fix.patch",,,,7.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,3993,Reviewed,,,,Fri Aug 26 10:55:34 UTC 2011,,,,,,,,,,"0|i05ynb:",32712,,,,,,,,,,,,,,,,,,,,,"05/Jul/11 17:22;tyree731;That warning exists for a good reason, and marking it not as an error is only glosses over the problem. A better solution would be to move the code which initializes port into the block that only runs on Cygwin since that's where it's used.;;;","08/Aug/11 15:14;javacruft;Revised patch to detect file descriptors read for r/w activity;;;","08/Aug/11 15:14;javacruft;Please ignore last patch - still incorrect;;;","08/Aug/11 16:48;mahadev;James,
 Is this the issue with trunk as well? Can you please check and confirm? If yes, would you be able to upload a patch for trunk as well? 
;;;","08/Aug/11 18:47;javacruft;gcc 4.6 fix for trunk;;;","08/Aug/11 18:48;javacruft;Mahadev,
Same issue on trunk; attached reworked patch to this bug report.;;;","08/Aug/11 22:54;phunt;Hi James, thanks for this! Could you re-attach your patches with ""ASF Granted License"" checked? If you look at ""manage attachments"" in jira
https://issues.apache.org/jira/secure/ManageAttachments.jspa?atl_token=A5KQ-2QAV-T4JA-FDED|7da8d16caa4119bb0c4c4d3190971590529a6b25|lin&id=12512864
your patches are listed as ""no"", which means we can't incorporate. (alternately you could just add a comment to the effect that you grant, but re-attaching the patches with the ""grant"" checkbox checked would be better).

more details here:
https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute

Also, once your patch is ready click on ""submit patch"" to start it moving through the process (ie the test bot will run (down at the moment) and committer can review)

Regards.
;;;","11/Aug/11 20:44;javacruft;Hi Patrick - will do but I'm out for the next few days to likely to be later next week.;;;","15/Aug/11 01:01;mahadev;James,
 Any chance you are back and can update the patch? ;;;","16/Aug/11 09:00;javacruft;Patches for trunk and 3.3.x branch;;;","16/Aug/11 09:33;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12490512/ZOOKEEPER-1117-3.3.3.patch
  against trunk revision 1157698.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/461//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/461//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/461//console

This message is automatically generated.;;;","26/Aug/11 07:52;mahadev;I just pushed this. Thanks for the patch James!;;;","26/Aug/11 10:55;hudson;Integrated in ZooKeeper-trunk #1283 (See [https://builds.apache.org/job/ZooKeeper-trunk/1283/])
    ZOOKEEPER-1117. zookeeper 3.3.3 fails to build with gcc >= 4.6.1 on Debian/Ubuntu (James Page via mahadev)

mahadev : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1162013
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/c/src/cli.c
* /zookeeper/trunk/src/c/src/zookeeper.c
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
some quorum tests are unnecessarily extending QuorumBase,ZOOKEEPER-1076,12508363,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,phunt,phunt,phunt,25/May/11 22:19,23/Nov/11 19:22,29/Jun/25 13:34,29/Jul/11 08:14,3.4.0,,,,,,,,,,,,,,,,,,,,,,,,3.4.0,,,,,tests,,,,,0,,,"Some tests are unnecessarily extending QuorumBase. Typically this is not a big issue, but it may cause more servers than necessary to be started (harder to debug a failing test in particular).
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jul/11 18:58;phunt;ZOOKEEPER-1076.patch;https://issues.apache.org/jira/secure/attachment/12488009/ZOOKEEPER-1076.patch","25/May/11 22:21;phunt;ZOOKEEPER-1076.patch;https://issues.apache.org/jira/secure/attachment/12480467/ZOOKEEPER-1076.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47489,Reviewed,,,,Wed Aug 10 01:26:21 UTC 2011,,,,,,,,,,"0|i05yrr:",32732,,,,,,,,,,,,,,,,,,,,,"25/May/11 22:21;phunt;Extend ZKTestCase instead.

My unit tests all (still) pass with this patch applied.
;;;","26/May/11 06:47;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12480467/ZOOKEEPER-1076.patch
  against trunk revision 1125581.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 15 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/290//testReport/
Findbugs warnings: https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/290//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/290//console

This message is automatically generated.;;;","25/Jul/11 22:13;mahadev;The patch looks good. Only issue being, the patch has gone stale. Pat you mind rebasing it?

;;;","27/Jul/11 18:58;phunt;Just rebased the patch to latest trunk.;;;","27/Jul/11 19:21;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12488009/ZOOKEEPER-1076.patch
  against trunk revision 1150937.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 15 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    -1 release audit.  The applied patch generated 26 release audit warnings (more than the trunk's current 24 warnings).

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/413//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/413//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/413//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/413//console

This message is automatically generated.;;;","27/Jul/11 19:53;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12488009/ZOOKEEPER-1076.patch
  against trunk revision 1150937.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 15 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    -1 release audit.  The applied patch generated 26 release audit warnings (more than the trunk's current 24 warnings).

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/414//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/414//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/414//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/414//console

This message is automatically generated.;;;","29/Jul/11 08:08;mahadev;Thanks Pat. 
Patch looks good to me. Ill go ahead and push it.;;;","29/Jul/11 08:14;mahadev;I just pushed this. Thanks Pat!;;;","10/Aug/11 01:26;hudson;Integrated in ZooKeeper-trunk #1258 (See [https://builds.apache.org/job/ZooKeeper-trunk/1258/])
    ZOOKEEPER-1076. some quorum tests are unnecessarily extending QuorumBase (phunt via mahadev)

mahadev : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1152141
Files : 
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/FollowerResyncConcurrencyTest.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/QuorumTest.java
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/ZkDatabaseCorruptionTest.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/QuorumHammerTest.java
* /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/ReadOnlyModeTest.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
address a documentation issue in ZOOKEEPER-1030,ZOOKEEPER-1073,12508336,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,phunt,phunt,phunt,25/May/11 17:52,23/Nov/11 19:22,29/Jun/25 13:34,07/Jul/11 07:32,3.4.0,,,,,,,,,,,,,,,,,,,,,,,,3.4.0,,,,,documentation,,,,,0,,,"ZOOKEEPER-1030 updated the generated docs, not the source docs. I'll submit a patch to address in the src.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-1030,,,,,,,,,"25/May/11 17:57;phunt;ZOOKEEPER-1073.patch;https://issues.apache.org/jira/secure/attachment/12480440/ZOOKEEPER-1073.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47491,Reviewed,,,,Thu Jul 07 10:57:02 UTC 2011,,,,,,,,,,"0|i05ysf:",32735,,,,,,,,,,,,,,,,,,,,,"25/May/11 17:57;phunt;minor change to source docs. (be sure to regen docs when committing);;;","25/May/11 18:24;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12480440/ZOOKEEPER-1073.patch
  against trunk revision 1125581.

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/285//testReport/
Findbugs warnings: https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/285//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/285//console

This message is automatically generated.;;;","27/Jun/11 06:57;mahadev;+1 the patch looks good. Ill commit this in the morning, need to reset my forrest env.;;;","07/Jul/11 07:32;mahadev;I just pushed this. Thanks Pat!;;;","07/Jul/11 10:57;hudson;Integrated in ZooKeeper-trunk #1236 (See [https://builds.apache.org/job/ZooKeeper-trunk/1236/])
    ZOOKEEPER-1073. address a documentation issue in ZOOKEEPER-1030. (phunt via mahadev)

mahadev : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1143688
Files : 
* /zookeeper/trunk/docs/zookeeperOver.html
* /zookeeper/trunk/docs/zookeeperStarted.pdf
* /zookeeper/trunk/docs/zookeeperProgrammers.html
* /zookeeper/trunk/docs/zookeeperObservers.html
* /zookeeper/trunk/docs/releasenotes.pdf
* /zookeeper/trunk/docs/zookeeperTutorial.pdf
* /zookeeper/trunk/docs/zookeeperJMX.html
* /zookeeper/trunk/docs/skin/screen.css
* /zookeeper/trunk/docs/zookeeperAdmin.pdf
* /zookeeper/trunk/docs/index.pdf
* /zookeeper/trunk/docs/zookeeperAdmin.html
* /zookeeper/trunk/docs/zookeeperJMX.pdf
* /zookeeper/trunk/docs/zookeeperInternals.pdf
* /zookeeper/trunk/docs/javaExample.html
* /zookeeper/trunk/docs/skin/basic.css
* /zookeeper/trunk/docs/bookkeeperStarted.html
* /zookeeper/trunk/docs/zookeeperObservers.pdf
* /zookeeper/trunk/docs/zookeeperProgrammers.pdf
* /zookeeper/trunk/docs/zookeeperStarted.html
* /zookeeper/trunk/docs/bookkeeperOverview.html
* /zookeeper/trunk/docs/linkmap.html
* /zookeeper/trunk/docs/bookkeeperOverview.pdf
* /zookeeper/trunk/docs/linkmap.pdf
* /zookeeper/trunk/docs/bookkeeperProgrammer.html
* /zookeeper/trunk/docs/recipes.pdf
* /zookeeper/trunk/docs/bookkeeperStarted.pdf
* /zookeeper/trunk/docs/zookeeperQuotas.pdf
* /zookeeper/trunk/docs/javaExample.pdf
* /zookeeper/trunk/docs/bookkeeperStream.pdf
* /zookeeper/trunk/docs/zookeeperInternals.html
* /zookeeper/trunk/docs/bookkeeperConfig.pdf
* /zookeeper/trunk/docs/zookeeperHierarchicalQuorums.pdf
* /zookeeper/trunk/docs/index.html
* /zookeeper/trunk/docs/zookeeperHierarchicalQuorums.html
* /zookeeper/trunk/docs/bookkeeperConfig.html
* /zookeeper/trunk/docs/zookeeperTutorial.html
* /zookeeper/trunk/docs/bookkeeperStream.html
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/docs/releasenotes.html
* /zookeeper/trunk/docs/zookeeperQuotas.html
* /zookeeper/trunk/src/docs/src/documentation/content/xdocs/zookeeperAdmin.xml
* /zookeeper/trunk/docs/recipes.html
* /zookeeper/trunk/docs/bookkeeperProgrammer.pdf
* /zookeeper/trunk/docs/zookeeperOver.pdf
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
QuorumPeer takes a long time to shutdown,ZOOKEEPER-1060,12506759,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,vishalmlst,vishalmlst,vishalmlst,10/May/11 19:32,23/Nov/11 19:22,29/Jun/25 13:34,14/Jun/11 12:14,3.4.0,,,,,,,,,,,,,,,,,,,,,,,,3.4.0,,,,,quorum,,,,,0,,,"This problem is seen only if you have ZooKeeper embedded in your application. QuorumPeerMain.initializeAndRun() does a quorumPeer.join() before exiting.

QuorumPeer.shutdown() tries to cleanup everything, but it does not interrupt itself. As a result, a if the peer is running FLE, it might be waiting to receive notifications (recvqueue.poll()) in FastLeaderElection. Therefore, quorumPeer.join() will wait until the peer wakes up from poll().

The fix is simple - call this.interrupt() in QuorumPeer.shutdown().",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-1069,,,,,,,,,,,,,,"10/May/11 19:36;vishalmlst;ZOOKEEPER-1060.patch;https://issues.apache.org/jira/secure/attachment/12478724/ZOOKEEPER-1060.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47495,,,,,Tue Jun 14 12:12:53 UTC 2011,,,,,,,,,,"0|i05yun:",32745,,,,,,,,,,,,,,,,,,,,,"10/May/11 19:36;vishalmlst;patch for trunk;;;","10/May/11 19:37;vishalmlst;for trunk;;;","10/May/11 20:02;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12478724/ZOOKEEPER-1060.patch
  against trunk revision 1099329.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/255//testReport/
Findbugs warnings: https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/255//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/255//console

This message is automatically generated.;;;","24/May/11 16:52;strib;I think this will also fix ZOOKEEPER-1069, which resulted in a corrupted on-disk log. I am trying out the patch now, but we only saw the problem once in months of testing, so it'll be hard for me to verify for sure.;;;","14/Jun/11 12:12;fpj;+1, I have just committed this one (Committed revision 1135515.). Thanks, Vishal.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Questions and Improvements for the C client codebase,ZOOKEEPER-1056,12505267,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,tyree731,tyree731,27/Apr/11 03:20,27/Apr/11 03:20,29/Jun/25 13:34,,3.4.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,c client,,,,,0,,,"Having been using the C client for a few months now, I thought I'd look through the code and see if anything could be improved and/or fixed in order to be a good citizen. Here are some observations and questions I was hoping people could elaborate on.

- There appears to be a bug in sub_string (zookeeper.c). The third argument being passed into strncmp is a conditional due to misplaced parenthesis, meaning the length is either 0 or 1. This likely leads to many, many false positives of chroots matching paths.
- There appears to be a bug in queue_session_event, where we check for cptr->buffer not being NULL after already dereferencing it
- In both queue_buffer and queue_completion_nolock, we assert a conditional that we just checked for
- What is the policy on whether the result of memory allocations are checked for, assert'd against or ignored? This is done inconsistently.
- What is the policy on whether pointers are checked/set against NULL versus 0? This is done inconsistently.
- Some functions, such as zoo_wget_children2_, exhibit needlessly high cyclomatic complexity
- What is the policy on line length restrictions? Some functions go through hurdles to enforce 80 characters while others do no such thing.
- What is the policy on indentation and spacing of if statements and blocks of code? This is done inconsistently.

If any or all of these turn out to be issues that need to be fixed I'd be more than happy to do so.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,2442,,,,,2011-04-27 03:20:06.0,,,,,,,,,,"0|i05yvj:",32749,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SIGPIPE in Zookeeper 0.3.* when send'ing after cluster disconnection,ZOOKEEPER-1051,12504889,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,tyree731,tyree731,tyree731,21/Apr/11 13:56,23/Nov/11 19:21,29/Jun/25 13:34,30/Aug/11 07:02,3.3.2,3.3.3,3.4.0,,,,,,,,,,,,,,,,,,,,,,3.4.0,,,,,c client,,,,,1,,,"In libzookeeper_mt, if your process is going rather slowly (such as when running it in Valgrind's Memcheck) or you are using gdb with breakpoints, you can occasionally get SIGPIPE when trying to send a message to the cluster. For example:

==12788==
==12788== Process terminating with default action of signal 13 (SIGPIPE)
==12788==    at 0x3F5180DE91: send (in /lib64/libpthread-2.5.so)
==12788==    by 0x7F060AA: ??? (in /usr/lib64/libzookeeper_mt.so.2.0.0)
==12788==    by 0x7F06E5B: zookeeper_process (in /usr/lib64/libzookeeper_mt.so.2.0.0)
==12788==    by 0x7F0D38E: ??? (in /usr/lib64/libzookeeper_mt.so.2.0.0)
==12788==    by 0x3F5180673C: start_thread (in /lib64/libpthread-2.5.so)
==12788==    by 0x3F50CD3F6C: clone (in /lib64/libc-2.5.so)
==12788==

This is probably not the behavior we would like, since we handle server disconnections after a failed call to send. To fix this, there are a few options we could use. For BSD environments, we can tell a socket to never send SIGPIPE with send using setsockopt:

setsockopt(sd, SOL_SOCKET, SO_NOSIGPIPE, (void *)&set, sizeof(int));

For Linux environments, we can add a MSG_NOSIGNAL flag to every send call that says to not send SIGPIPE on a bad file descriptor.

For more information, see: http://stackoverflow.com/questions/108183/how-to-prevent-sigpipes-or-handle-them-properly",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,,,,,,,"23/Aug/11 18:51;tyree731;ZOOKEEPER-1051.patch;https://issues.apache.org/jira/secure/attachment/12491378/ZOOKEEPER-1051.patch","23/Aug/11 18:30;tyree731;ZOOKEEPER-1051.patch;https://issues.apache.org/jira/secure/attachment/12491374/ZOOKEEPER-1051.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47500,Reviewed,,,,Tue Aug 30 10:55:32 UTC 2011,,,,,,,,,,"0|i05yw7:",32752,Add flag to socket send on Linux that prevents SIGPIPE from being fired should the Zookeeper cluster close the connection on its side.,,,,,,,,,,,,,,,,,,,,"23/Aug/11 18:30;tyree731;Patch which fixes the issue for Linux and Linux alone. Do we support Zookeeper for other *nixes? If so, there are likely to be platform specific solutions to the problem for them as well.;;;","23/Aug/11 18:51;tyree731;Realized I missed a couple of spots, so I generalized the logic in a function. Haven't the ability to test the change on Windows.;;;","23/Aug/11 19:23;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12491378/ZOOKEEPER-1051.patch
  against trunk revision 1159929.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/473//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/473//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/473//console

This message is automatically generated.;;;","23/Aug/11 20:26;breed;+1 looks good to me;;;","23/Aug/11 22:25;dheerajagrawal;+1 from windows standpoint. I couldn't find the windows equivalent of this flag in send() or setsocketopt. And i see that we are carrying the default behavior for windows, which looks good to me.;;;","24/Aug/11 16:54;tyree731;There isn't an equivalent issue on Windows, only for POSIX-ish platforms that signal on failed socket sends. This means other Unix-like platforms could experience similar issues, but it appears in this case that for now we aren't going to concern ourselves with them.

Is there anything left to do here or are we good for submission?;;;","26/Aug/11 05:38;mahadev;I think this should go in to 3.4.0;;;","30/Aug/11 07:02;mahadev;Just committed this. Thanks Stephen!;;;","30/Aug/11 10:55;hudson;Integrated in ZooKeeper-trunk #1288 (See [https://builds.apache.org/job/ZooKeeper-trunk/1288/])
    ZOOKEEPER-1051. SIGPIPE in Zookeeper 0.3.* when send'ing after cluster disconnection (Stephen Tyree via mahadev)

mahadev : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1163106
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/c/src/zookeeper.c
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zooinspector shell scripts do not work,ZOOKEEPER-1050,12504838,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,willjohnson3,cburroughs,cburroughs,21/Apr/11 00:46,06/Jan/12 10:57,29/Jun/25 13:34,06/Jan/12 01:23,3.3.2,,,,,,,,,,,,,,,,,,,,,,,,3.5.0,,,,,contrib,,,,,0,zooinspector,,"* zooInspector-dev.sh uses DOS line endings.  Dash at least chokes on this.
* zooInspector.sh has an errant ; in the classpath.

Also there really isn't a reason to hard code the zookeeper version needed in lib. Just use a glob.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Jan/12 20:51;willjohnson3;ZOOKEEPER-1050.patch;https://issues.apache.org/jira/secure/attachment/12509337/ZOOKEEPER-1050.patch","28/Oct/11 18:03;willjohnson3;ZOOKEEPER-1050.patch;https://issues.apache.org/jira/secure/attachment/12501330/ZOOKEEPER-1050.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,2444,Reviewed,,,,Fri Jan 06 10:57:24 UTC 2012,,,,,,,,,,"0|i05ywf:",32753,,,,,,,,,,,,,,,,,,,,,"28/Oct/11 18:03;willjohnson3;Patch attached that:

* fixes line endings on windows
* uses classpath globs (*.jar) instead of individual entries
* removes ClassPath def from manifest.mf (otherwise there is no need for start up scripts)
* copies in the current/correct zookeeper version in build file;;;","29/Dec/11 18:41;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12501330/ZOOKEEPER-1050.patch
  against trunk revision 1225352.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/869//console

This message is automatically generated.;;;","30/Dec/11 21:26;phunt;Hi Will, thanks. Note that the patch needs to be created relative to ""trunk"" directory: i.e. http://svn.apache.org/viewvc/zookeeper/trunk/  that's why qabot failed.

Also, some of the changes in your patch have already been fixed in trunk. 

What's your interest, to fix for future releases or 3.3.5/3.4.3 as well?

If the former you'll just need to create a diff of current trunk. see https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute

If the latter it's likely you'd have to create separate patches for each fix release - 3.5.0, 3.3.5, 3.4.3.
;;;","03/Jan/12 16:47;willjohnson3;i don't really need any version fixed, this was just an attempt to fix a minor issue i saw.  feel free to close this unless someone else really wants a patch for some other branch.  

Note: i do think that the use of Class-Path in zooInspector's jar file is a bit irritating which is why i took it out in my patch.  For those of use getting zookeeper via maven or some other repo it makes life harder for no real benefit since a glob (lib/*.jar) in the shell script does the same thing and is much easier to change by an end user if necessary.;;;","03/Jan/12 19:22;phunt;I'd like to fix this, would you mind contributing a patch against trunk? Thanks!;;;","03/Jan/12 20:51;willjohnson3;patch against trunk;;;","03/Jan/12 21:54;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12509337/ZOOKEEPER-1050.patch
  against trunk revision 1225927.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/874//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/874//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/874//console

This message is automatically generated.;;;","06/Jan/12 01:23;phunt;Thanks Will!;;;","06/Jan/12 10:57;hudson;Integrated in ZooKeeper-trunk #1419 (See [https://builds.apache.org/job/ZooKeeper-trunk/1419/])
    ZOOKEEPER-1050. zooinspector shell scripts do not work (Will Johnson via phunt)

phunt : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1227923
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/contrib/zooinspector/build.xml
* /zookeeper/trunk/src/contrib/zooinspector/zooInspector.cmd
* /zookeeper/trunk/src/contrib/zooinspector/zooInspector.sh
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
perl bindings should automatically find the zookeeper c-client headers,ZOOKEEPER-1034,12502521,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,nrh,nrh,nrh,27/Mar/11 20:45,23/Nov/11 19:22,29/Jun/25 13:34,15/Aug/11 01:41,3.3.3,,,,,,,,,,,,,,,,,,,,,,,,3.4.0,,,,,contrib,,,,,0,,,"Installing Net::ZooKeeper from cpan or the zookeeper distribution tarballs will always fail due to not finding c-client header files.  In conjunction with ZOOKEEPER-1033 update perl bindings to look for c-client header files in INCDIR/zookeeper/

a.k.a. make installs of Net::ZooKeeper via cpan/cpanm/whatever *just work*, assuming you've already got the zookeeper c client installed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Aug/11 00:58;mahadev;ZOOKEEPER-1034-trunk.patch;https://issues.apache.org/jira/secure/attachment/12490398/ZOOKEEPER-1034-trunk.patch","22/Jun/11 05:20;nrh;ZOOKEEPER-1034-trunk.patch;https://issues.apache.org/jira/secure/attachment/12483405/ZOOKEEPER-1034-trunk.patch","29/Jul/11 19:03;nrh;ant.test-1034;https://issues.apache.org/jira/secure/attachment/12488236/ant.test-1034","29/Jul/11 19:01;nrh;ant.test-nopatch;https://issues.apache.org/jira/secure/attachment/12488235/ant.test-nopatch",,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47507,Reviewed,,,,Mon Aug 15 10:55:30 UTC 2011,,,,,,,,,,"0|i05yy7:",32761,Net::ZooKeeper now looks in some sane places for the c client includes,,,,,,,,,,,,,,,,,,,,"28/Mar/11 01:00;nrh;src/contrib/zkperl now both checks to see if it can find zookeeper_version.h in some sane places, and the Makefile.PL compiles and prints the client version, warning if it's not 3.x

this could be a fatal error but we have only been checking to see if '#include ""zookeeper_version.h""' works for some time now, so warning seemed safer.

this change sorta-depends on ZOOKEEEPER-1033 putting stuff into a sane location, but the failure mode without ZOOKEEPER-1033 is the same, as users today need to tweak Makefile.PL options in order to get the perl module to install.

zkperl test suite passes.;;;","28/Mar/11 01:33;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12474748/ZOOKEEPER-1034-trunk.patch
  against trunk revision 1082362.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/206//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/206//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/206//console

This message is automatically generated.;;;","30/Mar/11 10:50;ikelly;Looks good. 

+1 once ZOOKEEPER-1033 is in.
;;;","21/Jun/11 17:47;phunt;Hi Nicholas, I tried this patch however the instructions in the README don't seem to match - at least I can't build using them. 

Can you update the patch to include updates to the README? (looks like there's quite a bit of stale data in there that might also be cleaned up, re old releases and such).

Thanks.;;;","22/Jun/11 04:57;nrh;do you mean the section that refers to the --path-to-stuff?  how are you trying to build that's failing?;;;","22/Jun/11 05:20;nrh;include update to README;;;","22/Jun/11 07:41;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12483405/ZOOKEEPER-1034-trunk.patch
  against trunk revision 1138213.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/346//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/346//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/346//console

This message is automatically generated.;;;","22/Jun/11 15:41;nrh;pretty sure that failing core test isn't related to 1034.;;;","27/Jun/11 18:52;nrh;Patrick, please let me know what specific problem you were having with the build - I'd like to make sure this gets into 3.4.0;;;","28/Jul/11 23:16;mahadev;Looks like the jenkins builds will be down for a while. Nicholas can you post the results of ant test for this patch?;;;","29/Jul/11 19:01;nrh;'ant test' output from trunk, after removing ZOOKEEPER-1033 and ZOOKEEPER-1034


[nrh@toki ~/projects/apache-zookeeper] grep -i fail ant.test-nopatch|grep -v 'Failures: 0'
    [junit] Tests run: 1, Failures: 1, Errors: 0, Time elapsed: 91.533 sec
    [junit] Test org.apache.zookeeper.test.ClientPortBindTest FAILED
    [junit] Tests run: 3, Failures: 2, Errors: 0, Time elapsed: 81.774 sec
    [junit] Test org.apache.zookeeper.test.FollowerResyncConcurrencyTest FAILED
    [junit] Tests run: 15, Failures: 1, Errors: 0, Time elapsed: 156.346 sec
    [junit] Test org.apache.zookeeper.test.QuorumTest FAILED
BUILD FAILED
/Users/nrh/projects/apache-zookeeper/build.xml:870: Tests failed!
;;;","29/Jul/11 19:03;nrh;'ant test' output from trunk including ZOOKEEPER-1033 and ZOOKEEPER-1034 patches.

On my system this exhibits the same set of failures as without the patches:

[nrh@toki ~/projects/apache-zookeeper] grep -i fail ant.test-1034|grep -v 'Failures: 0'
    [junit] Tests run: 1, Failures: 1, Errors: 0, Time elapsed: 76.842 sec
    [junit] Test org.apache.zookeeper.test.ClientPortBindTest FAILED
    [junit] Tests run: 3, Failures: 2, Errors: 0, Time elapsed: 84.496 sec
    [junit] Test org.apache.zookeeper.test.FollowerResyncConcurrencyTest FAILED
    [junit] Tests run: 15, Failures: 1, Errors: 0, Time elapsed: 152.419 sec
    [junit] Test org.apache.zookeeper.test.QuorumTest FAILED
BUILD FAILED
/Users/nrh/projects/apache-zookeeper/build.xml:870: Tests failed!
;;;","01/Aug/11 19:29;phunt;I'm having trouble following the readme:

""The path supplied to the --zookeeper-include option should
identify the directory that contains the zookeeper.h and other
ZooKeeper C include files.""

{noformat}
perl Makefile.PL --zookeeper-lib=/home/phunt/dev/zookeeper/build/test/test-cppunit/.libs --zookeeper-include=/home/phunt/dev/zookeeper/src/c/include
Could not determine ZooKeeper version:

build/check_zk_version.c:21:41: fatal error: zookeeper/zookeeper_version.h: No such file or directory
compilation terminated.
{noformat}

I think I can get past this, but the docs should reflect.;;;","01/Aug/11 19:58;phunt;After setting up include/libs references I was able to apply the patch, compile, and run all the perl tests successfully.;;;","11/Aug/11 04:55;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12488236/ant.test-1034
  against trunk revision 1152141.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 12 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/447//console

This message is automatically generated.;;;","15/Aug/11 00:58;mahadev;Reuploading the patch to trigger the patch build.;;;","15/Aug/11 01:21;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12490398/ZOOKEEPER-1034-trunk.patch
  against trunk revision 1157690.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/456//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/456//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/456//console

This message is automatically generated.;;;","15/Aug/11 01:23;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12490398/ZOOKEEPER-1034-trunk.patch
  against trunk revision 1157690.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/457//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/457//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/457//console

This message is automatically generated.;;;","15/Aug/11 01:41;mahadev;I just pushed this. Thanks Nicholas!;;;","15/Aug/11 10:55;hudson;Integrated in ZooKeeper-trunk #1266 (See [https://builds.apache.org/job/ZooKeeper-trunk/1266/])
    ZOOKEEPER-1034. perl bindings should automatically find the zookeeper c-client headers (nicholas harteau via mahadev)

mahadev : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1157698
Files : 
* /zookeeper/trunk/src/contrib/zkperl/ZooKeeper.pm
* /zookeeper/trunk/src/contrib/zkperl/Changes
* /zookeeper/trunk/src/contrib/zkperl/build/check_zk_version.c
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/contrib/zkperl/ZooKeeper.xs
* /zookeeper/trunk/src/contrib/zkperl/README
* /zookeeper/trunk/src/contrib/zkperl/Makefile.PL
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"c client should install includes into INCDIR/zookeeper, not INCDIR/c-client-src",ZOOKEEPER-1033,12502520,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,nrh,nrh,nrh,27/Mar/11 20:40,23/Nov/11 19:22,29/Jun/25 13:34,04/May/11 06:03,3.3.3,,,,,,,,,,,,,,,,,,,,,,,,3.4.0,,,,,c client,,,,,0,,,"header files are installed into foo/include/c-client-src/, which doesn't indicate a relationship with zookeeper and doesn't correspond to foo/lib/libzookeeper*

header files should be installed into foo/include/zookeeper/ as this is the common practice.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-494,,,,,,,,,,,,"30/Mar/11 15:13;nrh;ZOOKEEPER-1033-notidy.patch;https://issues.apache.org/jira/secure/attachment/12474973/ZOOKEEPER-1033-notidy.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47508,,,,,Wed May 04 10:55:06 UTC 2011,,,,,,,,,,"0|i05yyf:",32762,Install c-client header files into include/zookeeper/ rather than include/c-client-src/,,,,,,,,,,,,,,,,,,,,"27/Mar/11 23:41;nrh;1. changes the AC_INIT macro's distribution name to 'zookeeper'
2. clean up formatting in the c client's changelog.

;;;","27/Mar/11 23:45;nrh;patch against trunk;;;","27/Mar/11 23:47;nrh;1. change AC_INIT macro's project name to 'zookeeper' from 'c-client-src'
2. clean up src/c/ChangeLog
;;;","28/Mar/11 00:14;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12474746/ZOOKEEPER-1033-trunk.patch
  against trunk revision 1082362.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/205//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/205//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/205//console

This message is automatically generated.;;;","30/Mar/11 10:54;ikelly;Actual changes are good. However, you've reformatted the ChangeLog with tabs. Could you undo this formatting and use spaces for your own changelog entry instead.;;;","30/Mar/11 14:24;nrh;whoops, changelog cleanup w/4-space indentation;;;","30/Mar/11 14:32;ikelly;Could you resubmit with everything from the line ""@@ -2,3 +8,3 @@"" removed (inclusive). Ill +1 once you do. ;;;","30/Mar/11 14:35;nrh;re-patch 1033 w/4-space tabs in changelog.;;;","30/Mar/11 14:37;nrh;i.e. just remove the changelog cleanup?;;;","30/Mar/11 14:54;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12474967/ZOOKEEPER-1033-notabs.patch
  against trunk revision 1082362.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    -1 release audit.  The applied patch generated 25 release audit warnings (more than the trunk's current 24 warnings).

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/211//testReport/
Release audit warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/211//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/211//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/211//console

This message is automatically generated.;;;","30/Mar/11 15:00;ikelly;yes, your patch should only contain your changes.;;;","30/Mar/11 15:16;ikelly;+1

Good work!;;;","30/Mar/11 16:33;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12474973/ZOOKEEPER-1033-notidy.patch
  against trunk revision 1082362.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/213//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/213//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/213//console

This message is automatically generated.;;;","03/May/11 23:02;mahadev;Thanks Nicholas, 
The Changelog entries are not needed since we add the changelog as and when the committers commit. Also the Changelog in src/c is stale. We havent been maintaining it. Ill commit without the changelog changes.;;;","04/May/11 06:03;mahadev;I just committed this to trunk (without the Changelog changes). Thanks Nicholas!;;;","04/May/11 10:55;hudson;Integrated in ZooKeeper-trunk #1172 (See [https://builds.apache.org/hudson/job/ZooKeeper-trunk/1172/])
    ZOOKEEPER-1033. c client should install includes into INCDIR/zookeeper, not INCDIR/c-client-src (Nicholas Harteau via mahadev)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"In python bindings, zookeeper.set2() should return a stat dict but instead returns None",ZOOKEEPER-1028,12502320,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,cmedaglia,cmedaglia,cmedaglia,24/Mar/11 20:26,23/Nov/11 19:22,29/Jun/25 13:34,06/Apr/11 20:22,3.3.3,,,,,,,,,,,,,,,,,,,,,,,,3.4.0,,,,,contrib-bindings,,,,,0,patch,,"There is a small bug in the python bindings, specifically with the zookeeper.set2() call. This method should return a stat dictionary, but actually returns None. The fix is a one-character change to zookeeper.c such that the return value is '&stat' rather than 'stat'.",All environments.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,"30/Mar/11 10:39;ikelly;ZOOKEEPER-1028.diff;https://issues.apache.org/jira/secure/attachment/12474959/ZOOKEEPER-1028.diff","24/Mar/11 20:34;cmedaglia;ZOOKEEPER-1028.patch;https://issues.apache.org/jira/secure/attachment/12474554/ZOOKEEPER-1028.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47509,Reviewed,,,,Thu Apr 07 10:54:16 UTC 2011,,,,,,,,,,"0|i05yyv:",32764,,,,,,,,,,,,,,,,,,,,,"24/Mar/11 20:34;cmedaglia;The patch includes the change to zookeeper.c and to get_set_test.py.;;;","24/Mar/11 22:14;cmedaglia;Could someone do a code review on this prior to me submitting the patch?

Many thanks,
Chris;;;","28/Mar/11 06:30;mahadev;chris, 3.4.0 is the upcoming release, so I marked this fix for 3.4. Would that work?;;;","28/Mar/11 06:30;mahadev;the patch looks good to me!;;;","28/Mar/11 15:07;cmedaglia;Yeah, absolutely!! I wasn't sure what to put for versions, so I just picked something after 3.3.3. :-)

Thanks for reviewing, I'll go ahead and submit the patch now.;;;","28/Mar/11 15:33;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12474554/ZOOKEEPER-1028.patch
  against trunk revision 1082362.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/207//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/207//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/207//console

This message is automatically generated.;;;","30/Mar/11 10:39;ikelly;This fix is wrong. 

Compilation gives a warning about invalid type being passed.

A good fix would be to change ""struct Stat *stat = NULL""; to ""struct Stat;"" and pass &stat to zoo_set2. I've attached a patch to this effect. The current implementation passes a NULL pointer to zoo_set2, which means the stat never gets set.;;;","30/Mar/11 11:03;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12474959/ZOOKEEPER-1028.diff
  against trunk revision 1082362.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/210//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/210//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/210//console

This message is automatically generated.;;;","30/Mar/11 13:55;cmedaglia;Hmm, sorry about that. When I made that change, the function returned the stat dict properly, whereas prior to the change, it just returned None. Thanks for taking a closer look and finding a better solution.;;;","06/Apr/11 20:22;mahadev;I just committed this to trunk. Thanks Ivan and Chris.;;;","07/Apr/11 10:54;hudson;Integrated in ZooKeeper-trunk #1146 (See [https://hudson.apache.org/hudson/job/ZooKeeper-trunk/1146/])
    ZOOKEEPER-1028. In python bindings, zookeeper.set2() should return a stat dict but instead returns None. (Chris Medaglia and Ivan Kelly via mahadev)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zkpython: add_auth can deadlock the interpreter,ZOOKEEPER-1023,12501863,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,botond.hejj,botond.hejj,19/Mar/11 10:20,03/Feb/22 08:50,29/Jun/25 13:34,,3.3.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,contrib-bindings,,,,,0,,,"If the add_auth method has a callback and we execute another command just after it than we can deadlock the python api.
Example:

def deadlock(a, b):
	pass

def watcher(zh, type, state, path):
	if(state == zookeeper.CONNECTED_STATE):
		zookeeper.add_auth(zh, 'test', 'test', deadlock)
		zookeeper.get_children(zh, '/')

zh = zookeeper.init(""host:port"", watcher)

Looking at the code the problem looks like the following:
get_children sync call is running on the main thread and have the GIL it blocks until the get_children finished. Meantime on the other thread the callback of add_auth is called and that tries to get the GIL to call the python callback. So this thread is waiting for the main thread to release the GIL but the main thread is waiting for the other thread to process the reply of get_children.

I am not an expert on python binding but I think it can be solved if the GIL would be release before synchronous c api calls.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Mar/11 13:09;botond.hejj;ZOOKEEPER-1023.patch;https://issues.apache.org/jira/secure/attachment/12474875/ZOOKEEPER-1023.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,2458,,,,,Tue Mar 29 13:09:15 UTC 2011,,,,,,,,,,"0|i05yzj:",32767,,,,,,,,,,,,,,,,,,,,,"29/Mar/11 13:09;botond.hejj;This patch allow other threads to run during synchronous c api calls which fixes this deadlock. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
iarchive leak in C client,ZOOKEEPER-1007,12500477,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,strib,strib,strib,04/Mar/11 21:42,23/Nov/11 19:22,29/Jun/25 13:34,15/Mar/11 20:42,3.3.3,,,,,,,,,,,,,,,,,,,,,,,,3.4.0,,,,,c client,,,,,0,,,"On line 1957, zookeeper_process() returns without cleaning up the ""ia"" buffer that was previously allocated.  I don't know how often this code path is taken, but I thought it was worth reporting.  I will attach a simple patch shortly.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Mar/11 19:11;mahadev;zookeeper-1007.patch;https://issues.apache.org/jira/secure/attachment/12473723/zookeeper-1007.patch","04/Mar/11 21:50;strib;zookeeper-1007.patch;https://issues.apache.org/jira/secure/attachment/12472712/zookeeper-1007.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47515,Reviewed,,,,Wed Mar 16 10:54:31 UTC 2011,,,,,,,,,,"0|i05z0v:",32773,,,,,,,,,,,,,,,,,,,,,"04/Mar/11 22:13;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12472712/zookeeper-1007.patch
  against trunk revision 1074995.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/178//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/178//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/178//console

This message is automatically generated.;;;","04/Mar/11 22:24;strib;I'm guessing new tests aren't required for checking memory leaks in error conditions, but if someone disagrees let me know and I'll try to figure out how to write one when I get some time.;;;","15/Mar/11 16:59;mahadev;jeremy, would you be able to create a patch against zookeeper trunk and also relative to zookeeper home directory?;;;","15/Mar/11 19:11;mahadev;patch against trunk.;;;","15/Mar/11 19:23;strib;Thanks Mahadev.  Anything else you need from me?;;;","15/Mar/11 19:43;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12473723/zookeeper-1007.patch
  against trunk revision 1081896.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/188//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/188//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/188//console

This message is automatically generated.;;;","15/Mar/11 20:39;mahadev;thanks jeremy. The patch looks good to me. Ill commit this to trunk.;;;","15/Mar/11 20:42;mahadev;I just committed this to trunk. thanks jeremy.;;;","16/Mar/11 10:54;hudson;Integrated in ZooKeeper-trunk #1123 (See [https://hudson.apache.org/hudson/job/ZooKeeper-trunk/1123/])
    ZOOKEEPER-1007. iarchive leak in C client (jeremy stribling via mahadev)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"QuorumPeer ""Address already in use"" -- regression in 3.3.3",ZOOKEEPER-1006,12500327,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,phunt,phunt,phunt,03/Mar/11 17:38,23/Nov/11 19:22,29/Jun/25 13:34,27/Jul/11 17:21,3.3.3,,,,,,,,,,,,,,,,,,,,,,,,3.3.4,3.4.0,,,,tests,,,,,0,,,"CnxManagerTest.testWorkerThreads 

See attachment, this is the first time I've seen this test fail, and it's failed 2 out of the last three test runs.

Notice (attachment) once this happens the port never becomes available.

{noformat}
2011-03-02 15:53:12,425 - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11245:NIOServerCnxn$Factory@251] - Accepted socket connection from /172.29.6.162:51441
2011-03-02 15:53:12,430 - WARN  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11245:NIOServerCnxn@639] - Exception causing close of session 0x0 due to java.io.IOException: ZooKeeperServer not running
2011-03-02 15:53:12,430 - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11245:NIOServerCnxn@1435] - Closed socket connection for client /172.29.6.162:51441 (no session established for client)
2011-03-02 15:53:12,430 - WARN  [QuorumPeer:/0:0:0:0:0:0:0:0:11241:Follower@82] - Exception when following the leader
java.io.EOFException
	at java.io.DataInputStream.readInt(DataInputStream.java:375)
	at org.apache.jute.BinaryInputArchive.readInt(BinaryInputArchive.java:63)
	at org.apache.zookeeper.server.quorum.QuorumPacket.deserialize(QuorumPacket.java:84)
	at org.apache.jute.BinaryInputArchive.readRecord(BinaryInputArchive.java:108)
	at org.apache.zookeeper.server.quorum.Learner.readPacket(Learner.java:148)
	at org.apache.zookeeper.server.quorum.Learner.registerWithLeader(Learner.java:267)
	at org.apache.zookeeper.server.quorum.Follower.followLeader(Follower.java:66)
	at org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:645)
2011-03-02 15:53:12,431 - INFO  [QuorumPeer:/0:0:0:0:0:0:0:0:11241:Follower@165] - shutdown called
java.lang.Exception: shutdown Follower
	at org.apache.zookeeper.server.quorum.Follower.shutdown(Follower.java:165)
	at org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:649)
2011-03-02 15:53:12,432 - INFO  [QuorumPeer:/0:0:0:0:0:0:0:0:11241:QuorumPeer@621] - LOOKING
2011-03-02 15:53:12,432 - INFO  [QuorumPeer:/0:0:0:0:0:0:0:0:11241:FastLeaderElection@663] - New election. My id =  0, Proposed zxid = 0
2011-03-02 15:53:12,433 - INFO  [WorkerReceiver Thread:FastLeaderElection@496] - Notification: 0 (n.leader), 0 (n.zxid), 2 (n.round), LOOKING (n.state), 0 (n.sid), LOOKING (my state)
2011-03-02 15:53:12,433 - INFO  [WorkerReceiver Thread:FastLeaderElection@496] - Notification: 0 (n.leader), 0 (n.zxid), 2 (n.round), LOOKING (n.state), 0 (n.sid), LOOKING (my state)
2011-03-02 15:53:12,433 - INFO  [WorkerReceiver Thread:FastLeaderElection@496] - Notification: 0 (n.leader), 0 (n.zxid), 2 (n.round), LOOKING (n.state), 0 (n.sid), LOOKING (my state)
2011-03-02 15:53:12,633 - INFO  [WorkerReceiver Thread:FastLeaderElection@496] - Notification: 0 (n.leader), 0 (n.zxid), 2 (n.round), LOOKING (n.state), 0 (n.sid), LOOKING (my state)
2011-03-02 15:53:12,633 - INFO  [QuorumPeer:/0:0:0:0:0:0:0:0:11245:QuorumPeer@655] - LEADING
2011-03-02 15:53:12,636 - INFO  [QuorumPeer:/0:0:0:0:0:0:0:0:11245:Leader@54] - TCP NoDelay set to: true
2011-03-02 15:53:12,638 - INFO  [QuorumPeer:/0:0:0:0:0:0:0:0:11245:ZooKeeperServer@151] - Created server with tickTime 1000 minSessionTimeout 2000 maxSessionTimeout 20000 datadir /var/lib/hudson/workspace/CDH3-ZooKeeper-3.3.3_sles/build/test/tmp/test9001250572426375869.junit.dir/version-2 snapdir /var/lib/hudson/workspace/CDH3-ZooKeeper-3.3.3_sles/build/test/tmp/test9001250572426375869.junit.dir/version-2
2011-03-02 15:53:12,639 - ERROR [QuorumPeer:/0:0:0:0:0:0:0:0:11245:Leader@133] - Couldn't bind to port 11245
java.net.BindException: Address already in use
	at java.net.PlainSocketImpl.socketBind(Native Method)
	at java.net.PlainSocketImpl.bind(PlainSocketImpl.java:365)
	at java.net.ServerSocket.bind(ServerSocket.java:319)
	at java.net.ServerSocket.<init>(ServerSocket.java:185)
	at java.net.ServerSocket.<init>(ServerSocket.java:97)
	at org.apache.zookeeper.server.quorum.Leader.<init>(Leader.java:131)
	at org.apache.zookeeper.server.quorum.QuorumPeer.makeLeader(QuorumPeer.java:512)
	at org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:657)
{noformat}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Mar/11 00:19;phunt;TEST-org.apache.zookeeper.test.CnxManagerTest.txt;https://issues.apache.org/jira/secure/attachment/12472635/TEST-org.apache.zookeeper.test.CnxManagerTest.txt","04/Mar/11 18:07;phunt;ZOOKEEPER-1006.patch;https://issues.apache.org/jira/secure/attachment/12472691/ZOOKEEPER-1006.patch","04/Mar/11 00:28;phunt;ZOOKEEPER-1006.patch;https://issues.apache.org/jira/secure/attachment/12472636/ZOOKEEPER-1006.patch","03/Mar/11 17:38;phunt;workerthreads_badtest.txt;https://issues.apache.org/jira/secure/attachment/12472572/workerthreads_badtest.txt",,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47516,Reviewed,,,,Wed Jul 27 17:21:18 UTC 2011,,,,,,,,,,"0|i05z13:",32774,"turns out this is a bug in the test, the supplied patch fixes the problem by using polling rather than straight sleep.",,,,,,,,,,,,,,,,,,,,"03/Mar/11 17:38;phunt;attached output of bad test;;;","03/Mar/11 18:52;breed;why doesn't this show up in the nightly test builds?;;;","03/Mar/11 18:52;breed;or my machine for that matter :);;;","03/Mar/11 19:14;vishalmlst;May not be a regression (ZOOKEEPER-973).;;;","03/Mar/11 19:17;phunt;Timing? JVM? This happens to be a hudson machine, the slot is virtualized (vmware).

more detail:
Linux sles11-slave02 2.6.27.19-5-default #1 SMP 2009-02-28 04:40:21 +0100 x86_64 x86_64 x86_64 GNU/Linux

dual:
model name	: Intel(R) Xeon(R) CPU           E5506  @ 2.13GHz

Server environment:java.version=1.6.0_21

;;;","03/Mar/11 19:24;phunt;I ran netstat and checked to see if there were any zombies - none found.

This test just failed again...;;;","03/Mar/11 20:00;vishalmlst;Didn't realize it was the test for worker threads. I have not seen that error during this test. I will take a look.;;;","03/Mar/11 21:38;breed;that exception is a red herring. it turns out we always get that exception. there is a bug in the test case. in setup() we have:

{code}
            int clientport = PortAssignment.unique();
            peers.put(Long.valueOf(i),
                    new QuorumServer(i,
                            new InetSocketAddress(clientport),
                    new InetSocketAddress(PortAssignment.unique())));
            tmpdir[i] = ClientBase.createTmpDir();
            port[i] = clientport;
{code}

so the clientport is getting assigned to the same port as the quorum port. we really need to construct QuorumServer with PortAssignment.unique() instead.

Pat since you seem to be able to reproduce it, can you try that fix and see if it changes anything?
;;;","03/Mar/11 23:54;fpj;If I remember correctly, the fact that the port value is reused doesn't matter for the test cases in CnxManagerTest pre-880, since they don't start a zookeeper server. Apparently it does matter for a test case introduced in ZOOKEEPER-880 (testWorkerThreads).;;;","03/Mar/11 23:54;phunt;Yea I noticed that right away and fixed the port assignment issue, however the testWorkerThread test still fails:

Notice that there are no logs for 4 seconds:

{noformat}
2011-03-03 15:11:43,275 - INFO  [main:CnxManagerTest@309] - Round 2, restarting peer 0
2011-03-03 15:11:43,276 - INFO  [main:FileSnap@82] - Reading snapshot /tmp/phunt-cdh3/zookeeper/build/test/tmp/test579996210206510713.junit.dir/version-2/snapshot.100000000
2011-03-03 15:11:43,277 - INFO  [Thread-83:QuorumCnxManager$Listener@473] - My election bind port: 11252
2011-03-03 15:11:43,286 - INFO  [QuorumPeer:/0:0:0:0:0:0:0:0:11251:QuorumPeer@621] - LOOKING
2011-03-03 15:11:43,286 - INFO  [QuorumPeer:/0:0:0:0:0:0:0:0:11251:FastLeaderElection@663] - New election. My id =  0, Proposed zxid = 4294967296
2011-03-03 15:11:43,286 - INFO  [WorkerReceiver Thread:FastLeaderElection@496] - Notification: 0 (n.leader), 4294967296 (n.zxid), 1 (n.round), LOOKING (n.state), 0 (n.sid), LOOKING (my state)
------------- ---------------- ---------------

Testcase: testCnxManager took 0.315 sec
Testcase: testCnxManagerTimeout took 5.014 sec
Testcase: testCnxManagerSpinLock took 2.053 sec
Testcase: testWorkerThreads took 34.183 sec
        FAILED
Thu Mar 03 15:11:47 PST 2011 Incorrect number of Worker threads for sid=0 expected 4 found 0
junit.framework.AssertionFailedError: Thu Mar 03 15:11:47 PST 2011 Incorrect number of Worker threads for sid=0 expected 4 found 0
        at org.apache.zookeeper.test.CnxManagerTest.verifyThreadCount(CnxManagerTest.java:324)
        at org.apache.zookeeper.test.CnxManagerTest.testWorkerThreads(CnxManagerTest.java:313)
{noformat}
;;;","04/Mar/11 00:19;phunt;Attached a log of the test failure after fixing the port conflict problem.;;;","04/Mar/11 00:28;phunt;This patch fixes the address in use issue, but still fails. I just tried this test on ubuntu and it fails there now too (was passing previously)

apply the patch then:

ant -Dtestcase=CnxManagerTest clean test-core-java;;;","04/Mar/11 00:34;phunt;here's an example of recent failure on ubuntu:

{noformat}

2011-03-03 16:25:53,599 - INFO  [main:CnxManagerTest@309] - Round 0, restarting peer 1
2011-03-03 16:25:53,600 - INFO  [main:FileSnap@82] - Reading snapshot /home/phunt/zookeeper/build/test/tmp/test4354134956302701428.junit.dir/version-2/snapshot.0
2011-03-03 16:25:53,601 - INFO  [Thread-96:QuorumCnxManager$Listener@473] - My election bind port: 11255
2011-03-03 16:25:53,602 - INFO  [QuorumPeer:/0:0:0:0:0:0:0:0:11254:QuorumPeer@621] - LOOKING
2011-03-03 16:25:53,603 - INFO  [QuorumPeer:/0:0:0:0:0:0:0:0:11254:FastLeaderElection@663] - New election. My id =  1, Proposed zxid = 0
2011-03-03 16:25:53,637 - INFO  [WorkerReceiver Thread:FastLeaderElection@496] - Notification: 1 (n.leader), 0 (n.zxid), 1 (n.round), LOOKING (n.state), 1 (n.sid), FOLLOWING (my state)
2011-03-03 16:25:53,637 - INFO  [WorkerReceiver Thread:FastLeaderElection@496] - Notification: 0 (n.leader), 4294967296 (n.zxid), 1 (n.round), LOOKING (n.state), 0 (n.sid), LOOKING (my state)
2011-03-03 16:25:53,638 - INFO  [QuorumPeer:/0:0:0:0:0:0:0:0:11254:FastLeaderElection@721] - Updating proposal
2011-03-03 16:25:53,638 - INFO  [WorkerReceiver Thread:FastLeaderElection@496] - Notification: 2 (n.leader), 0 (n.zxid), 1 (n.round), FOLLOWING (n.state), 0 (n.sid), LOOKING (my state)
2011-03-03 16:25:53,638 - INFO  [WorkerReceiver Thread:FastLeaderElection@496] - Notification: 1 (n.leader), 0 (n.zxid), 1 (n.round), LOOKING (n.state), 1 (n.sid), LOOKING (my state)
2011-03-03 16:25:53,654 - INFO  [WorkerSender Thread:QuorumCnxManager@183] - Have smaller server identifier, so dropping the connection: (2, 1)
2011-03-03 16:25:53,654 - INFO  [WorkerReceiver Thread:FastLeaderElection@496] - Notification: 0 (n.leader), 4294967296 (n.zxid), 1 (n.round), LOOKING (n.state), 1 (n.sid), FOLLOWING (my state)
2011-03-03 16:25:53,654 - INFO  [WorkerReceiver Thread:FastLeaderElection@496] - Notification: 0 (n.leader), 4294967296 (n.zxid), 1 (n.round), LOOKING (n.state), 1 (n.sid), LOOKING (my state)
2011-03-03 16:25:53,655 - INFO  [WorkerReceiver Thread:FastLeaderElection@496] - Notification: 2 (n.leader), 0 (n.zxid), 1 (n.round), FOLLOWING (n.state), 0 (n.sid), LOOKING (my state)
2011-03-03 16:25:53,657 - INFO  [WorkerSender Thread:QuorumCnxManager@183] - Have smaller server identifier, so dropping the connection: (2, 1)
2011-03-03 16:25:53,657 - WARN  [Thread-102:QuorumCnxManager$RecvWorker@727] - Connection broken for id 1, my id = 2, error = java.nio.channels.AsynchronousCloseException
2011-03-03 16:25:53,658 - WARN  [Thread-102:QuorumCnxManager$RecvWorker@730] - Interrupting SendWorker
2011-03-03 16:25:53,687 - WARN  [Thread-103:QuorumCnxManager$SendWorker@638] - Exception when using channel: for id 2 my id = 1 error = java.io.IOException: Broken pipe
2011-03-03 16:25:53,687 - WARN  [Thread-104:QuorumCnxManager$RecvWorker@727] - Connection broken for id 2, my id = 1, error = java.nio.channels.ClosedChannelException
2011-03-03 16:25:53,687 - WARN  [Thread-104:QuorumCnxManager$RecvWorker@730] - Interrupting SendWorker
2011-03-03 16:25:53,688 - ERROR [Thread-101:QuorumCnxManager$SendWorker@611] - Failed to send last message. Shutting down thread.
java.nio.channels.ClosedChannelException
        at sun.nio.ch.SocketChannelImpl.ensureWriteOpen(SocketChannelImpl.java:126)
        at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:324)
        at org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker.send(QuorumCnxManager.java:599)
        at org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker.run(QuorumCnxManager.java:609)
2011-03-03 16:25:53,688 - WARN  [Thread-101:QuorumCnxManager$SendWorker@642] - Send worker leaving thread
2011-03-03 16:25:53,688 - WARN  [Thread-103:QuorumCnxManager$SendWorker@642] - Send worker leaving thread
2011-03-03 16:25:53,855 - INFO  [QuorumPeer:/0:0:0:0:0:0:0:0:11254:FastLeaderElection@697] - Notification time out: 400
2011-03-03 16:25:53,855 - INFO  [WorkerReceiver Thread:FastLeaderElection@496] - Notification: 0 (n.leader), 4294967296 (n.zxid), 1 (n.round), LOOKING (n.state), 1 (n.sid), LOOKING (my state)
2011-03-03 16:25:53,856 - INFO  [WorkerReceiver Thread:FastLeaderElection@496] - Notification: 0 (n.leader), 4294967296 (n.zxid), 1 (n.round), LOOKING (n.state), 1 (n.sid), FOLLOWING (my state)
2011-03-03 16:25:53,856 - INFO  [WorkerReceiver Thread:FastLeaderElection@496] - Notification: 2 (n.leader), 0 (n.zxid), 1 (n.round), FOLLOWING (n.state), 0 (n.sid), LOOKING (my state)
2011-03-03 16:25:54,256 - INFO  [QuorumPeer:/0:0:0:0:0:0:0:0:11254:FastLeaderElection@697] - Notification time out: 800
2011-03-03 16:25:55,057 - INFO  [QuorumPeer:/0:0:0:0:0:0:0:0:11254:FastLeaderElection@697] - Notification time out: 1600
2011-03-03 16:25:56,657 - INFO  [QuorumPeer:/0:0:0:0:0:0:0:0:11254:FastLeaderElection@697] - Notification time out: 3200
------------- ---------------- ---------------
FAILURE
{noformat};;;","04/Mar/11 01:16;phunt;I just upped the sleep time to *5 (restart peer in testWorkerThread) original and now it passes on both hosts where it was failing previously. (I hate sleeps in tests btw!)

We need to change this test to remove the sleep. Sleeps in tests are very bad, 1) they tend to fail on slow machines (and more importantly) 2) they make ""ant test"" take a long time. We don't want tests to take a long time. I did a bunch of work a year or two ago to remove all* sleeps from tests, we shouldn't let them creep back in (I realize it's hard to write tests w/o sleep, but it's critical to ensure the tests are fast and testers can rely on the results).;;;","04/Mar/11 01:39;phunt;btw, an easy fix for this test would be to sleep(250) in a loop around the thread count check. have some max loop count (equiv to say 60seconds of total time) to limit the failure case. In the ""success"" case the test will complete as soon as the machine can process the test.
;;;","04/Mar/11 15:15;vishalmlst;{quote}
We need to change this test to remove the sleep. Sleeps in tests are very bad, 1) they tend to fail on slow machines (and more importantly) 2) they make ""ant test"" take a long time. 
We don't want tests to take a long time. I did a bunch of work a year or two ago to remove all* sleeps from tests, we shouldn't let them creep back in (I realize it's hard to write tests w/o sleep, but it's critical to ensure the tests are fast and testers can rely on the results).
{quote}

I agree that we should avoid sleeps, however, on slower machines it is very difficult to give a preditable outcome. The test can fail even if we wait longer. So can the tester really rely on the result on slower machines?

In general, on a resonably well configured setup, I consider the failure that we saw here as a legitimate failure. The test expects a node to join a running ensemble in initiLimt() * tickTime() * 2. The test is not failing the ensmble (and causing leader election in all 3 nodeS) while restarting the peer. If a peer cannot join in two attempts, then I would think that something is wrong in FLE. So that was my original intention for the timeout.

{quote}
btw, an easy fix for this test would be to sleep(250) in a loop around the thread count check. have some max loop count (equiv to say 60seconds of total time) to limit the failure case. In the ""success"" case the test will complete as soon as the machine can process the test.
{quote}

Sure, we can do that. On faster setups, this will let the test to finish sooner. Since I wrote the test, I can do that (if you haven't fixed it already).
;;;","04/Mar/11 16:43;phunt;bq. Since I wrote the test, I can do that 

No worries Vishal. I have the h/w where it's failing so makes sense for me to address it (working on it currently). Thanks for the offer though. Keep up the good work (love seeing ppl add tests!). ttyl;;;","04/Mar/11 18:07;phunt;This updated patch uses polling rather than timeout (sleep) with a max limit on the poll time that's large.

I retested this on my hosts and it passes consistently.
;;;","04/Mar/11 18:08;phunt;Vishal -- would you mind porting this to trunk? I believe you have a separate jira for trunk that incorporates this change, correct?;;;","07/Mar/11 16:57;phunt;This issue occurred on Apache Hudson: https://hudson.apache.org/hudson/view/S-Z/view/ZooKeeper/job/ZooKeeper_branch_3_3/179/

I'd like to get this committed to 3.3 branch (if we ever do 3.3.4...) to elim any false failures on hudson, plz review.;;;","07/Mar/11 16:59;phunt;Slating this for 3.3.4;;;","07/Mar/11 17:09;breed;+1 looks good thanx!;;;","07/Mar/11 18:07;breed;i've committed this to 3.3, but it doesn't apply to trunk. any ideas why?;;;","08/Mar/11 06:52;phunt;I believe Vishal is working on addressing ZOOKEEPER-880 issue (the origin of this test) on trunk in a different jira 

see this https://issues.apache.org/jira/browse/ZOOKEEPER-880?focusedCommentId=12991286&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12991286;;;","08/Mar/11 14:09;vishalmlst;Hi Patrick,

Thanks for the fix. I will port the test to the trunk.;;;","08/Mar/11 21:57;vishalmlst;Fix to be committed to trunk as a part of https://issues.apache.org/jira/browse/ZOOKEEPER-880;;;","08/Mar/11 22:02;vishalmlst;Patch submitted to ZOOKEEPER-880;;;","27/Jul/11 15:18;mahadev;SHould this be marked resolved since ZOOKEEPER-880 is fixed?;;;","27/Jul/11 17:21;vishalmlst;patch committed to trunk as a part of ZOOKEEPER-880.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
The Barrier sample code should create a EPHEMERAL znode instead of EPHEMERAL_SEQUENTIAL znode,ZOOKEEPER-1002,12499435,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Invalid,chingshen,chingshen,chingshen,23/Feb/11 02:02,23/Apr/14 22:26,29/Jun/25 13:34,23/Apr/14 22:26,3.3.2,,,,,,,,,,,,,,,,,,,,,,,,3.4.7,3.5.0,,,,documentation,,,,,0,documentation,,"Please see the Barrier sample code from ZooKeeper Tutorial(http://zookeeper.apache.org/doc/r3.3.1/zookeeperTutorial.html#sc_barriers), that should enable a group of processes to synchronize the beginning and the end of a computation.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Feb/11 02:03;chingshen;zookeeper-1002.patch;https://issues.apache.org/jira/secure/attachment/12471678/zookeeper-1002.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,2470,,,,,Wed Apr 23 22:26:45 UTC 2014,,,,,,,,,,"0|i05z1r:",32777,,,,,,,,,,,,,,,,,,,,,"23/Feb/11 02:03;chingshen;Attached a patch.;;;","08/Oct/13 16:55;fpj;I don't understand the rationale for this patch. Could you please describe what you're trying to achieve, [~chingshen]?;;;","23/Apr/14 22:26;michim;Please reopen with more details if this is an actual issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZkClient: stat on non-existing node causes NPE,ZOOKEEPER-996,12499265,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Duplicate,,life,life,21/Feb/11 19:02,27/May/11 16:08,29/Jun/25 13:34,27/May/11 16:08,3.3.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,java client,,,,,0,,,"stat on non-existing node causes NPE. client quit

stat /aa
Exception in thread ""main"" java.lang.NullPointerException
        at org.apache.zookeeper.ZooKeeperMain.printStat(ZooKeeperMain.java:130)
        at org.apache.zookeeper.ZooKeeperMain.processZKCmd(ZooKeeperMain.java:722)
        at org.apache.zookeeper.ZooKeeperMain.processCmd(ZooKeeperMain.java:581)
        at org.apache.zookeeper.ZooKeeperMain.executeLine(ZooKeeperMain.java:353)
        at org.apache.zookeeper.ZooKeeperMain.run(ZooKeeperMain.java:311)
        at org.apache.zookeeper.ZooKeeperMain.main(ZooKeeperMain.java:270)",CentOS release 5.5 (Final),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,214213,,,,,Fri May 27 16:08:20 UTC 2011,,,,,,,,,,"0|i05z1z:",32778,,,,,,,,,,,,,,,,,,,,,"27/May/11 15:18;eribeiro;This issue is duplicated on [ZOOKEEPER-1059], isn't it? ;;;","27/May/11 16:08;phunt;Dup of ZOOKEEPER-1059 which has been fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""eclipse"" target in the build script doesnot include libraray required for test classes in the classpath",ZOOKEEPER-994,12498934,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,mis,mis,mis,17/Feb/11 19:38,23/Nov/11 19:22,29/Jun/25 13:34,27/Feb/11 07:11,3.3.2,,,,,,,,,,,,,,,,,,,,,,,,3.4.0,,,,,build,,,,,0,,,"The ""eclipse"" target in the zoo-keeper build script doesn't include the accessive.jar present in the folder /src/java/libtest in the .classpath file. But the accessive.jar is being referenced from a couple of test classes.
However, the build is successful :)
","Linux box, Eclipse IDE",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1800,1800,,0%,1800,1800,,,,,,,,,,,,,,,,,,,,,,,"17/Feb/11 19:41;mis;ZOOKEEPER-994-patch.txt;https://issues.apache.org/jira/secure/attachment/12471317/ZOOKEEPER-994-patch.txt",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47518,Reviewed,,,,Tue Mar 01 03:17:56 UTC 2011,,,,,,,,,,"0|i05z2f:",32780,,,,,,,,,,,,,,,,,,,,,"17/Feb/11 19:41;mis;Added the classpath entry for the accessive.jar library;;;","17/Feb/11 20:21;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12471317/ZOOKEEPER-994-patch.txt
  against trunk revision 1069169.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/135//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/135//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/135//console

This message is automatically generated.;;;","19/Feb/11 07:51;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12471317/ZOOKEEPER-994-patch.txt
  against trunk revision 1072085.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/139//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/139//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/139//console

This message is automatically generated.;;;","21/Feb/11 09:41;mis;Hi, All

Can anybody please commit this.

Thanks,
MIS.


;;;","24/Feb/11 22:31;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12471317/ZOOKEEPER-994-patch.txt
  against trunk revision 1072085.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/158//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/158//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/158//console

This message is automatically generated.;;;","27/Feb/11 07:11;phunt;MIS thanks for the patch! Committed.;;;","01/Mar/11 03:17;hudson;Integrated in ZooKeeper-trunk #1107 (See [https://hudson.apache.org/hudson/job/ZooKeeper-trunk/1107/])
    ZOOKEEPER-994 eclipse target in the build script doesnot include libraray required for test classes in the classpath (MIS via phunt)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZK servers not balanced in number of sessions,ZOOKEEPER-989,12498491,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,jiangxw,jiangxw,14/Feb/11 00:16,19/Mar/11 20:15,29/Jun/25 13:34,,3.3.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,c client,,,,,0,,,"In a 5-machine ZK cluster, when there is a large number of sessions, the 1st server seems to get more sessions.

1st server gets 25% sessions, while the remaining gets 18.75% sessions",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-1018,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,2476,,,,,Sat Mar 19 20:15:41 UTC 2011,,,,,,,,,,"0|i05z33:",32783,,,,,,,,,,,,,,,,,,,,,"14/Feb/11 06:02;mahadev;were the client connecting and disconnecting? How many session is large number of sessions?;;;","19/Mar/11 20:15;phunt;Xiaowei -- could you retry this with ZOOKEEPER-1018 applied?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"In QuoromCnxManager we are adding sent messgae to lastMessageSent, but we are never removing that message from it after sending it, so this will lead to sending the same message again in next round",ZOOKEEPER-986,12498355,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Not A Problem,,sandep.amit,sandep.amit,11/Feb/11 12:04,19/May/14 21:42,29/Jun/25 13:34,19/May/14 21:42,3.3.2,,,,,,,,,,,,,,,,,,,,,,,,3.5.0,,,,,quorum,,,,,0,gsoc,,"Function for sending out the notification message to corresponding peer for leader election

private void processMessages() throws Exception {
             try {
                 ByteBuffer b = getLastMessageSent(sid);
                 if (b != null) {
                     send(b);
                 }
             } catch (IOException e) {
                 LOG.error(""Failed to send last message to "" + sid, e);
                 throw e;
             }
             try {
                 ArrayBlockingQueue<ByteBuffer> bq = queueSendMap.get(sid);
                 if (bq == null) {
                     dumpQueueSendMap();
                     throw new Exception(""No queue for incoming messages for "" +
                             ""sid="" + sid);
                 }
                 while (running && !shutdown && sock != null) {
                     ByteBuffer b = null;
                     try {
                        b = bq.poll(1000, TimeUnit.MILLISECONDS);
                         if(b != null){
                             recordLastMessageSent(sid, b);
                             send(b);
                         }
                     } catch (InterruptedException e) {
                         LOG.warn(""Interrupted while waiting for message on "" +
                                  ""queue"", e);
                     }
                 }
             } catch (Exception e) {
                 LOG.warn(""Exception when using channel: for id "" + sid
                          + "" my id = "" + self.getId() + "" error = "", e);
                 throw e;
             }
        }

This is the code taken from zookeeper patch 932.
Here we are adding the message to be sent in current round to lastMessageSent. But in next round that message will still be there. So when we try to send a new message to server it will again  do                  

ByteBuffer b = getLastMessageSent(sid);
                 if (b != null) {
                     send(b);
                 }
and it will again send back that old message to that server. So in this way it will send back every message twice. Though it will not affect the correctness of FLE but sending message twice it create an extra overhead and slow down the election process.
 ",Windows,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,36636,,,,,Mon May 19 21:42:43 UTC 2014,,,,,,,,,,"0|i05z3r:",32786,,,,,,,,,,,,,,,,,,,,,"11/Feb/11 16:07;fpj;Hi Sandeep, It doesn't send every message twice because it only records the message inside the while loop. It sends the last message before it gets into the loop. ;;;","15/Jun/11 06:26;mahadev;not a blocker. Moving it out of 3.4 release.;;;","19/May/14 21:42;michim;This is not a problem as Flavio pointed out.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
running zkServer.sh start remotely using ssh hangs,ZOOKEEPER-983,12497537,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,phunt,phunt,phunt,03/Feb/11 05:21,23/Nov/11 19:22,29/Jun/25 13:34,27/Feb/11 06:57,3.3.2,,,,,,,,,,,,,,,,,,,,,,,,3.4.0,,,,,scripts,,,,,0,,,"If zkServer.sh is run remotely using ssh as follows ssh will ""hang"" - i.e. not complete/return once the server is started. This is even though zkServer.sh starts the java vm in the background.

$ ssh <host> ""zkServer.sh start""

this is due to the following issue:

http://www.slac.stanford.edu/comp/unix/ssh_faq.html#logoff_hangs

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Feb/11 06:06;phunt;ZOOKEEPER-983.patch;https://issues.apache.org/jira/secure/attachment/12470108/ZOOKEEPER-983.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,37456,Reviewed,,,,Thu Jun 09 16:46:19 UTC 2011,,,,,,,,,,"0|i05hx3:",30000,,,,,,,,,,,,,,,,,,,,,"03/Feb/11 06:06;phunt;fixes the problem with ssh by redirecting stdin/out/err.

you can test by running

ssh localhost ""cd zk; bin/zkServer.sh start""


I also fixed a problem with stop, where start would fail to write the pid file if the datadirectory didn't yet exist (or the pid file directory didn't already exist - anything that would cause writing the pid file to fail);;;","03/Feb/11 06:33;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12470108/ZOOKEEPER-983.patch
  against trunk revision 1062244.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 9 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/114//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/114//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/114//console

This message is automatically generated.;;;","07/Feb/11 05:34;mahadev;pat, the changes look good but again you have a change thats reflected in  ZOOKEEPER-976 as well? This is regarding zoo pid file. Should we remove that change from this patch?
;;;","09/Feb/11 03:25;mahadev;+1 for the patch. again this clashes with ZOOKEEPER-976, you can go ahead and commit this as one.;;;","19/Feb/11 07:54;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12470108/ZOOKEEPER-983.patch
  against trunk revision 1072085.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/142//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/142//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/142//console

This message is automatically generated.;;;","24/Feb/11 23:18;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12470108/ZOOKEEPER-983.patch
  against trunk revision 1072085.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/161//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/161//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/161//console

This message is automatically generated.;;;","27/Feb/11 06:57;phunt;Committed. 

976 does include this change accidentally, good catch, I'll fix that patch before committing 976.;;;","01/Mar/11 03:17;hudson;Integrated in ZooKeeper-trunk #1107 (See [https://hudson.apache.org/hudson/job/ZooKeeper-trunk/1107/])
    ZOOKEEPER-983. running zkServer.sh start remotely using ssh hangs (phunt)
;;;","09/Jun/11 16:46;billa;The ""-q"" option to nc introduced in this patch isn't available in all Linux distro (not in RedHat and FreeBSD).  I have file ZOOKEEPER-1089 for that.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zkServer.sh won't start zookeeper on an ubuntu 10.10 system due to a bug in the startup script.,ZOOKEEPER-982,12497441,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Invalid,thkoch,la3lma,la3lma,02/Feb/11 09:52,12/Dec/11 17:47,29/Jun/25 13:34,12/Dec/11 17:47,3.3.1,,,,,,,,,,,,,,,,,,,,,,,,3.5.0,,,,,scripts,,,,,0,,,"When running ""zkServer.sh start"" I get these error messages:

====
$sudo sh  bin/zkServer.sh start
MX enabled by default
bin/zkServer.sh: 69: cygpath: not found
Using config: 
grep: : No such file or directory
Starting zookeeper ... 
STARTED
$ Invalid config, exiting abnormally
====

The ""Invalid config..."" text is output from the server which terminates immediately after this message has been printed.

The fix is easy:   Inside zkServer.sh change the line
====
if $cygwin
====

into

====
if [ -n ""$cygwin"" ]
====

This fixes the problem and makes the server run


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Feb/11 09:20;la3lma;ZOOKEEPER-982.patch;https://issues.apache.org/jira/secure/attachment/12470121/ZOOKEEPER-982.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,70801,,,,,Sat Dec 10 07:00:07 UTC 2011,,,,,,,,,,"0|i05z4f:",32789,,,,,,,,,,,,,,,,,,,,,"02/Feb/11 16:35;phunt;Hi Bjørn, would you mind creating a patch for this? The process is pretty straightforward (svn checkout, edit, svn diff, upload patch). See this
https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute

Thanks!
;;;","02/Feb/11 18:14;thkoch;It may very well be possible, that the bug is only in the shell scripts of the ZooKeeper Debian/Ubuntu package.
Bjørn wrote me about this bug and mentioned that he uses this package.

I should remove the bin/zkServer.sh from the Debian package. On Debian you should start/stop zookeeper like all daemons with /etc/init.d/zookeeper start|stop.;;;","03/Feb/11 09:57;la3lma;(same errors on pristine as patched trunk: They don't seem related to the patch.
/home/rmz/svn/zookeeper-trunk/build.xml:930: The following error occurred while executing this line:
/home/rmz/svn/zookeeper-trunk/build.xml:841: Tests failed!
);;;","03/Feb/11 16:59;phunt;More information would be helpful - what test failed? I'd suggest running with output redirected to a file, then attach to this jira.

Perhaps there is a zombie zk server hanginging around? Check ps output. (a previous test may have failed to shutdown the server?);;;","10/Dec/11 07:00;akitada;This bug seems to be, as Thomas Koch said, Debian/Ubuntu specific.

I filed a report and patch for this to Debian BTS:

http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=650882

I think this ticket may be closed as Invalid.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UnknownHostException in QuorumCnxManager,ZOOKEEPER-979,12496958,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,hugh@acunu.com,hugh@acunu.com,27/Jan/11 16:44,28/Jan/11 14:10,29/Jun/25 13:34,,3.3.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,server,,,,,0,,,"I'm using zk 3.3.2 and I'm seeing this in my logs around startup:

2011-01-27 10:16:21,513 [WorkerSender Thread] WARN  org.apache.zookeeper.server.quorum.QuorumCnxManager - Cannot open channel to 0 at election address xxx.yyy.com/10.2.131.19:3888
java.net.UnknownHostException
	at sun.nio.ch.Net.translateException(Net.java:100)
	at sun.nio.ch.SocketAdaptor.connect(SocketAdaptor.java:140)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(QuorumCnxManager.java:366)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager.toSend(QuorumCnxManager.java:335)
	at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.process(FastLeaderElection.java:360)
	at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.run(FastLeaderElection.java:333)
	at java.lang.Thread.run(Thread.java:636)

And all subsequent zk ops give {{ConnectionLossException}}.

I've just explained this to breed_zk on IRC, and he asked me to file a ticket, mentioning that UnknownHostException may sometimes be thrown for reasons other than host resolution. While I'm reasonably certain that the hostname is correct and should be contactable, I need to put some more time into checking our network setup to be absolutely sure. However, two observations arose while looking into this:

* At the top of QuorumCnxManager.connectOne(), we set electionAddr (or fail and return). But then a few lines later we don't actually use this local variable in the call to connect(). This seems like a minor programming mistake (although AFAICT it doesn't change the behaviour).
* In the subsequent catch block, the UnknownHostException that's thrown doesn't contain the address that we were trying to connect to (though if you capture WARN log messages, you can see what it was).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,36638,,,,,Fri Jan 28 14:10:16 UTC 2011,,,,,,,,,,"0|i05z4v:",32791,,,,,,,,,,,,,,,,,,,,,"28/Jan/11 14:10;hugh@acunu.com;Ok, I think I've got to the bottom of this. We were programmatically building a java.util.Properties object, using

for (InetAddress host : hosts) {
    properties.put(String.format(""server.%d"", i++), String.format(""%s:2888:3888"", host.toString()));
}

This was building properties of the form

/10.0.0.1:2888:3888

Notice the leading slash. We then passed the Properties object into QuorumPeerConfig.parseProperties(), which duly constructs an InetSocketAddress with hostname '/10.0.0.1' and port 3888. Note that since the hostname contains the bogus character at the start, the resulting electionAddr.isUnresolved() will be true, since the attempt to resolve the hostname will have failed.

Everything then continues until the first attempt is made to do Socket.connect() with that InetSocketAddress. At this point, some undocumented behaviour in the Socket class comes into play. In sun.nio.ch.SocketAdaptor.connect() (line 140 in openjdk 1.6.0_17 that I'm using) it calls Net.translateException(), which takes the UnresolvedAddressException and instead throws an UnknownHostException. The rationale behind this seems to be that UnresolvedHostException is an unchecked exception, and they want to throw an IOException (""Throw UnknownHostException from here since it cannot be thrown as a SocketException""). So instead they just obscure the true source of the problem, and the developer is none the wiser. It doesn't seem to be stated anywhere, but apparently you may only call Socket.connect() with a resolved InetSocketAddress.

Anyway, it seems to me the thing to do here would be to try to resolve the provided server addresses much earlier. Perhaps even in QuorumPeerConfig, via InetAddress.getByName().;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZooKeeper startup script doesn't use JAVA_HOME,ZOOKEEPER-976,12495845,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,phunt,phunt,phunt,18/Jan/11 01:36,23/Nov/11 19:22,29/Jun/25 13:34,27/Feb/11 07:02,3.3.2,,,,,,,,,,,,,,,,,,,,,,,,3.4.0,,,,,,,,,,0,,,"From bug filed on CDH: https://issues.cloudera.org/browse/DISTRO-47 - moving it to this jira to address:

------------------------------------------------------
Bug filed by ""grep.alex"" at http://getsatisfaction.com/cloudera/topics/cdh3b3_zookeeper_startup_script_doesnt_use_java_home

On RedHat 5 (using the RPM installer) I was able to install and run all the Hadoop components. The Zookeeper install was fine, but it wouldn't start:

{noformat}
[root@aholmes-desktop init.d]# ./hadoop-zookeeper start 
JMX enabled by default 
Using config: /etc/zookeeper/zoo.cfg 
Starting zookeeper ... 
STARTED 
[root@aholmes-desktop init.d]# Exception in thread ""main"" java.lang.NoSuchMethodError: method java.lang.management.ManagementFactory.getPlatformMBeanServer with signature ()Ljavax.management.MBeanServer; was not found. 
at org.apache.zookeeper.jmx.ManagedUtil.registerLog4jMBeans(ManagedUtil.java:48 
...
{noformat} 

After some digging around I found the cause - the Zookeeper startup script (/usr/lib/zookeeper/bin/zkServer.sh ) uses the java found in the path, whereas the other startup scripts use JAVA_HOME. In my case I had the default RHEL5 1.4 JDK in the path, and the 1.6 JDK RPM's installed under /usr/java, hence the above error, which I'm guessing is a fairly common setup.

In my opinion all the startup scripts should all use the same mechanism to determine where to pick java.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,HADOOP-7092,,,,,,,,,"27/Feb/11 07:00;phunt;ZOOKEEPER-976.patch;https://issues.apache.org/jira/secure/attachment/12472098/ZOOKEEPER-976.patch","03/Feb/11 06:23;phunt;ZOOKEEPER-976.patch;https://issues.apache.org/jira/secure/attachment/12470109/ZOOKEEPER-976.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,37455,Reviewed,,,,Tue Mar 01 03:17:56 UTC 2011,,,,,,,,,,"0|i05z5b:",32793,,,,,,,,,,,,,,,,,,,,,"18/Jan/11 01:38;phunt;trunk/bin/zkServer.sh should be updated to use JAVA_HOME to locate ""java"" if set.
;;;","03/Feb/11 06:23;phunt;patch to check for java_home, if set it uses it.
;;;","03/Feb/11 06:51;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12470109/ZOOKEEPER-976.patch
  against trunk revision 1062244.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 9 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/115//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/115//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/115//console

This message is automatically generated.;;;","07/Feb/11 04:38;mahadev;pat, the patch has some changes to zoo data dir and pid file. Though the changes look good and are useful, but just checking if you intended to make that change as part of this patch?;;;","09/Feb/11 03:24;mahadev;+1 for the patch. I think this clashes with ZOOKEEPER-983. I think its ok to commit both at the same time. ;;;","19/Feb/11 08:11;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12470109/ZOOKEEPER-976.patch
  against trunk revision 1072085.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/143//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/143//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/143//console

This message is automatically generated.;;;","24/Feb/11 23:15;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12470109/ZOOKEEPER-976.patch
  against trunk revision 1072085.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/162//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/162//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/162//console

This message is automatically generated.;;;","27/Feb/11 07:00;phunt;Fixed this patch to not include the 983 changes (accidentally included in prior patch file);;;","27/Feb/11 07:02;phunt;committed;;;","01/Mar/11 03:17;hudson;Integrated in ZooKeeper-trunk #1107 (See [https://hudson.apache.org/hudson/job/ZooKeeper-trunk/1107/])
    ZOOKEEPER-976. ZooKeeper startup script doesn't use JAVA_HOME (phunt)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bind() could fail on Leader because it does not setReuseAddress on its ServerSocket ,ZOOKEEPER-973,12494681,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,qwertymaniac,vishalmlst,vishalmlst,05/Jan/11 06:47,24/Jan/12 10:59,29/Jun/25 13:34,23/Jan/12 20:35,3.3.2,,,,,,,,,,,,,,,,,,,,,,,,3.3.5,3.4.3,3.5.0,,,server,,,,,0,,,"setReuseAddress(true) should be used below.

    Leader(QuorumPeer self,LeaderZooKeeperServer zk) throws IOException {
        this.self = self;
        try {
            ss = new ServerSocket(self.getQuorumAddress().getPort());
        } catch (BindException e) {
            LOG.error(""Couldn't bind to port ""
                    + self.getQuorumAddress().getPort(), e);
            throw e;
        }
        this.zk=zk;
    }

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jan/12 05:04;qwertymaniac;ZOOKEEPER-973.patch;https://issues.apache.org/jira/secure/attachment/12509657/ZOOKEEPER-973.patch","05/Jan/12 13:25;qwertymaniac;ZOOKEEPER-973.patch;https://issues.apache.org/jira/secure/attachment/12509538/ZOOKEEPER-973.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,36640,Reviewed,,,,Tue Jan 24 10:59:50 UTC 2012,,,,,,,,,,"0|i05z5r:",32795,,,,,,,,,,,,,,,,,,,,,"15/Jun/11 06:18;mahadev;not a blocker. Moving it out of 3.4 release.;;;","05/Jan/12 13:56;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12509538/ZOOKEEPER-973.patch
  against trunk revision 1227000.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/878//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/878//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/878//console

This message is automatically generated.;;;","06/Jan/12 01:09;phunt;Harsh, the comment is pretty useless/redundant. Can you remove it from the patch? (otw looks ok). Thanks.;;;","06/Jan/12 05:04;qwertymaniac;Ah yes, sorry about that.;;;","06/Jan/12 05:36;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12509657/ZOOKEEPER-973.patch
  against trunk revision 1227927.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/883//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/883//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/883//console

This message is automatically generated.;;;","19/Jan/12 04:38;qwertymaniac;Hey devs, are there any further comments you'd like me to address on this patch? Do let me know.;;;","19/Jan/12 23:24;breed;+1 looks good;;;","23/Jan/12 20:35;phunt;Thanks Harsh!;;;","24/Jan/12 10:59;hudson;Integrated in ZooKeeper-trunk #1438 (See [https://builds.apache.org/job/ZooKeeper-trunk/1438/])
    ZOOKEEPER-973. bind() could fail on Leader because it does not setReuseAddress on its ServerSocket (Harsh J via phunt)

phunt : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1234974
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/Leader.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Fix findbug issue in trunk ""Malicious code vulnerability""",ZOOKEEPER-902,12477655,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,fpj,phunt,phunt,18/Oct/10 17:41,23/Nov/11 19:21,29/Jun/25 13:34,07/Feb/11 19:27,3.4.0,,,,,,,,,,,,,,,,,,,,,,,,3.4.0,,,,,quorum,server,,,,0,,,"https://hudson.apache.org/hudson/view/ZooKeeper/job/ZooKeeper-trunk/970/artifact/trunk/findbugs/zookeeper-findbugs-report.html#Warnings_MALICIOUS_CODE

Malicious code vulnerability Warnings

Code	Warning
MS	org.apache.zookeeper.server.quorum.LeaderElection.epochGen isn't final but should be",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-900,,,,,,,,,,,"07/Feb/11 05:34;phunt;ZOOKEEPER-902.patch;https://issues.apache.org/jira/secure/attachment/12470421/ZOOKEEPER-902.patch","05/Feb/11 11:54;fpj;ZOOKEEPER-902.patch;https://issues.apache.org/jira/secure/attachment/12470352/ZOOKEEPER-902.patch","05/Feb/11 11:09;fpj;ZOOKEEPER-902.patch;https://issues.apache.org/jira/secure/attachment/12470350/ZOOKEEPER-902.patch","05/Feb/11 00:26;fpj;ZOOKEEPER-902.patch;https://issues.apache.org/jira/secure/attachment/12470313/ZOOKEEPER-902.patch","03/Feb/11 06:32;phunt;ZOOKEEPER-902.patch;https://issues.apache.org/jira/secure/attachment/12470112/ZOOKEEPER-902.patch","03/Feb/11 05:09;phunt;ZOOKEEPER-902.patch;https://issues.apache.org/jira/secure/attachment/12470100/ZOOKEEPER-902.patch","02/Feb/11 20:26;fpj;ZOOKEEPER-902.patch;https://issues.apache.org/jira/secure/attachment/12470067/ZOOKEEPER-902.patch","01/Feb/11 17:47;fpj;ZOOKEEPER-902.patch;https://issues.apache.org/jira/secure/attachment/12469945/ZOOKEEPER-902.patch","01/Feb/11 07:34;phunt;ZOOKEEPER-902.patch;https://issues.apache.org/jira/secure/attachment/12469897/ZOOKEEPER-902.patch",,9.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47556,,,,,Mon Feb 07 19:53:15 UTC 2011,,,,,,,,,,"0|i05zav:",32818,,,,,,,,,,,,,,,,,,,,,"09/Nov/10 18:31;phunt;The patch queue now has a setting:

(10:28:53 AM) nigelcdn: There's a new file in src/java/test/bin/test-patch.properties in which is defined the acceptable number of warnings
(10:29:03 AM) nigelcdn: use it very judiciously ;-)

after this issue is fixed we should adjust that file back to 0.
;;;","09/Nov/10 19:04;nidaley;The patch for this issue should also update src/java/test/bin/test-patch.properties to set OK_FINDBUGS_WARNINGS=0;;;","17/Nov/10 15:09;fpj;This issue has been resolved in ZOOKEEPER-900. We should resolve this issue, perhaps after getting a confirmation from Hudson.;;;","17/Nov/10 15:34;vishalmlst;fyi, I had not included test-patch.properties file in my diff.;;;","17/Nov/10 15:41;fpj;Agreed, I've seen that 900 didn't include it. I'd rather let Pat take care of wrapping up this issue... ;;;","17/Nov/10 16:32;phunt;Sounds good. Let's clear out 900 then we can adjust the OK setting back to 0 (as part of this jira) once 900 is committed.;;;","01/Feb/11 07:34;phunt;This patch addressed 4 out of 10 of the findbugs issues.

Flavio please take a look at the remaining 6 - they are in quorum code.;;;","01/Feb/11 17:47;fpj;I have fixed all remaining warnings, but the ones on QuorumCnxManager. I want to check if they are being fixed in one of the current pending patches that Vishal has been working on. It makes more sense to fix them separately.

For Follower, Observer, and Learner, I have removed the synchronization blocks around pendingRevalidations. It seems ok to me to remove them, and this is what findbugs was apparently complaining about.

For AuthFLE, I have fixed synchronization blocks in a different way, by simply replacing the objects we were synchronizing on. In the case of acksqueue, I have replaced the data structure we were using from LinkedBlockQueue to HashSet. It made sense to me to make the change given the way were using acksqueue and fixes the warning.   ;;;","01/Feb/11 17:52;phunt;bq.  It makes more sense to fix them separately.

that's fine, except that the patch queue is failing until those jiras are committed (eta?). If we want to go that route let me know and I'll temporarily change the ""allow this many fb errors"" count on the patch queue. Then when those other jiras are addressed we can change the value back to 0.;;;","02/Feb/11 20:26;fpj;It is ok with me to fix the warnings in QCM to get hudson to work. I'm uploading a new patch.;;;","03/Feb/11 02:13;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12470067/ZOOKEEPER-902.patch
  against trunk revision 1062244.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/111//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/111//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/111//console

This message is automatically generated.;;;","03/Feb/11 05:09;phunt;looks like 2 of the excludes got dropped accidentally. I added them back.;;;","03/Feb/11 05:10;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12470100/ZOOKEEPER-902.patch
  against trunk revision 1062244.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/112//console

This message is automatically generated.;;;","03/Feb/11 05:12;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12470100/ZOOKEEPER-902.patch
  against trunk revision 1062244.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/113//console

This message is automatically generated.;;;","03/Feb/11 06:32;phunt;bad patch, fixed.;;;","03/Feb/11 06:52;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12470112/ZOOKEEPER-902.patch
  against trunk revision 1062244.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/116//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/116//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/116//console

This message is automatically generated.;;;","03/Feb/11 07:04;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12470112/ZOOKEEPER-902.patch
  against trunk revision 1062244.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/117//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/117//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/117//console

This message is automatically generated.;;;","03/Feb/11 21:24;breed;the patch looks good except for two issues i see:

1) ackset is not consistently synchronized. my impression is that this could be a ConcurrentHashMap and then the single synchronized block can be removed.
2) challengeMap is not consistently synchronized, so it is hard to understand if that synchronized block is correct.

;;;","04/Feb/11 00:44;phunt;Flavio can you address these concerns? Thanks.;;;","05/Feb/11 00:26;fpj;Thanks for your comments, Ben.

1- I have made ackset a ""ConcurrentHashMap"";
2- The blocks synchronized on challengeMap were to guarantee that challengeMap and challengeMutex are accessed atomically. I have changed the monitor object to ""Messenger.this"" to avoid confusion, but let me know what you think. I have also made HashMaps concurrent, since there could be multiple threads accessing.;;;","05/Feb/11 07:34;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12470313/ZOOKEEPER-902.patch
  against trunk revision 1062244.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 6 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/120//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/120//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/120//console

This message is automatically generated.;;;","05/Feb/11 11:09;fpj;Another attempt.;;;","05/Feb/11 11:33;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12470350/ZOOKEEPER-902.patch
  against trunk revision 1062244.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 4 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/121//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/121//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/121//console

This message is automatically generated.;;;","05/Feb/11 11:54;fpj;Yet another attempt. ;;;","05/Feb/11 12:24;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12470352/ZOOKEEPER-902.patch
  against trunk revision 1062244.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/122//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/122//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/122//console

This message is automatically generated.;;;","05/Feb/11 16:58;phunt;Flavio you can run this locally as:
ant -Dfindbugs.home=/home/phunt/dev/findbugs-1.3.9 findbugs;;;","05/Feb/11 18:17;fpj;For some reason, my setup doesn't report the same issues. In any case, if you check the latest hudson report, there is no warning on quorum.;;;","07/Feb/11 05:34;phunt;Flavio you dropped the excludes xml file changes again, I updated the patch to include them.

I ran this on my machine and it came up with no issues, so we should be good to go.;;;","07/Feb/11 05:57;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12470421/ZOOKEEPER-902.patch
  against trunk revision 1062244.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/123//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/123//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/123//console

This message is automatically generated.;;;","07/Feb/11 18:28;breed;+1 looks good. thanx flavio!;;;","07/Feb/11 19:27;phunt;I've committed this to trunk. Thanks Flavio!
;;;","07/Feb/11 19:53;hudson;Integrated in ZooKeeper-trunk #1090 (See [https://hudson.apache.org/hudson/job/ZooKeeper-trunk/1090/])
    ZOOKEEPER-902. Fix findbug issue in trunk ""Malicious code vulnerability""
;;;",,,,,,,,,,,,,,,,,,,,,,
Unnecessary snapshot transfers between new leader and followers,ZOOKEEPER-876,12474695,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,dioog,dioog,dioog,21/Sep/10 13:37,01/Jul/13 17:28,29/Jun/25 13:34,01/Jul/13 17:28,3.4.0,,,,,,,,,,,,,,,,,,,,,,,,3.5.0,,,,,,,,,,0,,,"When starting a new leadership, unnecessary snapshot transfers happen between new leader and followers. This is so because of multiple small bugs. 

1) the comparison of zxids is done based on a new proposal, instead of the last logged zxid. (LearnerHandler.java ~ 297)
2) if follower is one zxid behind, the check of the interval of committed logs excludes the follower. (LearnerHandler.java ~ 277)
3) the bug reported in ZOOKEEPER-874 (commitLogs are empty after recover).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-1413,,,,,,,,,,,,,,ZOOKEEPER-874,"18/Jun/11 15:49;fpj;TEST-org.apache.zookeeper.test.FollowerResyncConcurrencyTest.txt;https://issues.apache.org/jira/secure/attachment/12483047/TEST-org.apache.zookeeper.test.FollowerResyncConcurrencyTest.txt","14/Apr/11 10:54;dioog;ZOOKEEPER-876.patch;https://issues.apache.org/jira/secure/attachment/12476319/ZOOKEEPER-876.patch","23/Jun/11 08:13;dioog;second_case.patch;https://issues.apache.org/jira/secure/attachment/12483555/second_case.patch","23/Jun/11 08:12;dioog;second_case.txt;https://issues.apache.org/jira/secure/attachment/12483554/second_case.txt",,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,67885,,,,,Mon Jul 01 17:28:50 UTC 2013,,,,,,,,,,"0|i05zen:",32835,,,,,,,,,,,,,,,,,,,,,"21/Sep/10 13:41;dioog;If follower is one zxid behind, the check of the interval of committed logs excludes the follower in LearnerFollower.java:269. For example, if follower has snapshot-1000 and no logs, and leader has snapshot-1000, log-1001, and so on. The check in that line would force the follower receive again a snapshot. I think the condition should consider minCommittedLog - 1 as lower bound in the test.;;;","21/Sep/10 14:10;dioog;Depends on the patch ZOOKEEPER-874. (Applied in any order);;;","21/Sep/10 14:11;dioog;Some fixes and a unit test.;;;","02/Nov/10 21:49;fpj;This is a nice catch, Diogo, and the patch looks good to me. I have a few very quick comments:

# Instead of returning a pair of longs in startForwarding, we could simply return maxZxid and read lastProposed directly from the leader object. Doesn't it work?
# The first comment of startForwarding is not saying much. Could you please expand it?
# Could you please explain in the beginning of the test case what it is supposed to be testing? It is for later remembering what the test does.

Good job!

;;;","28/Jan/11 16:36;fpj;Hi Diogo, What's the status of this patch? Should we submit it?;;;","14/Apr/11 10:54;dioog;Fix of item 2 in description + test case;;;","14/Apr/11 10:56;dioog;I provided a new patch for this issue. It works in current trunk. The patch fixes only issue 2 in the list above because the effects of issue 1 are minimal. ;;;","24/Apr/11 12:49;fpj;Diogo, I believe you meant to submit this patch for review, correct?
;;;","24/Apr/11 13:13;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12476319/ZOOKEEPER-876.patch
  against trunk revision 1091841.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/230//testReport/
Findbugs warnings: https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/230//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/230//console

This message is automatically generated.;;;","24/May/11 17:17;fpj;Diogo, Could you please upload the patch again and resubmit?;;;","18/Jun/11 15:32;fpj;One test is failing for me with this patch: FollowerResyncConcurrencyTest.

I'm also not convinced that the predicate of the if block in LearnerHandler will work in all cases. The last proposal before minProposal might not be minProposal - 1. Using ""- 1"" seems to capture the case in which the two zxids are from the same epoch, but does not cover cases in which they are from different epochs. Actually, I wonder if ignoring the epoch value can lead to incorrect behavior, since it is possible that the predicate evaluates to true while the peer last zxid is not the last before minCommittedLog. Is this observation right?

Any comment, Diogo?;;;","18/Jun/11 15:49;fpj;Log file of failed test.;;;","19/Jun/11 15:31;fournc;FollowerResyncConcurrencyTest won't fail with just the changes to LearnerHandler (which seem to directly address the bug), but the changes in Learner cause it to fail. I notice that you commented out   
// zk.getZKDatabase().processTxn(pif.hdr, pif.rec);

Did you intend to do this? Adding the transaction to the committed log alone won't suffice for actually applying it to the data tree.
;;;","20/Jun/11 10:13;dioog;You are both right.

@Camille: true, this line should not be commented. The idea was to do exactly what was done before, and to add the proposal of the leader to the committedLog.

@Flavio: yes, it seems the patch is not taking all cases into account.

I am uploading a log and a patch with a test case that shows two problems:

(1) 3 processes out of 5 are started (look for string RESTART QUORUM): p3, p4 and p5. Process p3 is just some zxids behind the other processes, so it should receive a DIFF from leader p5, but instead if receives a SNAP. 

(2) After they are synchronized I stop them, and start them again (look for RESTART QUORUM AGAIN). There was no request processed by the quorum, so p3 and p4 should receive an empty DIFF from leader p5, but both receive a SNAP.

These problems seem to be caused by a couple of issues in the way the epochs are compared and because the committedLog (which should contain the committed proposals) is sometimes incomplete. I will update the patch later on based on the current trunk and check the issues Flavio mentioned.
;;;","20/Jun/11 10:14;dioog;DiffOnRecover shows the two problems mentioned in the comment;;;","20/Jun/11 10:16;dioog;Log of DiffOnRecover;;;","23/Jun/11 08:11;dioog;Let me first focus on the second case above. The scenario is very simple:

1 - The servers are in sync, all of them are stopped.
2 - When they are restarted, they elect a new leader and a DIFF is sent. 
3 - If they are stopped and restarted again, then a snapshot will be sent. 

There is however no difference in their state, so there is absolutely no need to transfer a snapshot. The problem seems to be that after the restart the followers have the same zxid of the last accepted update (at step 1), ie, they somehow forgot the NEWLEADER of step 2.

I am uploading a log that shows that. I used grep to show only the output of QuorumPeer. That is enough to see the problem. The patch I am sending can produce such log (ant test-core-java -Dtestcase=""DiffOn*"").
;;;","16/Jul/11 19:25;mahadev;This is not a blocker. MOving this out to 3.5.0;;;","01/Jul/13 17:28;thawan;ZOOKEEPER-1413 address all of the issues mentioned in the description. However, there is one corner case (used by the unit test in this patch) which is not covered by ZOOKEEPER-1413 where the learner tries to sync with leader with no txnlog. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FileTxnSnapLog.restore does not call listener,ZOOKEEPER-874,12474397,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,dioog,dioog,dioog,17/Sep/10 16:01,02/May/13 02:29,29/Jun/25 13:34,13/Apr/11 16:10,3.3.1,,,,,,,,,,,,,,,,,,,,,,,,3.4.0,,,,,leaderElection,,,,,0,,,"FileTxnSnapLog.restore() does not call listener passed as parameter. The result is that the commitLogs list is empty. When a follower connects to the leader, the leader is forced to send a snapshot to the follower instead of a couple of requests and commits.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-876,,"11/Apr/11 14:50;dioog;ZOOKEEPER-874.patch;https://issues.apache.org/jira/secure/attachment/12476003/ZOOKEEPER-874.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47568,,,,,Thu Apr 14 10:54:44 UTC 2011,,,,,,,,,,"0|i05zev:",32836,,,,,,,,,,,,leader election,,,,,,,,,"18/Sep/10 18:44;fpj;The patch is indeed trivial, but I was wondering if we could write a unit test to verify that it is effective in the case you have identified, Diogo.;;;","21/Sep/10 14:09;dioog;The same as before but now with correct indentation and filename.;;;","09/Nov/10 19:55;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12455142/ZOOKEEPER-874.patch
  against trunk revision 1033155.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/11//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/11//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/11//console

This message is automatically generated.;;;","10/Nov/10 01:39;phunt;Cancelling patch, could you provide a tests that verifies this issue is addressed? Thanks.;;;","11/Apr/11 14:50;dioog;The same patch now with test case;;;","11/Apr/11 21:30;fpj;+1, looks good to me. Thanks, Diogo!;;;","13/Apr/11 16:10;fpj;Committed revision 1091841.

Thanks again, Diogo.;;;","14/Apr/11 10:54;hudson;Integrated in ZooKeeper-trunk #1153 (See [https://hudson.apache.org/hudson/job/ZooKeeper-trunk/1153/])
    ZOOKEEPER-874. FileTxnSnapLog.restore does not call listener (diogo via fpj)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Small fixes to PurgeTxnLog ,ZOOKEEPER-872,12474136,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,vishalmlst,vishalmlst,vishalmlst,15/Sep/10 01:51,03/Feb/22 08:50,29/Jun/25 13:34,,3.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,"PurgeTxnLog forces us to have at least 2 backups (by having count >= 3. Also, it prints to stdout instead of using Logger.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Sep/10 01:55;vishalmlst;ZOOKEEPER-872;https://issues.apache.org/jira/secure/attachment/12454621/ZOOKEEPER-872","07/Jul/11 07:39;mahadev;ZOOKEEPER-872.patch;https://issues.apache.org/jira/secure/attachment/12485541/ZOOKEEPER-872.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,38,,,,,Wed Dec 28 21:16:10 UTC 2011,,,,,,,,,,"0|i05zf3:",32837,,,,,,,,,,,,,,,,,,,,,"15/Sep/10 01:55;vishalmlst;patch attached.
;;;","15/Sep/10 02:00;vishalmlst;Is there any reason why we dont have a findNRecentLogs(int n) method to return the n most recent logs (similar to findNRecentSnapshots)?
While testing I noticed that it can happen that a log file is left undeleted depending on the transaction id of the nth snapshot file.  Thus, we will have n snapshots, but n+1 log file left behind instead of n. This file will be deleted after the next snapshot is taken.

We won't have this problem if we have a function that keeps the n most recent logs and removes the rest.;;;","01/Nov/10 18:48;phunt;Hi Vishal, I noticed a couple issues.

This class is a command line utility. As such we are outputting to both the command line and to the log. The usage() in particular should go to std out so that the user will see it regardless of the log settings (fine if you want to output it to LOG as well, but I think this is unnecessary).

good catch on the error handling for this:

     public static void purge(File dataDir, File snapDir, int num) throws IOException {
-        if (num < 3) {
-            throw new IllegalArgumentException(""count should be greater than 3"");
+        if (num < 2) {
+            throw new IllegalArgumentException(""count should be greater than 1"");
         }

However the number 3 was chosen to ensure that ppl don't shoot themselves in the foot (if the most recent logs get corrupted we'll fall back to the prior when attempting to recover). There really should be a comment to this effect (would be good to add). I don't know how Mahadev feels on this setting (min 3 vs some other number) but he might have more insight as IIRC he implemented this originally.

this following is there to provide feedback to the user when running on command line:

-            System.out.println(""Removing file: ""+
-                DateFormat.getDateTimeInstance().format(f.lastModified())+
-                ""\t""+f.getPath());

again, regardless of logging setup.

Perhaps we should have a ""-q"" option that turns off the CLI logging and just logs to the log file? I know this has been an issue previously (stdout/err) given that cron will spitout emails by default containing stdout/err.

Also, is there a test for this? If you're up to it would be great to add.
;;;","01/Nov/10 20:11;vishalmlst;Hi Pat,

The current code prints to stdout.  We have a RMI service that has ZK server embedded in it. We do this so that we can run/start/stop ZK across platforms without having to write platform specific scripts. In this server, we  start a thread that periodically calls PurgeTxnlog.purge(). As you pointed out, we should have a -q flag to direct to log instead stdout to statisfy both the approaches. I will make that change.

We chose number 2 here because we think having only one backup will be enough. It is not clear to us under what conditions the additional backup will be useful.

Backups are useful under the following scenario (correct me if I am wrong):
1. The current ZooKeeper transaction log and/or snapshot is corrupted, but the past snapshots and transaction logs are ok. Corrupting can mean either disk file corruption or corrupting of transaction entries in the log. We store ZooKeeper data on mirrored disks.
2. The application itself made some errors that requires reverting back to the older version.

For the first point, having one additional backup would suffice. The second point is really tricky. I am not sure how the application can decide which snapshot to revert to. I think in most cases it will be trial and error. It is not clear to me how to estimate the number of backups needed. Also, it is not clear how one would go about going back in time. I looked at LogFormatter utility and that utility does not help much in undoing the erroneous transactions for case 2 above. In general, I think it is good to enforce users to have a minimum of one backup.

Related question: Is there hash on the log files (or internal tree structures) that can tell the ZooKeeper server if the logs are corrupted. If yes, the zookeeper server can verify the hash during startup and take some action based on that. For example, make sure that it never becomes a leader until it gets the correct snapshot from the existing leader (otherwise it may endup corrupting other server's log). ""Corrupting"" here refers to the case where the file is readable, but one or more transactions in the log are bad.

I am not sure if there is a test for this. If I remember correctly, there is a bug that causes the purge() function to leave behind one addition log file. Please refer to my question above about findNRecentSnapshots(). I can add a test or modify the pruge utlity once we have concluded this discussion.;;;","21/Jun/11 17:22;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12454621/ZOOKEEPER-872
  against trunk revision 1138100.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/334//console

This message is automatically generated.;;;","07/Jul/11 07:38;mahadev;cancelling the patch. the patch is not relative to top level dir.;;;","07/Jul/11 07:39;mahadev;Re uploading Vishal's patch. ;;;","07/Jul/11 07:41;mahadev;Moving this out to 3.5 since this isnt critical. Vishal, in case you need this for 3.4, can you please upload a patch by friday?;;;","07/Jul/11 08:24;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12485541/ZOOKEEPER-872.patch
  against trunk revision 1143688.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/374//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/374//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/374//console

This message is automatically generated.;;;","21/Sep/11 23:21;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12485541/ZOOKEEPER-872.patch
  against trunk revision 1172406.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    -1 javac.  The patch appears to cause tar ant target to fail.

    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/575//testReport/
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/575//console

This message is automatically generated.;;;","15/Dec/11 00:10;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12485541/ZOOKEEPER-872.patch
  against trunk revision 1214571.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    -1 javac.  The patch appears to cause tar ant target to fail.

    -1 findbugs.  The patch appears to cause Findbugs (version 1.3.9) to fail.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/829//testReport/
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/829//console

This message is automatically generated.;;;","15/Dec/11 00:13;phunt;Can you refresh the patch? not applying to trunk.;;;","28/Dec/11 21:16;phunt;The updated patch seems to be the same as the original path. Mahadev are you sure you attached the correct one? We need to address the comments before committing this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
clientPortBindAddress should be clientPortAddress,ZOOKEEPER-855,12472604,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,jaredc,jaredc,jaredc,26/Aug/10 14:49,23/Nov/11 19:22,29/Jun/25 13:34,18/Oct/10 21:56,3.3.0,3.3.1,,,,,,,,,,,,,,,,,,,,,,,3.3.2,3.4.0,,,,documentation,,,,,0,,,The server documentation states that the configuration parameter for binding to a specific ip address is clientPortBindAddress.  The code believes the parameter is clientPortAddress.  The documentation for 3.3.X versions needs changed to reflect the correct parameter .  This parameter was added in ZOOKEEPER-635.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Oct/10 21:57;fpj;ZOOKEEPER-855.patch;https://issues.apache.org/jira/secure/attachment/12457488/ZOOKEEPER-855.patch","14/Oct/10 21:37;jaredc;ZOOKEEPER-855.patch;https://issues.apache.org/jira/secure/attachment/12457195/ZOOKEEPER-855.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47574,,,,,Tue Oct 19 10:51:50 UTC 2010,,,,,,,,,,"0|i05zh3:",32846,,,,,,,,,,,,,,,,,,,,,"14/Oct/10 21:37;jaredc;Simple patch.;;;","14/Oct/10 21:37;jaredc;Documentation patch.;;;","18/Oct/10 20:27;fpj;+1, I'll commit this in a minute.;;;","18/Oct/10 21:56;fpj;Thanks, Jared, I have just committed this:

Branch 3.3: Committed revision 1024022.
Trunk: Committed revision 1024029.;;;","18/Oct/10 21:57;fpj;I'm uploading the patch I committed. The original patch was modifying the html instead of the xml source.;;;","19/Oct/10 10:51;hudson;Integrated in ZooKeeper-trunk #971 (See [https://hudson.apache.org/hudson/job/ZooKeeper-trunk/971/])
    ZOOKEEPER-855. clientPortBindAddress should be clientPortAddress
  (Jared Cantwell via fpj)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cli.c should not call zoo_add_auth immediately after zookeeper_init() ,ZOOKEEPER-826,12469780,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,michim,michim,21/Jul/10 07:13,21/Jul/10 09:06,29/Jun/25 13:34,,3.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,c client,,,,,0,,,"In cli.c, zoo_add_auth() gets called right after zookeeper_init(). Instead, zoo_add_auth() should be called in the callback after the connection is established. 

--Michi",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,214183,,,,,Wed Jul 21 09:06:55 UTC 2010,,,,,,,,,,"0|i05zin:",32853,,,,,,,,,,,,,,,,,,,,,"21/Jul/10 07:22;phunt;actually afaik it's ok to do this, the request will be queued. why do you think this is a bug?;;;","21/Jul/10 09:06;michim;It's related to this ticket:

https://issues.apache.org/jira/browse/ZOOKEEPER-800

Inside zoo_add_auth() function, send_last_auth_info() gets called if the handle is in ZOO_CONNECTED_STATE or ZOO_ASSOCIATING_STATE. However, it doesn't get called if it's in ZOO_CLOSED_STATE, which is usually the case right after zookeeper_init() returns. 

--Michi;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"fill in ""TBD""s in overview doc",ZOOKEEPER-815,12469377,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,phunt,phunt,15/Jul/10 20:14,03/Feb/22 08:50,29/Jun/25 13:34,,3.3.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,documentation,,,,,1,documentation,,"Funny: ""Ephemeral nodes are useful when you want to implement [tbd]."" there are a few others in that doc that are should really be fixed.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-2090,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,70791,,,,,Thu Oct 28 23:45:30 UTC 2010,,,,,,,,,,"0|i05zjb:",32856,,,,,,,,,,,,,,,,,,,,,"28/Oct/10 23:45;phunt;Not a blocker, pushing to 3.3.3/3.4.0.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zoo_add_auth returns ZOK if zookeeper handle is in ZOO_CLOSED_STATE,ZOOKEEPER-800,12468212,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,michim,michim,michim,29/Jun/10 23:26,23/Nov/11 19:22,29/Jun/25 13:34,21/Oct/10 22:52,3.3.1,,,,,,,,,,,,,,,,,,,,,,,,3.3.2,3.4.0,,,,c client,,,,,0,,,"This happened when I called zoo_add_auth() immediately after zookeeper_init(). It took me a while to figure out that authentication actually failed since zoo_add_auth() returned ZOK. It should return ZINVALIDSTATE instead. 

--Michi",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Aug/10 08:19;michim;ZOOKEEPER-800.patch;https://issues.apache.org/jira/secure/attachment/12452267/ZOOKEEPER-800.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47590,Reviewed,,,,Thu Jun 23 21:18:27 UTC 2011,,,,,,,,,,"0|i05zkn:",32862,,,,,,,,,,,,,,,,,,,,,"02/Jul/10 07:33;phunt;penciling in for 3.3.2;;;","06/Aug/10 17:30;michim;Talked with Mahadev. I'm taking this bug (but don't know how to change assignee in Jira). 

--Michi;;;","17/Aug/10 08:19;michim;I modified zoo_add_auth() in branch-3.3. It returns ZINVALIDSTATE if the connection is in ZOO_CLOSED_STATE state. 

--Michi;;;","21/Oct/10 22:52;mahadev;+1 I just committed this. thanks michi.;;;","22/Oct/10 10:51;hudson;Integrated in ZooKeeper-trunk #976 (See [https://hudson.apache.org/hudson/job/ZooKeeper-trunk/976/])
    ZOOKEEPER-800. zoo_add_auth returns ZOK if zookeeper handle is in ZOO_CLOSED_STATE (michi mutsuzaki via mahadev konar)
;;;","23/Jun/11 21:18;dheerajagrawal;I think this is a race condition. I just raised another ticket for this.
  2940     // [ZOOKEEPER-800] zoo_add_auth should return ZINVALIDSTATE if
   2941     // the connection is closed.
   2942     if (zoo_state(zh) == 0) {
   2943         return ZINVALIDSTATE;
   2944     }

When we initialize we assign zk->state=0 and here we check if its 0 return ZKINVALIDSTATE.
So in my case: where i am trying to addAuth right after zookeeper_init(), it sometime returns me ZKINVALIDSTATE (as the state might have not changed to CONNECTING), where as i would expect it to queue the request for me (as is done in the java client)

The problem might be that we are using 0 for both CLOSED and UNINITIALIZED state.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exception in ZooKeeper.toString,ZOOKEEPER-786,12466224,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,thkoch,eelstretching,eelstretching,04/Jun/10 21:25,17/Oct/11 01:00,29/Jun/25 13:34,17/Oct/11 01:00,3.3.1,,,,,,,,,,,,,,,,,,,,,,,,3.5.0,,,,,java client,,,,,1,,,"When trying to call ZooKeeper.toString during client disconnections, an exception can be generated:


[04/06/10 15:39:57.744] ERROR Error while calling watcher 
java.lang.Error: java.net.SocketException: Socket operation on non-socket
	at sun.nio.ch.Net.localAddress(Net.java:128)
	at sun.nio.ch.SocketChannelImpl.localAddress(SocketChannelImpl.java:430)
	at sun.nio.ch.SocketAdaptor.getLocalAddress(SocketAdaptor.java:147)
	at java.net.Socket.getLocalSocketAddress(Socket.java:717)
	at org.apache.zookeeper.ClientCnxn.getLocalSocketAddress(ClientCnxn.java:227)
	at org.apache.zookeeper.ClientCnxn.toString(ClientCnxn.java:183)
	at java.lang.String.valueOf(String.java:2826)
	at java.lang.StringBuilder.append(StringBuilder.java:115)
	at org.apache.zookeeper.ZooKeeper.toString(ZooKeeper.java:1486)
	at java.util.Formatter$FormatSpecifier.printString(Formatter.java:2794)
	at java.util.Formatter$FormatSpecifier.print(Formatter.java:2677)
	at java.util.Formatter.format(Formatter.java:2433)
	at java.util.Formatter.format(Formatter.java:2367)
	at java.lang.String.format(String.java:2769)
	at com.echonest.cluster.ZooContainer.process(ZooContainer.java:544)
	at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:488)
Caused by: java.net.SocketException: Socket operation on non-socket
	at sun.nio.ch.Net.localInetAddress(Native Method)
	at sun.nio.ch.Net.localAddress(Net.java:125)
	... 15 more
","Mac OS X, x86",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Sep/11 15:27;thkoch;ZOOKEEPER-786.patch;https://issues.apache.org/jira/secure/attachment/12493035/ZOOKEEPER-786.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,19329,Reviewed,,,,Thu Sep 29 10:50:23 UTC 2011,,,,,,,,,,"0|i05zmf:",32870,,,,,,,,,,,,,,,,,,,,,"18/Oct/10 19:01;fpj;Since this seems to be a minor issue and to avoid further delays with 3.3.2, I propose we move it to 3.4.0.;;;","05/Sep/11 15:27;thkoch;This patch introduces caching of (local|remote)SocketAddress in the ClientCnxnNio class. The addresses are read only once immediately after connection establishment.;;;","05/Sep/11 15:30;jiraposter@reviews.apache.org;
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1714/
-----------------------------------------------------------

Review request for zookeeper.


Summary
-------

;;;","05/Sep/11 15:54;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12493035/ZOOKEEPER-786.patch
  against trunk revision 1164758.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/500//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/500//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/500//console

This message is automatically generated.;;;","14/Sep/11 22:20;jiraposter@reviews.apache.org;
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1714/
-----------------------------------------------------------

(Updated 2011-09-14 22:18:24.072279)


Review request for zookeeper.


Summary (updated)
-------

;;;","14/Sep/11 22:50;phunt;committed to trunk (3.5.0) thanks Thomas!;;;","15/Sep/11 10:56;hudson;Integrated in ZooKeeper-trunk #1304 (See [https://builds.apache.org/job/ZooKeeper-trunk/1304/])
    ZOOKEEPER-786. Exception in ZooKeeper.toString (Thomas Koch via phunt)

phunt : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1170882
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java
;;;","27/Sep/11 13:55;fournc;I'm confused about this patch. As per ted's comments on 1174, why did we remove the lines
        if (sock.connect(addr)) {            
          sendThread.primeConnection();
       }

From ClientCnxnSocketNIO? We had a long chat on ZOOKEEPER-1174 as to why you need to check for this conditional. What does this have to do at all with the bug at hand?;;;","27/Sep/11 14:01;jiraposter@reviews.apache.org;
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1714/#review2090
-----------------------------------------------------------



src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java
<https://reviews.apache.org/r/1714/#comment4735>

    Why was this removed? It is not germane to the patch at hand.


- Camille


On 2011-09-14 22:18:24, Thomas Koch wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  https://reviews.apache.org/r/1714/
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-09-14 22:18:24)
bq.  
bq.  
bq.  Review request for zookeeper.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  .
bq.  
bq.  
bq.  This addresses bug ZOOKEEPER-786.
bq.      https://issues.apache.org/jira/browse/ZOOKEEPER-786
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java 626da04 
bq.  
bq.  Diff: https://reviews.apache.org/r/1714/diff
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Thomas
bq.  
bq.

;;;","27/Sep/11 17:33;jiraposter@reviews.apache.org;

bq.  On 2011-09-27 13:59:22, Camille Fournier wrote:
bq.  > src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java, line 195
bq.  > <https://reviews.apache.org/r/1714/diff/1/?file=37950#file37950line195>
bq.  >
bq.  >     Why was this removed? It is not germane to the patch at hand.

You're right, the removal had nothing to do with the issue, but it was the right thing to do, once I've been there. It may happen in rare cases, that connect returns true already there, but primeConnection() is called anyways later from doTransport(). Having to possible call origins only adds to uncertainty.
Did you observe any problems with this?


- Thomas


-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1714/#review2090
-----------------------------------------------------------


On 2011-09-14 22:18:24, Thomas Koch wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  https://reviews.apache.org/r/1714/
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-09-14 22:18:24)
bq.  
bq.  
bq.  Review request for zookeeper.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  .
bq.  
bq.  
bq.  This addresses bug ZOOKEEPER-786.
bq.      https://issues.apache.org/jira/browse/ZOOKEEPER-786
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java 626da04 
bq.  
bq.  Diff: https://reviews.apache.org/r/1714/diff
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Thomas
bq.  
bq.

;;;","27/Sep/11 19:23;jiraposter@reviews.apache.org;

bq.  On 2011-09-27 13:59:22, Camille Fournier wrote:
bq.  > src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java, line 195
bq.  > <https://reviews.apache.org/r/1714/diff/1/?file=37950#file37950line195>
bq.  >
bq.  >     Why was this removed? It is not germane to the patch at hand.
bq.  
bq.  Thomas Koch wrote:
bq.      You're right, the removal had nothing to do with the issue, but it was the right thing to do, once I've been there. It may happen in rare cases, that connect returns true already there, but primeConnection() is called anyways later from doTransport(). Having to possible call origins only adds to uncertainty.
bq.      Did you observe any problems with this?

Are you sure that the lines in doTransport() will be called and executed if the socket connects immediately? I don't personally know whether that is the case or not. You didn't write any tests to show that this would happen, and you shouldn't have made the change for purposes of removing uncertainty without explicitly calling out what you were doing. If you are quite sure that even in the case of an immediate connection, OP_CONNECT will be set and we will hit that in doTransport, I'm fine with this change. But I don't like having changes like this snuck in under the radar, because if this is not the case and it causes a bug, it will be a massive pain to find.


- Camille


-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1714/#review2090
-----------------------------------------------------------


On 2011-09-14 22:18:24, Thomas Koch wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  https://reviews.apache.org/r/1714/
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-09-14 22:18:24)
bq.  
bq.  
bq.  Review request for zookeeper.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  .
bq.  
bq.  
bq.  This addresses bug ZOOKEEPER-786.
bq.      https://issues.apache.org/jira/browse/ZOOKEEPER-786
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java 626da04 
bq.  
bq.  Diff: https://reviews.apache.org/r/1714/diff
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Thomas
bq.  
bq.

;;;","27/Sep/11 19:37;jiraposter@reviews.apache.org;

bq.  On 2011-09-27 13:59:22, Camille Fournier wrote:
bq.  > src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java, line 195
bq.  > <https://reviews.apache.org/r/1714/diff/1/?file=37950#file37950line195>
bq.  >
bq.  >     Why was this removed? It is not germane to the patch at hand.
bq.  
bq.  Thomas Koch wrote:
bq.      You're right, the removal had nothing to do with the issue, but it was the right thing to do, once I've been there. It may happen in rare cases, that connect returns true already there, but primeConnection() is called anyways later from doTransport(). Having to possible call origins only adds to uncertainty.
bq.      Did you observe any problems with this?
bq.  
bq.  Camille Fournier wrote:
bq.      Are you sure that the lines in doTransport() will be called and executed if the socket connects immediately? I don't personally know whether that is the case or not. You didn't write any tests to show that this would happen, and you shouldn't have made the change for purposes of removing uncertainty without explicitly calling out what you were doing. If you are quite sure that even in the case of an immediate connection, OP_CONNECT will be set and we will hit that in doTransport, I'm fine with this change. But I don't like having changes like this snuck in under the radar, because if this is not the case and it causes a bug, it will be a massive pain to find.

It seems to me, by the by, that if a socket is immediately connected it will NOT set the selection key for OP_CONNECT, because state will be set to ST_CONNECTED (see the source for SocketChannelImpl, specifically connect:

http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/sun/nio/ch/SocketChannelImpl.java#SocketChannelImpl.connect%28java.net.SocketAddress%29

and translateReadyOps:

http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/sun/nio/ch/SocketChannelImpl.java#SocketChannelImpl.translateReadyOps%28int%2Cint%2Csun.nio.ch.SelectionKeyImpl%29

So, I'm not sure that this is a safe change to make, and you should always, always, always, be careful when changing anything to do with our NIO code unless you are really sure of the consequences.


- Camille


-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1714/#review2090
-----------------------------------------------------------


On 2011-09-14 22:18:24, Thomas Koch wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  https://reviews.apache.org/r/1714/
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-09-14 22:18:24)
bq.  
bq.  
bq.  Review request for zookeeper.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  .
bq.  
bq.  
bq.  This addresses bug ZOOKEEPER-786.
bq.      https://issues.apache.org/jira/browse/ZOOKEEPER-786
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java 626da04 
bq.  
bq.  Diff: https://reviews.apache.org/r/1714/diff
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Thomas
bq.  
bq.

;;;","27/Sep/11 20:45;jiraposter@reviews.apache.org;

bq.  On 2011-09-27 13:59:22, Camille Fournier wrote:
bq.  > src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java, line 195
bq.  > <https://reviews.apache.org/r/1714/diff/1/?file=37950#file37950line195>
bq.  >
bq.  >     Why was this removed? It is not germane to the patch at hand.
bq.  
bq.  Thomas Koch wrote:
bq.      You're right, the removal had nothing to do with the issue, but it was the right thing to do, once I've been there. It may happen in rare cases, that connect returns true already there, but primeConnection() is called anyways later from doTransport(). Having to possible call origins only adds to uncertainty.
bq.      Did you observe any problems with this?
bq.  
bq.  Camille Fournier wrote:
bq.      Are you sure that the lines in doTransport() will be called and executed if the socket connects immediately? I don't personally know whether that is the case or not. You didn't write any tests to show that this would happen, and you shouldn't have made the change for purposes of removing uncertainty without explicitly calling out what you were doing. If you are quite sure that even in the case of an immediate connection, OP_CONNECT will be set and we will hit that in doTransport, I'm fine with this change. But I don't like having changes like this snuck in under the radar, because if this is not the case and it causes a bug, it will be a massive pain to find.
bq.  
bq.  Camille Fournier wrote:
bq.      It seems to me, by the by, that if a socket is immediately connected it will NOT set the selection key for OP_CONNECT, because state will be set to ST_CONNECTED (see the source for SocketChannelImpl, specifically connect:
bq.      
bq.      http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/sun/nio/ch/SocketChannelImpl.java#SocketChannelImpl.connect%28java.net.SocketAddress%29
bq.      
bq.      and translateReadyOps:
bq.      
bq.      http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/sun/nio/ch/SocketChannelImpl.java#SocketChannelImpl.translateReadyOps%28int%2Cint%2Csun.nio.ch.SelectionKeyImpl%29
bq.      
bq.      So, I'm not sure that this is a safe change to make, and you should always, always, always, be careful when changing anything to do with our NIO code unless you are really sure of the consequences.

Camille, you're right, I missed this change. Thanks.

There is definitely a reason for this! The connect call can return immediately with a connected indication, in which case we need to run the primeConnection code, if you don't OP_CONNECT will never be indicated (because the connection already took place) and primeConnection will therefore never be called in doTransport.

I believe we saw this with Solaris (there was a bug on this but I can't find it either on apache nor sourceforge).


- Patrick


-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1714/#review2090
-----------------------------------------------------------


On 2011-09-14 22:18:24, Thomas Koch wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  https://reviews.apache.org/r/1714/
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-09-14 22:18:24)
bq.  
bq.  
bq.  Review request for zookeeper.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  .
bq.  
bq.  
bq.  This addresses bug ZOOKEEPER-786.
bq.      https://issues.apache.org/jira/browse/ZOOKEEPER-786
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java 626da04 
bq.  
bq.  Diff: https://reviews.apache.org/r/1714/diff
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Thomas
bq.  
bq.

;;;","27/Sep/11 20:51;phunt;We need to add back the primeConnection call. 

Thomas, please add a second patch to this jira that adds that condition/call back to connect().;;;","27/Sep/11 20:51;jiraposter@reviews.apache.org;

bq.  On 2011-09-27 13:59:22, Camille Fournier wrote:
bq.  > src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java, line 195
bq.  > <https://reviews.apache.org/r/1714/diff/1/?file=37950#file37950line195>
bq.  >
bq.  >     Why was this removed? It is not germane to the patch at hand.
bq.  
bq.  Thomas Koch wrote:
bq.      You're right, the removal had nothing to do with the issue, but it was the right thing to do, once I've been there. It may happen in rare cases, that connect returns true already there, but primeConnection() is called anyways later from doTransport(). Having to possible call origins only adds to uncertainty.
bq.      Did you observe any problems with this?
bq.  
bq.  Camille Fournier wrote:
bq.      Are you sure that the lines in doTransport() will be called and executed if the socket connects immediately? I don't personally know whether that is the case or not. You didn't write any tests to show that this would happen, and you shouldn't have made the change for purposes of removing uncertainty without explicitly calling out what you were doing. If you are quite sure that even in the case of an immediate connection, OP_CONNECT will be set and we will hit that in doTransport, I'm fine with this change. But I don't like having changes like this snuck in under the radar, because if this is not the case and it causes a bug, it will be a massive pain to find.
bq.  
bq.  Camille Fournier wrote:
bq.      It seems to me, by the by, that if a socket is immediately connected it will NOT set the selection key for OP_CONNECT, because state will be set to ST_CONNECTED (see the source for SocketChannelImpl, specifically connect:
bq.      
bq.      http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/sun/nio/ch/SocketChannelImpl.java#SocketChannelImpl.connect%28java.net.SocketAddress%29
bq.      
bq.      and translateReadyOps:
bq.      
bq.      http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/sun/nio/ch/SocketChannelImpl.java#SocketChannelImpl.translateReadyOps%28int%2Cint%2Csun.nio.ch.SelectionKeyImpl%29
bq.      
bq.      So, I'm not sure that this is a safe change to make, and you should always, always, always, be careful when changing anything to do with our NIO code unless you are really sure of the consequences.
bq.  
bq.  Patrick Hunt wrote:
bq.      Camille, you're right, I missed this change. Thanks.
bq.      
bq.      There is definitely a reason for this! The connect call can return immediately with a connected indication, in which case we need to run the primeConnection code, if you don't OP_CONNECT will never be indicated (because the connection already took place) and primeConnection will therefore never be called in doTransport.
bq.      
bq.      I believe we saw this with Solaris (there was a bug on this but I can't find it either on apache nor sourceforge).
bq.      
bq.

Ted deserves the credit, he pointed it out as part of 1174. If you don't mind, I will pull this bit out of the change in trunk when I check in 1174 there.


- Camille


-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1714/#review2090
-----------------------------------------------------------


On 2011-09-14 22:18:24, Thomas Koch wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  https://reviews.apache.org/r/1714/
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-09-14 22:18:24)
bq.  
bq.  
bq.  Review request for zookeeper.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  .
bq.  
bq.  
bq.  This addresses bug ZOOKEEPER-786.
bq.      https://issues.apache.org/jira/browse/ZOOKEEPER-786
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java 626da04 
bq.  
bq.  Diff: https://reviews.apache.org/r/1714/diff
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Thomas
bq.  
bq.

;;;","27/Sep/11 21:08;jiraposter@reviews.apache.org;

bq.  On 2011-09-27 13:59:22, Camille Fournier wrote:
bq.  > src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java, line 195
bq.  > <https://reviews.apache.org/r/1714/diff/1/?file=37950#file37950line195>
bq.  >
bq.  >     Why was this removed? It is not germane to the patch at hand.
bq.  
bq.  Thomas Koch wrote:
bq.      You're right, the removal had nothing to do with the issue, but it was the right thing to do, once I've been there. It may happen in rare cases, that connect returns true already there, but primeConnection() is called anyways later from doTransport(). Having to possible call origins only adds to uncertainty.
bq.      Did you observe any problems with this?
bq.  
bq.  Camille Fournier wrote:
bq.      Are you sure that the lines in doTransport() will be called and executed if the socket connects immediately? I don't personally know whether that is the case or not. You didn't write any tests to show that this would happen, and you shouldn't have made the change for purposes of removing uncertainty without explicitly calling out what you were doing. If you are quite sure that even in the case of an immediate connection, OP_CONNECT will be set and we will hit that in doTransport, I'm fine with this change. But I don't like having changes like this snuck in under the radar, because if this is not the case and it causes a bug, it will be a massive pain to find.
bq.  
bq.  Camille Fournier wrote:
bq.      It seems to me, by the by, that if a socket is immediately connected it will NOT set the selection key for OP_CONNECT, because state will be set to ST_CONNECTED (see the source for SocketChannelImpl, specifically connect:
bq.      
bq.      http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/sun/nio/ch/SocketChannelImpl.java#SocketChannelImpl.connect%28java.net.SocketAddress%29
bq.      
bq.      and translateReadyOps:
bq.      
bq.      http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/sun/nio/ch/SocketChannelImpl.java#SocketChannelImpl.translateReadyOps%28int%2Cint%2Csun.nio.ch.SelectionKeyImpl%29
bq.      
bq.      So, I'm not sure that this is a safe change to make, and you should always, always, always, be careful when changing anything to do with our NIO code unless you are really sure of the consequences.
bq.  
bq.  Patrick Hunt wrote:
bq.      Camille, you're right, I missed this change. Thanks.
bq.      
bq.      There is definitely a reason for this! The connect call can return immediately with a connected indication, in which case we need to run the primeConnection code, if you don't OP_CONNECT will never be indicated (because the connection already took place) and primeConnection will therefore never be called in doTransport.
bq.      
bq.      I believe we saw this with Solaris (there was a bug on this but I can't find it either on apache nor sourceforge).
bq.      
bq.
bq.  
bq.  Camille Fournier wrote:
bq.      Ted deserves the credit, he pointed it out as part of 1174. If you don't mind, I will pull this bit out of the change in trunk when I check in 1174 there.

It would be better to keep the changes distinct. Would you mind committing this snippet first, as a second patch for 786, then apply 1174? Or I/you can entirely roll back this change from trunk, you can commit 1174, and then Thomas can update this patch and reapply. Which would you prefer?


- Patrick


-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1714/#review2090
-----------------------------------------------------------


On 2011-09-14 22:18:24, Thomas Koch wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  https://reviews.apache.org/r/1714/
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-09-14 22:18:24)
bq.  
bq.  
bq.  Review request for zookeeper.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  .
bq.  
bq.  
bq.  This addresses bug ZOOKEEPER-786.
bq.      https://issues.apache.org/jira/browse/ZOOKEEPER-786
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java 626da04 
bq.  
bq.  Diff: https://reviews.apache.org/r/1714/diff
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Thomas
bq.  
bq.

;;;","27/Sep/11 21:12;jiraposter@reviews.apache.org;

bq.  On 2011-09-27 13:59:22, Camille Fournier wrote:
bq.  > src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java, line 195
bq.  > <https://reviews.apache.org/r/1714/diff/1/?file=37950#file37950line195>
bq.  >
bq.  >     Why was this removed? It is not germane to the patch at hand.
bq.  
bq.  Thomas Koch wrote:
bq.      You're right, the removal had nothing to do with the issue, but it was the right thing to do, once I've been there. It may happen in rare cases, that connect returns true already there, but primeConnection() is called anyways later from doTransport(). Having to possible call origins only adds to uncertainty.
bq.      Did you observe any problems with this?
bq.  
bq.  Camille Fournier wrote:
bq.      Are you sure that the lines in doTransport() will be called and executed if the socket connects immediately? I don't personally know whether that is the case or not. You didn't write any tests to show that this would happen, and you shouldn't have made the change for purposes of removing uncertainty without explicitly calling out what you were doing. If you are quite sure that even in the case of an immediate connection, OP_CONNECT will be set and we will hit that in doTransport, I'm fine with this change. But I don't like having changes like this snuck in under the radar, because if this is not the case and it causes a bug, it will be a massive pain to find.
bq.  
bq.  Camille Fournier wrote:
bq.      It seems to me, by the by, that if a socket is immediately connected it will NOT set the selection key for OP_CONNECT, because state will be set to ST_CONNECTED (see the source for SocketChannelImpl, specifically connect:
bq.      
bq.      http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/sun/nio/ch/SocketChannelImpl.java#SocketChannelImpl.connect%28java.net.SocketAddress%29
bq.      
bq.      and translateReadyOps:
bq.      
bq.      http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/sun/nio/ch/SocketChannelImpl.java#SocketChannelImpl.translateReadyOps%28int%2Cint%2Csun.nio.ch.SelectionKeyImpl%29
bq.      
bq.      So, I'm not sure that this is a safe change to make, and you should always, always, always, be careful when changing anything to do with our NIO code unless you are really sure of the consequences.
bq.  
bq.  Patrick Hunt wrote:
bq.      Camille, you're right, I missed this change. Thanks.
bq.      
bq.      There is definitely a reason for this! The connect call can return immediately with a connected indication, in which case we need to run the primeConnection code, if you don't OP_CONNECT will never be indicated (because the connection already took place) and primeConnection will therefore never be called in doTransport.
bq.      
bq.      I believe we saw this with Solaris (there was a bug on this but I can't find it either on apache nor sourceforge).
bq.      
bq.
bq.  
bq.  Camille Fournier wrote:
bq.      Ted deserves the credit, he pointed it out as part of 1174. If you don't mind, I will pull this bit out of the change in trunk when I check in 1174 there.
bq.  
bq.  Patrick Hunt wrote:
bq.      It would be better to keep the changes distinct. Would you mind committing this snippet first, as a second patch for 786, then apply 1174? Or I/you can entirely roll back this change from trunk, you can commit 1174, and then Thomas can update this patch and reapply. Which would you prefer?

I'll roll back this change as a second patch for 786, then apply 1174. This just went into trunk right?


- Camille


-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1714/#review2090
-----------------------------------------------------------


On 2011-09-14 22:18:24, Thomas Koch wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  https://reviews.apache.org/r/1714/
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-09-14 22:18:24)
bq.  
bq.  
bq.  Review request for zookeeper.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  .
bq.  
bq.  
bq.  This addresses bug ZOOKEEPER-786.
bq.      https://issues.apache.org/jira/browse/ZOOKEEPER-786
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java 626da04 
bq.  
bq.  Diff: https://reviews.apache.org/r/1714/diff
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Thomas
bq.  
bq.

;;;","27/Sep/11 21:22;jiraposter@reviews.apache.org;

bq.  On 2011-09-27 13:59:22, Camille Fournier wrote:
bq.  > src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java, line 195
bq.  > <https://reviews.apache.org/r/1714/diff/1/?file=37950#file37950line195>
bq.  >
bq.  >     Why was this removed? It is not germane to the patch at hand.
bq.  
bq.  Thomas Koch wrote:
bq.      You're right, the removal had nothing to do with the issue, but it was the right thing to do, once I've been there. It may happen in rare cases, that connect returns true already there, but primeConnection() is called anyways later from doTransport(). Having to possible call origins only adds to uncertainty.
bq.      Did you observe any problems with this?
bq.  
bq.  Camille Fournier wrote:
bq.      Are you sure that the lines in doTransport() will be called and executed if the socket connects immediately? I don't personally know whether that is the case or not. You didn't write any tests to show that this would happen, and you shouldn't have made the change for purposes of removing uncertainty without explicitly calling out what you were doing. If you are quite sure that even in the case of an immediate connection, OP_CONNECT will be set and we will hit that in doTransport, I'm fine with this change. But I don't like having changes like this snuck in under the radar, because if this is not the case and it causes a bug, it will be a massive pain to find.
bq.  
bq.  Camille Fournier wrote:
bq.      It seems to me, by the by, that if a socket is immediately connected it will NOT set the selection key for OP_CONNECT, because state will be set to ST_CONNECTED (see the source for SocketChannelImpl, specifically connect:
bq.      
bq.      http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/sun/nio/ch/SocketChannelImpl.java#SocketChannelImpl.connect%28java.net.SocketAddress%29
bq.      
bq.      and translateReadyOps:
bq.      
bq.      http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/sun/nio/ch/SocketChannelImpl.java#SocketChannelImpl.translateReadyOps%28int%2Cint%2Csun.nio.ch.SelectionKeyImpl%29
bq.      
bq.      So, I'm not sure that this is a safe change to make, and you should always, always, always, be careful when changing anything to do with our NIO code unless you are really sure of the consequences.
bq.  
bq.  Patrick Hunt wrote:
bq.      Camille, you're right, I missed this change. Thanks.
bq.      
bq.      There is definitely a reason for this! The connect call can return immediately with a connected indication, in which case we need to run the primeConnection code, if you don't OP_CONNECT will never be indicated (because the connection already took place) and primeConnection will therefore never be called in doTransport.
bq.      
bq.      I believe we saw this with Solaris (there was a bug on this but I can't find it either on apache nor sourceforge).
bq.      
bq.
bq.  
bq.  Camille Fournier wrote:
bq.      Ted deserves the credit, he pointed it out as part of 1174. If you don't mind, I will pull this bit out of the change in trunk when I check in 1174 there.
bq.  
bq.  Patrick Hunt wrote:
bq.      It would be better to keep the changes distinct. Would you mind committing this snippet first, as a second patch for 786, then apply 1174? Or I/you can entirely roll back this change from trunk, you can commit 1174, and then Thomas can update this patch and reapply. Which would you prefer?
bq.  
bq.  Camille Fournier wrote:
bq.      I'll roll back this change as a second patch for 786, then apply 1174. This just went into trunk right?

In trunk I see this:

        sockKey = sock.register(selector, SelectionKey.OP_CONNECT);
        sock.connect(addr);

however in branch-3.4 I see this:

            boolean immediateConnect = sock.connect(addr);
            sockKey = sock.register(selector, SelectionKey.OP_CONNECT);
            if (immediateConnect) {
                sendThread.primeConnection();
            }

so yes, this patch was applied only to trunk, however, isn't this a bug? sock.register is being called after sock.connect.

Also, why was this patch applied to branch 3.4, but it's not available on trunk?


- Patrick


-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1714/#review2090
-----------------------------------------------------------


On 2011-09-14 22:18:24, Thomas Koch wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  https://reviews.apache.org/r/1714/
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-09-14 22:18:24)
bq.  
bq.  
bq.  Review request for zookeeper.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  .
bq.  
bq.  
bq.  This addresses bug ZOOKEEPER-786.
bq.      https://issues.apache.org/jira/browse/ZOOKEEPER-786
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java 626da04 
bq.  
bq.  Diff: https://reviews.apache.org/r/1714/diff
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Thomas
bq.  
bq.

;;;","27/Sep/11 21:26;jiraposter@reviews.apache.org;

bq.  On 2011-09-27 13:59:22, Camille Fournier wrote:
bq.  > src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java, line 195
bq.  > <https://reviews.apache.org/r/1714/diff/1/?file=37950#file37950line195>
bq.  >
bq.  >     Why was this removed? It is not germane to the patch at hand.
bq.  
bq.  Thomas Koch wrote:
bq.      You're right, the removal had nothing to do with the issue, but it was the right thing to do, once I've been there. It may happen in rare cases, that connect returns true already there, but primeConnection() is called anyways later from doTransport(). Having to possible call origins only adds to uncertainty.
bq.      Did you observe any problems with this?
bq.  
bq.  Camille Fournier wrote:
bq.      Are you sure that the lines in doTransport() will be called and executed if the socket connects immediately? I don't personally know whether that is the case or not. You didn't write any tests to show that this would happen, and you shouldn't have made the change for purposes of removing uncertainty without explicitly calling out what you were doing. If you are quite sure that even in the case of an immediate connection, OP_CONNECT will be set and we will hit that in doTransport, I'm fine with this change. But I don't like having changes like this snuck in under the radar, because if this is not the case and it causes a bug, it will be a massive pain to find.
bq.  
bq.  Camille Fournier wrote:
bq.      It seems to me, by the by, that if a socket is immediately connected it will NOT set the selection key for OP_CONNECT, because state will be set to ST_CONNECTED (see the source for SocketChannelImpl, specifically connect:
bq.      
bq.      http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/sun/nio/ch/SocketChannelImpl.java#SocketChannelImpl.connect%28java.net.SocketAddress%29
bq.      
bq.      and translateReadyOps:
bq.      
bq.      http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/sun/nio/ch/SocketChannelImpl.java#SocketChannelImpl.translateReadyOps%28int%2Cint%2Csun.nio.ch.SelectionKeyImpl%29
bq.      
bq.      So, I'm not sure that this is a safe change to make, and you should always, always, always, be careful when changing anything to do with our NIO code unless you are really sure of the consequences.
bq.  
bq.  Patrick Hunt wrote:
bq.      Camille, you're right, I missed this change. Thanks.
bq.      
bq.      There is definitely a reason for this! The connect call can return immediately with a connected indication, in which case we need to run the primeConnection code, if you don't OP_CONNECT will never be indicated (because the connection already took place) and primeConnection will therefore never be called in doTransport.
bq.      
bq.      I believe we saw this with Solaris (there was a bug on this but I can't find it either on apache nor sourceforge).
bq.      
bq.
bq.  
bq.  Camille Fournier wrote:
bq.      Ted deserves the credit, he pointed it out as part of 1174. If you don't mind, I will pull this bit out of the change in trunk when I check in 1174 there.
bq.  
bq.  Patrick Hunt wrote:
bq.      It would be better to keep the changes distinct. Would you mind committing this snippet first, as a second patch for 786, then apply 1174? Or I/you can entirely roll back this change from trunk, you can commit 1174, and then Thomas can update this patch and reapply. Which would you prefer?
bq.  
bq.  Camille Fournier wrote:
bq.      I'll roll back this change as a second patch for 786, then apply 1174. This just went into trunk right?
bq.  
bq.  Patrick Hunt wrote:
bq.      In trunk I see this:
bq.      
bq.              sockKey = sock.register(selector, SelectionKey.OP_CONNECT);
bq.              sock.connect(addr);
bq.      
bq.      however in branch-3.4 I see this:
bq.      
bq.                  boolean immediateConnect = sock.connect(addr);
bq.                  sockKey = sock.register(selector, SelectionKey.OP_CONNECT);
bq.                  if (immediateConnect) {
bq.                      sendThread.primeConnection();
bq.                  }
bq.      
bq.      so yes, this patch was applied only to trunk, however, isn't this a bug? sock.register is being called after sock.connect.
bq.      
bq.      Also, why was this patch applied to branch 3.4, but it's not available on trunk?
bq.

I see. 1174 was committed to branch-3.4 but this change caused a conflict for trunk.

Isn't this a timing issue then? registering after connecting?


- Patrick


-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1714/#review2090
-----------------------------------------------------------


On 2011-09-14 22:18:24, Thomas Koch wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  https://reviews.apache.org/r/1714/
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-09-14 22:18:24)
bq.  
bq.  
bq.  Review request for zookeeper.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  .
bq.  
bq.  
bq.  This addresses bug ZOOKEEPER-786.
bq.      https://issues.apache.org/jira/browse/ZOOKEEPER-786
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java 626da04 
bq.  
bq.  Diff: https://reviews.apache.org/r/1714/diff
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Thomas
bq.  
bq.

;;;","29/Sep/11 10:50;hudson;Integrated in ZooKeeper-trunk #1318 (See [https://builds.apache.org/job/ZooKeeper-trunk/1318/])
    ZOOKEEPER-786. Reverting a bad line of this checkin

camille : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1176903
Files : 
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect C API documentation for Watches,ZOOKEEPER-782,12465807,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,mahadev,wrightd,wrightd,31/May/10 20:47,23/Nov/11 19:22,29/Jun/25 13:34,14/Jul/11 17:54,3.3.1,,,,,,,,,,,,,,,,,,,,,,,,3.4.0,,,,,c client,documentation,,,,0,,," The C API Doxygen documentation states:

"" .... If the client is ever disconnected from the service, even if the
  disconnection is temporary, the watches of the client will be removed from
  the service, so a client must treat a disconnect notification as an implicit
  trigger of all outstanding watches.""

This is incorrect as of v.3. Watches are only lost and need to be re-registered when a session times out. When a normal disconnection occurs watches are reset automatically on reconnection.

The documentation in zookeeper.h needs to be updated to correct this explanation.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Jul/11 21:46;mahadev;ZOOKEEPER-782.patch;https://issues.apache.org/jira/secure/attachment/12486375/ZOOKEEPER-782.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47606,Reviewed,,,,Fri Jul 15 11:30:49 UTC 2011,,,,,,,,,,"0|i05zn3:",32873,Corrected documentation on watch behavior in C API,,,,,,,,,,,,,,,,,,,,"13/Jul/11 21:46;mahadev;Documentation change. ;;;","13/Jul/11 22:14;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12486375/ZOOKEEPER-782.patch
  against trunk revision 1146025.

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/391//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/391//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/391//console

This message is automatically generated.;;;","14/Jul/11 17:50;breed;+1 i'll also fix the querity typo;;;","14/Jul/11 17:54;breed;Committed revision 1146820.
;;;","15/Jul/11 11:30;hudson;Integrated in ZooKeeper-trunk #1244 (See [https://builds.apache.org/job/ZooKeeper-trunk/1244/])
    ZOOKEEPER-782. Incorrect C API documentation for Watches

breed : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1146820
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/c/include/zookeeper.h
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zkCli.sh  generates a ArrayIndexOutOfBoundsException ,ZOOKEEPER-780,12465360,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Invalid,,mpc,mpc,25/May/10 10:22,24/Apr/14 23:52,29/Jun/25 13:34,24/Apr/14 23:52,3.3.1,,,,,,,,,,,,,,,,,,,,,,,,3.5.0,,,,,scripts,,,,,0,,,"I'm starting to play with Zookeeper so I'm still running it in standalone mode. This is not a big issue, but here it goes for the records. 

I've run zkCli.sh to run some commands in the server. I created a znode /groups. When I tried to create a znode client_1 inside /groups, I forgot to include the data: an exception was generated and zkCli-sh crashed, instead of just showing an error. I tried a few variations and it seems like the problem is not including the data.

A copy of the screen:

[zk: localhost:2181(CONNECTED) 3] create /groups firstgroup
Created /groups
[zk: localhost:2181(CONNECTED) 4] create -e /groups/client_1
Exception in thread ""main"" java.lang.ArrayIndexOutOfBoundsException: 3
	at org.apache.zookeeper.ZooKeeperMain.processZKCmd(ZooKeeperMain.java:678)
	at org.apache.zookeeper.ZooKeeperMain.processCmd(ZooKeeperMain.java:581)
	at org.apache.zookeeper.ZooKeeperMain.executeLine(ZooKeeperMain.java:353)
	at org.apache.zookeeper.ZooKeeperMain.run(ZooKeeperMain.java:311)
	at org.apache.zookeeper.ZooKeeperMain.main(ZooKeeperMain.java:270)
",Linux Ubuntu running in VMPlayer on top of Windows XP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Jul/10 12:23;savu.andrei;ZOOKEEPER-780.patch;https://issues.apache.org/jira/secure/attachment/12450816/ZOOKEEPER-780.patch","29/Jul/10 12:14;savu.andrei;ZOOKEEPER-780.patch;https://issues.apache.org/jira/secure/attachment/12450815/ZOOKEEPER-780.patch","28/May/10 22:36;savu.andrei;ZOOKEEPER-780.patch;https://issues.apache.org/jira/secure/attachment/12445820/ZOOKEEPER-780.patch",,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,70800,,,,,Thu Apr 24 23:52:03 UTC 2014,,,,,,,,,,"0|i05znb:",32874,"If no data is provided for the new node when using the ""create"" zkCli.sh command assume an empty byte array. ",,,,,,,,,,,,,,,,,,,,"25/May/10 10:31;mpc;I've just picked a similar one so I guess the problem is more generic and has to do with the way zkCli.sh handles exceptions (i.e., misses handling some of them). This time I misspelled the parameter of the connect command (I forgot the "":""):

Output:

connect localhost2181
2010-05-25 11:28:25,241 - INFO  [main:ZooKeeper@538] - Session: 0x128cec5e35f0014 closed
2010-05-25 11:28:25,242 - INFO  [main:ZooKeeper@373] - Initiating client connection, connectString=localhost2181 sessionTimeout=30000 watcher=org.apache.zookeeper.ZooKeeperMain$MyWatcher@1bac748
Exception in thread ""main"" java.net.UnknownHostException: localhost2181
	at java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$1.lookupAllHostAddr(InetAddress.java:849)
	at java.net.InetAddress.getAddressFromNameService(InetAddress.java:1200)
	at java.net.InetAddress.getAllByName0(InetAddress.java:1153)
	at java.net.InetAddress.getAllByName(InetAddress.java:1083)
	at java.net.InetAddress.getAllByName(InetAddress.java:1019)
	at org.apache.zookeeper.ClientCnxn.<init>(ClientCnxn.java:383)
	at org.apache.zookeeper.ClientCnxn.<init>(ClientCnxn.java:328)
	at org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:377)
	at org.apache.zookeeper.ZooKeeperMain.connectToZK(ZooKeeperMain.java:261)
	at org.apache.zookeeper.ZooKeeperMain.processZKCmd(ZooKeeperMain.java:648)
	at org.apache.zookeeper.ZooKeeperMain.processCmd(ZooKeeperMain.java:581)
	at org.apache.zookeeper.ZooKeeperMain.executeLine(ZooKeeperMain.java:353)
	at org.apache.zookeeper.ZooKeeperMain.run(ZooKeeperMain.java:311)
	at org.apache.zookeeper.ZooKeeperMain.main(ZooKeeperMain.java:270)
;;;","28/May/10 22:36;savu.andrei;If no data is provided for the new node when using the ""create"" zkCli.sh command assume an empty byte array. ;;;","09/Jul/10 17:19;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12445820/ZOOKEEPER-780.patch
  against trunk revision 961026.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/95/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/95/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/95/console

This message is automatically generated.;;;","14/Jul/10 06:25;phunt;Andrei, this looks like a good fix, however Miguel has a point about the error handling. Perhaps you could address that in this patch as well? The main loop (interractive shell) should output the error information but continue rather than exiting the shell. no?;;;","29/Jul/10 12:14;savu.andrei;Added a generic exception handler for all kinds of unexpected errors. 

Output:

[zk: (CLOSED) 1] connect localhost2181
2010-07-29 15:13:32,364 [myid:] - INFO  [main:ZooKeeper@375] - Initiating client connection, connectString=localhost2181 sessionTimeout=30000 watcher=org.apache.zookeeper.ZooKeeperMain$MyWatcher@209f4e
Command failes: java.net.UnknownHostException: localhost2181

This should make the CLI interface much more robust. ;;;","29/Jul/10 12:22;savu.andrei;found a typo. will resubmit patch;;;","29/Jul/10 12:23;savu.andrei;Fixed typo failes -> failed. ;;;","02/Aug/10 20:25;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12450816/ZOOKEEPER-780.patch
  against trunk revision 980576.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/102/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/102/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/102/console

This message is automatically generated.;;;","04/Aug/10 11:24;savu.andrei;The failing test is not related to this patch: 

     [exec]      [exec] /grid/0/hudson/hudson-slave/workspace/Zookeeper-Patch-h7.grid.sp2.yahoo.net/trunk/src/c/tests/TestClient.cc:879: Assertion: assertion failed [Expression: ctx.waitForConnected(zk)]
     [exec]      [exec] Failures !!!

;;;","04/Aug/10 18:48;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12450816/ZOOKEEPER-780.patch
  against trunk revision 980576.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/106/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/106/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/106/console

This message is automatically generated.;;;","06/Aug/10 18:48;savu.andrei;I will take  a look tomorrow. Maybe the test failure is somehow related to my change even if I don't understand how. ;;;","10/Aug/10 17:36;mahadev;retriggereing the patch build.;;;","15/Sep/10 07:18;gkesavan;re-submiting to hudson;;;","09/Nov/10 18:04;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12450816/ZOOKEEPER-780.patch
  against trunk revision 1032885.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    -1 javac.  The patch appears to cause tar ant target to fail.

    -1 findbugs.  The patch appears to cause Findbugs to fail.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

    -1 system test framework.  The patch failed system test framework compile.

Test results: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/4//testReport/
Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/4//console

This message is automatically generated.;;;","09/Nov/10 18:48;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12450816/ZOOKEEPER-780.patch
  against trunk revision 1033134.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs warnings.

    -1 release audit.  The applied patch generated 24 release audit warnings (more than the trunk's current 0 warnings).

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

    -1 system test framework.  The patch failed system test framework compile.

Test results: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/5//testReport/
Release audit warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/5//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/5//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/5//console

This message is automatically generated.;;;","09/Nov/10 19:23;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12450816/ZOOKEEPER-780.patch
  against trunk revision 1033155.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/6//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/6//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/6//console

This message is automatically generated.;;;","09/Nov/10 19:56;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12450816/ZOOKEEPER-780.patch
  against trunk revision 1033155.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/15//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/15//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-ZOOKEEPER-Build/15//console

This message is automatically generated.;;;","10/Nov/10 01:44;phunt;Andrei, this is a good fix, could you create a test for this? Thanks.;;;","11/Nov/10 10:51;savu.andrei;I will create a new test class for testing {{ZooKeeperMain}}. There are no previous tests for this class. ;;;","11/Nov/10 17:22;phunt;Agreed (no prev tests) but really this highlights that there should be. Thanks!;;;","21/Oct/13 13:00;rakeshr;Hi [~mahadev]  I've gone through trunk code and have seen ZOOKEEPER-271, which has refactored ZooKeeperMain command line processing logic. 
Now in trunk it would not enter into this(ArrayIndexOutOfBoundsException) case. Should we need to fix this issue in 3.4.6? If not, I feel we can just close this issue. Whats your opinion?;;;","24/Apr/14 23:52;michim;This is no longer an issue after https://issues.apache.org/jira/browse/ZOOKEEPER-271 got checked in.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Recipes tests are slightly outdated: they do not compile against JUnit 4.8,ZOOKEEPER-774,12464391,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,dorserg,dorserg,dorserg,12/May/10 21:31,23/Nov/11 19:22,29/Jun/25 13:34,14/May/10 23:32,3.3.0,,,,,,,,,,,,,,,,,,,,,,,,3.4.0,,,,,recipes,,,,,0,,,As title,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/May/10 21:35;dorserg;ZOOKEEPER-774.patch;https://issues.apache.org/jira/secure/attachment/12444341/ZOOKEEPER-774.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47609,Reviewed,,,,Tue Jun 01 19:39:06 UTC 2010,,,,,,,,,,"0|i05znr:",32876,,,,,,,,,,,,,,,,,,,,,"12/May/10 21:35;dorserg;Pretty simple patch. Annotations added; assertXXX are changed to Assert.assertXXX.;;;","12/May/10 21:38;dorserg;Notifying Hundson. Though not sure whether it checks recipes' code;;;","13/May/10 05:20;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12444341/ZOOKEEPER-774.patch
  against trunk revision 941521.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 21 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/88/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/88/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/88/console

This message is automatically generated.;;;","14/May/10 09:18;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12444341/ZOOKEEPER-774.patch
  against trunk revision 944140.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 21 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/91/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/91/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/91/console

This message is automatically generated.;;;","14/May/10 23:32;phunt;+1 thanks Sergey!;;;","01/Jun/10 19:39;hudson;Integrated in ZooKeeper-trunk #831 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/831/])
    ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improper translation of error into Python exception,ZOOKEEPER-732,12460641,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,voyager,niemeyer,niemeyer,29/Mar/10 22:48,13/Mar/14 18:17,29/Jun/25 13:34,03/Oct/13 21:51,3.3.0,,,,,,,,,,,,,,,,,,,,,,,,3.4.6,3.5.0,,,,contrib-bindings,,,,,0,,,"Apparently errors returned by the C library are not being correctly converted into a Python exception in some cases: 

>>> zookeeper.get_children(0, ""/"", None)
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
SystemError: error return without exception set
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Oct/13 21:50;fpj;ZOOKEEPER-732-b3.4.patch;https://issues.apache.org/jira/secure/attachment/12606650/ZOOKEEPER-732-b3.4.patch","03/Oct/13 21:50;fpj;ZOOKEEPER-732-trunk.patch;https://issues.apache.org/jira/secure/attachment/12606651/ZOOKEEPER-732-trunk.patch","13/Aug/10 07:10;savu.andrei;ZOOKEEPER-732.patch;https://issues.apache.org/jira/secure/attachment/12452001/ZOOKEEPER-732.patch","13/Aug/10 00:00;voyager;ZOOKEEPER-732.patch;https://issues.apache.org/jira/secure/attachment/12451972/ZOOKEEPER-732.patch",,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47630,Reviewed,,,,Thu Mar 13 18:17:05 UTC 2014,,,,,,,,,,"0|i05zt3:",32900,Client that uses python binding may receive SystemError on session expiration.,,,,,,,,,,,,,,,,,,,,"24/Jun/10 21:17;voyager;Seems fixed in 3.3.1:

>>> zookeeper.get_children(0, ""/"", None)
Traceback (most recent call last):
  File ""<stdin>"", line 1, in ?
zookeeper.ZooKeeperException: zhandle out of range

Issue can be closed.;;;","12/Aug/10 22:42;voyager;Attached is a patch that fixes issue 732. Can somebody please review?;;;","13/Aug/10 07:10;savu.andrei;I've fixed the patch to also include {{ZCLOSING}} and {{ZNOTHING}}. It seems like all the error codes listed in {{zookeeper.h}} {{ZOO_ERRORS}} enum are now handled by {{err_to_exception}}. ;;;","13/Aug/10 09:42;voyager;Thanks Andrei. Patch looks good to me.
;;;","18/Apr/12 08:11;shishkander;This issue isn't closed, and indeed 3.3.3-3.3.5, 3.4.* releases do not contain this fix. What has to be done for it to be committed?;;;","18/Apr/12 10:20;michim;Sorry Andrii, I don't know how this got closed without getting checked in. I'm reopening the ticket. ;;;","18/Apr/12 10:27;michim;The patch looks good to me, but I like to get +1 from another committer before I check this in since I'm not familiar with zkpython.

Thanks1
--Michi;;;","03/Oct/13 10:50;fpj;The fix looks reasonable to me, but I'm also not that familiar to tell.;;;","03/Oct/13 11:30;nekto0n;Yeah, patch looks correct as {{ZINVALIDSTATE}} is not handled when converting error num to Exception. Looks like it was simply forgotten because coressponding exception {{InvalidStateException}} is declared.;;;","03/Oct/13 21:50;fpj;Patch didn't apply cleanly so I have updated and uploaded new patches.;;;","03/Oct/13 21:51;fpj;+1, trunk Committed revision 1529013. b3.4 Committed revision 1529012.;;;","03/Oct/13 21:51;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12606651/ZOOKEEPER-732-trunk.patch
  against trunk revision 1529013.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/1635//console

This message is automatically generated.;;;","04/Oct/13 11:07;hudson;SUCCESS: Integrated in ZooKeeper-trunk #2078 (See [https://builds.apache.org/job/ZooKeeper-trunk/2078/])
ZOOKEEPER-732. Improper translation of error into Python exception (Andrei Savu, Lei Zhang, fpj via fpj) (fpj: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1529013)
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/contrib/zkpython/src/c/zookeeper.c
;;;","13/Mar/14 18:17;fpj;Closing issues after releasing 3.4.6.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Zookeeper#delete  , #create - async versions miss a verb in the javadoc ",ZOOKEEPER-731,12460402,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,thkoch,kaykay.unique,kaykay.unique,26/Mar/10 23:12,23/Nov/11 19:22,29/Jun/25 13:34,06/Sep/11 14:12,3.3.0,,,,,,,,,,,,,,,,,,,,,,,,3.4.0,,,,,documentation,,,,,0,,,"    /**
     * The Asynchronous version of delete. ""The request doesn't  *missing* actually until
     * the asynchronous callback is called.""
     */
    public void delete(final String path, int version, VoidCallback cb, Object ctx) .. 


Also some information in the javadoc about how to instantiate the callback objects / context would be useful . 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Sep/11 22:54;fournc;ZOOKEEPER-731-fix.patch;https://issues.apache.org/jira/secure/attachment/12493079/ZOOKEEPER-731-fix.patch","05/Sep/11 22:57;fournc;ZOOKEEPER-731-fix2.patch;https://issues.apache.org/jira/secure/attachment/12493080/ZOOKEEPER-731-fix2.patch","05/Sep/11 15:54;thkoch;ZOOKEEPER-731.patch;https://issues.apache.org/jira/secure/attachment/12493037/ZOOKEEPER-731.patch",,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47631,,,,,Tue Sep 06 10:56:06 UTC 2011,,,,,,,,,,"0|i05ztb:",32901,,,,,,,,,,,,,,,,,,,,,"04/May/10 21:58;mahadev;moving this to 3.4... not a regression for 3.3.;;;","05/Sep/11 15:56;jiraposter@reviews.apache.org;
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1715/
-----------------------------------------------------------

Review request for zookeeper.


Summary
-------

;;;","05/Sep/11 16:24;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12493037/ZOOKEEPER-731.patch
  against trunk revision 1164758.

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/501//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/501//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/501//console

This message is automatically generated.;;;","05/Sep/11 19:18;jiraposter@reviews.apache.org;
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1715/#review1750
-----------------------------------------------------------



src/java/main/org/apache/zookeeper/ZooKeeper.java
<https://reviews.apache.org/r/1715/#comment3980>

    Is there some reason you moved this LOG initialization as part of this patch? I don't think there's anything wrong with it but it does seem unrelated.


- Camille


On 2011-09-05 15:55:47, Thomas Koch wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  https://reviews.apache.org/r/1715/
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-09-05 15:55:47)
bq.  
bq.  
bq.  Review request for zookeeper.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  .
bq.  
bq.  
bq.  This addresses bug ZOOKEEPER-731.
bq.      https://issues.apache.org/jira/browse/ZOOKEEPER-731
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    src/java/main/org/apache/zookeeper/ZooKeeper.java 00bac9f 
bq.  
bq.  Diff: https://reviews.apache.org/r/1715/diff
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Thomas
bq.  
bq.

;;;","05/Sep/11 19:44;jiraposter@reviews.apache.org;
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1715/#review1751
-----------------------------------------------------------



src/java/main/org/apache/zookeeper/ZooKeeper.java
<https://reviews.apache.org/r/1715/#comment3981>

    it is unrelated to the rest of the patch, but I touched the file anyway and it's an obvious clean up that follows the boy scout rule.[1]
    
    The previous LOG initialization was very confusing. It made me think whether there's some JVM magic that would require LOG to be initialized in the static block rather then in the normal way.
    
    [1] http://pragmaticcraftsman.com/2011/03/the-boy-scout-rule/


- Thomas


On 2011-09-05 15:55:47, Thomas Koch wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  https://reviews.apache.org/r/1715/
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-09-05 15:55:47)
bq.  
bq.  
bq.  Review request for zookeeper.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  .
bq.  
bq.  
bq.  This addresses bug ZOOKEEPER-731.
bq.      https://issues.apache.org/jira/browse/ZOOKEEPER-731
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    src/java/main/org/apache/zookeeper/ZooKeeper.java 00bac9f 
bq.  
bq.  Diff: https://reviews.apache.org/r/1715/diff
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Thomas
bq.  
bq.

;;;","05/Sep/11 19:58;jiraposter@reviews.apache.org;

bq.  On 2011-09-05 19:43:32, Thomas Koch wrote:
bq.  > src/java/main/org/apache/zookeeper/ZooKeeper.java, line 90
bq.  > <https://reviews.apache.org/r/1715/diff/1/?file=37951#file37951line90>
bq.  >
bq.  >     it is unrelated to the rest of the patch, but I touched the file anyway and it's an obvious clean up that follows the boy scout rule.[1]
bq.  >     
bq.  >     The previous LOG initialization was very confusing. It made me think whether there's some JVM magic that would require LOG to be initialized in the static block rather then in the normal way.
bq.  >     
bq.  >     [1] http://pragmaticcraftsman.com/2011/03/the-boy-scout-rule/

Ok, seems reasonable. +1, I'll check this in to trunk.


- Camille


-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1715/#review1751
-----------------------------------------------------------


On 2011-09-05 15:55:47, Thomas Koch wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  https://reviews.apache.org/r/1715/
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-09-05 15:55:47)
bq.  
bq.  
bq.  Review request for zookeeper.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  .
bq.  
bq.  
bq.  This addresses bug ZOOKEEPER-731.
bq.      https://issues.apache.org/jira/browse/ZOOKEEPER-731
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    src/java/main/org/apache/zookeeper/ZooKeeper.java 00bac9f 
bq.  
bq.  Diff: https://reviews.apache.org/r/1715/diff
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Thomas
bq.  
bq.

;;;","05/Sep/11 20:04;jiraposter@reviews.apache.org;
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1715/#review1753
-----------------------------------------------------------



src/java/main/org/apache/zookeeper/ZooKeeper.java
<https://reviews.apache.org/r/1715/#comment3983>

    I suspect LOG is initialized in the static to make initialization explicit - given logEnv uses LOG as an argument. We'll lose this with this change, i.e. someone might re-refactor the code and lose the implicit ordering. At the very least it would be a good idea to document.


- Patrick


On 2011-09-05 15:55:47, Thomas Koch wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  https://reviews.apache.org/r/1715/
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-09-05 15:55:47)
bq.  
bq.  
bq.  Review request for zookeeper.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  .
bq.  
bq.  
bq.  This addresses bug ZOOKEEPER-731.
bq.      https://issues.apache.org/jira/browse/ZOOKEEPER-731
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    src/java/main/org/apache/zookeeper/ZooKeeper.java 00bac9f 
bq.  
bq.  Diff: https://reviews.apache.org/r/1715/diff
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Thomas
bq.  
bq.

;;;","05/Sep/11 22:42;jiraposter@reviews.apache.org;

bq.  On 2011-09-05 20:04:12, Patrick Hunt wrote:
bq.  > src/java/main/org/apache/zookeeper/ZooKeeper.java, lines 90-94
bq.  > <https://reviews.apache.org/r/1715/diff/1/?file=37951#file37951line90>
bq.  >
bq.  >     I suspect LOG is initialized in the static to make initialization explicit - given logEnv uses LOG as an argument. We'll lose this with this change, i.e. someone might re-refactor the code and lose the implicit ordering. At the very least it would be a good idea to document.

Pat,
I checked this into head already. Would you prefer I roll back this part of the change or just add a comment?


- Camille


-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1715/#review1753
-----------------------------------------------------------


On 2011-09-05 15:55:47, Thomas Koch wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  https://reviews.apache.org/r/1715/
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-09-05 15:55:47)
bq.  
bq.  
bq.  Review request for zookeeper.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  .
bq.  
bq.  
bq.  This addresses bug ZOOKEEPER-731.
bq.      https://issues.apache.org/jira/browse/ZOOKEEPER-731
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    src/java/main/org/apache/zookeeper/ZooKeeper.java 00bac9f 
bq.  
bq.  Diff: https://reviews.apache.org/r/1715/diff
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Thomas
bq.  
bq.

;;;","05/Sep/11 22:50;jiraposter@reviews.apache.org;

bq.  On 2011-09-05 20:04:12, Patrick Hunt wrote:
bq.  > src/java/main/org/apache/zookeeper/ZooKeeper.java, lines 90-94
bq.  > <https://reviews.apache.org/r/1715/diff/1/?file=37951#file37951line90>
bq.  >
bq.  >     I suspect LOG is initialized in the static to make initialization explicit - given logEnv uses LOG as an argument. We'll lose this with this change, i.e. someone might re-refactor the code and lose the implicit ordering. At the very least it would be a good idea to document.
bq.  
bq.  Camille Fournier wrote:
bq.      Pat,
bq.      I checked this into head already. Would you prefer I roll back this part of the change or just add a comment?

imo putting the initialization of LOG back into the static would be the right thing to do, but feel free to just add the comment. This is a small/discussed change, if you want you could a) just submit a second patch to the jira that moves the init back into the static and adds a comment on why we do it this way, then  go ahead and commit that change. I don't believe we'd need to go through a more lengthy review...


- Patrick


-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1715/#review1753
-----------------------------------------------------------


On 2011-09-05 15:55:47, Thomas Koch wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  https://reviews.apache.org/r/1715/
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-09-05 15:55:47)
bq.  
bq.  
bq.  Review request for zookeeper.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  .
bq.  
bq.  
bq.  This addresses bug ZOOKEEPER-731.
bq.      https://issues.apache.org/jira/browse/ZOOKEEPER-731
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    src/java/main/org/apache/zookeeper/ZooKeeper.java 00bac9f 
bq.  
bq.  Diff: https://reviews.apache.org/r/1715/diff
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Thomas
bq.  
bq.

;;;","05/Sep/11 22:54;jiraposter@reviews.apache.org;

bq.  On 2011-09-05 20:04:12, Patrick Hunt wrote:
bq.  > src/java/main/org/apache/zookeeper/ZooKeeper.java, lines 90-94
bq.  > <https://reviews.apache.org/r/1715/diff/1/?file=37951#file37951line90>
bq.  >
bq.  >     I suspect LOG is initialized in the static to make initialization explicit - given logEnv uses LOG as an argument. We'll lose this with this change, i.e. someone might re-refactor the code and lose the implicit ordering. At the very least it would be a good idea to document.
bq.  
bq.  Camille Fournier wrote:
bq.      Pat,
bq.      I checked this into head already. Would you prefer I roll back this part of the change or just add a comment?
bq.  
bq.  Patrick Hunt wrote:
bq.      imo putting the initialization of LOG back into the static would be the right thing to do, but feel free to just add the comment. This is a small/discussed change, if you want you could a) just submit a second patch to the jira that moves the init back into the static and adds a comment on why we do it this way, then  go ahead and commit that change. I don't believe we'd need to go through a more lengthy review...

Sounds good, will do.


- Camille


-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1715/#review1753
-----------------------------------------------------------


On 2011-09-05 15:55:47, Thomas Koch wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  https://reviews.apache.org/r/1715/
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-09-05 15:55:47)
bq.  
bq.  
bq.  Review request for zookeeper.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  .
bq.  
bq.  
bq.  This addresses bug ZOOKEEPER-731.
bq.      https://issues.apache.org/jira/browse/ZOOKEEPER-731
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    src/java/main/org/apache/zookeeper/ZooKeeper.java 00bac9f 
bq.  
bq.  Diff: https://reviews.apache.org/r/1715/diff
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Thomas
bq.  
bq.

;;;","05/Sep/11 22:58;jiraposter@reviews.apache.org;

bq.  On 2011-09-05 20:04:12, Patrick Hunt wrote:
bq.  > src/java/main/org/apache/zookeeper/ZooKeeper.java, lines 90-94
bq.  > <https://reviews.apache.org/r/1715/diff/1/?file=37951#file37951line90>
bq.  >
bq.  >     I suspect LOG is initialized in the static to make initialization explicit - given logEnv uses LOG as an argument. We'll lose this with this change, i.e. someone might re-refactor the code and lose the implicit ordering. At the very least it would be a good idea to document.
bq.  
bq.  Camille Fournier wrote:
bq.      Pat,
bq.      I checked this into head already. Would you prefer I roll back this part of the change or just add a comment?
bq.  
bq.  Patrick Hunt wrote:
bq.      imo putting the initialization of LOG back into the static would be the right thing to do, but feel free to just add the comment. This is a small/discussed change, if you want you could a) just submit a second patch to the jira that moves the init back into the static and adds a comment on why we do it this way, then  go ahead and commit that change. I don't believe we'd need to go through a more lengthy review...
bq.  
bq.  Camille Fournier wrote:
bq.      Sounds good, will do.

Cool. 

Btw, I do agree with Thomas this is a code smell - we are trying to output the environment detail once, when the first ZK client is instantiated. Perhaps this code just needs more heavy refactoring, i.e. rather than hanging logEnv in the static perhaps there's a better way?


- Patrick


-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1715/#review1753
-----------------------------------------------------------


On 2011-09-05 15:55:47, Thomas Koch wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  https://reviews.apache.org/r/1715/
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-09-05 15:55:47)
bq.  
bq.  
bq.  Review request for zookeeper.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  .
bq.  
bq.  
bq.  This addresses bug ZOOKEEPER-731.
bq.      https://issues.apache.org/jira/browse/ZOOKEEPER-731
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    src/java/main/org/apache/zookeeper/ZooKeeper.java 00bac9f 
bq.  
bq.  Diff: https://reviews.apache.org/r/1715/diff
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Thomas
bq.  
bq.

;;;","05/Sep/11 23:01;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12493080/ZOOKEEPER-731-fix2.patch
  against trunk revision 1165443.

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/504//console

This message is automatically generated.;;;","06/Sep/11 10:56;hudson;Integrated in ZooKeeper-trunk #1296 (See [https://builds.apache.org/job/ZooKeeper-trunk/1296/])
    ZOOKEEPER-731. Zookeeper#delete , #create - async versions miss a verb in the javadoc (Thomas Koch via camille)
ZOOKEEPER-731. Zookeeper#delete , #create - async versions miss a verb in the javadoc (Thomas Koch via camille)

camille : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1165443
Files : 
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/ZooKeeper.java

camille : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1165406
Files : 
* /zookeeper/trunk/CHANGES.txt
* /zookeeper/trunk/src/java/main/org/apache/zookeeper/ZooKeeper.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"zkServer.sh uses sh's builtin echo on BSD, behaves incorrectly.",ZOOKEEPER-722,12459860,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,ikelly,ikelly,ikelly,22/Mar/10 14:49,23/Nov/11 19:22,29/Jun/25 13:34,12/Apr/10 06:33,3.3.0,,,,,,,,,,,,,,,,,,,,,,,,3.3.1,3.4.0,,,,scripts,,,,,0,,,"zkServer.sh output the PID of the zookeeper process with:
echo -n $! > ""$ZOOPIDFILE""

This uses -n which sh's builtin echo does not support. From echo's manpage.
<snip>
     Some shells may provide a builtin echo command which is similar or identical to this utility.  Most notably, the builtin echo in sh(1) does not accept
     the -n option.  Consult the builtin(1) manual page.
</snip>

This means that echo -n PID > ZOOPIDFILE will mean the contents of ZOOPIDFILE will be ""-n PID"". This stops zkServer.sh stop from working correctly.",Mac OS X,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Mar/10 16:54;ikelly;zk-722.diff;https://issues.apache.org/jira/secure/attachment/12439471/zk-722.diff",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47634,Reviewed,,,,Mon Apr 12 06:35:59 UTC 2010,,,,,,,,,,"0|i05ztr:",32903,Fix zkServer.sh script for BSD systems.,,,,,,,,,,,,,,,,,,,,"22/Mar/10 15:01;ikelly;Fix by making zk use the echo executable directly when -n in use.;;;","22/Mar/10 15:13;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12439463/zk-722.diff
  against trunk revision 925362.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/35/console

This message is automatically generated.;;;","22/Mar/10 16:40;henryr;Hi Ivan - 

Thanks for the patch - it looks good.

Hudson can't apply it because - I think - you used git diff to generate the patch file which doesn't produce patch -p0 compatible patchfiles. Could you regenerate with git diff --no-prefix and resubmit? Hudson will be able to apply the patch then. 

Thanks.
Henry
;;;","22/Mar/10 16:58;ikelly;Hi Henry,

I had assumed it used -p1, I've resubmitted the patch now without the  
prefixes.

-Ivan



;;;","22/Mar/10 22:22;henryr;Assigning back to Ivan after I gave Hudson a kick :);;;","22/Mar/10 22:52;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12439471/zk-722.diff
  against trunk revision 925362.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/36/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/36/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/36/console

This message is automatically generated.;;;","23/Mar/10 16:17;phunt;this is a shell script change, no test for those currently.

Please review for commit, prolly should verify on unix/mac/cygwin.;;;","12/Apr/10 06:33;phunt;Patch looks good, verified for linux/cygwin.;;;","12/Apr/10 06:35;phunt;+1 Thanks Ivan!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use zookeeper-{version}-sources.jar instead of zookeeper-{version}-src.jar to publish sources in the Maven repository,ZOOKEEPER-720,12459786,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,castagna,castagna,castagna,21/Mar/10 08:04,23/Nov/11 19:22,29/Jun/25 13:34,12/Apr/10 06:19,3.3.0,,,,,,,,,,,,,,,,,,,,,,,,3.3.1,3.4.0,,,,build,,,,,0,maven,,"The artifact with the sources to be published in the Maven repository should be named ${artifactId}-${version}-sources.jar not ${artifactId}-${version}-src.jar.

See also: http://maven.apache.org/guides/mini/guide-central-repository-upload.html and ZOOKEEPER-224",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Mar/10 08:14;castagna;ZOOKEEPER-720.patch;https://issues.apache.org/jira/secure/attachment/12439401/ZOOKEEPER-720.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47635,Reviewed,,,,Mon Apr 12 06:19:52 UTC 2010,,,,,,,,,,"0|i05ztz:",32904,,,,,,,,,,,,,,,,,,,,,"21/Mar/10 08:39;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12439401/ZOOKEEPER-720.patch
  against trunk revision 925362.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/34/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/34/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h1.grid.sp2.yahoo.net/34/console

This message is automatically generated.;;;","21/Mar/10 12:17;castagna;No tests are included, this is a trivial change to the build.xml file.;;;","22/Mar/10 19:12;henryr;Patch looks good to me, +1.;;;","22/Mar/10 22:51;phunt;once 3.3.0 goes out officially we should commit this to 3.3 branch and trunk.

Thanks Paolo!;;;","12/Apr/10 06:19;phunt;+1, thanks Paolo!
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fails to Build due to unknown opcode 'lock' in mt_adaptor.c,ZOOKEEPER-705,12459086,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Duplicate,thkoch,thkoch,thkoch,14/Mar/10 20:44,05/Jun/18 20:14,29/Jun/25 13:34,10/Dec/13 21:25,3.2.2,,,,,,,,,,,,,,,,,,,,,,,,3.5.0,,,,,c client,,,,,0,,,"The Debian package of Zookeeper[1] fails to build on some architectures, see below. The issue is an unknown assembler opcode. The Bugs is reported in the debian bugtracker as #568618[2]. A patch is available. I've uploaded it here too for your convenience.

[1] http://packages.qa.debian.org/z/zookeeper.html
[2] http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=568618


Buildd status overview:
https://buildd.debian.org/status/package.php?p=zookeeper

Some Failed Buildd Logs:
Sparc: https://buildd.debian.org/fetch.cgi?pkg=zookeeper;ver=3.2.2%2Bdfsg3-2;arch=sparc;stamp=1265466795
S390: https://buildd.debian.org/fetch.cgi?pkg=zookeeper;ver=3.2.2%2Bdfsg3-2;arch=s390;stamp=1265415637
powerpc: https://buildd.debian.org/fetch.cgi?pkg=zookeeper;ver=3.2.2%2Bdfsg3-2;arch=powerpc;stamp=1266677031
mipsel: https://buildd.debian.org/fetch.cgi?pkg=zookeeper&arch=mipsel&ver=3.2.2%2Bdfsg3-2&stamp=1268124320&file=log&as=raw
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Mar/10 20:47;thkoch;ZOOKEEPER-705.patch;https://issues.apache.org/jira/secure/attachment/12438768/ZOOKEEPER-705.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,67867,,,,,Tue Jun 05 20:14:13 UTC 2018,,,,,,,,,,"0|i05zw7:",32914,,,,,,,,,,,,,,,,,,,,,"14/Mar/10 20:47;thkoch;x;;;","15/Mar/10 03:50;mahadev;should we try getting this into 3.3?  (seems like a harmless change thought needs more testing on all the OS's)..... 

;;;","16/Mar/10 22:51;breed;where did __sync_fetch_and_add come from? i'm wondering if it works with cygwin.;;;","16/Mar/10 22:58;phunt;Not a  blocker for 3.3.0, let's push to 3.4.0 and ensure it works everywhere (etc);;;","16/Jul/11 21:49;mahadev;Not a blocker for 3.4.;;;","11/Dec/11 05:58;akitada;__sync_fetch_and_add is a gcc built-in function.
I think it was added in somewhere in gcc 4.1.
;;;","10/Dec/13 21:25;michim;fixed in ZOOKEEPER-1643;;;","12/May/15 16:42;gkasap;This affects also 3.4.5
I'm building zookeeper in Debian 7.8 on sparc and this was a blocking. Once applied this patch, the build was successful.;;;","05/Jun/18 20:14;ebourg;This has been fixed in 3.4.11.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Including quorum config when standalone leads to crash,ZOOKEEPER-680,12457347,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,phunt,vegardh,vegardh,24/Feb/10 21:51,03/Feb/22 08:50,29/Jun/25 13:34,,3.2.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,server,,,,,0,,,"Include server.#=... and/or a myid file when running standalone, zk server will crash with
java.lang.NullPointerException
   at org.apache.zookeeper.server.quorum.FastLeaderElection.totalOrderPredicate(FastLeaderElection.java:466)
   at org.apache.zookeeper.server.quorum.FastLeaderElection.lookForLeader(FastLeaderElection.java:635)
   at org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:515)

Seen when running zk embedded in other server, using
String[] args = new String[]{zookeeperCfgFile};
org.apache.zookeeper.server.quorum.QuorumPeerMain.main(args);

The workaround is of course to fix the config, but 3.1.1 managed to not crash on this.",RHEL,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,70742,,,,,Sat Mar 13 00:09:03 UTC 2010,,,,,,,,,,"0|i05zzj:",32929,,,,,,,,,,,,,,,,,,,,,"24/Feb/10 22:23;phunt;Let's triage and see if there's still time to do a check for this in 3.3.0;;;","13/Mar/10 00:09;phunt;pushing to 3.4.0, not a blocker.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tests should not rely on CONSOLE appender being present,ZOOKEEPER-654,12446385,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,henryr,henryr,22/Jan/10 23:03,23/Jan/10 00:17,29/Jun/25 13:34,,3.2.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,"Tests have been failing for us in an environment where we removed the CONSOLE appender from log4j. This breaks a couple of tests in QuorumPeerMainTest at least.

I have fixed in our builds by replacing CONSOLE with ROLLINGFILE (which we are using) for the time being, but messing with the log config shouldn't break tests. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,214150,,,,,Fri Jan 22 23:59:06 UTC 2010,,,,,,,,,,"0|i0602v:",32944,,,,,,,,,,,,,,,,,,,,,"22/Jan/10 23:44;phunt;it's difficult to test this particular functionality (ie verifying we log something in certain cases) without this approach. 

Are you saying we should have a dedicated log4j configuration file as part of test, rather than relying on the one in conf?
That would be fine w/me.
;;;","22/Jan/10 23:53;henryr;It seems like the code is retrieving a Layout object for log4j which it uses to format output to a custom appender. Is there a way of programmatically creating a Layout that will do the same thing? 

Something like this:

Layout layout = new SimpleLayout();

passes tests for me.

It depends, is the idea that we test that something is logged under the default log4j layout? Or that it gets logged at all (and using any layout that prints out messages will do)?

;;;","22/Jan/10 23:59;phunt;""logged at all"" should be sufficient, if that works great.

regardless we should also have a dedicated log4j config file to keep any changes in conf from effecting the tests and their output.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
testObserver timed out once on Hudson,ZOOKEEPER-649,12445780,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Cannot Reproduce,henryr,henryr,henryr,17/Jan/10 21:37,23/Apr/14 22:13,29/Jun/25 13:34,23/Apr/14 22:13,3.3.0,,,,,,,,,,,,,,,,,,,,,,,,3.5.0,,,,,quorum,,,,,0,,,"See http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/105/testReport/org.apache.zookeeper.test/ObserverTest/testObserver/ - test has only failed once and is hard to reproduce, so am waiting for more data. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,70781,,,,,Wed Apr 23 22:13:46 UTC 2014,,,,,,,,,,"0|i0603j:",32947,,,,,,,,,,,,,,,,,,,,,"10/Mar/10 07:53;henryr;Possibly related to ZOOKEEPER-693, but not reproducable. Pushing to 3.4.0 pending a decision about whether this is a real bug.;;;","23/Apr/14 22:13;michim;Will reopen when this happens again.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bug in WriteLock recipe implementation?,ZOOKEEPER-645,12445600,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,mahadev,jaakko,jaakko,15/Jan/10 05:19,03/Feb/22 08:50,29/Jun/25 13:34,,3.2.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,recipes,,,,,1,,,"Not sure, but there seem to be two issues in the example WriteLock:

(1) ZNodeName is sorted according to session ID first, and then according to znode sequence number. This might cause starvation as lower session IDs always get priority. WriteLock is not thread-safe in the first place, so having session ID involved in compare operation does not seem to make sense.

(2) if findPrefixInChildren finds previous ID, it should add dir in front of the ID",3.2.2 java 1.6.0_12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-3221,,,,,,,,,,,,,,,,,,,,"15/Jan/10 05:22;jaakko;645-fix-findPrefixInChildren.patch;https://issues.apache.org/jira/secure/attachment/12430357/645-fix-findPrefixInChildren.patch","19/Apr/11 16:16;andreesteve;ZOOKEEPER-645-compareTo.patch;https://issues.apache.org/jira/secure/attachment/12476744/ZOOKEEPER-645-compareTo.patch","08/Oct/12 06:17;matt.martin;ZOOKEEPER-645.3.patch.txt;https://issues.apache.org/jira/secure/attachment/12548196/ZOOKEEPER-645.3.patch.txt",,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,70799,,,,,Mon May 07 16:22:18 UTC 2018,,,,,,,,,,"0|i0603z:",32949,,,,,,,,,,,,,,,,,,,,,"15/Jan/10 05:22;jaakko;Attached patch addresses issue 2 above.
;;;","15/Jan/10 18:26;phunt;Mahadev can you review this one?;;;","15/Jan/10 19:31;mahadev;sure am doing it right now.;;;","15/Jan/10 20:05;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12430357/645-fix-findPrefixInChildren.patch
  against trunk revision 899383.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/103/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/103/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/103/console

This message is automatically generated.;;;","15/Jan/10 20:20;phunt;We should add tests to this to verify the change.
;;;","28/Jan/10 01:15;rcrocomb;I can address point (1) in the original comment: having the session ID breaks the lock recipe.  It looks like the session ID was added per:

https://issues.apache.org/jira/browse/ZOOKEEPER-78?focusedCommentId=12615305&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12615305

but the sorting via ZNodeName is worse than starvation: it causes clients with low session IDs not to see that clients with higher session IDs have acquired the lock which causes the function to return true: so you could theoretically have as many lock owners as clients as long as they acquire the lock in descending session ID order.

I fixed this in a local branch by replacing ZNodeName with a different class that ignores the session ID when sorting.  My test for WriteLockTest became:
{noformat}
/*
        * Test that the bug which makes it possible to acquire a lock in two
        * different sessions simultaneously is fixed. Bug occurs because including
        * session ID in node name results in sorting in
        * LockZooKeeperOperation.execute() such that low session ID clients do not
        * see that higher session ID clients already have the lock.
        */
       @Test
       public void testSessionOrderingBugFix() throws Exception {
               // session IDs are presumably assigned in order, but perform some checks
               final ZooKeeper zooA = createClient();
               final ZooKeeper zooB = createClient();

               final ZooKeeper lowZoo = zooA.getSessionId() < zooB.getSessionId() ? zooA
                               : zooB;
               final ZooKeeper highZoo = zooA.getSessionId() < zooB.getSessionId() ? zooB
                               : zooA;

               final WriteLock highLock = new WriteLock(highZoo, dir, null);
               final WriteLock lowLock = new WriteLock(lowZoo, dir, null);

               boolean highLocked = highLock.lock();
               assertTrue(highLocked);

               // If the bug is present, this attempt to lock will succeed.
               boolean lowLocked = lowLock.lock();
               assertFalse(lowLocked);

               assertTrue(highLock.isOwner());
               assertFalse(lowLock.isOwner());
       }
{noformat};;;","10/Mar/10 16:52;mahadev;not a blocker. moving it to 3.4.;;;","08/Sep/10 17:35;timrobertson100;I have applied the patch but still see that locks generated by subsequent clients are not respected by the first client and it is always able to get the lock  ;;;","31/Mar/11 06:03;oicqemote;around line 245, seems need to set id = null to continue the loop as the watcher not be setup corrently.

Stat stat = zookeeper.exists(lastChildId, new LockWatcher());
                            if (stat != null) {
                                return Boolean.FALSE;
                            } else {
                                LOG.warn(""Could not find the"" +
                                		"" stats for less than me: "" + lastChildName.getName());
                                id = null; //2011.3.31 set id to null to continue the loop                            };;;","19/Apr/11 16:16;andreesteve;compareTo.patch aims to correct ordering of ZNodeName objects used to validate lock ownership.

The code at WriteLock gets a list of znodes and for each znode creates a ZNodeName object which is added to a sorted list. 
The sorting was based on the full znode name, i.e. x-sessionID-ephemeral_number. As earlier connected clients appear to have lower sessionID values than those which connected latter, who connects first gets the lock disregarding anyone who has already the lock.

This patch simply changes compareTo overload at ZNodeName to just consider the sequence number instead of the full znode name, as this class' objects are used only for this purpose, this seems to have done the trick =)

However, getSessionID not being thread-safe is still an issue.

Could someone try it out and post the results?

[A discussion about this bug and some other issues on lock recipe, as well as this patch contributors, can be found here (in Portuguese) http://www.lsd.ic.unicamp.br/mc715-1s2011/index.php/Grupo01];;;","23/May/11 19:04;phunt;Hi, has anyone tried this?;;;","30/May/11 22:09;abramsm51;I've tried it.  I did see the starvation behavior with the original compareTo method from ZNodeName.  When I applied the compareTo patch the starvation issue went away.;;;","08/Oct/12 06:17;matt.martin;It seems as though both of the patches uploaded to date address real issues.  I've combined both patches and added a couple small changes:

- session ID is always padded out to the maximum number of digits in a long (this is purely an esthetic change, but I added a test case to make sure that the previous format and the current format could be intermingled).

- using a regex to extract the sequence ID from the znode.  I'm doing this based on the assumption that sequence numbers will always be padded to 10 digits (as stated on the wiki).  This seemed a little more robust than simply looking for the last index of '-' if, for example, somebody exactly creates a znode in the directory where you only expect lock-related paths.  On a related note: is there no way to tell if a znode was created as a sequential node from the Stat object.  I see ""ephemeralOwner"", but no equivalent for checking if the node was created as a sequential node.

After writing that last bullet point, I'm realizing that it would probably be best to use ""ephemeralOwner"" instead of explicitly adding the session ID to the path... I'll try to change that in a future patch.;;;","05/Nov/14 04:35;rudysysu@qq.com;follow this and it seems work.

1、ZNodeName
public int compareTo(ZNodeName that) {
    int s1 = this.sequence;
    int s2 = that.sequence;
    if (s1 == -1 && s2 == -1) {
        return this.name.compareTo(that.name);
    }
    return s1 == -1 ? 1 : s2 == -1 ? -1 : s1 - s2;
}

2、WriteLock
change “id = name;” to “id = dir + ""/"" + name;”

3、WriteLock
if (stat != null) {
    return Boolean.FALSE;
} else {
    LOG.warn(""Could not find the"" + "" stats for less than me: "" + lastChildName.getName());
    return execute(); // add this
}

;;;","15/Nov/17 23:10;githubbot;Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/413
  
    Did you guys see https://issues.apache.org/jira/browse/ZOOKEEPER-645 - it's from long back. Not sure if it's interesting to you @javicacheiro but FYI. If someone is interested to get that one over the line as well please speak up. thx.
;;;","13/Feb/18 22:44;khogg;I'm getting WriteLocks never being granted on 3.4.11 and initially brought it up on the user email list.  I'm working with ZookeeperNetEx on C# but have verified the code behaves the same on Java.

I've encountered two issues:
 # When setting the watch on the predecessor, its possible that the predecessor has been deleted between the time we acquired the children and set the watch.  If this happens, there is no watch and we exit out of the loop.  We should set id to null in this case to ensure the loop doesn't terminate.
 # Still need the change to ensure the dir name is prepended to the name returned from getChildren call in findPrefixInChildren.

#1 change
{code:java}
Stat stat = zookeeper.exists(lastChildId, new LockWatcher());
if (stat != null) {
   return Boolean.FALSE;
} else {
    LOG.warn(""Could not find the"" +
"" stats for less than me: "" + lastChildName.getName());
}
{code}
to
{code:java}
Stat stat = zookeeper.exists(lastChildId, new LockWatcher());
if (stat != null) {
    return Boolean.FALSE;
} else {
    LOG.warn(""Could not find the"" +
"" stats for less than me: "" + lastChildName.getName());
    id = null;
}
{code}
 

I've been running with these changes on 3.4.11 with two processes contending for 3 different locks and so far no hangs like I was seeing consistently without them.;;;","07/May/18 16:22;appodictic;I am going to suggest removing the code. It seems clear that
 # The implementation has bugs
 # Willingness to fix them is near 0
 # The implementation is not even a good academic example
 # If anyone attempts to fix it gets stalled by adding integration testing that is not in place
 # There are other mature lock over zk libraries in the wild;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
some elements of struct Stat have incorrect values when returned asynchronously,ZOOKEEPER-634,12443851,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Invalid,,reynhout,reynhout,19/Dec/09 22:13,05/Jan/10 20:48,29/Jun/25 13:34,19/Dec/09 22:20,3.2.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,c client,,,,,0,,,"I'm working on Ruby bindings for ZK (3.2.2) via the C API.  This involves some painful kludgery due to MRI Ruby's threading model, but I believe this bug report is valid:

Some of the elements of Stat structs, when returned via the C client, have values inconsistent with the synchronous call, zkCli output, and expectations.  E.g.:

{noformat:title=zkCli command line}
$ zk/bin/zkCli.sh -server localhost:2182 set /lala lala234
Connecting to localhost:2182

WATCHER::

WatchedEvent: Server state change. New state: SyncConnected
cZxid = 3
ctime = Sat Dec 19 14:32:03 EST 2009
mZxid = 69
mtime = Sat Dec 19 15:31:46 EST 2009
pZxid = 3
cversion = 0
dataVersion = 4
aclVersion = 0
ephemeralOwner = 0
dataLength = 7
numChildren = 0

{noformat}

{noformat:title=Ruby script + verbose ZK log output}
2009-12-19 15:31:48,952:45753(0x751000):ZOO_DEBUG@process_completions@1902: Switching on cptr->completion_type (async)
2009-12-19 15:31:48,952:45753(0x751000):ZOO_DEBUG@process_completions@1916: Calling COMPLETION_STAT for xid=4b2d3837 rc=0
2009-12-19 15:31:48,952:45753(0x751000):ZOO_DEBUG@process_completions@1949: --- PRE ruby callback.
   -----------------------
   &res.stat    0x00750e30
        .czxid        3
        .mzxid        69
        .ctime        1261251123149
        .mtime        1261254706180
        .version      4
        .cversion     0
        .aversion     0
        .ephemeralOwner 0
        .dataLength   7
        .numChildren  0
        .pzxid        3
   =======================
2009-12-19 15:31:48,952:45753(0x751000):ZOO_DEBUG@ruby_stat_completion_wrapper@1702: --- creating ruby thread.
2009-12-19 15:31:48,952:45753(0x7ee000):ZOO_DEBUG@ruby_stat_completion_wrapper_2@1685: --- invoking ruby callback.
   -----------------------
   cb->dc         0x002fe000
   cb->rc         0
   cb->ctx        0x01a03870
   cb->stat       0x00750e30
     ->czxid        3
     ->mzxid        69
     ->ctime        1261251123149
     ->mtime        140735387442616
     ->version      0
     ->cversion     0
     ->aversion     27264392
     ->ephemeralOwner 4302638816
     ->dataLength   -2100901903
     ->numChildren  32767
     ->pzxid        3
   =======================
2009-12-19 15:31:48,952:45753(0x7ee000):ZOO_DEBUG@ruby_stat_completion_wrapper_2@1687: --- callback returned, freeing struct.
2009-12-19 15:31:48,952:45753(0x7ee000):ZOO_DEBUG@ruby_stat_completion_wrapper_2@1689: --- struct freed.
sync returned #<ZooKeeperFFI::Stat:0x000001013783d0>
async callback.return_code 0
           attr  ??                   sync                  async
           ----  --                   ----                  -----
          czxid  OK                      3                      3
          mzxid  OK                     69                     69
          ctime  OK          1261251123149          1261251123149
          mtime  --          1261254706180        140735387442616
        version  --                      4                      0
       cversion  OK                      0                      0
       aversion  --                      0               27264392
 ephemeralOwner  --                      0             4302638816
     dataLength  --                      7            -2100901903
    numChildren  --                      0                  32767
          pzxid  OK                      3                      3
2009-12-19 15:31:49,052:45753(0x6ce000):ZOO_DEBUG@do_io@316: IO thread terminated
2009-12-19 15:31:49,052:45753(0x751000):ZOO_DEBUG@do_completion@335: completion thread terminated
2009-12-19 15:31:49,052:45753(0x705f3be0):ZOO_INFO@zookeeper_close@2407: Closing zookeeper session 125a86bdc640020 to [127.0.0.1:2182]
{noformat}

The last set of lines, above, are output from my Ruby code, comparing the differences between sync and async calls.  I added the LOG_DEBUG in zookeeper.c to dump the contents of res.stat before it gets shipped off to Ruby...as you can see, the LOG_DEBUG values match the values in the async Ruby call, but they're wrong.

I've currently only tested on OSX 10.5 (32bit) and 10.6 (64bit), but sometimes different elements are wrong on each.  I can get a comprehensive list if it's useful, but as examples:

{noformat:title=data variation examples}
## aexists
# ctime (int64_t):
#  32b OK
#  64b OK
# dataLength (int32_t):
#  32b OK
#  64b NG (== -2100901903 instead of 10)

## aget
# ctime (int64_t):
#  32b OK
#  64b NG (== 0 instead of something unixtimey e.g. 1261251123149)
# dataLength (int32_t):
#  32b NG (== -1856148083 instead of 10)
#  64b OK

## aset
# ctime (int64_t):
#  32b OK
#  64b OK
# dataLength (int32_t):
#  32b OK
#  64b NG (== -2100901903 instead of 10)

{noformat}


Lastly, a snippet of my changes to zookeeper.c, hopefully showing that I haven't done any harm to the data.  Note that I'm also seeing similar data variations for COMPLETION_DATA, which also returns a Stat struct.  I haven't finished the Ruby code for COMPLETION_ACLLIST (again, returns a Stat), so the same issue might arise there as well.

I realize that hacking the ZK C API is not a great way to build a foreign binding.  :(

{code:title=src/c/src/zookeeper.c}

            case COMPLETION_STAT:
                LOG_DEBUG((""Calling COMPLETION_STAT for xid=%x rc=%d"",cptr->xid,rc));
                if (rc) {
                    //cptr->c.stat_result(rc, 0, cptr->data);
                    ruby_stat_completion_wrapper(cptr->c.stat_result, rc, 0, (void *)cptr->data);
                } else {
                    struct SetDataResponse res;
                    deserialize_SetDataResponse(ia, ""reply"", &res);
  LOG_DEBUG((""--- PRE ruby callback.\n\
   -----------------------\n\
   &res.stat    0x%08x\n\
        .czxid        %ld\n\
        .mzxid        %ld\n\
        .ctime        %ld\n\
        .mtime        %ld\n\
        .version      %d\n\
        .cversion     %d\n\
        .aversion     %d\n\
        .ephemeralOwner %ld\n\
        .dataLength   %d\n\
        .numChildren  %d\n\
        .pzxid        %ld\n\
   ======================="",
    &res.stat,
    res.stat.czxid, res.stat.mzxid, res.stat.ctime, res.stat.mtime,
    res.stat.version, res.stat.cversion, res.stat.aversion,
    res.stat.ephemeralOwner, res.stat.dataLength, res.stat.numChildren,
    res.stat.pzxid ));
                    //cptr->c.stat_result(rc, &res.stat, cptr->data);
                    ruby_stat_completion_wrapper(cptr->c.stat_result, rc, &res.stat, (void *)cptr->data);
                    deallocate_SetDataResponse(&res);
                }
                break;

{code}


","OSX 10.5, 10.6 (32b and 64b, respectively)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,214146,,,,,Tue Jan 05 20:48:06 UTC 2010,,,,,,,,,,"0|i0604v:",32953,,,,,,,,,,,,,,,,,,,,,"19/Dec/09 22:20;reynhout;Sorry, some of the data included is invalid.  I'll repost when confirmed, if necessary. :-/;;;","20/Dec/09 02:48;reynhout;Epilogue: I spoke too soon, I guess I had been staring at the data for too long.

Some parts of the Stat struct were getting repointed or overwritten by the time the values were shuttled into the Ruby glue.  Aside from the variation between 32b and 64b, the variations were repeatable (always the same changes, always the same wrong data), so I thought I saw something that wasn't there.

Properly duping the struct before passing to the Ruby thread resolved it.;;;","05/Jan/10 20:48;phunt;Please consider contributing your ruby binding, we'd love to include it in the release along with python, perl, etc...;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TODO pondering about allocation behavior in zkpython may be removed,ZOOKEEPER-600,12442001,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,niemeyer,niemeyer,niemeyer,30/Nov/09 22:22,26/Mar/10 17:25,29/Jun/25 13:34,17/Dec/09 23:39,3.2.1,,,,,,,,,,,,,,,,,,,,,,,,3.3.0,,,,,contrib-bindings,,,,,0,,,"I suppose the TODO below is referring to the ""path"" variable which is passed in as an output variable to PyArg_ParseTuple right below.  The TODO may be removed, since the code is right.  Code using PyArg_ParseTuple will borrow the reference from the calling code, since there's a stack behind the call to the enclosing function (pyzoo_get_children in this case) which won't go away until the function returns.


Index: src/contrib/zkpython/src/c/zookeeper.c
===================================================================
--- src/contrib/zkpython/src/c/zookeeper.c	(revision 885582)
+++ src/contrib/zkpython/src/c/zookeeper.c	(working copy)
@@ -774,8 +774,6 @@
 
 static PyObject *pyzoo_get_children(PyObject *self, PyObject *args)
 {
-  // TO DO: Does Python copy the string or the reference? If it's the former
-  // we should free the String_vector
   int zkhid;
   char *path;
   PyObject *watcherfn = Py_None;
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Dec/09 19:07;niemeyer;deallocate-vector.patch;https://issues.apache.org/jira/secure/attachment/12426565/deallocate-vector.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47703,Reviewed,,,,Fri Dec 18 13:59:55 UTC 2009,,,,,,,,,,"0|i0609z:",32976,,,,,,,,,,,,,,,,,,,,,"30/Nov/09 22:33;phunt;Hi Gustavo, thanks for the submit. I need to point out that we require submissions via patch file, details of which you can find here:
http://wiki.apache.org/hadoop/ZooKeeper/HowToContribute
(use svn diff to create a patch, attach it to this jira using ""attach file"" link on the left hand side of this page)

The reason for this is that we need to capture your acceptance of the license grant to ASF. Otw we cannot
accept the patch (for legal reasons). Also our automated workflow checks submissions and such, it's triggered
by your attaching the file, then clicking on ""submit patch"". Thanks for your patience.

If you could attach you change as a patch file that would be great.;;;","30/Nov/09 22:45;stevechy;Hi Gustavo, I think it's talking about the struct String_vector strings that gets copied at the end of the function.

;;;","30/Nov/09 22:56;henryr;Correct - my concern is over whether PyString_FromString copies the C string it is given. If it does not, then a String_vector is allocated by zoo_wgetchildren and never freed.

http://docs.python.org/c-api/string.html hints that a copy is made, and therefore the memory needs freeing. 

This would be relatively easy to check by memsetting all strings in the String_vector to 'A' after the copy, and then checking to see if the Python-side strings are altered. Alternatively, you could check the Python C API source - it should be fairly clear what the answer is.

Thanks for picking this up!
;;;","30/Nov/09 23:16;niemeyer;Ah, I see.

Yes, PyString_FromString will definitely copy the string over, so the strings.data array is leaking if it has data allocated dynamically.

In addition to this, PyString_FromString and PyList_New are both allocating memory, and thus they may fail to return a proper object.  This isn't being checked currently.;;;","30/Nov/09 23:19;niemeyer;Patrick, thanks for pointing me to the conventions, and sorry for missing it earlier.

I'll give it a shot and submit a patch soon.;;;","01/Dec/09 04:57;phunt;no worries, we don't expect first time contributors to know everything. ;-)  thanks for the interest.;;;","01/Dec/09 19:07;niemeyer;The attached patch should fix this problem.  It also reuses existing code, and fixes a few other issues around the former problem, with return values not being properly checked for errors.

I'm afraid there are several instances of variables which are not checked for error conditions in the module, unfortunately. :-(  I'm not going to try fixing these in this JIRA, though.;;;","01/Dec/09 19:23;henryr;Patch applies fine for me and tests all pass - looks good, thanks Gustavo! I'll open a JIRA for the other issues. ;;;","11/Dec/09 18:52;henryr;Marking as patch submitted so that hudsonqabot can take a look. ;;;","11/Dec/09 19:22;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12426565/deallocate-vector.patch
  against trunk revision 888216.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/22/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/22/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/22/console

This message is automatically generated.;;;","16/Dec/09 23:48;mahadev;henry/gustavo,
 is this ready to commit? ;;;","17/Dec/09 12:33;niemeyer;I believe it's ready for integration.;;;","17/Dec/09 18:53;henryr;Yes, this looks good to me - I'd like to see a test included, but we have no infrastructure for C-side tests which this would probably need. Can be committed as far as I am concerned. Thanks Gustavo!;;;","17/Dec/09 23:39;mahadev;great ... I just committed this. thanks gustavo.;;;","18/Dec/09 13:59;hudson;Integrated in ZooKeeper-trunk #634 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/634/])
    . TODO pondering about allocation behavior in zkpython may be removed (gustavo via mahadev)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LearnerHandler is misspelt in the thread's constructor,ZOOKEEPER-598,12441704,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,henryr,henryr,henryr,25/Nov/09 19:53,26/Mar/10 17:28,29/Jun/25 13:34,30/Nov/09 12:04,3.2.2,,,,,,,,,,,,,,,,,,,,,,,,3.2.2,,,,,quorum,,,,,0,,,Typo in thread constructor. Oops. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Nov/09 20:03;henryr;ZOOKEEPER-598.patch;https://issues.apache.org/jira/secure/attachment/12426140/ZOOKEEPER-598.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47705,,,,,Wed Dec 02 23:04:03 UTC 2009,,,,,,,,,,"0|i060a7:",32977,,,,,,,,,,,,,,,,,,,,,"25/Nov/09 20:03;henryr;Trivial fix; plus did a grep -ir leaner src/* to check that I haven't done it anywhere else. Don't think tests are required for this one. Thanks Ben for pointing this out!;;;","30/Nov/09 06:17;henryr;Hudson will fail because this doesn't hit a test; this really isn't worth testing for.;;;","30/Nov/09 06:39;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12426140/ZOOKEEPER-598.patch
  against trunk revision 884554.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/80/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/80/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/80/console

This message is automatically generated.;;;","30/Nov/09 12:04;fpj;+1, this is pretty simple patch. I have just committed it: revision 885394.;;;","02/Dec/09 23:04;hudson;Integrated in ZooKeeper-trunk #565 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/565/])
    ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
remove unnecessary/annoying log of tostring error in Request.toString(),ZOOKEEPER-588,12441383,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,phunt,phunt,phunt,21/Nov/09 23:23,07/May/10 17:39,29/Jun/25 13:34,11/Dec/09 20:24,3.2.1,,,,,,,,,,,,,,,,,,,,,,,,3.3.0,,,,,server,,,,,0,logging,,"Why are we logging this? It's unnecessary and just annoying afaict. We should remove it entirely.

2009-11-18 05:37:29,312 WARN org.apache.zookeeper.server.Request: Ignoring exception during toString
java.nio.BufferUnderflowException
	at java.nio.HeapByteBuffer.get(HeapByteBuffer.java:127)
	at java.nio.ByteBuffer.get(ByteBuffer.java:675)
	at org.apache.zookeeper.server.Request.toString(Request.java:199)
	at java.lang.String.valueOf(String.java:2827)
	at java.lang.StringBuilder.append(StringBuilder.java:115)
	at org.apache.zookeeper.server.quorum.CommitProcessor.processRequest(CommitProcessor.java:167)
	at org.apache.zookeeper.server.quorum.FollowerRequestProcessor.run(FollowerRequestProcessor.java:68)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Nov/09 17:51;phunt;ZOOKEEPER-588.patch;https://issues.apache.org/jira/secure/attachment/12425852/ZOOKEEPER-588.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47713,Reviewed,,,,Mon Dec 14 10:41:28 UTC 2009,,,,,,,,,,"0|i060bz:",32985,,,,,,,,,,,,,,,,,,,,,"23/Nov/09 17:51;phunt;fixed the tostring and also addressed a problem in the caller 

1) caller now tries to log the path if it knows it (since we may not be able to figure out in req tostring as that's sorta a hack

2) added a few more exceptions to attempts to print reqpath in tostring

3) added more sanity checks before attempting to determine path

4) removed the annoying log message that caused this issue in the first place.;;;","24/Nov/09 17:38;breed;+1 good job. my only small quibble is the coding style violation:

 )
{

rather than:

) {;;;","24/Nov/09 17:40;phunt;I always do that for multi-line conditional, I think it makes it easier to find the block bounds....;;;","11/Dec/09 20:24;breed;Committed revision 889797.;;;","14/Dec/09 10:41;hudson;Integrated in ZooKeeper-trunk #625 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/625/])
    ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
C client's zoo_state function returns unknown state 0,ZOOKEEPER-553,12438030,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,,slider,slider,14/Oct/09 00:47,03/Feb/22 08:50,29/Jun/25 13:34,,3.2.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,c client,contrib-bindings,,,,0,,,"Using zkpython with ZK 3.2.1 release:

  import zookeeper as z
  zh = z.init(...)
  z.state(zh)  # returns 3 == z.CONNECTED_STATE
  # kill standalone ZK server
  z.state(zh)  # returns 0 == ???

The problem is that 0 is not a state defined by the C client's zookeeper.[ch]. Perhaps 0 should've been defined as something like DISCONNECTED_STATE? (Java's KeeperState.Disconnected is 0, if that matters.)

If the fix is to define 0 as a new state, changes will be needed to both the C client and zkpython. Not sure about other bindings.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,68119,,,,,Wed Jul 13 23:03:55 UTC 2011,,,,,,,,,,"0|i060gf:",33005,,,,,,,,,,,,,,,,,,,,,"05/Mar/10 23:23;phunt;Not a blocker, pushing to 3.4.0;;;","13/Jul/11 23:03;mahadev;Pushing it to 3.5. Not a blocker.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
unnecessary SetWatches message on new session,ZOOKEEPER-551,12437932,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,phunt,phunt,phunt,13/Oct/09 04:10,26/Mar/10 17:25,29/Jun/25 13:34,08/Nov/09 21:42,3.2.1,,,,,,,,,,,,,,,,,,,,,,,,3.3.0,,,,,c client,java client,,,,0,,,"The java client is sending a SetWatches message even on a new session (always empty). Additionally SetWatches is called
even in the case of re-establishing session, however no watches are set. The code should check for watches before
sending this (ie don't send empty setwatches). I see this on java, investigate c as well.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Nov/09 22:45;phunt;ZOOKEEPER-551.patch;https://issues.apache.org/jira/secure/attachment/12424236/ZOOKEEPER-551.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47736,,,,,Mon Nov 09 08:11:44 UTC 2009,,,,,,,,,,"0|i060gn:",33006,,,,,,,,,,,,,,,,,,,,,"06/Nov/09 22:45;phunt;This patch changes the c/java code to not send setwatches message if there are no pending watches.

I don't see how to neg test this - we are already verifying the positive cases so failure for hadoopqa should be expected but I think that's ok.
;;;","06/Nov/09 23:19;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12424236/ZOOKEEPER-551.patch
  against trunk revision 833559.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/54/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/54/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h8.grid.sp2.yahoo.net/54/console

This message is automatically generated.;;;","08/Nov/09 21:42;fpj;+1. I just committed this one, Pat. Thanks!
;;;","09/Nov/09 05:27;hudson;Integrated in ZooKeeper-trunk #528 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/528/])
    ;;;","09/Nov/09 08:11;fpj;Committed revision 833932;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
api and forrest docs should mention if classes are thread safe,ZOOKEEPER-497,12432201,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,phunt,phunt,phunt,04/Aug/09 20:51,03/Feb/22 08:50,29/Jun/25 13:34,,3.2.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,documentation,,,,,0,,,"the api (c/java clients) and the forrest docs should talk about thread safety - in particular we don't
mention that ZooKeeper class is thread safe (etc...) Docs should be updated.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,70753,,,,,Sat Mar 13 00:08:50 UTC 2010,,,,,,,,,,"0|i060of:",33041,,,,,,,,,,,,,,,,,,,,,"13/Mar/10 00:08;phunt;pushing to 3.4.0, not a blocker.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
c client logs an invalid error when zookeeper_init is called with chroot,ZOOKEEPER-495,12432069,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,phunt,michim,michim,03/Aug/09 18:20,07/May/10 17:40,29/Jun/25 13:34,26/Jan/10 03:11,3.2.0,,,,,,,,,,,,,,,,,,,,,,,,3.3.0,,,,,c client,,,,,0,logging,,"The C client logs this error message when zookeeper_init is called with chroot. 

2009-08-03 18:14:29,130:6624(0x5e66e950):ZOO_ERROR@sub_string@730: server path  does not include chroot path /chroot

I'll attach a simple program to reproduce this.

Thanks!
--Michi",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/10 00:18;phunt;ZOOKEEPER-495.patch;https://issues.apache.org/jira/secure/attachment/12431177/ZOOKEEPER-495.patch","03/Aug/09 18:23;michim;chroot.cc;https://issues.apache.org/jira/secure/attachment/12415379/chroot.cc","03/Aug/09 18:23;michim;chroot.log;https://issues.apache.org/jira/secure/attachment/12415380/chroot.log",,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47774,Reviewed,,,,Wed Jan 27 11:05:50 UTC 2010,,,,,,,,,,"0|i060on:",33042,,,,,,,,,,,,,,,,,,,,,"03/Aug/09 18:23;michim;Here is a simple program to reproduce the issue and corresponding log. 

--Michi;;;","23/Jan/10 00:18;phunt;I updated the code to only output for non-session events. session event's don't have paths (zero len str)

No tests as the current tests were causing this error to be output, I verified that the log is not being output in this case.;;;","23/Jan/10 08:57;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12431177/ZOOKEEPER-495.patch
  against trunk revision 902320.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/51/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/51/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-h7.grid.sp2.yahoo.net/51/console

This message is automatically generated.;;;","26/Jan/10 03:02;mahadev;+1 the patch looks good.;;;","26/Jan/10 03:11;mahadev;+1 for the patch. I just committed this. thanks pat.;;;","27/Jan/10 11:05;hudson;Integrated in ZooKeeper-trunk #680 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/680/])
    ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
patch for command line setquota ,ZOOKEEPER-493,12431956,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,sbendiola,sbendiola,sbendiola,01/Aug/09 09:40,05/Sep/09 22:36,29/Jun/25 13:34,04/Aug/09 21:39,3.2.0,,,,,,,,,,,,,,,,,,,,,,,,3.2.1,3.3.0,,,,java client,,,,,0,,,"the command line ""setquota"" tries to use argument 3 as both a path and a value
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Aug/09 21:36;phunt;ZOOKEEPER-493.patch;https://issues.apache.org/jira/secure/attachment/12415525/ZOOKEEPER-493.patch","01/Aug/09 09:42;sbendiola;quotafix.patch;https://issues.apache.org/jira/secure/attachment/12415227/quotafix.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47775,Reviewed,,,,Wed Aug 05 10:52:21 UTC 2009,,,,,,,,,,"0|i060ov:",33043,,,,,,,,,,,,,,,,,,,,,"04/Aug/09 21:36;phunt;updated patch to cleanup a bit in addition to fix.

ZOOKEEPER-493.patch supersedes previous patch (fixed naming of patch file);;;","04/Aug/09 21:39;phunt;+1, thanks Steve! Applied to 3.2.1 and 3.3;;;","05/Aug/09 10:52;hudson;Integrated in ZooKeeper-trunk #405 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/405/])
    . patch for command line setquota
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
the tests should have their own log4j.properties,ZOOKEEPER-492,12431864,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Invalid,,phunt,phunt,31/Jul/09 04:24,23/Apr/14 20:40,29/Jun/25 13:34,23/Apr/14 20:40,3.1.1,3.2.0,,,,,,,,,,,,,,,,,,,,,,,3.5.0,,,,,tests,,,,,0,,,"the tests currently rely (QuorumPeerMainTest in particular) on conf/log4j.properties. if the user changes this file
and then runs the tests the tests may fail. the tests should have their own log4j.properties maintained w/in the test
directory itself, separate from conf/log4j.properties
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,70795,,,,,Wed Apr 23 20:40:46 UTC 2014,,,,,,,,,,"0|i060p3:",33044,,,,,,,,,,,,,,,,,,,,,"16/Aug/10 06:26;abmargb;I have just checked out the ZooKeeper trunk in Eclipse (running on Windows) and 3/5 tests from the QuorumPeerMainTest fail due to a NullPointerException while recovering CONSOLE appender. Is this supposed to happen?;;;","16/Aug/10 16:29;phunt;It happens today because we rely on a particular setup of log4j, in eclipse if you don't add the conf directory to the ""run as junit test"" classpath it won't pick up that log4j.properties and as a result the test will fail. try that. We should have a test specific log4j.properties (hence this jira).;;;","23/Apr/14 20:40;michim;This is no longer a valid issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ignore sigpipe in testRetry to avoid silent immediate failure,ZOOKEEPER-482,12431192,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,cdarroch,cdarroch,cdarroch,22/Jul/09 22:44,05/Sep/09 22:36,29/Jun/25 13:34,30/Jul/09 22:34,3.2.0,,,,,,,,,,,,,,,,,,,,,,,,3.2.1,3.3.0,,,,c client,tests,,,,0,,,"The testRetry test silently exits for me periodically, especially, it seems, on newer hardware.  It also spits out from log messages clutter the test output.

The silent exits turn out to be because SIGPIPE is sometimes delivered during the sleep(1) in createClient(), the second time createClient() is called.  Since SIGPIPE is not being ignored and there is no signal handler, the process exists immediately.  This leaves the test suite in a broken state, with the test ZooKeeper process still running because ""zkServer.sh stop"" is not run by tearDown().  You have to manually kill the ZK server and retry the tests; sometimes they succeed and sometimes they don't.

I described SIGPIPE handling a little in ZOOKEEPER-320.  The appropriate thing, I think, is for the client application to ignore or handle SIGPIPE.  In this case, that falls to the test processes.  The attached patch fixes the issue for me with testRetry.

The patch uses sigaction() to ignore SIGPIPE in TestClientRetry.cc and, for good measure (although I never saw it actually fail for me), TestClient.cc, since that file also uses sleep() extensively.

I also removed a couple of unused functions and a macro definition from TestClientRetry.cc, just to simply matters, and turned off log output, which makes the testRetry output much, much cleaner (otherwise you get a lot of log output spamming into the nice clean cppunit output :-).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Jul/09 22:45;cdarroch;ZOOKEEPER-482.patch;https://issues.apache.org/jira/secure/attachment/12414276/ZOOKEEPER-482.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47784,Reviewed,,,,Fri Jul 31 18:46:03 UTC 2009,,,,,,,,,,"0|i060qv:",33052,Ignore SIGPIPE signal to C test suite does not fail suddenly.,,,,,,,,,,,,,,,,,,,,"22/Jul/09 22:49;mahadev;thanks chris,
  I have been meaning to fix the SIGPIPE in the tests but always forgot about it. ;;;","23/Jul/09 11:23;henryr;Great stuff Chris, thanks very much!;;;","30/Jul/09 19:21;breed;+1 thanks chris!;;;","30/Jul/09 21:44;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12414276/ZOOKEEPER-482.patch
  against trunk revision 798038.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 4 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/161/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/161/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/161/console

This message is automatically generated.;;;","30/Jul/09 22:34;mahadev;I just committed this. thanks chris.;;;","31/Jul/09 18:46;hudson;Integrated in ZooKeeper-trunk #400 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/400/])
    . ignore sigpipe in testRetry to avoid silent immediate failure. (chris via mahadev)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
include unistd.h for sleep() in c tests,ZOOKEEPER-470,12430402,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,cdarroch,cdarroch,cdarroch,14/Jul/09 18:25,05/Sep/09 22:36,29/Jun/25 13:34,20/Jul/09 22:55,3.2.0,,,,,,,,,,,,,,,,,,,,,,,,3.2.1,3.3.0,,,,c client,,,,,0,,,Include unistd.h for sleep() calls in C tests to ensure successful compilation on some platforms.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/09 18:26;cdarroch;ZOOKEEPER-470.patch;https://issues.apache.org/jira/secure/attachment/12413458/ZOOKEEPER-470.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47793,Reviewed,,,,Mon Jul 27 07:04:42 UTC 2009,,,,,,,,,,"0|i060s7:",33058,Include unistd.h for sleep() calls in C tests.,,,,,,,,,,,,,,,,,,,,"15/Jul/09 00:04;mahadev;+1 the patch looks good.;;;","20/Jul/09 22:55;mahadev;I just committed this. thanks chris.;;;","27/Jul/09 07:04;hudson;Integrated in ZooKeeper-trunk #393 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/393/])
    ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
avoid compile warning in send_auth_info(),ZOOKEEPER-468,12430398,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,cdarroch,cdarroch,cdarroch,14/Jul/09 17:44,05/Sep/09 22:36,29/Jun/25 13:34,16/Jul/09 17:42,3.2.0,,,,,,,,,,,,,,,,,,,,,,,,3.2.1,3.3.0,,,,c client,,,,,0,,,"Older compilers may complain that rc may be used without initialization in send_auth_info(), if -Wall is specified.  The fix is a simple initialization.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/09 17:45;cdarroch;ZOOKEEPER-468.patch;https://issues.apache.org/jira/secure/attachment/12413453/ZOOKEEPER-468.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47795,,,,,Mon Jul 27 07:04:43 UTC 2009,,,,,,,,,,"0|i060sn:",33060,Fix minor compile warning in send_auth_info().,,,,,,,,,,,,,,,,,,,,"16/Jul/09 14:59;fpj;I just committed this. Thanks, Chris.;;;","16/Jul/09 17:30;phunt;afaict this was only committed to the trunk as:
New Revision: 794704

It should have been committed to both trunk and 3.2

reopening so that it can be committed to the 3.2 branch;;;","16/Jul/09 17:42;fpj;Committed to 3.2 branch as well (revision 794765). Thanks for the reminder, Pat.;;;","27/Jul/09 07:04;hudson;Integrated in ZooKeeper-trunk #393 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/393/])
    ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
C++ tests can't be built on Mac OS using XCode command line tools,ZOOKEEPER-463,12430205,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Duplicate,,henryr,henryr,13/Jul/09 13:14,23/Apr/14 20:26,29/Jun/25 13:34,23/Apr/14 20:26,3.2.0,,,,,,,,,,,,,,,,,,,,,,,,3.5.0,,,,,tests,,,,,0,,,--wrap is an unsupported command line flag for ld on Mac OS. The cppunit tests therefore won't build.,"Using latest XCode 3.1.3.
[apache-zookeeper/bin]$ ld -v
@(#)PROGRAM:ld  PROJECT:ld64-85.2.1
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,70793,,,,,Wed Apr 23 20:26:08 UTC 2014,,,,,,,,,,"0|i060tb:",33063,,,,,,,,,,,,,,,,,,,,,"23/Apr/14 20:26;michim;This is being worked on in https://issues.apache.org/jira/browse/ZOOKEEPER-1742;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
keeper exceptions missing path,ZOOKEEPER-384,12423940,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,phunt,phunt,phunt,27/Apr/09 20:55,08/Jul/09 20:24,29/Jun/25 13:34,05/May/09 04:55,3.0.0,3.0.1,3.1.0,3.1.1,,,,,,,,,,,,,,,,,,,,,3.2.0,,,,,java client,,,,,0,,,"keeper exceptions thrown by the java client don't include path, having path helps in debugging.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Apr/09 21:08;phunt;ZOOKEEPER-384.patch;https://issues.apache.org/jira/secure/attachment/12406571/ZOOKEEPER-384.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47855,Reviewed,,,,Tue May 05 14:59:48 UTC 2009,,,,,,,,,,"0|i0612f:",33104,,,,,,,,,,,,,,,,,,,,,"27/Apr/09 21:08;phunt;Include path in exception, updated test to check.
;;;","27/Apr/09 22:02;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12406571/ZOOKEEPER-384.patch
  against trunk revision 769079.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/52/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/52/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/52/console

This message is automatically generated.;;;","27/Apr/09 22:15;phunt;retriggering patch - sessions timeout on last submission, unrelated to change;;;","27/Apr/09 22:32;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12406571/ZOOKEEPER-384.patch
  against trunk revision 769079.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/53/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/53/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/53/console

This message is automatically generated.;;;","05/May/09 04:32;mahadev;+1 for the patch.. the test  failure has an open jira ZOOKEEPER-385.;;;","05/May/09 04:55;mahadev;I just committed this. thanks pat.;;;","05/May/09 14:59;hudson;Integrated in ZooKeeper-trunk #300 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/300/])
    . keeper exceptions missing path (phunt via mahadev)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ant test target re-compiles cppunit code every time,ZOOKEEPER-376,12422952,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,phunt,phunt,phunt,15/Apr/09 22:10,08/Jul/09 20:24,29/Jun/25 13:34,07/May/09 22:38,3.2.0,,,,,,,,,,,,,,,,,,,,,,,,3.2.0,,,,,build,c client,,,,0,,,"Giri, can you take a look at this:

1) looks like autoreconf is always run, which means that a re-configure/re-make is run each time the tests are run using ant

2) tabs were introduced to the build when cppunit changes were made, please only use spaces (would be great if you could fix this too -- hard to read in my editor)

Thanks!
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Apr/09 23:26;phunt;ZOOKEEPER-376.patch;https://issues.apache.org/jira/secure/attachment/12406976/ZOOKEEPER-376.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47862,Reviewed,,,,Fri May 08 16:02:11 UTC 2009,,,,,,,,,,"0|i0613b:",33108,,,,,,,,,,,,,,,,,,,,,"30/Apr/09 23:26;phunt;I've updated the cppunit build.xml based on my following understanding
of how autotools works:

       1. If we have a Makefile it will handle up-to-date check and also
          regenerate the configure script if missing. (done)
       2. If we don't have a Makefile use the configure script to 
          regenerate it. (done)
       3. If we don't have a Makefile nor a configure script then it's
          last resort and run autoreconf, then configure (done)
;;;","30/Apr/09 23:27;phunt;submitting patch - expect it to fail due to build change, no tests were modified.
;;;","01/May/09 04:27;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12406976/ZOOKEEPER-376.patch
  against trunk revision 769885.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/57/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/57/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/57/console

This message is automatically generated.;;;","05/May/09 06:45;mahadev;what will happen if I change Makefile.am and the old Makefile still exist? Will it just run the old makefile or regenrate the Makefile again? Also, what happens if I change the configure.ac and the old Makefile still exists? 

These are valid concerns since the patch process will just apply the patch (incase we make a change to just Makefile.am) and since the Makefile will already exist (because of the last build process) we have to make sure that makefile is regenerated... 
;;;","07/May/09 06:42;phunt;the makefile has targets/dependencies to handle changes to any of those files. if it notices a change it will
run the appropriate script to update. See the Makefile - look for makefile.am/makefile/configure.ac/etc... I tried
a number of things (like touching those files and retrying the build) and it seemed to handle it appropriately.
Give it a try yourself.

It shouldn't be an issue but I don't think you are correct re the patch process. afaik the build/patch process 
always starts ""from scratch"" - ie with a clean checkout into an empty directory.
;;;","07/May/09 22:38;mahadev;thats good.. I just committed this. thanks pat.;;;","08/May/09 16:02;hudson;Integrated in ZooKeeper-trunk #303 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/303/])
    . ant test target re-compiles cppunit code every time (phunt via mahadev)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Uninitialized struct variable in C causes warning which is treated as an error,ZOOKEEPER-374,12422554,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,phunt,nitay,nitay,10/Apr/09 09:28,08/Jul/09 20:24,29/Jun/25 13:34,16/Apr/09 20:28,3.1.1,,,,,,,,,,,,,,,,,,,,,,,,3.2.0,,,,,c client,,,,,0,,,"nitay-joffes-macbook-pro:c nitay$ pwd
/Users/nitay/code/zookeeper/src/c

nitay-joffes-macbook-pro:c nitay$ make
make  all-am
/bin/sh ./libtool --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I.  -I./include -I./tests -I./generated  -Wall -Werror  -g -O2 -MT zookeeper.lo -MD -MP -MF .deps/zookeeper.Tpo -c -o zookeeper.lo `test -f 'src/zookeeper.c' || echo './'`src/zookeeper.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I./include -I./tests -I./generated -Wall -Werror -g -O2 -MT zookeeper.lo -MD -MP -MF .deps/zookeeper.Tpo -c src/zookeeper.c  -fno-common -DPIC -o .libs/zookeeper.o
cc1: warnings being treated as errors
src/zookeeper.c: In function 'zoo_add_auth':
src/zookeeper.c:2378: warning: 'auth.buff' may be used uninitialized in this function
src/zookeeper.c:2378: warning: 'auth.len' may be used uninitialized in this function
make[1]: *** [zookeeper.lo] Error 1
make: *** [all] Error 2


Need to set auth.buff and auth.len to zero.",i686-apple-darwin9-gcc-4.0.1 (GCC) 4.0.1 (Apple Inc. build 5490),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Apr/09 05:38;phunt;ZOOKEEPER-374.patch;https://issues.apache.org/jira/secure/attachment/12405500/ZOOKEEPER-374.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47864,Reviewed,,,,Fri Apr 17 12:41:10 UTC 2009,,,,,,,,,,"0|i0613r:",33110,,,,,,,,,,,,,,,,,,,,,"10/Apr/09 15:47;mahadev;what version of gcc is this? Anyways we should fix it in 3.2;;;","14/Apr/09 22:24;phunt;Interesting, with gcc (Ubuntu 4.3.2-1ubuntu12) 4.3.2
this warning is not output by the compiler. Seems that the newer version
of the compiler is able to determine that auth is only accessed (written/read) when the following
condition is true:

    if(cert!=NULL && certLen!=0){

as a result it doesn't complain in this instance on my system.

I'll submit a patch for this to work on older gccs.
;;;","15/Apr/09 05:38;phunt;fixed warning and added tests to verify;;;","15/Apr/09 08:59;nitay;+1. Works for me.;;;","16/Apr/09 08:23;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12405500/ZOOKEEPER-374.patch
  against trunk revision 764673.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/32/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/32/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/32/console

This message is automatically generated.;;;","16/Apr/09 20:26;mahadev;+1 for the patch.. the test fails on java test case LETest which the patch has ntohing to do with.;;;","16/Apr/09 20:28;mahadev;I just committed this. thanks pat.;;;","17/Apr/09 12:41;hudson;Integrated in ZooKeeper-trunk #283 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/283/])
    . Uninitialized struct variable in C causes warning which is treated as an error (phunt via mahadev)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
javadoc is wrong for setLast in LedgerHandle,ZOOKEEPER-365,12422018,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,fpj,phunt,phunt,03/Apr/09 21:56,08/Jul/09 20:24,29/Jun/25 13:34,29/Apr/09 19:16,3.2.0,,,,,,,,,,,,,,,,,,,,,,,,3.2.0,,,,,contrib-bookkeeper,,,,,0,,,"Note: the javadoc is wrong here:

    /**
     * Returns the last entry identifier submitted and increments it.
     * @return long
     */
    long setLast(long last){

also would be great to have javadoc for the legerrecoverymonitor getNextHint method. I was reviewing this code and it would have been helpful to know what to expect of this method. (possible return values, etc...)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-380,,,,,,,,,,,"28/Apr/09 21:39;fpj;ZOOKEEPER-365.patch;https://issues.apache.org/jira/secure/attachment/12406698/ZOOKEEPER-365.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47870,Reviewed,,,,Thu Apr 30 14:28:01 UTC 2009,,,,,,,,,,"0|i0614n:",33114,,,,,,,,,,,,,,,,,,,,,"28/Apr/09 21:39;fpj;Modified javadoc descriptions according to the suggestions in this jira. ;;;","29/Apr/09 01:41;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12406698/ZOOKEEPER-365.patch
  against trunk revision 769079.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/54/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/54/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/54/console

This message is automatically generated.;;;","29/Apr/09 07:30;fpj;There are not tests to include here. This patch only modifies javadoc descriptions.;;;","29/Apr/09 19:16;phunt;+1 
Committed revision 769885.
;;;","30/Apr/09 14:28;hudson;Integrated in ZooKeeper-trunk #295 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/295/])
    . javadoc is wrong for setLast in LedgerHandle
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Creating node with path ending in ""/"" with sequence flag set",ZOOKEEPER-348,12419561,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,phunt,jterrace,jterrace,26/Mar/09 19:11,08/Jul/09 20:24,29/Jun/25 13:34,09/Apr/09 21:04,3.1.0,3.1.1,,,,,,,,,,,,,,,,,,,,,,,3.2.0,,,,,c client,,,,,0,,,"In 3.0.1, I could create a sequence node like this:
/nodes/0000001
like this:
string path = ""/nodes/"";
string value = ""data"";
int rc = zoo_acreate(zh, path.c_str(), value.c_str(), value.length(), &ZOO_OPEN_ACL_UNSAFE, ZOO_EPHEMERAL | ZOO_SEQUENCE, &czoo_created, &where);

In 3.1.1, this fails with error -8 (ZBADARGUMENTS).

Adding something after the ""/"" in the path makes the code work fine:
string path = ""/nodes/n"";

I assume something is checking if the path ends in ""/"" but not checking the sequence flag.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47884,Reviewed,,,,Thu Apr 09 21:04:17 UTC 2009,,,,,,,,,,"0|i06167:",33121,,,,,,,,,,,,,,,,,,,,,"26/Mar/09 23:34;mahadev;makring this to be fixed in 3.2. 3.0.1 has already been released.;;;","26/Mar/09 23:45;mahadev;it just came to my mind that we put validating path at the client side in  ZOOKEEPER-16. can you try using 3.1* versions? you should get errors in both the cases in 3.1* versions.
;;;","27/Mar/09 00:41;phunt;We started verifying paths in 3.1 - this is likely happening in 3.1.0+

We are checking the path and not handling the case where sequential flag is
specified, we need to check for this case. 

we should add tests specific to this case

one thing I noticed - validatepath was never intended to be part of the public API
this method should be made private, or moved out of ZooKeeper class ASAP;;;","27/Mar/09 03:47;jterrace;Confirmed same issue on 3.1.0;;;","03/Apr/09 21:42;phunt;the fix for this is included in ZOOKEEPER-355
;;;","03/Apr/09 22:17;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org
  against trunk revision 761816.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/16/console

This message is automatically generated.;;;","09/Apr/09 21:04;mahadev;this has been committed with ZOOKEEPER-355.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zkfuse uses non-standard String,ZOOKEEPER-347,12419440,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,phunt,nitay,nitay,26/Mar/09 00:13,08/Jul/09 20:24,29/Jun/25 13:34,08/Apr/09 22:39,3.1.0,,,,,,,,,,,,,,,,,,,,,,,,3.2.0,,,,,contrib-zkfuse,,,,,0,,,"I'm getting an error compiling zkfuse:

g++ -DHAVE_CONFIG_H -I. -I..    -I/home/nitay/code/zookeeper-git/src/contrib/zkfuse/../../c/include -I/home/nitay/code/zookeeper-git/src/contrib/zkfuse/../../c/generated -I../include -I/usr/include -D_FILE_OFFSET_BITS=64 -D_REENTRANT -g -O2 -MT zkfuse.o -MD -MP -MF .deps/zkfuse.Tpo -c -o zkfuse.o zkfuse.cc
zkfuse.cc: In function 'int main(int, char**)':
zkfuse.cc:4282: error: 'String' does not name a type
zkfuse.cc:4283: error: 'file' was not declared in this scope
make[2]: *** [zkfuse.o] Error 1
make[2]: Leaving directory `/home/nitay/code/zookeeper-git/src/contrib/zkfuse/src'
make[1]: *** [all-recursive] Error 1
make[1]: Leaving directory `/home/nitay/code/zookeeper-git/src/contrib/zkfuse'
make: *** [all] Error 2

4279     /**
4280      * Initialize log4cxx 
4281      */
4282     const String file(""log4cxx.properties"");
4283     PropertyConfigurator::configureAndWatch( file, 5000 );
4284     LOG_INFO(LOG, ""Starting zkfuse"");


String is not standard, we should change it to std::string.",gcc (GCC) 4.3.2 20081105 (Red Hat 4.3.2-7),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Apr/09 22:52;phunt;ZOOKEEPER-347.patch;https://issues.apache.org/jira/secure/attachment/12404895/ZOOKEEPER-347.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47885,Reviewed,,,,Thu Apr 09 12:16:35 UTC 2009,,,,,,,,,,"0|i0616f:",33122,,,,,,,,,,,,,,,,,,,,,"26/Mar/09 00:16;phunt;this works for me which is unusual (with almost the same gcc but on ubuntu).

no reason not to fix it in 3.2 though;;;","07/Apr/09 22:52;phunt;this patch fixes a compiler problem seen by some users. (also use std std::string);;;","08/Apr/09 07:33;hadoopqa;-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12404895/ZOOKEEPER-347.patch
  against trunk revision 762602.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/20/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/20/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/20/console

This message is automatically generated.;;;","08/Apr/09 16:16;phunt;this fixes a C code gcc compiler warning, existing tests otw cover.

Please review/commit this.
;;;","08/Apr/09 22:39;mahadev;+1 for the patch . i just committed this. thanks pat.;;;","09/Apr/09 12:16;hudson;Integrated in ZooKeeper-trunk #276 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/276/])
    . zkfuse uses non-standard String. (patrick hunt via mahadev)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
standalone server ignores tickTime configuration,ZOOKEEPER-326,12415256,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,cdarroch,cdarroch,cdarroch,20/Feb/09 20:12,08/Jul/09 20:24,29/Jun/25 13:34,23/Feb/09 23:56,3.0.0,3.0.1,3.1.0,,,,,,,,,,,,,,,,,,,,,,3.1.1,3.2.0,,,,server,,,,,0,,,"When using the ZooKeeper server in standalone mode, it ignores the tickTime setting in the configuration file and uses the DEFAULT_TICK_TIME of 3000 coded into ZooKeeperServer.java.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Feb/09 20:12;cdarroch;ZOOKEEPER-326.patch;https://issues.apache.org/jira/secure/attachment/12400625/ZOOKEEPER-326.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47900,Reviewed,,,,Tue Feb 24 11:41:30 UTC 2009,,,,,,,,,,"0|i0618n:",33132,,,,,,,,,,,,,,,,,,,,,"23/Feb/09 21:30;mahadev;+1 for the patch.;;;","23/Feb/09 23:56;mahadev;I just committed this. Thanks Chris.;;;","24/Feb/09 11:41;hudson;Integrated in ZooKeeper-trunk #239 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/239/])
    . standalone server ignores tickTime configuration. (chris darroch via mahadev)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Coverity report on issues in C client code,ZOOKEEPER-310,12414597,Bug,Open,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,,mahadev,phunt,phunt,11/Feb/09 18:16,03/Feb/22 08:50,29/Jun/25 13:34,,3.1.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,c client,,,,,0,,,"Coverity found the following issues in the c code thatwe should look at/resolve:

1) zookeeper.c

Event unterminated_case: This case (value 0) is not terminated by a 'break' statement.
717  	        case 0:
718  	            errno = EHOSTDOWN;
Event fallthrough: The above case falls through to this one.
719  	        case -1:

Event unterminated_case: This case (value 0) is not terminated by a 'break' statement.
739  	        case 0:
740  	            errno = EHOSTDOWN;
Event fallthrough: The above case falls through to this one.
741  	        case -1:

Event negative_return_fn: Called negative-returning function ""socket(2, 1, 0)""
Event var_assign: NEGATIVE return value of ""socket"" assigned to signed variable ""zh->fd""
1099 	            zh->fd = socket(PF_INET, SOCK_STREAM, 0);
Event negative_returns: Tracked variable ""zh->fd"" was passed to a negative sink.
1100 	            setsockopt(zh->fd, IPPROTO_TCP, TCP_NODELAY, &on, sizeof(int));

Event deref_ptr: Directly dereferenced pointer ""cptr->buffer""
1308 	    cptr->buffer->curr_offset = get_buffer_len(oa);
Event check_after_deref: Pointer ""cptr->buffer"" dereferenced before NULL check
1309 	    if (!cptr->buffer) {


cli.c

Event returned_null: Function ""strchr"" returned NULL value (checked 4 out of 5 times)
Event var_assigned: Variable ""ptr"" assigned to NULL return value from ""strchr""
532  	                char *ptr = strchr(buffer, '\n');
Event dereference: Dereferencing NULL value ""ptr"" 


recordio.c

Event alloc_fn: Called allocation function ""malloc""
Event var_assign: Assigned variable ""buff"" to storage returned from ""malloc(12U)""
284  	    struct buff_struct *buff = malloc(sizeof(struct buff_struct));
Event leaked_storage: Variable ""buff"" goes out of scope
At conditional (1): ""!(ia != NULL)"" taking true path 
285  	    if (!ia) return 0;

Event alloc_fn: Called allocation function ""malloc""
Event var_assign: Assigned variable ""buff"" to storage returned from ""malloc(12U)""
301  	    struct buff_struct *buff = malloc(sizeof(struct buff_struct));
Event leaked_storage: Variable ""buff"" goes out of scope
At conditional (1): ""!(oa != NULL)"" taking true path
302  	    if (!oa) return 0;

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,70797,,,,,Mon Mar 08 04:32:20 UTC 2010,,,,,,,,,,"0|i061a7:",33139,,,,,,,,,,,,,,,,,,,,,"17/Jun/09 22:47;mahadev;moving it to 3.3;;;","08/Mar/10 04:32;mahadev;moving this to 3.4 since its not a blocker....;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMX doesn't get the clientPort correctly,ZOOKEEPER-284,12413771,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,phunt,breed,breed,02/Feb/09 11:55,13/Feb/09 21:18,29/Jun/25 13:34,02/Feb/09 22:51,3.1.0,,,,,,,,,,,,,,,,,,,,,,,,3.1.0,,,,,,,,,,0,,,"The client port in JMX is always zero. it should be getting the client port from the cnxnfactory. it's a pretty easy fix. the really problem is that we have a setter for the clientPort as well, which is a bit more complicated to implement correctly. do we need a setter for the clientPort? i think we should make it a readonly attribute.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-286,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47923,Reviewed,,,,Mon Feb 02 22:51:33 UTC 2009,,,,,,,,,,"0|i061cn:",33150,,,,,,,,,,,,,,,,,,,,,"02/Feb/09 22:51;mahadev;ZOOKEEPER-286 has been committed. So closing this one.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
docs incorrectly state max client timeout as 60 seconds (it's based on server ticktime),ZOOKEEPER-258,12410852,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,phunt,phunt,phunt,16/Dec/08 22:50,13/Feb/09 21:18,29/Jun/25 13:34,08/Jan/09 21:41,3.0.0,3.0.1,,,,,,,,,,,,,,,,,,,,,,,3.1.0,,,,,documentation,,,,,0,,,"The docs incorrectly state the max client timeout as 60 seconds.
http://hadoop.apache.org/zookeeper/docs/r3.0.1/zookeeperProgrammers.html#ch_zkSessions

the current server code has the following logic:
        if (sessionTimeout < zk.tickTime * 2) {
            sessionTimeout = zk.tickTime * 2;
        }
        if (sessionTimeout > zk.tickTime * 20) {
            sessionTimeout = zk.tickTime * 20;
        }

So really the docs should say max is 20*tickTime
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jan/09 01:52;phunt;ZOOKEEPER-258.patch;https://issues.apache.org/jira/secure/attachment/12397372/ZOOKEEPER-258.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47939,Reviewed,,,,Tue Jan 13 11:19:32 UTC 2009,,,,,,,,,,"0|i061en:",33159,,,,,,,,,,,,,,,,,,,,,"08/Jan/09 01:52;phunt;Fixed the docs as stated in description.;;;","08/Jan/09 21:41;mahadev;I just committed this. Thanks pat.;;;","13/Jan/09 11:19;hudson;Integrated in ZooKeeper-trunk #194 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/194/])
    . docs incorrectly state max client timeout as 60 seconds (it's based on server ticktime). (phunt via mahadev)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
documentation of DataWatcher state transition is misleading regarding auto watch reset on reconnect,ZOOKEEPER-253,12410510,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,phunt,phunt,phunt,11/Dec/08 18:45,13/Feb/09 21:18,29/Jun/25 13:34,28/Jan/09 00:47,3.0.0,3.0.1,,,,,,,,,,,,,,,,,,,,,,,3.1.0,,,,,documentation,,,,,1,,,"the example code has

           case SyncConnected:
               // Everything is happy. Lets kick things off
               // again by checking the existence of the znode
               break;

this is misleading - it should indicate that the watches are automatically reset and therefor no call to exists is necessary

also fix this in the same doc (looks like its old detail, no longer valid), indicate that autoreset will happen on reconnect.

If the client-side ZooKeeper libraries can reestablish the communication channel to ZooKeeper, DataMonitor simply kicks everything off again with the call to ZooKeeper.exists(). If it gets an event for a znode, it calls ZooKeeper.exists() to find out what has changed. 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Jan/09 23:03;phunt;ZOOKEEPER-253.patch;https://issues.apache.org/jira/secure/attachment/12398516/ZOOKEEPER-253.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47943,Reviewed,,,,Wed Jan 28 11:40:32 UTC 2009,,,,,,,,,,"0|i061fj:",33163,,,,,,,,,,,,,,,,,,,,,"22/Jan/09 23:03;phunt;This patch updates the forrest doc to correctly discuss watch re-establishment during re-sync to a server in the cluster.;;;","28/Jan/09 00:47;mahadev;I just committed this. Thanks Pat.;;;","28/Jan/09 11:40;hudson;Integrated in ZooKeeper-trunk #212 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/212/])
    . documentation of DataWatcher state transition is misleading regarding auto watch reset on reconnect. (phunt via mahadev)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
QuorumPeer.getClientPort() always returns -1,ZOOKEEPER-249,12410175,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,nitay,nitay,nitay,08/Dec/08 09:10,13/Feb/09 21:18,29/Jun/25 13:34,09/Dec/08 05:10,3.0.0,3.0.1,,,,,,,,,,,,,,,,,,,,,,,3.1.0,,,,,,,,,,0,,,"This was changed in SVN 700690:

http://svn.apache.org/viewvc/hadoop/zookeeper/trunk/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java?r1=700690&r2=700689&pathrev=700690",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Dec/08 09:11;nitay;249.patch;https://issues.apache.org/jira/secure/attachment/12395536/249.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47947,Reviewed,,,,Wed Dec 10 14:10:25 UTC 2008,,,,,,,,,,"0|i061gf:",33167,,,,,,,,,,,,,,,,,,,,,"08/Dec/08 19:12;mahadev;chagingng the fix and affects versions. would be good to have in 3.1.0.

nitay, do you want someone to review the patch? Here is hte process for patch contribution

http://wiki.apache.org/hadoop/ZooKeeper/HowToContribute

The patch needs to be submitted and made patch available for someone to review the patch.;;;","08/Dec/08 20:39;nitay;Besides the ZOOKEEPER- before the name, is my patch okay format wise? It's generated from a git checkout, not an svn one. I think the only difference is you need to use patch -p1 instead of -p0. Otherwise it should work the same.

Thanks,
-n;;;","08/Dec/08 20:57;mahadev;git checkout is fine... the guidelines is that usually the patch is geenrated from the trunk, so the reviewer does not have to worry abt -p1 or -p2 ... though its good for a starting point :).. ;;;","08/Dec/08 21:30;phunt;Nitay, try the --no-prefix option next time, that's what I use:

example:

git diff --no-prefix master > ~/Desktop/ZOOKEEPER-249.patch
;;;","09/Dec/08 04:50;mahadev;+1 the patch looks good.;;;","09/Dec/08 05:10;mahadev;I just committed this. Thanks nitay.;;;","10/Dec/08 14:10;hudson;Integrated in ZooKeeper-trunk #168 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/168/])
    ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AsyncOpsTest fails when running consecutively,ZOOKEEPER-244,12409799,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Cannot Reproduce,,fpj,fpj,03/Dec/08 21:18,08/Jul/09 20:23,29/Jun/25 13:34,19/May/09 22:22,3.0.1,,,,,,,,,,,,,,,,,,,,,,,,3.2.0,,,,,tests,,,,,0,,,Attaching output log file.,"MacOS X 10.5.5, Java 1.6.0_05",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Dec/08 21:19;fpj;TEST-org.apache.zookeeper.test.AsyncOpsTest.txt;https://issues.apache.org/jira/secure/attachment/12395211/TEST-org.apache.zookeeper.test.AsyncOpsTest.txt",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,214081,,,,,Sat Jan 31 14:04:55 UTC 2009,,,,,,,,,,"0|i061h3:",33170,,,,,,,,,,,,,,,,,,,,,"31/Jan/09 14:04;fpj;Moving to 3.2.0.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
gcc warning from recordio.h,ZOOKEEPER-227,12408766,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,cdarroch,cdarroch,cdarroch,18/Nov/08 19:50,13/Feb/09 21:18,29/Jun/25 13:34,19/Nov/08 20:54,3.0.0,,,,,,,,,,,,,,,,,,,,,,,,3.0.1,3.1.0,,,,c client,,,,,0,,,"Recent gcc compilers issue warnings when function declarations for functions with no arguments don't specific ""void"".  The attached patch fixes one such warning for create_buffer_oarchive() in recordio.h.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Nov/08 19:53;cdarroch;zookeeper-recordio-trunk.patch;https://issues.apache.org/jira/secure/attachment/12394185/zookeeper-recordio-trunk.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47965,Reviewed,,,,Thu Nov 20 10:50:40 UTC 2008,,,,,,,,,,"0|i061in:",33177,,,,,,,,,,,,,,,,,,,,,"18/Nov/08 19:53;cdarroch;FWIW, I'm an Apache committer with a contributor agreement on file.;;;","18/Nov/08 20:03;phunt;Thanks for the submission Chris! I've added you as a contributor and slated this patch for 3.1.0.;;;","19/Nov/08 05:59;phunt;let's try to get this one into 3.0.1;;;","19/Nov/08 20:50;mahadev;+1 on the patch... ;;;","19/Nov/08 20:54;mahadev;committed to revision 719066 to trunk 
and committed to revision 719067 in 3.0

thanks chris.;;;","20/Nov/08 10:50;hudson;Integrated in ZooKeeper-trunk #149 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/149/])
    . gcc warning from recordio.h (chris darroch via mahadev)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
events.poll timeout in watcher test too short,ZOOKEEPER-219,12408294,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,phunt,phunt,phunt,11/Nov/08 22:01,13/Feb/09 21:18,29/Jun/25 13:34,18/Nov/08 00:13,3.0.0,,,,,,,,,,,,,,,,,,,,,,,,3.0.1,3.1.0,,,,,,,,,0,,,"in watchertest there are some event.poll calls that have 1milli timeouts

        e = localWatcher.events.poll(1, TimeUnit.MILLISECONDS);

this is showing falure in some cases under hudson (I assume when it's under load from other tests running for other proj)

We should review the poll calls and verify adequate timeouts.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Nov/08 22:17;phunt;ZOOKEEPER-219.patch;https://issues.apache.org/jira/secure/attachment/12393736/ZOOKEEPER-219.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47973,Reviewed,,,,Thu Nov 20 10:50:40 UTC 2008,,,,,,,,,,"0|i061jb:",33180,,,,,,,,,,,,,,,,,,,,,"11/Nov/08 22:17;phunt;add resonable wait times for event polling.

In some cases the poll was expected to not return results (depending on args to the function) and in other cases it was expecting. I suspect the short poll times were to shorten the run time of the test (re no result expected). I moved to 10seconds to handle this, short enough to let the test run in resonable time, long enough to handle slowness in the system (cpu/disk loading outside zk, etc...)
;;;","18/Nov/08 00:09;mahadev;+1 for the patch ... the tests pass ;;;","18/Nov/08 00:13;mahadev;committed to revision 718445 in trunk and 
revision 718447 in 3.0

thanks pat.;;;","20/Nov/08 10:50;hudson;Integrated in ZooKeeper-trunk #149 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/149/])
    ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
documentation  tab should contain the version number (and other small site changes),ZOOKEEPER-206,12407110,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,phunt,phunt,phunt,23/Oct/08 19:20,13/Feb/09 21:18,29/Jun/25 13:34,18/Nov/08 23:36,3.0.0,,,,,,,,,,,,,,,,,,,,,,,,3.0.1,3.1.0,,,,documentation,,,,,0,,,"Feedback from Doug Cutting on 3.0.0 documentation:

 - The ""Zookeeper Documentation"" tab should contain the version number.
 - ""Informal Documentation"" might better be named ""Other Documentation"".
 - The ""Other Info"" page should be removed, since it contains nothing. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Nov/08 00:00;phunt;ZOOKEEPER-206_301.patch;https://issues.apache.org/jira/secure/attachment/12394112/ZOOKEEPER-206_301.patch","18/Nov/08 00:00;phunt;ZOOKEEPER-206_trunk.patch;https://issues.apache.org/jira/secure/attachment/12394111/ZOOKEEPER-206_trunk.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47984,Reviewed,,,,Thu Nov 20 10:50:40 UTC 2008,,,,,,,,,,"0|i061kn:",33186,,,,,,,,,,,,,,,,,,,,,"18/Nov/08 00:00;phunt;206_trunk addresses issues in this jira - for 3.1.0 (mainline/trunk)
;;;","18/Nov/08 00:00;phunt;206_301 addresses issues for this jira in 3.0 branch;;;","18/Nov/08 23:20;breed;+1;;;","18/Nov/08 23:26;mahadev;+1 for the patch... ;;;","18/Nov/08 23:36;mahadev;committed to revision 718795 in 3.0 
and revision 718768 in trunk.

thanks pat.;;;","20/Nov/08 10:50;hudson;Integrated in ZooKeeper-trunk #149 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/149/])
    ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error on version-info when compiling from the tarball distribution,ZOOKEEPER-205,12407038,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Duplicate,mahadev,fpj,fpj,22/Oct/08 21:46,13/Feb/09 21:18,29/Jun/25 13:34,05/Dec/08 19:48,3.0.0,,,,,,,,,,,,,,,,,,,,,,,,3.1.0,,,,,,,,,,0,,,"When running ant with the code from the release tarball, I get the following messages and stack trace:

{noformat}
svn-revision:
     [exec] svn: '.' is not a working copy

version-info:
     [java] All version-related parameters must be valid integers!
     [java] Exception in thread ""main"" java.lang.NumberFormatException: For input string: """"
     [java]     at java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)
     [java]     at java.lang.Integer.parseInt(Integer.java:468)
     [java]     at java.lang.Integer.parseInt(Integer.java:497)
     [java]     at org.apache.zookeeper.version.util.VerGen.main(VerGen.java:111)
     [java] Java Result: 1
{noformat}

This seems to be because the code is not coming from svn, so it can't find the version information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-241,,,,,,,"27/Oct/08 23:47;mahadev;ZOOKEEPER-205.patch;https://issues.apache.org/jira/secure/attachment/12392907/ZOOKEEPER-205.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,214078,,,,,Fri Dec 05 19:48:45 UTC 2008,,,,,,,,,,"0|i061kv:",33187,,,,,,,,,,,,,,,,,,,,,"23/Oct/08 02:26;jakobhoman;Yes, the version script can't get the revision number.  I get this as well when obtaining the code from git.  One option would be to remove the version information, or to change the version scripts to return 0 or something if not in a subversion directory.;;;","23/Oct/08 23:01;mahadev;yes, the script should just return 0.0.0 in case it fails to do svn revision... ;;;","27/Oct/08 23:47;mahadev;this patch fixes the unix scripts. have to read through bat scripting to fix it... ;;;","05/Dec/08 19:48;phunt;Closing - fixed in ZOOKEEPER-241;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fix datadir typo in releasenotes,ZOOKEEPER-203,12406963,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,phunt,phunt,phunt,22/Oct/08 03:43,26/Oct/08 01:10,29/Jun/25 13:34,22/Oct/08 03:47,3.0.0,,,,,,,,,,,,,,,,,,,,,,,,3.0.0,,,,,documentation,,,,,0,,,"typo in releasenotes note on datalog/data dirs.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Oct/08 03:44;phunt;ZOOKEEPER-203.patch;https://issues.apache.org/jira/secure/attachment/12392625/ZOOKEEPER-203.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47986,Reviewed,,,,Sun Oct 26 01:10:44 UTC 2008,,,,,,,,,,"0|i061lb:",33189,,,,,,,,,,,,,,,,,,,,,"22/Oct/08 03:44;phunt;fixed the typo ;;;","22/Oct/08 03:46;mahadev;+1 for the patc h.;;;","22/Oct/08 03:47;phunt;Committed revision 706852.;;;","22/Oct/08 10:51;hudson;Integrated in ZooKeeper-trunk #121 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/121/])
    . fix datadir typo in releasenotes
;;;","26/Oct/08 01:10;phunt;3.0.0 has been released, closing issues.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fix log messages in persistence code,ZOOKEEPER-199,12406883,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,mahadev,phunt,phunt,20/Oct/08 23:59,26/Oct/08 01:10,29/Jun/25 13:34,21/Oct/08 04:36,3.0.0,,,,,,,,,,,,,,,,,,,,,,,,3.0.0,,,,,server,,,,,0,,,"there are 2 log messages during server startup that are misleading:

2008-10-20 16:36:41,135 - INFO  [main:FileTxnLog$FileTxnIterator@441] - EOF excepton java.io.EOFException: Failed to read


2008-10-20 16:36:41,120 - ERROR [main:FileTxnSnapLog@114] - 2(higestZxid) >= 2(next log) for type 1


the first log should be DEBUG and should be changed to say something like eof reached in <file>, reading next file

while the second log seems to indicate an error - however the server is still starting. either this is not an error, or it is an error and it's not being handled correctly.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Oct/08 00:57;mahadev;ZOOKEEPER-199.patch;https://issues.apache.org/jira/secure/attachment/12392541/ZOOKEEPER-199.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47990,Reviewed,,,,Sun Oct 26 01:10:44 UTC 2008,,,,,,,,,,"0|i061m7:",33193,,,,,,,,,,,,,,,,,,,,,"21/Oct/08 00:57;mahadev;this patch fixes the debug messages.;;;","21/Oct/08 04:36;phunt;Committed revision 706512.;;;","21/Oct/08 10:47;hudson;Integrated in ZooKeeper-trunk #120 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/120/])
    . fix log messages in persistence code
;;;","26/Oct/08 01:10;phunt;3.0.0 has been released, closing issues.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
apache license header missing from FollowerSyncRequest.java,ZOOKEEPER-198,12406867,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,phunt,phunt,phunt,20/Oct/08 20:46,26/Oct/08 01:10,29/Jun/25 13:34,20/Oct/08 21:09,3.0.0,,,,,,,,,,,,,,,,,,,,,,,,3.0.0,,,,,server,,,,,0,,,add license to file & run the rat tool to verify svn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Oct/08 20:49;phunt;ZOOKEEPER-198.patch;https://issues.apache.org/jira/secure/attachment/12392523/ZOOKEEPER-198.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47991,Reviewed,,,,Sun Oct 26 01:10:44 UTC 2008,,,,,,,,,,"0|i061mf:",33194,,,,,,,,,,,,,,,,,,,,,"20/Oct/08 20:49;phunt;Updated based on RAT output - added licence file.

Also updated readme to point to docs.;;;","20/Oct/08 20:57;mahadev;+1 the patch looks good... ;;;","20/Oct/08 21:09;phunt;Committed revision 706413.;;;","21/Oct/08 10:47;hudson;Integrated in ZooKeeper-trunk #120 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/120/])
    . apache license header missing from FollowerSyncRequest.java
;;;","26/Oct/08 01:10;phunt;3.0.0 has been released, closing issues.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
trailing whitespace in config file can cause number format exceptions,ZOOKEEPER-192,12406542,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,phunt,phunt,phunt,15/Oct/08 22:49,08/Jul/09 20:23,29/Jun/25 13:34,22/May/09 19:02,3.0.0,,,,,,,,,,,,,,,,,,,,,,,,3.2.0,,,,,server,,,,,0,,,"a config file with trailing whitespace can cause number format exception

for example a line such as

clientPort=2181

where 2181 is followed by a space character, will fail to parse with number format excetion ""2181 "" (notice the space).

We need to trim whitespace when parsing numbers",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/May/09 22:22;phunt;ZOOKEEPER-192.patch;https://issues.apache.org/jira/secure/attachment/12408748/ZOOKEEPER-192.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,47996,Reviewed,,,,Sat May 23 10:53:38 UTC 2009,,,,,,,,,,"0|i061n3:",33197,,,,,,,,,,,,,,,,,,,,,"21/May/09 22:22;phunt;added trim() for key/value when reading config file.

added test that verifies;;;","22/May/09 01:34;hadoopqa;+1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12408748/ZOOKEEPER-192.patch
  against trunk revision 777265.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/87/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/87/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: http://hudson.zones.apache.org/hudson/job/Zookeeper-Patch-vesta.apache.org/87/console

This message is automatically generated.;;;","22/May/09 18:47;breed;+1 looks good;;;","22/May/09 19:02;breed;Committed revision 777658.
;;;","23/May/09 10:53;hudson;Integrated in ZooKeeper-trunk #323 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/323/])
    .  trailing whitespace in config file can cause number format exceptions
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CreateMode api docs missing,ZOOKEEPER-187,12406424,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,phunt,phunt,phunt,14/Oct/08 18:52,26/Oct/08 01:10,29/Jun/25 13:34,15/Oct/08 16:17,3.0.0,,,,,,,,,,,,,,,,,,,,,,,,3.0.0,,,,,documentation,java client,,,,0,,,"End user API docs are missing for CreateMode. (dev api docs are fine)

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Oct/08 18:53;phunt;ZOOKEEPER-187.patch;https://issues.apache.org/jira/secure/attachment/12392122/ZOOKEEPER-187.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,48001,Reviewed,,,,Sun Oct 26 01:10:44 UTC 2008,,,,,,,,,,"0|i061nr:",33200,,,,,,,,,,,,,,,,,,,,,"14/Oct/08 18:53;phunt;this patch includes createmode in the end user client api docs.

run ""ant javadoc"" to verify - output is in build/docs/api/index.html;;;","15/Oct/08 06:04;mahadev;+1 for the patch.. ;;;","15/Oct/08 16:17;phunt;Committed revision 704949.;;;","16/Oct/08 11:05;hudson;Integrated in ZooKeeper-trunk #115 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/115/])
    . CreateMode api docs missing
;;;","26/Oct/08 01:10;phunt;3.0.0 has been released, closing issues.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"In two places, the wrong class is specified for the logger",ZOOKEEPER-123,12402958,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,jghoman,jghoman,jghoman,24/Aug/08 19:29,26/Oct/08 01:10,29/Jun/25 13:34,25/Aug/08 18:17,3.0.0,,,,,,,,,,,,,,,,,,,,,,,,3.0.0,,,,,java client,tests,,,,0,,,"Copy and paste strikes again.  In two logger instantiations, the wrong class is passed to the constructor.  In ClientTest.java and ClientCnxn.java",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Aug/08 19:30;jghoman;ZOOKEEPER-123.patch;https://issues.apache.org/jira/secure/attachment/12388821/ZOOKEEPER-123.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,48041,Reviewed,,,,Sun Oct 26 01:10:42 UTC 2008,,,,,,,,,,"0|i061sv:",33223,,,,,,,,,,,,,,,,,,,,,"24/Aug/08 19:30;jghoman;Patch replaces the two instances of wrong class names with correct class names.;;;","25/Aug/08 18:09;mahadev;+1 .. the patch looks good .;;;","25/Aug/08 18:17;mahadev;I just committed this. Thanks Jakob.;;;","28/Aug/08 12:32;hudson;Integrated in ZooKeeper-trunk #67 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/67/]);;;","26/Oct/08 01:10;phunt;3.0.0 has been released, closing issues.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZooKeeper java client main loop crashes on KeeperExceptions,ZOOKEEPER-105,12401073,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,anthonyu,anthonyu,anthonyu,26/Jul/08 03:27,26/Oct/08 01:10,29/Jun/25 13:34,28/Jul/08 18:21,3.0.0,,,,,,,,,,,,,,,,,,,,,,,,3.0.0,,,,,java client,,,,,0,,,The ZooKeeper java client main loop crashes on KeeperExceptions.  They should be handled when possible.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jul/08 18:14;mahadev;ZOOKEEPER-105.patch;https://issues.apache.org/jira/secure/attachment/12387043/ZOOKEEPER-105.patch","26/Jul/08 03:30;anthonyu;ZOOKEEPER-105.patch;https://issues.apache.org/jira/secure/attachment/12386938/ZOOKEEPER-105.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,48053,Reviewed,,,,Sun Oct 26 01:10:41 UTC 2008,,,,,,,,,,"0|i061vj:",33235,,,,,,,,,,,,,,,,,,,,,"26/Jul/08 03:30;anthonyu;Patch that wraps the processing of commands with a catch and print.;;;","26/Jul/08 03:30;anthonyu;Patch attached.;;;","28/Jul/08 16:58;mahadev;i took a look at the patch.. its just a try catch block change right anthony? ;;;","28/Jul/08 17:38;mahadev;assigning it to anthony.;;;","28/Jul/08 18:14;mahadev;i just updated the patch to print the exception strings to the stderr rather than stdout..
;;;","28/Jul/08 18:21;mahadev;i just committed this. Thanks Anthony. 
i also created a new Changes.txt under src/java since its a different format than the older changelogs.;;;","29/Jul/08 10:42;hudson;Integrated in ZooKeeper-trunk #37 (See [http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/37/]);;;","26/Oct/08 01:10;phunt;3.0.0 has been released, closing issues.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
